{"handler": [], "easyocr": [], "easyocr.easyocr": ["logging.getLogger"], "easyocr.recognition": [], "PIL.Image": ["PIL._util.DeferredError.new", "<builtin>.ImportError", "<builtin>.int", "<builtin>.hasattr", "warnings.warn", "<builtin>.setattr", "<builtin>.str", "PIL.Image._apply_env_variables", "logging.getLogger", "<builtin>.getattr"], "__future__": ["__future__._Feature.__init__"], "__future__._Feature.__init__": [], "abc": [], "_py_abc": [], "_weakrefset": [], "types": ["types._g", "<builtin>.globals", "types._cell_factory", "types._c", "types._ag", "<builtin>.object", "<builtin>.type"], "<builtin>.type": [], "types._cell_factory": [], "types._g": [], "types._c": [], "types._ag": [], "<builtin>.object": [], "types._GeneratorWrapper": ["<builtin>.property"], "<builtin>.property": [], "<builtin>.globals": [], "_weakrefset.WeakSet": ["<builtin>.classmethod"], "<builtin>.classmethod": [], "io": [], "logging": ["_weakrefset.WeakSet.__init__", "ntpath.normcase", "<builtin>.hasattr", "logging.RootLogger.__init__", "logging._StderrHandler.__init__", "logging.Formatter.__init__", "posixpath.normcase", "threading.RLock", "weakref.WeakValueDictionary.__init__", "logging.Manager.__init__"], "os": ["os._fscodec", "append", "<builtin>.ImportError", "<builtin>.globals", "<builtin>.set", "os._Environ.__init__", "os._exists", "os._createenviron", "os._add", "extend", "<builtin>.type"], "stat": [], "<builtin>.ImportError": [], "append": [], "ntpath": ["<builtin>.hasattr"], "genericpath": [], "<builtin>.hasattr": [], "extend": [], "posixpath": [], "os._exists": ["<builtin>.globals"], "<builtin>.set": [], "os._add": [], "os._createenviron": ["os._Environ.__init__", "os._createenviron.encodekey"], "os._createenviron.encodekey": ["os._createenviron.encode"], "os._createenviron.encode": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.type"], "<builtin>.isinstance": [], "<builtin>.TypeError": [], "os._Environ.__init__": [], "os._fscodec": [], "os.PathLike": ["abc.abstractmethod", "<builtin>.classmethod"], "abc.abstractmethod": [], "re": ["<builtin>.globals", "functools.lru_cache", "functools.lru_cache.decorating_function", "sre_compile.compile", "copyreg.pickle", "<builtin>.chr", "<builtin>.type"], "enum": ["<builtin>.object"], "enum.EnumMeta": ["<builtin>.property", "<builtin>.staticmethod", "<builtin>.classmethod"], "<builtin>.staticmethod": [], "enum.Enum": ["<builtin>.classmethod", "types.DynamicClassAttribute.__init__"], "types.DynamicClassAttribute.__init__": ["<builtin>.bool", "<builtin>.getattr"], "<builtin>.getattr": [], "<builtin>.bool": [], "enum.Flag": ["<builtin>.classmethod"], "enum.IntFlag": ["<builtin>.classmethod"], "sre_compile": ["<builtin>.tuple"], "sre_parse": ["<builtin>.frozenset"], "sre_constants": ["sre_constants._makecodes"], "sre_constants._makecodes": ["<builtin>.globals", "<str>.strip", "<str>.split", "<builtin>.enumerate"], "<str>.strip": [], "<str>.split": [], "<builtin>.enumerate": [], "<builtin>.frozenset": [], "sre_parse.State": ["<builtin>.property"], "sre_parse.Tokenizer": ["<builtin>.property"], "<builtin>.tuple": [], "functools": ["collections.namedtuple", "<builtin>.object"], "collections": [], "keyword": ["<builtin>.frozenset"], "operator": [], "reprlib": ["reprlib.Repr.__init__"], "reprlib.Repr.__init__": [], "collections.OrderedDict": ["<builtin>.classmethod", "reprlib.recursive_repr.decorating_function", "reprlib.recursive_repr", "<builtin>.object"], "reprlib.recursive_repr": [], "reprlib.recursive_repr.decorating_function": ["<builtin>.set", "<builtin>.getattr"], "collections.Counter": ["<builtin>.classmethod"], "collections.ChainMap": ["<builtin>.property", "reprlib.recursive_repr.decorating_function", "reprlib.recursive_repr", "<builtin>.classmethod"], "collections.UserDict": ["<builtin>.classmethod"], "functools.partial": ["reprlib.recursive_repr.decorating_function", "reprlib.recursive_repr"], "functools.partialmethod": ["<builtin>.property", "<builtin>.classmethod"], "collections.namedtuple": ["<str>.join", "<builtin>.TypeError", "<str>.split", "<builtin>.type", "<builtin>.dict", "<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.len", "<builtin>.classmethod", "collections.<lambda1>", "<builtin>.zip", "<builtin>.eval", "<builtin>.tuple", "<builtin>.reversed", "<builtin>.enumerate", "<builtin>.set", "<builtin>.list", "<builtin>.str", "<builtin>.map"], "<builtin>.map": [], "<builtin>.list": [], "<builtin>.str": [], "<builtin>.ValueError": [], "<builtin>.len": [], "<builtin>.reversed": [], "<builtin>.zip": [], "<builtin>.dict": [], "<str>.join": [], "<builtin>.eval": [], "collections.<lambda1>": ["<builtin>.property", "operator.itemgetter.__init__"], "operator.itemgetter.__init__": [], "functools.singledispatchmethod": ["<builtin>.property"], "functools.cached_property": ["<builtin>.classmethod"], "<builtin>.chr": [], "sre_compile.compile": ["<builtin>.print", "sre_compile.isstring", "sre_compile._code", "<map>.items", "sre_compile.dis", "sre_parse.parse", "<builtin>.tuple"], "sre_compile.isstring": ["<builtin>.isinstance"], "sre_parse.parse": ["sre_parse.Tokenizer.__init__", "sre_parse.Tokenizer.seek", "sre_parse.SubPattern.dump", "sre_parse.State.__init__", "sre_parse.Tokenizer.error", "sre_parse._parse_sub", "sre_parse.fix_flags", "sre_constants.error.__init__"], "sre_parse.Tokenizer.__init__": ["sre_parse.Tokenizer.__next", "<builtin>.isinstance", "<builtin>.str"], "sre_parse.Tokenizer.__next": ["sre_parse.Tokenizer.error", "<builtin>.len"], "sre_parse.Tokenizer.error": ["sre_parse.Tokenizer.error", "sre_parse.Tokenizer.tell"], "sre_parse.Tokenizer.tell": ["<builtin>.len"], "sre_parse.State.__init__": [], "sre_parse._parse_sub": ["", "append", "<builtin>.len", "sre_parse.SubPattern.__init__", "sre_parse.Tokenizer.match", "sre_parse.SubPattern.append", "sre_parse.Tokenizer.tell", "extend"], "sre_parse.Tokenizer.match": ["sre_parse.Tokenizer.__next"], "sre_parse.SubPattern.__init__": [], "sre_parse.SubPattern.append": ["append"], "sre_parse.Tokenizer.seek": ["sre_parse.Tokenizer.__next"], "sre_parse.fix_flags": ["<builtin>.isinstance", "<builtin>.ValueError"], "sre_constants.error.__init__": ["<str>.count", "<builtin>.isinstance", "<str>.rfind", "<builtin>.super"], "<str>.count": [], "<str>.rfind": [], "<builtin>.super": [], "sre_parse.SubPattern.dump": ["<builtin>.print", "<builtin>.isinstance", "<builtin>.enumerate", "<builtin>.str"], "<builtin>.print": [], "sre_compile._code": ["append", "sre_compile._compile", "sre_compile._compile_info"], "sre_compile._compile_info": ["sre_compile._get_literal_prefix", "", "sre_compile._compile_charset", "<builtin>.len", "sre_compile._get_charset_prefix", "sre_compile._optimize_charset", "sre_parse.SubPattern.getwidth", "extend"], "sre_parse.SubPattern.getwidth": ["<builtin>.min", "<builtin>.max"], "<builtin>.min": [], "<builtin>.max": [], "sre_compile._get_literal_prefix": ["sre_compile._get_literal_prefix", "", "<builtin>.len", "sre_compile._get_iscased", "sre_compile._combine_flags", "extend"], "sre_compile._get_iscased": [], "sre_compile._combine_flags": [], "sre_compile._get_charset_prefix": ["", "<builtin>.range", "<builtin>.any", "sre_compile._get_iscased", "<builtin>.map", "sre_compile._combine_flags"], "<builtin>.range": [], "<builtin>.any": [], "sre_compile._optimize_charset": ["append", "<builtin>.range", "<builtin>.any", "<builtin>.len", "<builtin>.map", "sre_compile._bytes_to_codes", "sre_compile._mk_bitmap", "<builtin>.bytes", "<builtin>.bytearray"], "<builtin>.bytearray": [], "sre_compile._mk_bitmap": ["<builtin>.range", "<builtin>.len"], "<builtin>.bytes": [], "sre_compile._bytes_to_codes": ["<builtin>.memoryview", "<builtin>.len"], "<builtin>.memoryview": [], "sre_compile._compile_charset": ["", "sre_constants.error.__init__", "extend"], "sre_compile._compile": ["", "sre_compile._compile", "sre_compile._compile_charset", "sre_compile._optimize_charset", "sre_compile._simple", "sre_compile._combine_flags", "sre_constants.error.__init__"], "sre_compile._simple": ["sre_compile._simple", "<builtin>.len"], "sre_compile.dis": ["<builtin>.set", "sre_compile.dis.dis_", "<builtin>.str", "<builtin>.len"], "sre_compile.dis.dis_": ["sre_compile.dis.dis_.print_2", "<builtin>.range", "sre_compile._hex_code", "<builtin>.ValueError", "sre_compile.dis.dis_.print_", "<builtin>.list", "sre_compile.dis.dis_", "<builtin>.str", "<builtin>.map", "<builtin>.chr", "<builtin>.bin"], "<builtin>.bin": [], "sre_compile.dis.dis_.print_": ["<builtin>.print"], "sre_compile.dis.dis_.print_2": ["<builtin>.print"], "sre_compile._hex_code": [], "<map>.items": [], "functools.lru_cache": ["functools._lru_cache_wrapper", "<builtin>.isinstance", "<builtin>.callable", "<builtin>.TypeError", "functools.update_wrapper"], "<builtin>.callable": [], "functools._lru_cache_wrapper": ["<builtin>.object"], "functools.update_wrapper": ["<builtin>.getattr"], "functools.lru_cache.decorating_function": ["functools._lru_cache_wrapper", "functools.update_wrapper"], "copyreg": ["copyreg.pickle", "<builtin>.type"], "copyreg.pickle": ["<builtin>.callable", "copyreg.constructor", "<builtin>.TypeError"], "copyreg.constructor": ["<builtin>.callable", "<builtin>.TypeError"], "traceback": [], "linecache": [], "tokenize": ["<builtin>.sorted", "<builtin>.any", "functools.lru_cache", "tokenize.maybe", "collections.namedtuple", "tokenize._all_string_prefixes", "<builtin>.set", "re.compile", "<builtin>.map", "tokenize.group"], "codecs": ["<builtin>.SystemError"], "<builtin>.SystemError": [], "encodings": [], "token": ["<builtin>.isinstance", "<builtin>.globals", "extend"], "re.compile": ["re._compile"], "re._compile": ["sre_compile.isstring", "<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.len", "<builtin>.iter", "<builtin>.next", "sre_compile.compile", "<builtin>.TypeError", "<builtin>.type"], "<builtin>.iter": [], "<builtin>.next": [], "tokenize.TokenInfo": ["<builtin>.property"], "tokenize.maybe": ["tokenize.group"], "tokenize.group": [], "tokenize._all_string_prefixes": [], "<builtin>.sorted": [], "traceback.FrameSummary": ["<builtin>.property"], "traceback.StackSummary": ["<builtin>.classmethod"], "traceback.TracebackException": ["<builtin>.classmethod"], "warnings": ["warnings._processoptions", "warnings.filterwarnings", "warnings.simplefilter", "<builtin>.hasattr"], "warnings._processoptions": ["warnings._setoption", "<builtin>.print"], "warnings._setoption": ["<builtin>.int", "<builtin>.len", "re.escape", "warnings._getcategory", "warnings.filterwarnings", "warnings._getaction"], "warnings._getaction": [], "warnings._getcategory": ["<builtin>.issubclass", "<builtin>.__import__", "<builtin>.getattr"], "<builtin>.__import__": [], "<builtin>.issubclass": [], "re.escape": ["<builtin>.isinstance", "<str>.encode", "<str>.translate", "<builtin>.str"], "<builtin>.int": [], "warnings.filterwarnings": ["re.compile", "<builtin>.isinstance", "<builtin>.issubclass", "warnings._add_filter"], "warnings._add_filter": ["remove", "append", "insert", "warnings._filters_mutated"], "remove": [], "insert": [], "warnings._filters_mutated": [], "warnings.simplefilter": ["<builtin>.isinstance", "warnings._add_filter"], "weakref": [], "weakref.finalize": ["<builtin>.property", "<builtin>.classmethod"], "collections.abc": [], "string": ["string.Template.__init_subclass__"], "string.Template.__init_subclass__": ["re.compile", "re.escape", "<builtin>.super"], "threading": ["_weakrefset.WeakSet.__init__", "append", "threading._MainThread.__init__", "<builtin>.hasattr", "<builtin>.set", "threading.RLock", "collections.namedtuple"], "threading.Barrier": ["<builtin>.property"], "threading.RLock": ["threading._RLock.__init__"], "threading._RLock.__init__": [], "_weakrefset.WeakSet.__init__": ["<builtin>.set", "_weakrefset.WeakSet.update"], "_weakrefset.WeakSet.update": ["_weakrefset.WeakSet._commit_removals", "_weakrefset.WeakSet.add"], "_weakrefset.WeakSet._commit_removals": [], "_weakrefset.WeakSet.add": ["_weakrefset.WeakSet._commit_removals"], "threading.Thread": ["<builtin>.property"], "threading._MainThread.__init__": ["threading.Thread.__init__", "threading.Thread._set_native_id", "threading.Thread._set_tstate_lock", "threading.Thread._set_ident", "threading.Event.set"], "threading.Thread.__init__": ["threading._newname", "threading.Event.__init__", "_weakrefset.WeakSet.add", "threading.current_thread", "<builtin>.str", "threading._make_invoke_excepthook"], "threading._newname": [], "threading.current_thread": ["threading._DummyThread.__init__"], "threading._DummyThread.__init__": ["threading.Thread._set_ident", "threading._newname", "threading.Thread._set_native_id", "threading.Thread.__init__"], "threading.Thread._set_ident": [], "threading.Thread._set_native_id": [], "threading.Event.__init__": ["threading.Condition.__init__"], "threading.Condition.__init__": ["threading.RLock"], "threading._make_invoke_excepthook": ["<builtin>.RuntimeError"], "<builtin>.RuntimeError": [], "threading.Thread._set_tstate_lock": [], "threading.Event.set": [], "_threading_local": ["contextlib.contextmanager"], "contextlib": [], "contextlib.AbstractContextManager": ["abc.abstractmethod", "<builtin>.classmethod"], "contextlib.AbstractAsyncContextManager": ["abc.abstractmethod", "<builtin>.classmethod"], "contextlib._BaseExitStack": ["<builtin>.staticmethod"], "contextlib.AsyncExitStack": ["<builtin>.staticmethod"], "contextlib.contextmanager": ["functools.wraps"], "functools.wraps": [], "ntpath.normcase": ["os._fspath", "<builtin>.isinstance"], "os._fspath": ["<builtin>.isinstance", "<builtin>.hasattr", "<str>.format", "<builtin>.TypeError", "<builtin>.type"], "<str>.format": [], "posixpath.normcase": ["os._fspath"], "logging.PercentStyle": ["re.compile"], "logging.StrFormatStyle": ["re.compile"], "logging.Formatter.__init__": ["<map>.keys", "logging.PercentStyle.validate", "<builtin>.ValueError", "logging.StrFormatStyle.validate", "logging.StringTemplateStyle.__init__", "logging.StringTemplateStyle.validate", "logging.PercentStyle.__init__"], "<map>.keys": [], "logging.PercentStyle.__init__": [], "logging.StringTemplateStyle.__init__": ["string.Template.__init__", "<builtin>.super"], "string.Template.__init__": [], "weakref.WeakValueDictionary.__init__": ["weakref.WeakValueDictionary.update", "<builtin>.set"], "weakref.WeakValueDictionary.update": ["weakref.WeakValueDictionary._commit_removals", "weakref.KeyedRef.__init__", "<builtin>.dict", "<builtin>.hasattr"], "weakref.WeakValueDictionary._commit_removals": [], "weakref.KeyedRef.__init__": ["<builtin>.super"], "logging.Handler": ["<builtin>.property"], "logging._StderrHandler": ["<builtin>.property"], "logging._StderrHandler.__init__": ["logging.Handler.__init__"], "logging.Handler.__init__": ["logging._addHandlerRef", "logging.Handler.createLock", "logging._checkLevel", "logging.Filterer.__init__"], "logging.Filterer.__init__": [], "logging._checkLevel": ["<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.TypeError", "<builtin>.str"], "logging._addHandlerRef": ["append", "logging._acquireLock"], "logging._acquireLock": [], "logging.Handler.createLock": ["logging._register_at_fork_reinit_lock", "threading.RLock"], "logging._register_at_fork_reinit_lock": ["logging._acquireLock", "_weakrefset.WeakSet.add"], "logging.Manager": ["<builtin>.property"], "logging.LoggerAdapter": ["<builtin>.property"], "logging.RootLogger.__init__": ["logging.Logger.__init__"], "logging.Logger.__init__": ["logging._checkLevel", "logging.Filterer.__init__"], "logging.Manager.__init__": [], "struct": [], "tempfile": ["<builtin>.hasattr"], "shutil": ["collections.namedtuple", "append", "<builtin>.hasattr"], "fnmatch": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "bz2": [], "_compression": [], "bz2.BZ2File": ["<builtin>.property"], "lzma": [], "lzma.LZMAFile": ["<builtin>.property"], "random": ["random.Random.__init__", "<builtin>.hasattr"], "bisect": [], "hashlib": ["<builtin>.range", "<builtin>.globals", "<builtin>.set", "logging.exception", "<builtin>.bytes", "hashlib.__get_builtin_constructor"], "hashlib.__get_builtin_constructor": ["<builtin>.ValueError", "<map>.get"], "<map>.get": [], "logging.exception": ["logging.error"], "logging.error": ["logging.basicConfig", "logging.Logger.error", "<builtin>.len"], "logging.basicConfig": ["logging.FileHandler.__init__", "<map>.keys", "logging._acquireLock", "<builtin>.ValueError", "<builtin>.len", "logging.StreamHandler.__init__", "logging.Logger.addHandler", "logging.Logger.removeHandler", "logging.Formatter.__init__", "logging.Logger.setLevel"], "logging.Logger.removeHandler": ["remove", "logging._acquireLock"], "logging.StreamHandler.__init__": ["logging.Handler.__init__"], "logging.FileHandler.__init__": ["logging.StreamHandler.__init__", "posixpath.abspath", "os._fspath", "logging.Handler.__init__", "logging.FileHandler._open", "ntpath.abspath"], "ntpath.abspath": [], "posixpath.abspath": ["<builtin>.isinstance", "posixpath.normpath", "posixpath.join", "posixpath.isabs", "os._fspath"], "posixpath.isabs": ["posixpath._get_sep", "os._fspath"], "posixpath._get_sep": ["<builtin>.isinstance"], "posixpath.join": ["posixpath._get_sep", "os._fspath", "genericpath._check_arg_types", "<builtin>.map"], "genericpath._check_arg_types": ["<builtin>.isinstance", "<builtin>.TypeError"], "posixpath.normpath": ["append", "os._fspath", "<builtin>.isinstance", "pop"], "pop": [], "logging.FileHandler._open": [], "logging.PercentStyle.validate": ["<builtin>.ValueError"], "logging.StrFormatStyle.validate": ["string.Formatter.parse", "<builtin>.set", "<builtin>.ValueError"], "string.Formatter.parse": [], "logging.StringTemplateStyle.validate": ["<builtin>.set", "<builtin>.ValueError"], "logging.Logger.addHandler": ["append", "logging._acquireLock"], "logging.Logger.setLevel": ["logging._checkLevel"], "logging.Logger.error": ["logging.Logger._log", "logging.Logger.isEnabledFor"], "logging.Logger.isEnabledFor": ["logging._acquireLock", "logging.Logger.getEffectiveLevel"], "logging.Logger.getEffectiveLevel": [], "logging.Logger._log": ["logging.Logger.handle", "<builtin>.isinstance", "logging.Logger.makeRecord", "logging.Logger.findCaller", "<builtin>.type"], "logging.Logger.findCaller": ["ntpath.normcase", "<builtin>.hasattr", "logging.currentframe", "posixpath.normcase", "traceback.print_stack"], "logging.currentframe": [], "traceback.print_stack": ["traceback.print_list", "traceback.extract_stack"], "traceback.extract_stack": ["traceback.StackSummary.extract", "traceback.walk_stack"], "traceback.walk_stack": [], "traceback.StackSummary.extract": ["linecache.checkcache", "<builtin>.set", "linecache.lazycache", "traceback.FrameSummary.__init__", "<builtin>.getattr"], "linecache.lazycache": ["<str>.startswith", "<builtin>.getattr", "<str>.endswith", "<builtin>.len"], "traceback.FrameSummary.__init__": ["<builtin>.repr"], "<builtin>.repr": [], "linecache.checkcache": ["<builtin>.list", "<map>.keys", "<map>.pop", "<builtin>.len"], "<map>.pop": [], "traceback.print_list": ["traceback.StackSummary.format", "<builtin>.print", "traceback.StackSummary.from_list"], "traceback.StackSummary.from_list": ["<builtin>.isinstance", "traceback.FrameSummary.__init__"], "traceback.StackSummary.format": ["append", "<builtin>.sorted"], "logging.Logger.makeRecord": ["<builtin>.KeyError", "logging.LogRecord.__init__"], "logging.LogRecord.__init__": ["<builtin>.isinstance", "<builtin>.int", "<builtin>.len", "<builtin>.hasattr", "posixpath.splitext", "posixpath.basename", "logging.getLevelName", "ntpath.basename", "threading.current_thread", "ntpath.splitext"], "logging.getLevelName": ["<map>.get"], "ntpath.basename": ["ntpath.split"], "ntpath.split": ["ntpath.splitdrive", "os._fspath", "ntpath._get_bothseps", "<builtin>.len"], "ntpath._get_bothseps": ["<builtin>.isinstance"], "ntpath.splitdrive": ["os._fspath", "<builtin>.isinstance", "<builtin>.len"], "posixpath.basename": ["posixpath._get_sep", "os._fspath"], "ntpath.splitext": ["os._fspath", "<builtin>.isinstance", "genericpath._splitext"], "genericpath._splitext": ["<builtin>.max"], "posixpath.splitext": ["os._fspath", "<builtin>.isinstance", "genericpath._splitext"], "<builtin>.KeyError": [], "logging.Logger.handle": ["logging.Filterer.filter", "logging.Logger.callHandlers"], "logging.Filterer.filter": ["<builtin>.hasattr"], "logging.Logger.callHandlers": ["logging.Handler.handle"], "logging.Handler.handle": ["logging.Handler.acquire", "logging.Handler.emit", "logging.Filterer.filter"], "logging.Handler.acquire": [], "logging.Handler.emit": ["<builtin>.NotImplementedError"], "<builtin>.NotImplementedError": [], "random.Random.__init__": ["random.Random.seed"], "random.Random.seed": ["<builtin>.isinstance", "<builtin>.len", "<builtin>.ord", "warnings.warn", "<builtin>.super", "<builtin>.map", "<builtin>.type"], "warnings.warn": ["<builtin>.range", "<builtin>.isinstance", "warnings._is_internal_frame", "warnings._next_external_frame", "<builtin>.issubclass", "<builtin>.TypeError", "warnings.warn_explicit", "<builtin>.type"], "warnings._is_internal_frame": [], "warnings._next_external_frame": ["warnings._is_internal_frame"], "warnings.warn_explicit": ["<builtin>.RuntimeError", "<builtin>.isinstance", "<builtin>.int", "<map>.clear", "linecache.getlines", "warnings.WarningMessage.__init__", "<builtin>.str", "<str>.lower", "<builtin>.issubclass", "warnings._showwarnmsg", "<map>.get"], "<str>.lower": [], "<map>.clear": [], "linecache.getlines": ["linecache.updatecache", "linecache.clearcache", "<builtin>.len"], "linecache.updatecache": ["ntpath.isabs", "linecache.lazycache", "<builtin>.len", "ntpath.join", "posixpath.join", "tokenize.open", "<str>.endswith", "posixpath.isabs", "<map>.pop", "<str>.startswith"], "<str>.startswith": [], "<str>.endswith": [], "ntpath.isabs": ["<builtin>.isinstance", "<builtin>.len", "ntpath._get_bothseps", "ntpath.splitdrive", "os._fspath"], "ntpath.join": ["<builtin>.isinstance", "genericpath._check_arg_types", "ntpath.splitdrive", "os._fspath", "<builtin>.map"], "tokenize.open": ["tokenize.detect_encoding"], "tokenize.detect_encoding": ["tokenize.detect_encoding.find_cookie", "tokenize.detect_encoding.read_or_stop"], "tokenize.detect_encoding.read_or_stop": [], "tokenize.detect_encoding.find_cookie": ["<builtin>.SyntaxError", "tokenize._get_normal_name"], "<builtin>.SyntaxError": [], "tokenize._get_normal_name": [], "linecache.clearcache": ["<map>.clear"], "warnings.WarningMessage.__init__": [], "warnings._showwarnmsg": ["warnings._showwarnmsg_impl"], "warnings._showwarnmsg_impl": ["warnings._formatwarnmsg"], "warnings._formatwarnmsg": ["warnings._formatwarnmsg_impl"], "warnings._formatwarnmsg_impl": ["linecache.getline"], "linecache.getline": ["linecache.getlines", "<builtin>.len"], "tracemalloc": [], "pickle": ["append", "extend"], "_compat_pickle": ["<builtin>.dict", "<map>.update", "<map>.items", "<builtin>.len"], "<map>.update": [], "pickle._Pickler": ["<builtin>.type"], "tracemalloc.Frame": ["<builtin>.property"], "tracemalloc.Traceback": ["<builtin>.property"], "tracemalloc.Trace": ["<builtin>.property"], "tracemalloc.Filter": ["<builtin>.property"], "tracemalloc.DomainFilter": ["<builtin>.property"], "tracemalloc.Snapshot": ["<builtin>.staticmethod"], "<builtin>.ord": [], "tempfile._RandomNameSequence": ["<builtin>.property"], "tempfile.SpooledTemporaryFile": ["<builtin>.property", "<builtin>.classmethod"], "tempfile.TemporaryDirectory": ["<builtin>.classmethod"], "typing": ["typing.TypeVar.__init__", "typing._tp_cache", "typing._SpecialGenericAlias.__init__", "<builtin>.frozenset", "typing._SpecialForm.__init__", "typing._tp_cache.decorator"], "typing._SpecialForm": ["typing._tp_cache"], "typing._tp_cache": ["typing._tp_cache.decorator"], "typing._tp_cache.decorator": ["append", "functools.lru_cache.decorating_function", "functools.lru_cache", "functools.wraps"], "typing._SpecialForm.__init__": [], "typing.ParamSpec": ["<builtin>.property"], "typing._GenericAlias": ["typing._tp_cache"], "typing._SpecialGenericAlias": ["typing._tp_cache"], "typing._CallableType": ["typing._tp_cache"], "typing._TupleType": ["typing._tp_cache"], "typing.Generic": ["typing._tp_cache"], "typing.Annotated": ["typing._tp_cache"], "typing.TypeVar.__init__": ["typing._type_check", "<builtin>.len", "<builtin>.super", "<builtin>.TypeError", "<builtin>.tuple"], "typing._type_check": ["<builtin>.callable", "typing._type_convert", "<builtin>.isinstance", "<builtin>.TypeError"], "typing._type_convert": ["typing.ForwardRef.__init__", "<builtin>.isinstance", "<builtin>.type"], "typing.ForwardRef.__init__": ["<builtin>.isinstance", "<builtin>.SyntaxError", "<builtin>.compile", "<builtin>.TypeError"], "<builtin>.compile": [], "typing._SpecialGenericAlias.__init__": ["<builtin>.super"], "typing.SupportsInt": ["abc.abstractmethod"], "typing.SupportsFloat": ["abc.abstractmethod"], "typing.SupportsComplex": ["abc.abstractmethod"], "typing.SupportsBytes": ["abc.abstractmethod"], "typing.SupportsIndex": ["abc.abstractmethod"], "typing.SupportsAbs": ["abc.abstractmethod"], "typing.SupportsRound": ["abc.abstractmethod"], "typing.IO": ["abc.abstractmethod", "<builtin>.property"], "typing.BinaryIO": ["abc.abstractmethod"], "typing.TextIO": ["abc.abstractmethod", "<builtin>.property"], "PIL.ExifTags": [], "PIL.ImageMode": ["functools.lru_cache"], "PIL._deprecate": [], "PIL.TiffTags": ["PIL.TiffTags._populate"], "PIL.TiffTags._populate": ["<map>.items", "<builtin>.len"], "PIL._binary": [], "PIL._util": [], "PIL._typing": ["typing.TypeVar.__init__"], "numbers": [], "numbers.Complex": ["abc.abstractmethod", "<builtin>.property"], "numbers.Real": ["abc.abstractmethod", "<builtin>.property"], "numbers.Rational": ["abc.abstractmethod", "<builtin>.property"], "numbers.Integral": ["abc.abstractmethod", "<builtin>.property"], "numpy.typing": ["numpy._pytesttester.PytestTester.__init__"], "numpy._typing": [], "numpy": ["<builtin>.RuntimeError", "<builtin>.ImportError", "<builtin>.globals", "<builtin>.len", "<builtin>.set", "numpy._mac_os_check", "numpy._pytesttester.PytestTester.__init__", "warnings.filterwarnings", "numpy._sanity_check", "<builtin>.str", "<builtin>.list", "warnings.catch_warnings.__init__", "numpy._core.getlimits._register_known_types", "numpy.hugepage_setup", "<builtin>.getattr"], "numpy._globals": ["<builtin>.RuntimeError", "<builtin>.globals"], "numpy._utils": [], "numpy._utils._convertions": [], "numpy._expired_attrs_2_0": [], "numpy.version": ["<str>.split"], "numpy._distributor_init": [], "numpy.__config__": ["<builtin>.bool", "numpy.__config__._cleanup", "<str>.lower", "<str>.replace"], "<str>.replace": [], "numpy.__config__._cleanup": ["<builtin>.isinstance", "numpy.__config__._cleanup", "<map>.items"], "numpy._core": ["append", "<builtin>.ImportError", "<builtin>.hasattr", "numpy._pytesttester.PytestTester.__init__", "copyreg.pickle", "<builtin>.type"], "numpy._core.multiarray": [], "numpy._core.overrides": ["collections.namedtuple", "<builtin>.set"], "numpy._utils._inspect": [], "numpy._core.umath": [], "numpy._core.numerictypes": ["append", "<builtin>.sorted", "<builtin>.globals", "numpy._utils.set_module", "<builtin>.set", "numpy._core.numerictypes._register_types", "numpy._utils.set_module.decorator", "<builtin>.tuple"], "numpy._core._string_helpers": ["<builtin>.map", "<builtin>.range", "<builtin>.tuple"], "numpy._core._type_aliases": ["<map>.keys", "<builtin>.set", "<builtin>.list", "<builtin>.issubclass", "<map>.items", "<builtin>.getattr"], "numpy._core._dtype": [], "numpy._utils.set_module": [], "numpy._utils.set_module.decorator": [], "numpy._core.numerictypes._register_types": [], "numpy._core.numeric": ["numpy._utils.set_module", "numpy._core.overrides.set_array_function_like_doc", "numpy._utils.set_module.decorator", "numpy._core.numeric.extend_all", "<builtin>.type"], "numpy._core.shape_base": ["<builtin>.getattr"], "numpy._core.fromnumeric": ["numpy._utils.set_module.decorator", "numpy._utils.set_module"], "numpy._core._methods": ["<map>.update"], "numpy._core._exceptions": [], "numpy._core._exceptions._ArrayMemoryError": ["<builtin>.property", "<builtin>.staticmethod"], "numpy._core._ufunc_config": ["numpy._utils.set_module.decorator", "contextlib.contextmanager", "numpy._utils.set_module"], "contextvars": [], "numpy.exceptions": ["<builtin>.RuntimeError", "<builtin>.globals"], "numpy._core.overrides.set_array_function_like_doc": [], "numpy._core.arrayprint": ["numpy._core.arrayprint._recursive_guard", "numpy._utils.set_module", "numpy._core.overrides.array_function_dispatch.decorator", "numpy._core.arrayprint._recursive_guard.decorating_function", "contextlib.contextmanager", "numpy._core.overrides.array_function_dispatch", "numpy._utils.set_module.decorator", "<builtin>.getattr"], "numpy._core.printoptions": ["<map>.copy"], "<map>.copy": [], "numpy._core.arrayprint._recursive_guard": [], "numpy._core.arrayprint._recursive_guard.decorating_function": ["<builtin>.set", "functools.wraps"], "numpy._core.overrides.array_function_dispatch": [], "numpy._core.overrides.array_function_dispatch.decorator": ["<builtin>.RuntimeError", "numpy._core.overrides.verify_matching_signatures", "functools.wraps"], "numpy._core.overrides.verify_matching_signatures": ["<builtin>.bool", "numpy._utils._inspect.getargspec", "<builtin>.RuntimeError", "<builtin>.len"], "numpy._utils._inspect.getargspec": ["numpy._utils._inspect.ismethod", "numpy._utils._inspect.isfunction", "<builtin>.TypeError", "numpy._utils._inspect.getargs"], "numpy._utils._inspect.ismethod": ["<builtin>.isinstance"], "numpy._utils._inspect.isfunction": ["<builtin>.isinstance"], "numpy._utils._inspect.getargs": ["<builtin>.range", "<builtin>.list", "numpy._utils._inspect.iscode", "<builtin>.TypeError"], "numpy._utils._inspect.iscode": ["<builtin>.isinstance"], "numpy._core.arrayprint.StructuredVoidFormat": ["<builtin>.classmethod"], "numpy._core._asarray": ["numpy._utils.set_module", "numpy._core.overrides.set_array_function_like_doc", "numpy._core.overrides.array_function_dispatch.decorator", "numpy._core.overrides.array_function_dispatch", "numpy._utils.set_module.decorator"], "numpy._core.numeric.extend_all": ["<builtin>.set", "<builtin>.getattr"], "numpy._core.records": ["numpy._utils.set_module.decorator", "numpy._utils.set_module"], "numpy._core.memmap": [], "numpy._core.function_base": [], "numpy._core._machar": [], "numpy._core.getlimits": ["<builtin>.dict"], "numpy._core.getlimits.MachArLike": ["<builtin>.property"], "numpy._core.getlimits.finfo": ["<builtin>.property"], "numpy._core.getlimits.iinfo": ["<builtin>.property"], "numpy._core.einsumfunc": ["<builtin>.set", "numpy._core.overrides.array_function_dispatch.decorator", "numpy._core.overrides.array_function_dispatch"], "numpy._core._add_newdocs": ["numpy._core._add_newdocs.refer_to_array_attribute", "<str>.replace", "numpy._core.function_base.add_newdoc"], "numpy._core.function_base.add_newdoc": ["<builtin>.isinstance", "<builtin>.globals", "numpy._core.function_base._add_docstring", "<str>.strip", "<builtin>.__import__", "<builtin>.getattr"], "numpy._core.function_base._add_docstring": ["numpy._core.function_base._needs_add_docstring", "warnings.warn"], "numpy._core.function_base._needs_add_docstring": ["<builtin>.isinstance"], "numpy._core._add_newdocs.refer_to_array_attribute": [], "numpy._core._add_newdocs_scalars": ["numpy._core._add_newdocs_scalars.numeric_type_aliases", "numpy._core.function_base.add_newdoc", "numpy._core._add_newdocs_scalars._get_platform_and_machine", "numpy._core._add_newdocs_scalars.add_newdoc_for_scalar_type"], "numpy._core._add_newdocs_scalars.numeric_type_aliases": ["<builtin>.list", "numpy._core._add_newdocs_scalars.numeric_type_aliases.type_aliases_gen"], "numpy._core._add_newdocs_scalars.numeric_type_aliases.type_aliases_gen": ["<builtin>.getattr"], "numpy._core._add_newdocs_scalars._get_platform_and_machine": [], "numpy._core._add_newdocs_scalars.add_newdoc_for_scalar_type": ["numpy._core.function_base.add_newdoc", "<str>.strip", "<builtin>.getattr"], "numpy._core._dtype_ctypes": [], "numpy._core._internal": ["re.compile", "<map>.keys"], "ast": ["<builtin>.type", "<builtin>.property", "<builtin>.repr", "<builtin>.hasattr"], "ast._Unparser": ["<builtin>.property", "<builtin>.frozenset", "contextlib.contextmanager"], "ctypes": ["<builtin>.int", "ctypes.LibraryLoader.__init__", "ctypes.CFUNCTYPE", "<builtin>.Exception", "ctypes.PYFUNCTYPE", "ctypes._check_size", "ctypes._reset_cache"], "<builtin>.Exception": [], "ctypes._check_size": ["<builtin>.SystemError"], "ctypes.LibraryLoader": ["<builtin>.classmethod"], "ctypes.LibraryLoader.__init__": [], "ctypes.CFUNCTYPE": ["<builtin>.ValueError"], "ctypes.PYFUNCTYPE": [], "ctypes._endian": ["<builtin>.type"], "ctypes._reset_cache": ["<map>.clear"], "numpy._core._internal._ctypes": ["<builtin>.property"], "numpy._core._internal._Stream": ["<builtin>.property"], "numpy._pytesttester": [], "numpy._pytesttester.PytestTester.__init__": [], "numpy.lib": ["numpy._pytesttester.PytestTester.__init__"], "numpy.lib.array_utils": [], "numpy.lib._array_utils_impl": ["numpy._utils.set_module.decorator", "numpy._utils.set_module"], "numpy.lib.introspect": [], "numpy.lib.mixins": [], "numpy.lib.mixins.NDArrayOperatorsMixin": ["numpy.lib.mixins._binary_method", "numpy.lib.mixins._numeric_methods", "numpy.lib.mixins._unary_method", "numpy.lib.mixins._reflected_binary_method"], "numpy.lib.mixins._binary_method": [], "numpy.lib.mixins._numeric_methods": ["numpy.lib.mixins._binary_method", "numpy.lib.mixins._reflected_binary_method", "numpy.lib.mixins._inplace_binary_method"], "numpy.lib.mixins._reflected_binary_method": [], "numpy.lib.mixins._inplace_binary_method": [], "numpy.lib.mixins._unary_method": [], "numpy.lib.npyio": [], "numpy.lib._npyio_impl": ["numpy._utils.set_module.decorator", "numpy._core.overrides.set_array_function_like_doc", "<builtin>.sorted", "numpy._utils.set_module"], "numpy.lib.format": ["<builtin>.len"], "numpy.lib._utils_impl": ["numpy._utils.set_module.decorator", "numpy._utils.set_module"], "textwrap": ["re.compile"], "textwrap.TextWrapper": ["re.compile", "re.escape", "<builtin>.ord"], "<str>.translate": [], "<str>.encode": [], "platform": ["re.compile", "collections.namedtuple"], "subprocess": ["<builtin>.hasattr", "subprocess._use_posix_spawn", "<builtin>.getattr"], "signal": ["signal._wraps.decorator", "signal._wraps", "<builtin>.globals"], "signal._wraps": [], "signal._wraps.decorator": [], "selectors": ["collections.namedtuple", "selectors._can_use", "<builtin>.hasattr"], "selectors.BaseSelector": ["abc.abstractmethod"], "selectors._can_use": ["<builtin>.getattr"], "subprocess.CalledProcessError": ["<builtin>.property"], "subprocess.TimeoutExpired": ["<builtin>.property"], "subprocess.CompletedProcess": ["<builtin>.classmethod"], "subprocess._use_posix_spawn": ["<builtin>.len", "<builtin>.map", "<builtin>.tuple", "<builtin>.hasattr"], "subprocess.Popen": ["<builtin>.property", "<builtin>.classmethod"], "platform._Processor": ["<builtin>.classmethod"], "platform.uname_result": ["functools.cached_property.__init__", "<builtin>.classmethod"], "functools.cached_property.__init__": [], "numpy.lib._datasource": ["numpy.lib._datasource._FileOpeners.__init__"], "numpy.lib._datasource._FileOpeners.__init__": [], "numpy.lib._iotools": [], "numpy.lib._iotools.NameValidator": ["<builtin>.set"], "numpy.lib._iotools.StringConverter": ["<builtin>.classmethod", "append", "extend"], "numpy.lib.scimath": [], "numpy.lib._scimath_impl": ["numpy._core.overrides.array_function_dispatch.decorator", "numpy._core.overrides.array_function_dispatch"], "numpy.lib._type_check_impl": ["numpy._utils.set_module.decorator", "numpy._utils.set_module"], "numpy.lib._ufunclike_impl": ["numpy._core.overrides.array_function_dispatch.decorator", "numpy._core.overrides.array_function_dispatch"], "numpy.lib.stride_tricks": [], "numpy.lib._stride_tricks_impl": ["numpy._core.overrides.array_function_dispatch", "numpy._utils.set_module.decorator", "numpy._core.overrides.array_function_dispatch.decorator", "numpy._utils.set_module"], "numpy.lib._index_tricks_impl": ["numpy.lib._index_tricks_impl.OGridClass.__init__", "numpy.lib._index_tricks_impl.IndexExpression.__init__", "numpy.lib._index_tricks_impl.CClass.__init__", "numpy._utils.set_module", "numpy.lib._index_tricks_impl.RClass.__init__", "numpy.lib._index_tricks_impl.MGridClass.__init__", "numpy._utils.set_module.decorator"], "numpy.matrixlib": ["numpy._pytesttester.PytestTester.__init__"], "numpy.matrixlib.defmatrix": ["numpy._utils.set_module.decorator", "numpy._utils.set_module"], "numpy.linalg": ["copy", "numpy._pytesttester.PytestTester.__init__"], "numpy.linalg.linalg": [], "numpy.linalg._linalg": [], "numpy.lib._twodim_base_impl": ["numpy._utils.set_module.decorator", "numpy._core.overrides.set_array_function_like_doc", "numpy._utils.set_module", "numpy._core.getlimits.iinfo.__init__"], "numpy._core.getlimits.iinfo.__init__": ["<builtin>.ValueError", "<builtin>.type"], "copy": ["<builtin>.getattr", "<builtin>.type"], "numpy.matrixlib.defmatrix.matrix": ["<builtin>.property"], "numpy.lib._function_base_impl": ["<builtin>.dict", "numpy._utils.set_module.decorator", "numpy._utils.set_module"], "numpy.lib._histograms_impl": [], "numpy.lib._index_tricks_impl.MGridClass.__init__": ["<builtin>.super"], "numpy.lib._index_tricks_impl.OGridClass.__init__": ["<builtin>.super"], "numpy.lib._index_tricks_impl.AxisConcatenator": ["<builtin>.staticmethod"], "numpy.lib._index_tricks_impl.RClass.__init__": ["numpy.lib._index_tricks_impl.AxisConcatenator.__init__"], "numpy.lib._index_tricks_impl.AxisConcatenator.__init__": [], "numpy.lib._index_tricks_impl.CClass.__init__": ["numpy.lib._index_tricks_impl.AxisConcatenator.__init__"], "numpy.lib._index_tricks_impl.IndexExpression.__init__": [], "numpy.lib._nanfunctions_impl": [], "numpy.lib._shape_base_impl": ["numpy._utils.set_module.decorator", "numpy._utils.set_module"], "numpy.lib._arraysetops_impl": [], "numpy.lib._polynomial_impl": ["re.compile", "warnings.simplefilter"], "numpy.lib._polynomial_impl.poly1d": ["<builtin>.property"], "numpy.lib._arrayterator_impl": [], "numpy.lib._arrayterator_impl.Arrayterator": ["<builtin>.property"], "numpy.lib._arraypad_impl": ["numpy._core.overrides.array_function_dispatch.decorator", "numpy._core.overrides.array_function_dispatch"], "numpy.lib._version": [], "numpy._array_api_info": [], "numpy._core.getlimits._register_known_types": ["numpy._core.getlimits._register_type", "numpy._core._ufunc_config.errstate.__init__", "numpy._core.getlimits.MachArLike.__init__"], "numpy._core.getlimits.MachArLike.__init__": ["numpy._core.getlimits.MachArLike._float_conv", "numpy._core.getlimits.MachArLike._float_to_str", "numpy._core.getlimits.MachArLike._float_to_float", "<builtin>.int"], "numpy._core.getlimits.MachArLike._float_to_float": ["numpy._core.getlimits.MachArLike._float_conv", "numpy._core.getlimits._fr1"], "numpy._core.getlimits.MachArLike._float_conv": [], "numpy._core.getlimits._fr1": [], "numpy._core.getlimits.MachArLike._float_to_str": ["numpy._core.getlimits._fr0"], "numpy._core.getlimits._fr0": [], "numpy._core.getlimits._register_type": [], "numpy._core._ufunc_config.errstate.__init__": [], "numpy._sanity_check": ["<builtin>.RuntimeError", "<builtin>.AssertionError", "<builtin>.abs"], "<builtin>.abs": [], "<builtin>.AssertionError": [], "warnings.catch_warnings.__init__": [], "numpy._mac_os_check": [], "numpy.hugepage_setup": ["<builtin>.int", "<builtin>.tuple"], "numpy._typing._nested_sequence": ["typing.TypeVar.__init__"], "numpy._typing._nbit": [], "numpy._typing._char_codes": [], "numpy._typing._scalars": [], "numpy._typing._shape": [], "numpy._typing._dtype_like": ["typing.TypeVar.__init__"], "numpy._typing._dtype_like._SupportsDType": ["<builtin>.property"], "numpy._typing._array_like": ["typing.TypeVar.__init__"], "numpy._typing._add_docstring": ["numpy._typing._add_docstring.add_newdoc", "<builtin>.repr", "numpy._typing._add_docstring._parse_docstrings"], "numpy._typing._add_docstring.add_newdoc": ["append"], "numpy._typing._add_docstring._parse_docstrings": ["re.match", "append", "textwrap.dedent", "pop"], "textwrap.dedent": ["re.sub", "<builtin>.enumerate", "<builtin>.zip"], "re.sub": ["re._compile"], "re.match": ["re._compile"], "typing_extensions": ["typing_extensions._SpecialGenericAlias.__init__", "append", "<builtin>.classmethod", "<builtin>.hasattr", "typing.TypeVar.__init__", "<builtin>.getattr", "typing._tp_cache", "typing_extensions._LiteralForm.__init__", "<builtin>.frozenset", "typing_extensions._UnpackSpecialForm.__init__", "typing_extensions._ensure_subclassable.inner", "typing_extensions._SpecialForm.__init__", "typing_extensions._ensure_subclassable", "inspect.signature", "<builtin>.type"], "inspect": ["<builtin>.globals", "<builtin>.hasattr", "collections.namedtuple", "<map>.items", "<builtin>.object", "<builtin>.type"], "dis": ["collections.namedtuple"], "opcode": ["append", "<builtin>.range", "opcode.name_op", "opcode.jrel_op", "opcode.def_op", "opcode.jabs_op"], "opcode.def_op": [], "opcode.name_op": ["append", "opcode.def_op"], "opcode.jrel_op": ["append", "opcode.def_op"], "opcode.jabs_op": ["append", "opcode.def_op"], "dis.Bytecode": ["<builtin>.classmethod"], "importlib.machinery": [], "inspect._ParameterKind": ["<builtin>.property"], "inspect.Parameter": ["<builtin>.property"], "inspect.BoundArguments": ["<builtin>.property"], "inspect.Signature": ["<builtin>.property", "<builtin>.classmethod"], "typing_extensions._LiteralForm.__init__": [], "typing_extensions._SpecialGenericAlias": ["typing._tp_cache"], "typing_extensions._SpecialGenericAlias.__init__": ["<builtin>.super"], "typing_extensions.SupportsInt": ["abc.abstractmethod"], "typing_extensions.SupportsFloat": ["abc.abstractmethod"], "typing_extensions.SupportsComplex": ["abc.abstractmethod"], "typing_extensions.SupportsBytes": ["abc.abstractmethod"], "typing_extensions.SupportsIndex": ["abc.abstractmethod"], "typing_extensions.SupportsAbs": ["abc.abstractmethod"], "typing_extensions.SupportsRound": ["abc.abstractmethod"], "inspect.signature": ["inspect.Signature.from_callable"], "inspect.Signature.from_callable": ["inspect._signature_from_callable"], "inspect._signature_from_callable": ["<builtin>.isinstance", "inspect.isfunction", "inspect._signature_get_user_defined_method", "inspect._signature_get_partial", "<builtin>.ValueError", "inspect.Signature.from_callable", "inspect._signature_is_builtin", "<builtin>.callable", "inspect._signature_bound_method", "<builtin>.TypeError", "inspect._signature_is_functionlike", "inspect._signature_from_builtin", "inspect._signature_from_function", "inspect.unwrap", "<builtin>.type"], "inspect._signature_bound_method": ["<builtin>.ValueError", "<builtin>.tuple"], "inspect.unwrap": ["inspect.unwrap._is_wrapper", "<builtin>.ValueError", "<builtin>.id", "<builtin>.len"], "<builtin>.id": [], "inspect.unwrap._is_wrapper": ["inspect._signature_from_callable.<lambda1>", "<builtin>.hasattr"], "inspect._signature_from_callable.<lambda1>": [], "inspect.isfunction": ["<builtin>.isinstance"], "inspect._signature_is_functionlike": ["<builtin>.callable", "inspect.isclass", "<builtin>.isinstance", "<builtin>.getattr"], "inspect.isclass": ["<builtin>.isinstance"], "inspect._signature_from_function": ["append", "inspect.Signature.__init__", "inspect.isfunction", "<builtin>.enumerate", "<builtin>.len", "inspect.get_annotations", "inspect._signature_fromstr", "<builtin>.TypeError", "inspect._signature_is_functionlike", "<builtin>.getattr"], "inspect._signature_fromstr": ["ast.parse", "inspect._signature_strip_non_python_syntax", "<builtin>.isinstance", "inspect.Signature.__init__", "<builtin>.enumerate", "<builtin>.ValueError", "inspect.ismodule", "pop", "<builtin>.reversed", "<builtin>.zip", "<builtin>.list", "inspect._signature_fromstr.p", "<builtin>.object", "<builtin>.getattr"], "inspect._signature_strip_non_python_syntax": ["<builtin>.next", "", "tokenize.tokenize", "<builtin>.iter"], "tokenize.tokenize": ["tokenize._tokenize", "tokenize.detect_encoding", "<builtin>.iter"], "tokenize._tokenize": ["append", "tokenize._compile", "<builtin>.len", "<builtin>.IndentationError", "<map>.get"], "<builtin>.IndentationError": [], "tokenize._compile": ["re.compile"], "ast.parse": ["<builtin>.isinstance", "<builtin>.compile"], "inspect._signature_fromstr.p": ["append", "ast.literal_eval", "inspect._signature_fromstr.parse_name", "ast.NodeVisitor.visit"], "inspect._signature_fromstr.parse_name": ["<builtin>.isinstance", "<builtin>.ValueError"], "ast.NodeVisitor.visit": ["<builtin>.getattr"], "ast.literal_eval": ["ast.parse", "<builtin>.isinstance", "ast.literal_eval._convert"], "ast.literal_eval._convert": ["<builtin>.dict", "ast.literal_eval._convert_signed_num", "<builtin>.isinstance", "<builtin>.len", "<builtin>.set", "ast.literal_eval._convert_num", "<builtin>.zip", "<builtin>.list", "<builtin>.map", "ast.literal_eval._raise_malformed_node", "<builtin>.tuple"], "ast.literal_eval._convert_signed_num": ["ast.literal_eval._convert_num", "<builtin>.isinstance"], "ast.literal_eval._convert_num": ["<builtin>.isinstance", "ast.literal_eval._raise_malformed_node", "<builtin>.type"], "ast.literal_eval._raise_malformed_node": ["<builtin>.ValueError", "<builtin>.getattr"], "inspect.ismodule": ["<builtin>.isinstance"], "inspect.Signature.__init__": ["<builtin>.ValueError", "collections.OrderedDict.__init__"], "collections.OrderedDict.__init__": [], "inspect.get_annotations": ["<builtin>.dict", "<builtin>.isinstance", "<builtin>.vars", "<builtin>.hasattr", "<builtin>.ValueError", "<builtin>.callable", "<builtin>.TypeError", "<builtin>.eval", "<builtin>.getattr"], "<builtin>.vars": [], "inspect._signature_is_builtin": ["inspect.isbuiltin", "inspect.ismethoddescriptor", "<builtin>.isinstance"], "inspect.isbuiltin": ["<builtin>.isinstance"], "inspect.ismethoddescriptor": ["inspect.isclass", "inspect.isfunction", "<builtin>.hasattr", "inspect.ismethod", "<builtin>.type"], "inspect.ismethod": ["<builtin>.isinstance"], "inspect._signature_from_builtin": ["<builtin>.ValueError", "inspect._signature_is_builtin", "inspect._signature_fromstr", "<builtin>.TypeError", "<builtin>.getattr"], "inspect._signature_get_partial": ["collections.OrderedDict.move_to_end", "<builtin>.ValueError", "collections.OrderedDict.__init__", "collections.OrderedDict.pop", "collections.OrderedDict.values"], "collections.OrderedDict.pop": ["<builtin>.KeyError"], "collections.OrderedDict.move_to_end": [], "collections.OrderedDict.values": [], "inspect._signature_get_user_defined_method": ["<builtin>.getattr"], "typing_extensions._ensure_subclassable": [], "typing_extensions._ensure_subclassable.inner": ["functools.update_wrapper", "<builtin>.staticmethod", "<builtin>.type"], "typing_extensions.Annotated": ["typing._tp_cache"], "typing_extensions.ParamSpec": ["<builtin>.property"], "typing_extensions._ConcatenateGenericAlias": ["<builtin>.property"], "typing_extensions._SpecialForm": ["typing._tp_cache"], "typing_extensions._SpecialForm.__init__": [], "typing_extensions._UnpackSpecialForm.__init__": ["<builtin>.super"], "PIL._util.DeferredError": ["<builtin>.staticmethod"], "logging.getLogger": ["<builtin>.isinstance"], "PIL._util.DeferredError.new": ["PIL._util.DeferredError.__init__"], "PIL._util.DeferredError.__init__": [], "<builtin>.setattr": [], "xml.etree.ElementTree": ["re.compile", "<builtin>.set", "contextlib.contextmanager"], "xml.etree.ElementPath": ["re.compile"], "PIL.ImageFile": [], "PIL.ImageFile.StubHandler": ["abc.abstractmethod"], "PIL.ImageFile.PyDecoder": ["<builtin>.property"], "PIL.ImageFile.PyEncoder": ["<builtin>.property"], "PIL.ImageFilter": [], "PIL.ImageFilter.Filter": ["abc.abstractmethod"], "PIL.ImageFilter.Color3DLUT": ["<builtin>.classmethod", "<builtin>.staticmethod"], "PIL.ImagePalette": [], "PIL.GimpGradientFile": [], "PIL.GimpPaletteFile": [], "PIL.ImageColor": ["functools.lru_cache"], "PIL.PaletteFile": [], "PIL.ImagePalette.ImagePalette": ["<builtin>.property"], "PIL.ImageQt": ["sort"], "sort": [], "PIL.TiffImagePlugin": ["<builtin>.len", "PIL._deprecate.deprecate", "<map>.items", "<builtin>.max", "<builtin>.setattr", "logging.getLogger", "<builtin>.getattr"], "fractions": ["re.compile"], "decimal": [], "_pydecimal": ["_pydecimal._Log10Memoize.__init__", "_pydecimal.Context.__init__", "re.compile", "collections.namedtuple", "<builtin>.pow"], "_pydecimal.Decimal": ["<builtin>.dict", "<builtin>.property", "<builtin>.classmethod"], "_pydecimal._Log10Memoize.__init__": [], "_pydecimal.Context.__init__": ["<builtin>.dict", "copy", "<builtin>.isinstance", "<builtin>.int"], "locale": ["<map>.setdefault", "<builtin>.sorted", "<builtin>.globals", "functools.wraps", "re.compile", "<map>.items"], "encodings.aliases": [], "<map>.setdefault": [], "<builtin>.pow": [], "fractions.Fraction": ["<builtin>.property", "fractions.Fraction._operator_fallbacks", "<builtin>.classmethod"], "fractions.Fraction._operator_fallbacks": [], "PIL.ImageOps": [], "PIL._deprecate.deprecate": ["<builtin>.RuntimeError", "warnings.warn", "<builtin>.int", "<builtin>.ValueError"], "PIL.TiffImagePlugin.IFDRational": ["<builtin>.property", "PIL.TiffImagePlugin._delegate", "<builtin>.hasattr"], "PIL.TiffImagePlugin._delegate": [], "PIL.TiffImagePlugin.ImageFileDirectory_v2": ["PIL.TiffImagePlugin._register_loader.decorator", "<builtin>.property", "<builtin>.list", "PIL.TiffImagePlugin._register_writer.decorator", "PIL.TiffImagePlugin._register_loader", "<builtin>.map", "PIL.TiffImagePlugin._register_writer"], "PIL.TiffImagePlugin._register_loader": [], "PIL.TiffImagePlugin._register_loader.decorator": [], "PIL.TiffImagePlugin._register_writer": [], "PIL.TiffImagePlugin._register_writer.decorator": [], "PIL.TiffImagePlugin.ImageFileDirectory_v1": ["<builtin>.property", "<builtin>.classmethod"], "PIL.TiffImagePlugin.TiffImageFile": ["<builtin>.property"], "PIL.TiffImagePlugin.AppendingTiffWriter": ["<builtin>.staticmethod"], "PIL.Image.Image": ["<builtin>.property"], "PIL.Image.ImagePointHandler": ["abc.abstractmethod"], "PIL.Image.ImageTransformHandler": ["abc.abstractmethod"], "PIL.Image.SupportsArrayInterface": ["<builtin>.property"], "PIL.Image._apply_env_variables": ["warnings.warn", "<builtin>.int", "<builtin>.len"], "torch": ["append", "typing.overload", "torch._running_with_deploy", "torch._load_global_deps", "torch._logging._internal._init_logs", "platform.system", "<builtin>.callable", "<str>.startswith", "textwrap.dedent", "extend", "<builtin>.getattr", "torch.cuda._sanitizer.enable_cuda_sanitizer", "torch.backends.mps._init", "<builtin>.sorted", "typing_extensions.ParamSpec.__init__", "<builtin>.ImportError", "inspect.isclass", "<builtin>.globals", "torch._get_sym_math_fn", "torch._load_dll_libraries", "torch._import_device_backends", "<builtin>.delattr", "torch._import_extension_to_sys_modules", "os.getenv", "<builtin>.dir", "<builtin>.set", "typing.TypeVar.__init__", "torch._is_device_backend_autoload_enabled", "torch._manager_path", "<builtin>.list", "torch.multiprocessing._atfork.register_after_fork"], "glob": ["re.compile", "<builtin>.getattr"], "importlib": [], "torch.types": [], "torch.autograd.graph": ["contextlib.contextmanager", "logging.getLogger"], "torch.autograd.variable": [], "torch.utils._python_dispatch": ["contextlib.contextmanager"], "dataclasses": ["re.compile", "dataclasses._FIELD_BASE.__init__"], "dataclasses._FIELD_BASE.__init__": [], "dataclasses.Field": ["<builtin>.classmethod"], "torchgen": [], "torchgen.model": ["<builtin>.RuntimeError", "<builtin>.print", "<builtin>.hasattr", "torchgen.model.codegen_per_backend_entries", "<str>.split", "torchgen.utils.OrderedSet.__init__"], "torchgen.utils": ["functools.lru_cache", "typing.TypeVar.__init__", "functools.lru_cache.decorating_function", "contextlib.contextmanager", "pathlib.Path.absolute"], "pathlib": ["functools.lru_cache.decorating_function", "functools.lru_cache", "<builtin>.hasattr"], "urllib.parse": ["urllib.parse._fix_result_transcoding", "<builtin>.frozenset", "re.compile", "<builtin>.bytes", "collections.namedtuple"], "urllib.parse._NetlocResultMixinBase": ["<builtin>.property", "<builtin>.classmethod"], "urllib.parse._NetlocResultMixinStr": ["<builtin>.property"], "urllib.parse._NetlocResultMixinBytes": ["<builtin>.property"], "urllib.parse._fix_result_transcoding": [], "pathlib._WindowsFlavour": ["<builtin>.set"], "pathlib._NormalAccessor": ["<builtin>.staticmethod", "<builtin>.hasattr"], "pathlib.PurePath": ["<builtin>.property", "operator.attrgetter.__init__", "<builtin>.classmethod"], "operator.attrgetter.__init__": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.map", "<str>.split", "<builtin>.tuple"], "pathlib.Path": ["<builtin>.classmethod"], "torchgen.code_template": [], "torchgen.code_template.CodeTemplate": ["re.compile", "<builtin>.staticmethod"], "argparse": [], "gettext": ["ntpath.join", "posixpath.join", "re.compile", "<builtin>.enumerate"], "pathlib.Path.absolute": ["pathlib.PurePath.is_absolute", "pathlib.PurePath._from_parts"], "pathlib.PurePath.is_absolute": ["<builtin>.bool"], "pathlib.PurePath._from_parts": [], "torchgen.utils.NamespaceHelper": ["<builtin>.property", "<builtin>.staticmethod"], "torchgen.utils.OrderedSet": ["<builtin>.staticmethod"], "torchgen.model.DispatchKey": ["<builtin>.staticmethod"], "torchgen.model.codegen_per_backend_entries": ["append"], "torchgen.model.ScalarType": ["<builtin>.staticmethod"], "torchgen.utils.OrderedSet.__init__": [], "torchgen.model.UfuncKey": ["<builtin>.staticmethod"], "torchgen.model.NativeFunction": ["<builtin>.property", "<builtin>.staticmethod"], "torchgen.model.NativeFunctionsGroup": ["<builtin>.property", "<builtin>.staticmethod"], "torchgen.model.UfuncInnerLoop": ["<builtin>.staticmethod"], "torchgen.model.BackendIndex": ["<builtin>.staticmethod"], "torchgen.model.FunctionSchema": ["re.compile", "<builtin>.property", "<builtin>.staticmethod"], "torchgen.model.Annotation": ["<builtin>.staticmethod"], "torchgen.model.Type": ["<builtin>.staticmethod"], "torchgen.model.Argument": ["<builtin>.property", "<builtin>.staticmethod"], "torchgen.model.Return": ["<builtin>.property", "<builtin>.staticmethod"], "torchgen.model.Arguments": ["<builtin>.property", "<builtin>.staticmethod"], "torchgen.model.BaseOperatorName": ["<builtin>.staticmethod"], "torchgen.model.OperatorName": ["<builtin>.staticmethod"], "torchgen.model.NativeFunctionsViewGroup": ["<builtin>.property"], "torchgen.model.Precompute": ["<builtin>.staticmethod"], "torch.utils._python_dispatch.TorchDispatchMode": ["<builtin>.classmethod"], "torch.utils._python_dispatch.TensorWithFlatten": ["typing.overload", "<builtin>.staticmethod"], "typing.overload": [], "torch.utils.hooks": [], "torch._ops": ["<builtin>.hasattr", "<builtin>.set", "contextlib.contextmanager", "torch._ops._Ops.__init__", "torch._ops._ModeStackStateForPreDispatch.__init__"], "torch.utils._pytree": ["typing.overload", "torch.utils._pytree._private_register_pytree_node", "typing_extensions.deprecated.__init__", "typing.TypeVar.__init__", "<builtin>.frozenset", "torch.utils._pytree.LeafSpec.__init__"], "json": [], "typing_extensions.deprecated.__init__": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.type"], "torch.utils._pytree._private_register_pytree_node": [], "torch.utils._pytree.TreeSpec": ["dataclasses.field"], "dataclasses.field": ["<builtin>.ValueError", "dataclasses.Field.__init__"], "dataclasses.Field.__init__": [], "torch.utils._pytree.LeafSpec.__init__": ["<builtin>.super"], "torch._utils_internal": ["shutil.which", "ntpath.dirname", "torch._running_with_deploy", "functools.lru_cache", "torch._strobelight.compile_time_profiler.StrobelightCompileTimeProfiler.enable", "functools.lru_cache.decorating_function", "posixpath.basename", "ntpath.basename", "posixpath.dirname", "logging.getLogger"], "torch._strobelight.compile_time_profiler": ["logging.StreamHandler.__init__", "logging.Formatter.__init__", "logging.Handler.setFormatter", "logging.getLogger"], "datetime": ["append", "datetime._days_before_year", "datetime.timezone._create"], "datetime._days_before_year": [], "datetime.timedelta": ["<builtin>.property"], "datetime.date": ["<builtin>.property", "<builtin>.classmethod"], "datetime.IsoCalendarDate": ["<builtin>.property"], "datetime.time": ["<builtin>.property", "<builtin>.classmethod"], "datetime.datetime": ["<builtin>.property", "<builtin>.classmethod"], "datetime.timezone": ["<builtin>.classmethod", "<builtin>.staticmethod", "<builtin>.object"], "datetime.timezone._create": [], "socket": ["append", "extend", "<builtin>.hasattr", "<builtin>.object", "<builtin>.getattr"], "socket.socket": ["<builtin>.property", "<builtin>.hasattr"], "socket.SocketIO": ["<builtin>.property"], "torch._strobelight.cli_function_profiler": ["logging.StreamHandler.__init__", "logging.Formatter.__init__", "logging.Handler.setFormatter", "logging.getLogger"], "timeit": [], "logging.Handler.setFormatter": [], "torch._strobelight.compile_time_profiler.StrobelightCompileTimeProfiler": ["<builtin>.float", "<builtin>.int", "<builtin>.classmethod"], "<builtin>.float": [], "shutil.which": ["os.getenv", "ntpath.dirname", "<builtin>.isinstance", "ntpath.normcase", "<builtin>.any", "ntpath.join", "<builtin>.set", "posixpath.join", "<str>.endswith", "posixpath.normcase", "shutil._access_check", "posixpath.dirname"], "ntpath.dirname": ["ntpath.split"], "posixpath.dirname": ["posixpath._get_sep", "os._fspath", "<builtin>.len"], "shutil._access_check": ["genericpath.exists", "genericpath.isdir"], "genericpath.exists": [], "genericpath.isdir": ["stat.S_ISDIR"], "stat.S_ISDIR": ["stat.S_IFMT"], "stat.S_IFMT": [], "os.getenv": [], "torch._strobelight.compile_time_profiler.StrobelightCompileTimeProfiler.enable": ["torch._strobelight.compile_time_profiler.StrobelightCompileTimeProfiler._cls_init", "shutil.which", "torch._strobelight.cli_function_profiler.StrobelightCLIFunctionProfiler.__init__"], "torch._strobelight.compile_time_profiler.StrobelightCompileTimeProfiler._cls_init": [], "torch._strobelight.cli_function_profiler.StrobelightCLIFunctionProfiler.__init__": [], "torch._running_with_deploy": [], "torch._functorch.pyfunctorch": ["contextlib.contextmanager"], "torch.autograd.forward_ad": ["collections.namedtuple"], "torch.autograd.grad_mode": [], "torch.utils._contextlib": ["typing.TypeVar.__init__"], "torch._functorch.pyfunctorch.FuncTorchInterpreter": ["abc.abstractmethod"], "torch._ops.HigherOrderOperator": ["<builtin>.property", "abc.abstractmethod"], "torch._ops._ModeStackStateForPreDispatch.__init__": [], "torch._ops.OpOverload": ["<builtin>.property"], "torch._ops.TorchBindOpOverload": ["contextlib.contextmanager"], "torch._ops.OpOverloadPacket": ["<builtin>.property"], "torch._ops._Ops.__init__": ["<builtin>.set", "<builtin>.super", "torch._ops._PyOpNamespace.__init__"], "torch._ops._PyOpNamespace.__init__": ["<builtin>.super"], "torch.autograd.graph.Node": ["abc.abstractmethod", "<builtin>.property", "<builtin>.classmethod"], "torch._utils": ["logging.getLogger", "functools.lru_cache.decorating_function", "functools.lru_cache", "typing_extensions.ParamSpec.__init__"], "typing_extensions.ParamSpec.__init__": ["<builtin>.bool", "typing_extensions._set_default", "typing._type_check", "typing_extensions._caller"], "typing_extensions._set_default": [], "typing_extensions._caller": [], "torch.torch_version": ["<builtin>.setattr"], "torch._vendor.packaging.version": ["re.compile"], "torch._vendor.packaging._structures": [], "torch._vendor.packaging.version.Version": ["re.compile", "<builtin>.property"], "torch.version": [], "torch._load_dll_libraries": ["os.getenv", "ntpath.dirname", "os.add_dll_directory", "<builtin>.print", "<builtin>.hasattr", "ntpath.join", "posixpath.join", "ctypes.CDLL.__init__", "ctypes.WinError", "genericpath.exists", "posixpath.dirname", "sysconfig.get_config_var", "textwrap.dedent", "glob.glob"], "sysconfig": ["ntpath.dirname", "posixpath.normpath", "sysconfig._safe_realpath", "ntpath.join", "posixpath.join", "sysconfig.get_default_scheme", "ntpath.normpath", "sysconfig.is_python_build", "sysconfig._getuserbase", "sysconfig._fix_pcbuild", "posixpath.dirname", "<builtin>.getattr"], "sysconfig._getuserbase": ["sysconfig._getuserbase.joinuser"], "sysconfig._getuserbase.joinuser": ["ntpath.join", "posixpath.join", "ntpath.expanduser", "posixpath.expanduser"], "ntpath.expanduser": ["ntpath.dirname", "<builtin>.isinstance", "<builtin>.len", "ntpath.join", "ntpath._get_bothseps", "os._fspath", "ntpath.basename"], "posixpath.expanduser": ["<builtin>.isinstance", "<builtin>.len", "posixpath._get_sep", "os._fspath", "<builtin>.str"], "ntpath.normpath": ["ntpath.splitdrive", "os._fspath", "<builtin>.isinstance", "<builtin>.len"], "sysconfig._safe_realpath": ["posixpath.realpath"], "posixpath.realpath": ["os._fspath", "posixpath._joinrealpath", "posixpath.abspath"], "posixpath._joinrealpath": ["<builtin>.isinstance", "posixpath.join", "posixpath.isabs", "posixpath.split", "posixpath._joinrealpath"], "posixpath.split": ["posixpath._get_sep", "os._fspath", "<builtin>.len"], "sysconfig._fix_pcbuild": ["ntpath.join", "ntpath.normcase", "posixpath.normcase", "posixpath.join"], "sysconfig.is_python_build": ["sysconfig._is_python_source_dir"], "sysconfig._is_python_source_dir": ["ntpath.join", "posixpath.join", "genericpath.isfile"], "genericpath.isfile": ["stat.S_ISREG"], "stat.S_ISREG": ["stat.S_IFMT"], "sysconfig.get_default_scheme": ["sysconfig.get_preferred_scheme"], "sysconfig.get_preferred_scheme": ["sysconfig._get_preferred_schemes", "<builtin>.ValueError"], "sysconfig._get_preferred_schemes": [], "sysconfig.get_config_var": ["<map>.get", "warnings.warn", "sysconfig.get_config_vars"], "sysconfig.get_config_vars": ["append", "ntpath.dirname", "sysconfig._safe_realpath", "ntpath.join", "posixpath.join", "sysconfig._init_non_posix", "_osx_support.customize_config_vars", "sysconfig.get_makefile_filename", "<map>.get", "sysconfig._getuserbase", "posixpath.dirname", "sysconfig._init_posix"], "sysconfig._init_non_posix": ["ntpath.dirname", "sysconfig.get_path", "posixpath.dirname", "sysconfig._safe_realpath"], "sysconfig.get_path": ["sysconfig.get_paths"], "sysconfig.get_paths": ["sysconfig._expand_vars"], "sysconfig._expand_vars": ["posixpath.expanduser", "sysconfig._subst_vars", "ntpath.expanduser", "posixpath.normpath", "sysconfig._extend_dict", "ntpath.normpath", "sysconfig.get_config_vars"], "sysconfig._extend_dict": ["<map>.keys"], "sysconfig._subst_vars": ["<builtin>.AttributeError"], "<builtin>.AttributeError": [], "sysconfig._init_posix": ["<builtin>.globals", "<builtin>.locals", "sysconfig._get_sysconfigdata_name", "<builtin>.__import__"], "sysconfig._get_sysconfigdata_name": ["<builtin>.getattr"], "<builtin>.locals": [], "sysconfig.get_makefile_filename": ["ntpath.join", "posixpath.join", "sysconfig.get_path", "<builtin>.hasattr"], "_osx_support": [], "_osx_support.customize_config_vars": ["_osx_support._override_all_archs", "_osx_support._check_for_unavailable_sdk", "_osx_support._remove_universal_flags", "_osx_support._supports_universal_builds"], "_osx_support._supports_universal_builds": ["<builtin>.bool", "_osx_support._get_system_version_tuple"], "_osx_support._get_system_version_tuple": ["_osx_support._get_system_version", "<builtin>.int", "<builtin>.tuple"], "_osx_support._get_system_version": ["<builtin>.open"], "<builtin>.open": [], "_osx_support._remove_universal_flags": ["_osx_support._save_modified_value", "re.sub"], "_osx_support._save_modified_value": [], "_osx_support._override_all_archs": ["_osx_support._save_modified_value", "re.sub"], "_osx_support._check_for_unavailable_sdk": ["_osx_support._save_modified_value", "genericpath.exists", "re.sub", "re.search"], "re.search": ["re._compile"], "glob.glob": ["glob.iglob", "<builtin>.list"], "glob.iglob": ["glob._isrecursive", "os._fspath", "glob._iglob", "<builtin>.next"], "glob._iglob": ["glob._lexists", "glob.has_magic", "glob._join", "glob._isdir", "glob._iglob", "ntpath.split", "ntpath.join", "posixpath.join", "glob._isrecursive", "posixpath.split", "glob._glob2", "glob._glob0", "glob._glob1"], "glob.has_magic": ["<builtin>.isinstance"], "glob._join": ["ntpath.join", "posixpath.join"], "glob._isdir": ["genericpath.isdir"], "glob._lexists": ["posixpath.lexists", "ntpath.lexists"], "ntpath.lexists": [], "posixpath.lexists": [], "glob._isrecursive": ["<builtin>.isinstance"], "glob._glob1": ["glob._ishidden", "glob._listdir", "fnmatch.filter"], "glob._listdir": ["<builtin>.list", "glob._iterdir", "contextlib.closing.__init__"], "glob._iterdir": ["<builtin>.bytes", "<builtin>.isinstance"], "contextlib.closing.__init__": [], "glob._ishidden": [], "fnmatch.filter": ["ntpath.normcase", "posixpath.normcase", "fnmatch._compile_pattern", "append"], "fnmatch._compile_pattern": ["<builtin>.isinstance", "fnmatch.translate", "<builtin>.bytes", "<builtin>.str", "re.compile"], "fnmatch.translate": ["", "append", "<builtin>.range", "re.sub", "<builtin>.len", "<builtin>.object"], "glob._glob2": ["glob._rlistdir", "glob._isrecursive"], "glob._rlistdir": ["glob._rlistdir", "glob._join", "glob._ishidden", "glob._listdir"], "glob._glob0": ["glob._lexists", "glob._join", "glob._isdir"], "os.add_dll_directory": ["os._AddedDllDirectory.__init__"], "os._AddedDllDirectory.__init__": [], "ctypes.CDLL.__init__": ["<str>.endswith"], "ctypes.WinError": ["<builtin>.OSError"], "<builtin>.OSError": [], "platform.system": ["platform.uname"], "platform.uname": ["<builtin>.any", "platform.win32_ver", "platform._syscmd_ver", "platform._get_machine_win32", "platform._node", "<builtin>.map", "platform.java_ver"], "platform._node": [], "platform.win32_ver": ["platform._syscmd_ver", "<builtin>.getattr", "<builtin>.map", "<map>.get"], "platform._syscmd_ver": ["subprocess.check_output", "platform._norm_version"], "subprocess.check_output": ["<builtin>.ValueError", "subprocess.run"], "subprocess.run": ["subprocess.Popen.__enter__", "subprocess.Popen.poll", "subprocess.Popen.communicate", "<builtin>.ValueError", "subprocess.Popen.wait", "subprocess.Popen.kill", "subprocess.Popen.__exit__", "subprocess.Popen.__init__", "subprocess.CompletedProcess.__init__", "subprocess.CalledProcessError.__init__"], "subprocess.Popen.__init__": ["append", "<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.hasattr", "subprocess.Popen._execute_child", "<builtin>.bool", "subprocess.Popen._get_handles", "<builtin>.filter", "warnings.warn", "subprocess._cleanup", "<builtin>.TypeError", "<builtin>.type"], "subprocess._cleanup": ["remove"], "subprocess.Popen._get_handles": ["subprocess.Popen._get_devnull", "<builtin>.isinstance", "<builtin>.hasattr"], "subprocess.Popen._get_devnull": ["<builtin>.hasattr"], "subprocess.Popen._execute_child": ["append", "ntpath.dirname", "posixpath.join", "<builtin>.bytes", "<builtin>.TypeError", "<builtin>.bytearray", "<builtin>.getattr", "<builtin>.isinstance", "<builtin>.sorted", "<builtin>.ValueError", "<builtin>.len", "subprocess.Popen._handle_exitstatus", "<builtin>.tuple", "os.get_exec_path", "ntpath.join", "<builtin>.issubclass", "<builtin>.int", "<builtin>.hasattr", "<builtin>.set", "subprocess.Popen._posix_spawn", "<builtin>.list", "<builtin>.map", "posixpath.dirname", "subprocess.Popen._close_pipe_fds"], "subprocess.Popen._posix_spawn": ["append", "subprocess.Popen._close_pipe_fds", "<builtin>.getattr"], "subprocess.Popen._close_pipe_fds": ["<builtin>.getattr"], "os.get_exec_path": ["warnings.catch_warnings.__init__"], "subprocess.Popen._handle_exitstatus": [], "<builtin>.filter": [], "subprocess.Popen.__enter__": [], "subprocess.Popen.__exit__": [], "subprocess.Popen.communicate": ["<builtin>.min", "subprocess.Popen._communicate", "<builtin>.ValueError", "subprocess.Popen.wait", "subprocess.Popen._stdin_write", "subprocess.Popen._remaining_time", "subprocess.Popen._wait"], "subprocess.Popen._communicate": ["subprocess.Popen._check_timeout", "<builtin>.RuntimeError", "subprocess.Popen._save_input", "subprocess.Popen.wait", "subprocess.Popen._translate_newlines", "subprocess.Popen._remaining_time", "selectors.SelectSelector.__init__", "<builtin>.memoryview"], "subprocess.Popen._save_input": [], "selectors.SelectSelector.__init__": ["<builtin>.set", "<builtin>.super"], "subprocess.Popen._remaining_time": [], "subprocess.Popen._check_timeout": ["subprocess.TimeoutExpired.__init__"], "subprocess.TimeoutExpired.__init__": [], "subprocess.Popen.wait": ["subprocess.Popen._wait", "<builtin>.min", "subprocess.Popen._remaining_time"], "subprocess.Popen._wait": ["<builtin>.min", "subprocess.Popen._handle_exitstatus", "subprocess.TimeoutExpired.__init__", "subprocess.Popen._try_wait", "subprocess.Popen._remaining_time"], "subprocess.Popen._try_wait": [], "subprocess.Popen._translate_newlines": [], "subprocess.Popen._stdin_write": [], "subprocess.Popen.kill": ["subprocess.Popen.send_signal"], "subprocess.Popen.send_signal": ["subprocess.Popen.poll"], "subprocess.Popen.poll": ["subprocess.Popen._internal_poll"], "subprocess.Popen._internal_poll": ["subprocess.Popen._handle_exitstatus"], "subprocess.CalledProcessError.__init__": [], "subprocess.CompletedProcess.__init__": [], "platform._norm_version": ["<builtin>.map", "<builtin>.list"], "platform._get_machine_win32": [], "platform.java_ver": ["platform._java_getprop"], "platform._java_getprop": [], "torch._load_global_deps": ["ntpath.dirname", "torch._running_with_deploy", "ntpath.join", "posixpath.join", "platform.system", "posixpath.abspath", "torch._preload_cuda_deps", "posixpath.dirname", "ctypes.CDLL.__init__", "ntpath.abspath"], "torch._preload_cuda_deps": ["<builtin>.ValueError", "ntpath.join", "posixpath.join", "platform.system", "genericpath.exists", "ctypes.CDLL.__init__", "glob.glob"], "torch._get_sym_math_fn": [], "<builtin>.dir": [], "<builtin>.delattr": [], "torch._import_extension_to_sys_modules": ["torch._import_extension_to_sys_modules", "inspect.ismodule", "<builtin>.set", "<builtin>.dir", "<builtin>.getattr"], "torch._tensor": [], "torch._namedtensor_internals": [], "torch.overrides": ["contextlib.contextmanager", "torch.overrides._disable_user_warnings", "functools.lru_cache", "functools.lru_cache.decorating_function"], "torch.overrides._disable_user_warnings": ["functools.wraps"], "torch.overrides.TorchFunctionMode": ["<builtin>.classmethod"], "torch._tensor.Tensor": ["<builtin>.property", "torch._tensor._handle_torch_function_and_wrap_type_error_to_not_implemented", "<builtin>.classmethod"], "torch._tensor._handle_torch_function_and_wrap_type_error_to_not_implemented": ["functools.wraps"], "torch.storage": ["typing.TypeVar.__init__", "functools.lru_cache.decorating_function", "functools.lru_cache"], "torch.storage._StorageBase": ["<builtin>.property", "<builtin>.classmethod"], "torch.storage.UntypedStorage": ["<builtin>.property", "torch.storage._share_memory_lock_protected"], "torch.storage._share_memory_lock_protected": ["functools.wraps"], "torch.storage.TypedStorage": ["<builtin>.property", "<builtin>.classmethod"], "torch.storage._LegacyStorage": ["<builtin>.classmethod"], "torch.ByteStorage": ["torch._utils.classproperty"], "torch._utils.classproperty": ["torch._utils._ClassPropertyDescriptor.__init__", "<builtin>.isinstance", "<builtin>.classmethod"], "torch._utils._ClassPropertyDescriptor.__init__": [], "torch.DoubleStorage": ["torch._utils.classproperty"], "torch.FloatStorage": ["torch._utils.classproperty"], "torch.HalfStorage": ["torch._utils.classproperty"], "torch.LongStorage": ["torch._utils.classproperty"], "torch.IntStorage": ["torch._utils.classproperty"], "torch.ShortStorage": ["torch._utils.classproperty"], "torch.CharStorage": ["torch._utils.classproperty"], "torch.BoolStorage": ["torch._utils.classproperty"], "torch.BFloat16Storage": ["torch._utils.classproperty"], "torch.ComplexDoubleStorage": ["torch._utils.classproperty"], "torch.ComplexFloatStorage": ["torch._utils.classproperty"], "torch.QUInt8Storage": ["torch._utils.classproperty"], "torch.QInt8Storage": ["torch._utils.classproperty"], "torch.QInt32Storage": ["torch._utils.classproperty"], "torch.QUInt4x2Storage": ["torch._utils.classproperty"], "torch.QUInt2x4Storage": ["torch._utils.classproperty"], "torch.amp": [], "torch.amp.autocast_mode": [], "torch.amp.grad_scaler": [], "torch.amp.grad_scaler.GradScaler": ["typing.overload"], "torch.random": ["contextlib.contextmanager"], "torch.serialization": ["torch.serialization.register_package", "copyreg.pickle", "contextlib.contextmanager", "torch.serialization._SerializationLocal.__init__"], "difflib": ["collections.namedtuple", "re.compile"], "heapq": [], "difflib.SequenceMatcher": ["<builtin>.classmethod"], "tarfile": [], "tarfile.TarInfo": ["<builtin>.dict", "<builtin>.property", "<builtin>.staticmethod", "<builtin>.classmethod"], "tarfile.TarFile": ["<builtin>.classmethod"], "torch._weights_only_unpickler": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "torch._sources": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "torch.serialization._SerializationLocal.__init__": ["<builtin>.super"], "torch.serialization.register_package": [], "torch.serialization.StorageType": ["<builtin>.property"], "torch._tensor_str": ["contextlib.contextmanager"], "torch._manager_path": ["<builtin>.RuntimeError", "torch._running_with_deploy", "platform.system", "torch._utils_internal.prepare_multiprocessing_environment", "torch._utils_internal.get_file_path", "genericpath.exists"], "torch._utils_internal.get_file_path": ["ntpath.join", "posixpath.join"], "torch._utils_internal.prepare_multiprocessing_environment": [], "torch._compile": [], "torch._VF": ["torch._VF.VFModule.__init__"], "torch._VF.VFModule.__init__": ["<builtin>.super"], "torch.functional": ["torch._jit_internal.boolean_dispatch", "torch._jit_internal._overload"], "torch.nn.functional": ["torch._jit_internal.boolean_dispatch", "torch._jit_internal._overload"], "torch._jit_internal": ["torch.distributed.rpc.is_available", "<builtin>.range", "torch._jit_internal._drop", "<builtin>.globals", "contextlib.contextmanager", "weakref.WeakKeyDictionary.__init__", "torch._jit_internal.SourceLoader.__init__"], "torch.distributed.rpc": ["torch.distributed.rpc.is_available", "<builtin>.RuntimeError", "torch.distributed.rpc.api._require_initialized", "logging.getLogger"], "torch.distributed": ["torch.distributed.is_available", "<builtin>.RuntimeError", "logging.getLogger"], "torch.distributed.is_available": ["<builtin>.hasattr"], "torch.distributed.device_mesh": ["torch.distributed.is_available", "torch.distributed.device_mesh._MeshEnv.__init__", "logging.getLogger"], "torch.utils._typing_utils": ["typing.TypeVar.__init__"], "torch.distributed.distributed_c10d": ["typing_extensions.deprecated.__init__", "torch.distributed.c10d_logger._time_logger", "torch.distributed.distributed_c10d._reduce_op.__init__", "contextlib.contextmanager", "torch.distributed.distributed_c10d._export_c_types", "torch.distributed.c10d_logger._exception_logger", "torch.distributed.distributed_c10d._World.__init__", "logging.getLogger"], "torch.distributed.c10d_logger": ["torch.distributed.c10d_logger._get_or_create_logger", "typing.TypeVar.__init__", "typing_extensions.ParamSpec.__init__"], "torch.distributed.logging_handlers": [], "torch.distributed.c10d_logger._get_or_create_logger": ["logging.Formatter.__init__", "logging.getLogger", "torch.distributed.c10d_logger._get_logging_handler"], "torch.distributed.c10d_logger._get_logging_handler": ["<builtin>.type"], "torch.distributed.constants": [], "torch.distributed.rendezvous": ["<builtin>.ImportError", "torch.distributed.rendezvous.register_rendezvous_handler"], "torch.distributed.rendezvous.register_rendezvous_handler": ["<builtin>.RuntimeError"], "torch.distributed.distributed_c10d._export_c_types": [], "torch.distributed.distributed_c10d.Backend": ["collections.namedtuple", "<builtin>.classmethod"], "torch.distributed.distributed_c10d._reduce_op": ["typing_extensions.deprecated.__init__"], "torch.distributed.distributed_c10d._reduce_op.__init__": ["<builtin>.setattr"], "torch.distributed.distributed_c10d._World": ["<builtin>.property"], "torch.distributed.distributed_c10d._World.__init__": [], "torch.distributed.distributed_c10d._WorldMeta": ["<builtin>.property"], "torch.distributed.c10d_logger._time_logger": ["functools.wraps"], "torch.distributed.c10d_logger._exception_logger": ["functools.wraps"], "torch.distributed.device_mesh._MeshEnv": ["<builtin>.staticmethod"], "torch.distributed.device_mesh._MeshEnv.__init__": [], "torch.distributed.device_mesh.DeviceMesh": ["<builtin>.property", "<builtin>.staticmethod"], "torch.distributed.remote_device": [], "torch.distributed.remote_device._remote_device": ["<builtin>.staticmethod"], "torch.distributed.rpc.is_available": ["<builtin>.hasattr"], "torch.distributed.autograd": ["<builtin>.RuntimeError", "torch.distributed.autograd.is_available"], "torch.distributed.autograd.is_available": ["<builtin>.hasattr"], "torch.distributed.rpc.api": ["<builtin>.set", "typing.TypeVar.__init__", "torch.distributed.rpc.api.method_factory", "torch.distributed.rpc.api._require_initialized", "contextlib.contextmanager", "threading.RLock", "<builtin>.setattr", "inspect.getmembers", "logging.getLogger", "<builtin>.getattr"], "torch.futures": ["typing.TypeVar.__init__", "<builtin>.type"], "torch.distributed.rpc._utils": ["contextlib.contextmanager", "logging.getLogger"], "torch.distributed.rpc.constants": [], "torch.distributed.rpc.internal": ["collections.namedtuple", "torch.distributed.rpc.internal._InternalRPCPickler.__init__"], "torch.distributed.rpc.internal._InternalRPCPickler": ["<builtin>.classmethod"], "torch.distributed.rpc.internal._InternalRPCPickler.__init__": ["<map>.copy"], "torch.distributed.rpc.api._require_initialized": ["functools.wraps"], "inspect.getmembers": ["inspect.getmro", "append", "inspect.isclass", "<builtin>.isinstance", "sort", "torch.jit._script._get_methods.<lambda1>", "<builtin>.set", "<builtin>.dir", "torch._numpy._funcs._public_functions.is_public_function", "<builtin>.getattr"], "inspect.getmro": [], "torch.distributed.rpc.api.method_factory": [], "torch.distributed.rpc.backend_registry": ["collections.namedtuple", "torch.distributed.rpc.backend_registry.register_backend"], "torch.distributed.rpc.backend_registry.register_backend": ["<builtin>.dict", "torch.distributed.rpc.backend_registry.backend_registered", "<builtin>.RuntimeError"], "torch.distributed.rpc.backend_registry.backend_registered": [], "torch.distributed.rpc.functions": [], "torch.distributed.rpc.options": [], "torch.distributed.rpc.server_process_global_profiler": [], "torch.autograd.profiler_legacy": [], "torch.cuda": ["functools.lru_cache", "<builtin>.hasattr", "torch._utils._LazySeedTracker.__init__", "torch._utils._dummy_type", "functools.lru_cache.decorating_function", "torch.cuda._lazy_call", "<builtin>.staticmethod", "<builtin>.getattr"], "torch.cuda.gds": ["torch.cuda.gds._dummy_fn", "<builtin>.hasattr"], "torch.cuda.gds._dummy_fn": [], "torch.cuda._utils": [], "torch.cuda.graphs": ["torch._utils._dummy_type", "<builtin>.hasattr"], "torch._utils._dummy_type": ["torch._utils._dummy_type.get_err_fn", "<builtin>.type"], "torch._utils._dummy_type.get_err_fn": [], "torch.cuda.streams": ["torch._utils._dummy_type", "<builtin>.hasattr"], "torch._streambase": [], "torch._streambase._StreamBase": ["abc.abstractmethod"], "torch._streambase._EventBase": ["abc.abstractmethod"], "torch.cuda.streams.Stream": ["<builtin>.property"], "torch.cuda.streams.Event": ["<builtin>.property", "<builtin>.classmethod"], "torch._utils._LazySeedTracker.__init__": [], "torch.cuda._lazy_call": ["traceback.format_stack", "<builtin>.callable", "torch._utils._LazySeedTracker.queue_seed_all", "torch._utils._LazySeedTracker.queue_seed", "torch.cuda.is_initialized"], "torch.cuda.is_initialized": [], "traceback.format_stack": ["traceback.format_list", "traceback.extract_stack"], "traceback.format_list": ["traceback.StackSummary.format", "traceback.StackSummary.from_list"], "torch._utils._LazySeedTracker.queue_seed": [], "torch._utils._LazySeedTracker.queue_seed_all": [], "torch.cuda.memory": ["<builtin>.hasattr", "typing_extensions.deprecated.__init__", "torch._utils._dummy_type", "contextlib.contextmanager", "inspect.signature"], "torch.cuda._memory_viz": ["functools.lru_cache.decorating_function", "functools.lru_cache", "torch.cuda._memory_viz.Bytes.__init__"], "base64": [], "torch.cuda._memory_viz.Bytes.__init__": [], "torch.cuda.memory.MemPool": ["<builtin>.property"], "torch.cuda.memory.MemPoolContext": ["<builtin>.staticmethod"], "torch.cuda.random": [], "torch.cuda._CudaLegacyStorage": ["<builtin>.classmethod"], "torch.cuda.ByteStorage": ["torch._utils.classproperty"], "torch.cuda.DoubleStorage": ["torch._utils.classproperty"], "torch.cuda.FloatStorage": ["torch._utils.classproperty"], "torch.cuda.HalfStorage": ["torch._utils.classproperty"], "torch.cuda.LongStorage": ["torch._utils.classproperty"], "torch.cuda.IntStorage": ["torch._utils.classproperty"], "torch.cuda.ShortStorage": ["torch._utils.classproperty"], "torch.cuda.CharStorage": ["torch._utils.classproperty"], "torch.cuda.BoolStorage": ["torch._utils.classproperty"], "torch.cuda.BFloat16Storage": ["torch._utils.classproperty"], "torch.cuda.ComplexDoubleStorage": ["torch._utils.classproperty"], "torch.cuda.ComplexFloatStorage": ["torch._utils.classproperty"], "torch.cuda.amp": [], "torch.cuda.amp.autocast_mode": ["typing_extensions.deprecated.__init__"], "torch.cuda.amp.autocast_mode.autocast": ["typing_extensions.deprecated.__init__"], "torch.cuda.amp.common": [], "importlib.util": ["contextlib.contextmanager"], "importlib.util.LazyLoader": ["<builtin>.classmethod", "<builtin>.staticmethod"], "torch.cuda.amp.grad_scaler": [], "torch.cuda.amp.grad_scaler.GradScaler": ["typing_extensions.deprecated.__init__"], "torch.cuda.jiterator": [], "torch.cuda.nvtx": ["contextlib.contextmanager"], "torch.cuda.nvtx._NVTXStub": ["<builtin>.staticmethod"], "torch.cuda.profiler": ["contextlib.contextmanager"], "torch.cuda.sparse": [], "torch.cuda.tunable": [], "torch.autograd": ["<builtin>.RuntimeError"], "torch._vmap_internals": ["typing_extensions.deprecated.__init__"], "torch.autograd.functional": [], "torch.autograd.anomaly_mode": [], "torch.autograd.function": ["torch.autograd.function._iter_filter", "torch.autograd.function._nested_map"], "torch._functorch": [], "torch._functorch.autograd_function": ["torch._functorch.autograd_function.AutogradFunctionApply.__init__", "torch._ops.HigherOrderOperator.py_impl", "torch._functorch.autograd_function.CustomFunctionHigherOrderOperator.__init__"], "torch._functorch.apis": ["torch.utils._exposed_in.exposed_in.wrapper", "torch.utils._exposed_in.exposed_in"], "torch._functorch.utils": ["contextlib.contextmanager"], "torch.utils._exposed_in": [], "torch._functorch.vmap": ["contextlib.contextmanager"], "torch.utils._exposed_in.exposed_in": [], "torch.utils._exposed_in.exposed_in.wrapper": [], "torch._functorch.autograd_function.CustomFunctionHigherOrderOperator.__init__": ["<builtin>.super"], "torch._ops.HigherOrderOperator.py_impl": ["<builtin>.isinstance", "<builtin>.super"], "torch._functorch.autograd_function.CtxWithSavedTensors": ["<builtin>.property"], "torch._functorch.autograd_function.AutogradFunctionApply.__init__": ["<builtin>.super"], "torch.autograd.function.FunctionCtx": ["typing_extensions.deprecated.__init__"], "torch.autograd.function._HookMixin": ["<builtin>.staticmethod"], "torch.autograd.function._SingleLevelFunction": ["<builtin>.staticmethod"], "torch.autograd.function.Function": ["<builtin>.classmethod", "<builtin>.staticmethod"], "torch.autograd.function._iter_filter": [], "torch.autograd.function._nested_map": [], "torch.autograd.function.NestedIOFunction": ["<builtin>.property"], "torch.autograd.gradcheck": ["<str>.strip", "typing_extensions.deprecated.__init__"], "torch.testing": [], "torch.testing._utils": ["contextlib.contextmanager"], "torch.testing._comparison": ["typing_extensions.deprecated.__init__", "<map>.update"], "torch.testing._comparison.Pair": ["abc.abstractmethod", "<builtin>.staticmethod"], "torch.testing._comparison.BooleanPair": ["<builtin>.property"], "torch.testing._comparison.NumberPair": ["<builtin>.property", "<map>.keys", "<builtin>.tuple"], "torch.testing._creation": [], "torch.autograd.profiler": [], "torch.autograd.profiler_util": ["collections.namedtuple"], "torch.autograd.profiler_util.EventList": ["<builtin>.property"], "torch.autograd.profiler_util.FormattedTimesMixin": ["<builtin>.property", "typing_extensions.deprecated.__init__", "torch.autograd.profiler_util._attr_formatter"], "torch.autograd.profiler_util._attr_formatter": ["<builtin>.property"], "torch.autograd.profiler_util.FunctionEvent": ["<builtin>.property", "typing_extensions.deprecated.__init__"], "torch.autograd.profiler.profile": ["<builtin>.property"], "torch.autograd.profiler.KinetoStepTracker": ["<builtin>.classmethod"], "torch.autograd.profiler_legacy.profile": ["<builtin>.property"], "torch.package._mangling": [], "torch._awaits": ["typing.TypeVar.__init__", "<builtin>.type"], "weakref.WeakKeyDictionary.__init__": ["weakref.WeakKeyDictionary.update", "<builtin>.set"], "weakref.WeakKeyDictionary.update": ["<builtin>.type", "<builtin>.len", "weakref.WeakKeyDictionary.update", "<builtin>.hasattr"], "torch._jit_internal.SourceLoader.__init__": [], "torch._jit_internal._drop": [], "torch._torch_docs": ["<builtin>.getattr", "torch._torch_docs.merge_dicts", "torch._torch_docs.parse_kwargs", "<builtin>.hasattr"], "torch._torch_docs.parse_kwargs": ["re.compile", "<builtin>.len"], "torch._torch_docs.merge_dicts": [], "torch.nn._reduction": [], "torch.nn.grad": [], "torch.nn.modules.utils": ["torch.nn.modules.utils._ntuple"], "torch.nn.modules.utils._ntuple": [], "torch._jit_internal.boolean_dispatch": ["<builtin>.RuntimeError"], "torch._jit_internal._overload": ["torch._jit_internal._qualified_name", "append", "torch._jit_internal._check_overload_body"], "torch._jit_internal._check_overload_body": ["<builtin>.RuntimeError", "torch._jit_internal._check_overload_body.is_ellipsis", "<builtin>.len", "torch._sources.parse_def", "warnings.warn", "torch._jit_internal._check_overload_body.is_pass"], "torch._sources.parse_def": ["ast.parse", "<builtin>.RuntimeError", "torch._sources.get_source_lines_and_file", "<builtin>.isinstance", "<builtin>.len", "torch._sources.normalize_source_lines", "torch._sources.make_source_context", "textwrap.dedent"], "torch._sources.get_source_lines_and_file": ["inspect.getsourcelines", "<builtin>.OSError", "inspect.getsourcefile"], "inspect.getsourcefile": ["<builtin>.any", "posixpath.splitext", "inspect.getfile", "inspect.getmodule", "ntpath.splitext", "genericpath.exists", "<builtin>.getattr"], "inspect.getfile": ["<builtin>.type", "inspect.isclass", "inspect.isfunction", "inspect.ismodule", "<builtin>.hasattr", "<builtin>.OSError", "inspect.istraceback", "inspect.ismethod", "inspect.isframe", "<builtin>.TypeError", "inspect.iscode", "<builtin>.getattr"], "inspect.istraceback": ["<builtin>.isinstance"], "inspect.isframe": ["<builtin>.isinstance"], "inspect.iscode": ["<builtin>.isinstance"], "inspect.getmodule": ["inspect.ismodule", "<builtin>.hasattr", "ntpath.realpath", "inspect.getabsfile", "<map>.get", "posixpath.realpath", "<builtin>.getattr"], "inspect.getabsfile": ["ntpath.normcase", "inspect.getsourcefile", "posixpath.abspath", "inspect.getfile", "posixpath.normcase", "ntpath.abspath"], "ntpath.realpath": [], "inspect.getsourcelines": ["inspect.getblock", "inspect.ismodule", "inspect.findsource", "inspect.istraceback", "inspect.isframe", "inspect.unwrap"], "inspect.findsource": ["ast.parse", "inspect.isclass", "inspect._ClassFinder.__init__", "inspect.ismodule", "linecache.checkcache", "inspect.getsourcefile", "ast.NodeVisitor.visit", "linecache.getlines", "inspect.isfunction", "<builtin>.hasattr", "<builtin>.OSError", "inspect.istraceback", "inspect.ismethod", "inspect.getfile", "inspect.isframe", "inspect.getmodule", "re.compile", "inspect.iscode"], "inspect._ClassFinder.__init__": [], "inspect.getblock": ["tokenize.generate_tokens", "inspect.BlockFinder.__init__", "inspect.BlockFinder.tokeneater", "<builtin>.iter"], "inspect.BlockFinder.__init__": [], "tokenize.generate_tokens": ["tokenize._tokenize"], "inspect.BlockFinder.tokeneater": [], "torch._sources.normalize_source_lines": ["torch._sources.normalize_source_lines.remove_prefix", "<builtin>.enumerate"], "torch._sources.normalize_source_lines.remove_prefix": ["<builtin>.len"], "torch._sources.make_source_context": ["torch._sources.SourceContext.__init__"], "torch._sources.SourceContext.__init__": ["<builtin>.super"], "torch._jit_internal._check_overload_body.is_pass": ["<builtin>.isinstance"], "torch._jit_internal._check_overload_body.is_ellipsis": ["<builtin>.isinstance"], "torch._jit_internal._qualified_name": ["<builtin>.RuntimeError", "<builtin>.isinstance", "<builtin>.hasattr", "torch.package._mangling.is_mangled", "<builtin>.getattr"], "torch.package._mangling.is_mangled": ["re.match", "<builtin>.bool"], "torch._lowrank": [], "torch._linalg_utils": [], "torch.__config__": [], "torch.__future__": [], "torch.backends": ["contextlib.contextmanager"], "torch.backends.cpu": [], "torch.backends.cuda": ["typing_extensions.deprecated.__init__", "torch.backends.cuda.cuFFTPlanCacheManager.__init__", "<map>.keys", "contextlib.contextmanager"], "torch.backends.cuda.cuFFTPlanCache": ["torch.backends.cuda.cuFFTPlanCacheAttrContextProp.__init__"], "torch.backends.cuda.cuFFTPlanCacheAttrContextProp.__init__": [], "torch.backends.cuda.cuFFTPlanCacheManager.__init__": [], "torch.backends.cudnn": ["torch.backends.cudnn.CudnnModule.__init__", "contextlib.contextmanager"], "torch.backends.cudnn.CudnnModule": ["torch.backends.cudnn.is_available", "torch.backends.ContextProp.__init__"], "torch.backends.ContextProp.__init__": [], "torch.backends.cudnn.is_available": [], "torch.backends.cudnn.CudnnModule.__init__": ["<builtin>.super"], "torch.backends.cusparselt": [], "torch.backends.mha": [], "torch.backends.mkl": [], "torch.backends.mkldnn": ["torch.backends.mkldnn.MkldnnModule.__init__", "contextlib.contextmanager"], "torch.backends.mkldnn.MkldnnModule": ["torch.backends.ContextProp.__init__"], "torch.backends.mkldnn.MkldnnModule.__init__": ["<builtin>.super"], "torch.backends.mps": ["functools.lru_cache"], "torch.library": ["<builtin>.set", "typing_extensions.deprecated.__init__", "contextlib.contextmanager", "functools.singledispatch", "re.compile"], "torch._library": [], "torch._library.autograd": [], "torch._library.utils": [], "torch._library.fake_impl": ["contextlib.contextmanager"], "torch._library.fake_impl.FakeImplCtx": ["typing_extensions.deprecated.__init__"], "torch._library.simple_registry": ["torch._library.simple_registry.SimpleLibraryRegistry.__init__"], "torch._library.simple_registry.SimpleLibraryRegistry.__init__": [], "torch._library.simple_registry.SimpleOperatorEntry": ["<builtin>.property"], "torch._library.fake_class_registry": ["torch._library.fake_class_registry.FakeClassRegistry.__init__", "logging.getLogger"], "torch._library.fake_class_registry.HasStaticMethodFromReal": ["<builtin>.classmethod"], "torch._library.fake_class_registry.FakeClassRegistry.__init__": [], "torch._library.triton": ["contextlib.contextmanager"], "torch._library.custom_ops": ["torch.utils._exposed_in.exposed_in.wrapper", "torch.utils._exposed_in.exposed_in", "logging.getLogger", "weakref.WeakValueDictionary.__init__"], "torch._library.custom_ops.CustomOpDef": ["<builtin>.property", "contextlib.contextmanager"], "torch._library.infer_schema": ["torch.utils._exposed_in.exposed_in.wrapper", "torch._library.infer_schema.get_supported_param_types", "torch.utils._exposed_in.exposed_in"], "torch._library.infer_schema.get_supported_param_types": ["<builtin>.dict", "extend"], "functools.singledispatch": ["weakref.WeakKeyDictionary.__init__", "functools.update_wrapper", "<builtin>.getattr"], "torch.backends.nnpack": ["contextlib.contextmanager"], "torch.backends.openmp": [], "torch.backends.quantized": ["torch.backends.quantized.QuantizedEngine.__init__"], "torch.backends.quantized.QuantizedEngine.__init__": ["<builtin>.super"], "torch.cpu": ["torch.cpu.Stream.__init__"], "torch.cpu.amp": [], "torch.cpu.amp.autocast_mode": [], "torch.cpu.amp.autocast_mode.autocast": ["typing_extensions.deprecated.__init__"], "torch.cpu.amp.grad_scaler": [], "torch.cpu.amp.grad_scaler.GradScaler": ["typing_extensions.deprecated.__init__"], "torch.cpu.Stream.__init__": [], "torch.distributions": ["torch.distributions.kl._add_kl_info", "extend"], "torch.distributions.transforms": ["torch.distributions.transforms.ComposeTransform.__init__"], "torch.distributions.constraints": ["torch.distributions.constraints._IndependentConstraint.__init__", "torch.distributions.constraints._IntegerGreaterThan.__init__", "torch.distributions.constraints._GreaterThan.__init__", "torch.distributions.constraints._GreaterThanEq.__init__", "torch.distributions.constraints._Dependent.__init__", "torch.distributions.constraints._Interval.__init__"], "torch.distributions.constraints._Dependent": ["<builtin>.property"], "torch.distributions.constraints._IndependentConstraint": ["<builtin>.property"], "torch.distributions.constraints._Cat": ["<builtin>.property"], "torch.distributions.constraints._Stack": ["<builtin>.property"], "torch.distributions.constraints._Dependent.__init__": ["<builtin>.super"], "torch.distributions.constraints._IntegerGreaterThan.__init__": ["<builtin>.super"], "torch.distributions.constraints._IndependentConstraint.__init__": ["<builtin>.isinstance", "<builtin>.super"], "torch.distributions.constraints._GreaterThan.__init__": ["<builtin>.super"], "torch.distributions.constraints._GreaterThanEq.__init__": ["<builtin>.super"], "torch.distributions.constraints._Interval.__init__": ["<builtin>.super"], "torch.distributions.utils": [], "torch.distributions.transforms.Transform": ["<builtin>.property"], "torch.distributions.transforms._InverseTransform": ["<builtin>.property", "torch.distributions.constraints._DependentProperty.__init__"], "torch.distributions.constraints._DependentProperty.__init__": ["<builtin>.super"], "torch.distributions.transforms.ComposeTransform": ["torch.distributions.utils.lazy_property.__init__", "<builtin>.property", "torch.distributions.constraints._DependentProperty.__init__"], "torch.distributions.utils.lazy_property.__init__": ["functools.update_wrapper"], "torch.distributions.transforms.ComposeTransform.__init__": ["<builtin>.super"], "torch.distributions.transforms.IndependentTransform": ["<builtin>.property", "torch.distributions.constraints._DependentProperty.__init__"], "torch.distributions.transforms.ReshapeTransform": ["torch.distributions.constraints._DependentProperty.__init__"], "torch.distributions.transforms.PowerTransform": ["torch.distributions.utils.lazy_property.__init__"], "torch.distributions.transforms.TanhTransform": ["torch.distributions.constraints._Interval.__init__"], "torch.distributions.transforms.AffineTransform": ["<builtin>.property", "torch.distributions.constraints._DependentProperty.__init__"], "torch.distributions.transforms.LowerCholeskyTransform": ["torch.distributions.constraints._IndependentConstraint.__init__"], "torch.distributions.transforms.PositiveDefiniteTransform": ["torch.distributions.constraints._IndependentConstraint.__init__"], "torch.distributions.transforms.CatTransform": ["<builtin>.property", "torch.distributions.constraints._DependentProperty.__init__", "torch.distributions.utils.lazy_property.__init__"], "torch.distributions.transforms.StackTransform": ["<builtin>.property", "torch.distributions.constraints._DependentProperty.__init__"], "torch.distributions.transforms.CumulativeDistributionTransform": ["<builtin>.property"], "torch.distributions.bernoulli": [], "torch.distributions.exp_family": [], "torch.distributions.distribution": [], "torch.distributions.distribution.Distribution": ["<builtin>.property", "typing_extensions.deprecated.__init__", "<builtin>.staticmethod"], "torch.distributions.exp_family.ExponentialFamily": ["<builtin>.property"], "torch.distributions.bernoulli.Bernoulli": ["<builtin>.property", "torch.distributions.utils.lazy_property.__init__"], "torch.distributions.beta": [], "torch.distributions.dirichlet": [], "torch.distributions.dirichlet._Dirichlet": ["torch.autograd.function.once_differentiable", "<builtin>.staticmethod"], "torch.autograd.function.once_differentiable": ["functools.wraps"], "torch.distributions.dirichlet.Dirichlet": ["<builtin>.property", "torch.distributions.constraints._IndependentConstraint.__init__"], "torch.distributions.beta.Beta": ["<builtin>.property"], "torch.distributions.binomial": [], "torch.distributions.binomial.Binomial": ["torch.distributions.utils.lazy_property.__init__", "<builtin>.property", "torch.distributions.constraints._DependentProperty.__init__"], "torch.distributions.categorical": [], "torch.distributions.categorical.Categorical": ["torch.distributions.utils.lazy_property.__init__", "<builtin>.property", "torch.distributions.constraints._DependentProperty.__init__"], "torch.distributions.cauchy": [], "torch.distributions.cauchy.Cauchy": ["<builtin>.property"], "torch.distributions.chi2": [], "torch.distributions.gamma": [], "torch.distributions.gamma.Gamma": ["<builtin>.property"], "torch.distributions.chi2.Chi2": ["<builtin>.property"], "torch.distributions.constraint_registry": ["torch.distributions.constraint_registry.ConstraintRegistry.register", "torch.distributions.constraint_registry.ConstraintRegistry.__init__"], "torch.distributions.constraint_registry.ConstraintRegistry.__init__": ["<builtin>.super"], "torch.distributions.constraint_registry.ConstraintRegistry.register": ["<builtin>.isinstance", "<builtin>.issubclass", "<builtin>.TypeError", "<builtin>.type"], "torch.distributions.continuous_bernoulli": [], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": ["<builtin>.property", "torch.distributions.utils.lazy_property.__init__"], "torch.distributions.exponential": [], "torch.distributions.exponential.Exponential": ["<builtin>.property"], "torch.distributions.fishersnedecor": [], "torch.distributions.fishersnedecor.FisherSnedecor": ["<builtin>.property"], "torch.distributions.geometric": [], "torch.distributions.geometric.Geometric": ["<builtin>.property", "torch.distributions.utils.lazy_property.__init__"], "torch.distributions.gumbel": [], "torch.distributions.transformed_distribution": [], "torch.distributions.independent": [], "torch.distributions.independent.Independent": ["<builtin>.property", "torch.distributions.constraints._DependentProperty.__init__"], "torch.distributions.transformed_distribution.TransformedDistribution": ["<builtin>.property", "torch.distributions.constraints._DependentProperty.__init__"], "torch.distributions.uniform": [], "torch.distributions.uniform.Uniform": ["torch.distributions.constraints._Dependent.__init__", "torch.distributions.constraints._DependentProperty.__init__", "<builtin>.property"], "torch.distributions.gumbel.Gumbel": ["<builtin>.property"], "torch.distributions.half_cauchy": [], "torch.distributions.half_cauchy.HalfCauchy": ["<builtin>.property"], "torch.distributions.half_normal": [], "torch.distributions.normal": [], "torch.distributions.normal.Normal": ["<builtin>.property"], "torch.distributions.half_normal.HalfNormal": ["<builtin>.property"], "torch.distributions.inverse_gamma": [], "torch.distributions.inverse_gamma.InverseGamma": ["<builtin>.property"], "torch.distributions.kl": ["torch.distributions.kl.register_kl.decorator", "torch.distributions.kl.register_kl"], "torch.distributions.laplace": [], "torch.distributions.laplace.Laplace": ["<builtin>.property"], "torch.distributions.lowrank_multivariate_normal": [], "torch.distributions.multivariate_normal": [], "torch.distributions.multivariate_normal.MultivariateNormal": ["<builtin>.property", "torch.distributions.utils.lazy_property.__init__"], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": ["<builtin>.property", "torch.distributions.utils.lazy_property.__init__", "torch.distributions.constraints._IndependentConstraint.__init__"], "torch.distributions.one_hot_categorical": [], "torch.distributions.one_hot_categorical.OneHotCategorical": ["<builtin>.property"], "torch.distributions.pareto": [], "torch.distributions.pareto.Pareto": ["<builtin>.property", "torch.distributions.constraints._DependentProperty.__init__"], "torch.distributions.poisson": [], "torch.distributions.poisson.Poisson": ["<builtin>.property"], "torch.distributions.kl.register_kl": ["<builtin>.isinstance", "<builtin>.issubclass", "<builtin>.TypeError"], "torch.distributions.kl.register_kl.decorator": [], "torch.distributions.kumaraswamy": [], "torch.distributions.kumaraswamy.Kumaraswamy": ["<builtin>.property"], "torch.distributions.lkj_cholesky": [], "torch.distributions.log_normal": [], "torch.distributions.log_normal.LogNormal": ["<builtin>.property"], "torch.distributions.logistic_normal": [], "torch.distributions.logistic_normal.LogisticNormal": ["<builtin>.property"], "torch.distributions.mixture_same_family": [], "torch.distributions.mixture_same_family.MixtureSameFamily": ["<builtin>.property", "torch.distributions.constraints._DependentProperty.__init__"], "torch.distributions.multinomial": [], "torch.distributions.multinomial.Multinomial": ["<builtin>.property", "torch.distributions.constraints._DependentProperty.__init__"], "torch.distributions.negative_binomial": [], "torch.distributions.negative_binomial.NegativeBinomial": ["<builtin>.property", "torch.distributions.utils.lazy_property.__init__", "torch.distributions.constraints._GreaterThanEq.__init__", "torch.distributions.constraints._HalfOpenInterval.__init__"], "torch.distributions.constraints._HalfOpenInterval.__init__": ["<builtin>.super"], "torch.distributions.relaxed_bernoulli": [], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": ["<builtin>.property", "torch.distributions.utils.lazy_property.__init__"], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": ["<builtin>.property"], "torch.distributions.relaxed_categorical": [], "torch.distributions.relaxed_categorical.ExpRelaxedCategorical": ["<builtin>.property"], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": ["<builtin>.property"], "torch.distributions.studentT": [], "torch.distributions.studentT.StudentT": ["<builtin>.property"], "torch.distributions.von_mises": ["torch.jit.script_if_tracing"], "torch.jit": ["<builtin>.RuntimeError", "contextlib.contextmanager", "torch.utils.set_module"], "torch.jit._async": ["torch.utils.set_module", "torch.jit._builtins._register_builtin"], "torch.jit._builtins": ["torch.jit._builtins._gen_torch_functional_registered_ops"], "torch.jit._builtins._gen_torch_functional_registered_ops": ["<builtin>.getattr"], "torch.utils": ["ntpath.dirname", "torch._running_with_deploy", "ntpath.join", "posixpath.join", "posixpath.dirname"], "torch.utils.backcompat": ["<builtin>.Warning"], "torch.utils.backcompat.Warning": ["<builtin>.property"], "<builtin>.Warning": [], "torch.utils.collect_env": ["collections.namedtuple"], "torch.utils.data": ["<builtin>.sorted"], "torch.utils.data.dataloader": ["typing.TypeVar.__init__", "logging.getLogger"], "multiprocessing": ["<builtin>.dir", "<builtin>.globals", "<builtin>.getattr"], "multiprocessing.context": ["multiprocessing.context.DefaultContext.__init__"], "multiprocessing.process": ["_weakrefset.WeakSet.__init__", "<builtin>.set", "posixpath.abspath", "<builtin>.list", "multiprocessing.process._MainProcess.__init__", "ntpath.abspath"], "multiprocessing.process.BaseProcess": ["<builtin>.property"], "multiprocessing.process._ParentProcess": ["<builtin>.property"], "multiprocessing.process._MainProcess.__init__": [], "multiprocessing.reduction": ["<builtin>.type", "multiprocessing.reduction.ForkingPickler.register", "<builtin>.hasattr"], "multiprocessing.reduction.ForkingPickler": ["<builtin>.classmethod"], "multiprocessing.reduction.ForkingPickler.register": [], "multiprocessing.context.BaseContext": ["<builtin>.property", "<builtin>.staticmethod"], "multiprocessing.context.Process": ["<builtin>.staticmethod"], "multiprocessing.context.SpawnProcess": ["<builtin>.staticmethod"], "multiprocessing.context.DefaultContext.__init__": [], "multiprocessing.context.ForkProcess": ["<builtin>.staticmethod"], "multiprocessing.context.ForkServerProcess": ["<builtin>.staticmethod"], "queue": [], "queue.Queue": ["<builtin>.classmethod"], "queue._PySimpleQueue": ["<builtin>.classmethod"], "torch.utils.data.graph_settings": ["typing_extensions.deprecated.__init__"], "torch.utils.data.datapipes.iter.sharding": [], "torch.utils.data.datapipes._decorator": [], "torch.utils.data.datapipes._typing": ["typing.TypeVar.__init__", "torch.utils.data.datapipes._typing._DataPipeType.__init__", "<builtin>.type"], "torch.utils.data.datapipes._hook_iterator": [], "torch.utils.data.datapipes._typing._DataPipeType.__init__": [], "torch.utils.data.datapipes._typing._DataPipeMeta": ["typing._tp_cache"], "torch.utils.data.datapipes.datapipe": ["typing.TypeVar.__init__", "torch.utils._import_utils.import_dill"], "torch.utils._import_utils": ["functools.lru_cache"], "torch.utils.data.datapipes.utils.common": ["torch.utils._import_utils.dill_available"], "torch.utils._import_utils.dill_available": ["torch._running_with_deploy", "torch.utils._import_utils._check_module_exists"], "torch.utils._import_utils._check_module_exists": [], "torch.utils.data.datapipes.utils.common.StreamWrapper": ["<builtin>.classmethod"], "torch.utils.data.dataset": ["typing.TypeVar.__init__"], "torch.utils.data.dataset.ConcatDataset": ["<builtin>.property", "typing_extensions.deprecated.__init__", "<builtin>.staticmethod"], "torch.utils._import_utils.import_dill": ["torch.utils._import_utils.dill_available"], "torch.utils.data.datapipes.datapipe.IterDataPipe": ["<builtin>.classmethod"], "torch.utils.data.datapipes.datapipe.MapDataPipe": ["<builtin>.classmethod"], "torch.utils.data.graph": [], "torch.utils.data._utils": [], "torch.utils.data._utils.collate": ["re.compile", "contextlib.suppress.__init__"], "contextlib.suppress.__init__": [], "torch.utils.data._utils.fetch": [], "torch.utils.data._utils.pin_memory": [], "torch.utils.data._utils.signal_handling": [], "torch.utils.data._utils.worker": [], "ctypes.wintypes": [], "torch.utils.data.sampler": ["typing.TypeVar.__init__"], "torch.utils.data.sampler.RandomSampler": ["<builtin>.property"], "torch.utils.data.dataloader._DatasetKind": ["<builtin>.staticmethod"], "torch.utils.data.dataloader.DataLoader": ["<builtin>.property"], "torch.utils.data.dataloader._MultiProcessingDataLoaderIter": ["<builtin>.staticmethod"], "torch.utils.data.distributed": ["typing.TypeVar.__init__"], "torch.utils.deterministic": [], "torch.utils.deterministic._Deterministic": ["<builtin>.property"], "torch.utils.backend_registration": [], "torch.utils.cpp_backtrace": [], "torch.utils.throughput_benchmark": [], "torch.utils.throughput_benchmark.ExecutionStats": ["<builtin>.property"], "torch.utils.set_module": ["<builtin>.isinstance", "<builtin>.TypeError"], "torch.jit._builtins._register_builtin": ["torch.jit._builtins._get_builtin_table", "<builtin>.id"], "torch.jit._builtins._get_builtin_table": ["<builtin>.id", "append", "torch.jit._builtins._get_builtin_table.register_all", "torch.distributed.autograd.is_available"], "torch.jit._builtins._get_builtin_table.register_all": ["append", "<builtin>.dir", "<builtin>.callable", "torch.jit._builtins._is_special_functional_bound_op", "<builtin>.getattr"], "torch.jit._builtins._is_special_functional_bound_op": [], "torch.jit._await": ["torch.utils.set_module", "torch.jit._builtins._register_builtin"], "torch.jit._decomposition_utils": [], "torch.jit._freeze": [], "torch.jit._script": ["<builtin>.isinstance", "<builtin>.hasattr", "torch.jit._monkeytype_config.JitTypeTraceStore.__init__", "torch.jit._script._get_methods", "torch.jit._script._make_fail", "torch.jit._builtins._register_builtin", "<builtin>.callable", "<builtin>.setattr", "torch.utils.set_module", "collections.namedtuple"], "torch._classes": ["torch._classes._Classes.__init__"], "torch._classes._Classes": ["<builtin>.property"], "torch._classes._Classes.__init__": ["<builtin>.super"], "torch.jit._fuser": ["contextlib.contextmanager"], "torch.jit._monkeytype_config": [], "torch.jit._recursive": ["collections.namedtuple", "torch.jit._recursive.ConcreteTypeStore.__init__", "<builtin>.type"], "torch.jit._check": [], "torch.jit._state": ["weakref.WeakKeyDictionary.__init__", "torch.jit._state.EnabledProxy.__init__"], "torch.jit._state.EnabledProxy.__init__": ["torch.jit._state.EnabledProxy.parse_env"], "torch.jit._state.EnabledProxy.parse_env": ["<builtin>.print", "<builtin>.ValueError"], "torch.jit.frontend": ["<builtin>.set", "<map>.update"], "torch.jit.annotations": ["torch.distributed.rpc.is_available"], "torch.jit.annotations.EvalEnv": ["torch.jit.annotations.Module.__init__"], "torch.jit.annotations.Module.__init__": [], "torch.jit._dataclass_impls": [], "torch.jit.frontend.WithItemBuilder": ["<builtin>.staticmethod"], "torch.jit.frontend.StmtBuilder": ["<builtin>.staticmethod"], "torch.jit.frontend.ExprBuilder": ["<builtin>.staticmethod"], "torch.nn": [], "torch.nn.parameter": [], "torch.nn.parameter.UninitializedTensorMixin": ["<builtin>.property", "<builtin>.classmethod"], "torch.nn.modules": ["<builtin>.sorted"], "torch.nn.modules.module": ["collections.namedtuple", "typing.TypeVar.__init__", "collections.OrderedDict.__init__"], "torch._prims_common": ["typing_extensions.deprecated.__init__", "typing.overload"], "sympy": ["<builtin>.ImportError", "sympy.__sympy_debug", "sympy.core.cache.lazy_function", "sympy.enable_warnings", "extend"], "mpmath": ["mpmath.ctx_mp.MPContext.__init__", "mpmath.ctx_iv.MPIntervalContext.__init__", "mpmath.ctx_fp.FPContext.__init__"], "mpmath.usertools": [], "mpmath.ctx_fp": [], "mpmath.ctx_base": [], "mpmath.libmp.backend": ["<builtin>.type", "<builtin>.getattr"], "mpmath.functions.functions": ["mpmath.functions.functions.defun", "mpmath.functions.functions.defun_wrapped"], "mpmath.functions.functions.SpecialFunctions": ["<builtin>.classmethod"], "mpmath.functions.functions.defun_wrapped": [], "mpmath.functions.functions.defun": [], "mpmath.functions.rszeta": ["mpmath.functions.functions.defun"], "mpmath.calculus.quadrature": [], "mpmath.calculus.inverselaplace": [], "mpmath.calculus.calculus": [], "mpmath.calculus.optimization": [], "mpmath.calculus.odes": [], "mpmath.matrices.matrices": [], "mpmath.matrices.matrices._matrix": ["<builtin>.property"], "mpmath.matrices.calculus": [], "mpmath.matrices.linalg": [], "mpmath.matrices.eigen": ["mpmath.matrices.eigen.defun"], "mpmath.matrices.eigen.defun": ["<builtin>.setattr"], "mpmath.identification": [], "mpmath.libmp": [], "mpmath.libmp.libmpf": ["<builtin>.dict", "<builtin>.range", "mpmath.libmp.libmpf.<lambda1>", "<builtin>.dir", "mpmath.libmp.libmpf.from_man_exp"], "mpmath.libmp.libintmath": ["<builtin>.range", "<builtin>.dir", "<builtin>.set", "mpmath.libmp.libintmath.sage_trailing", "mpmath.libmp.libintmath.gmpy_trailing", "mpmath.libmp.libintmath.python_trailing", "<builtin>.getattr"], "mpmath.libmp.libintmath.gmpy_trailing": [], "mpmath.libmp.libintmath.python_trailing": [], "mpmath.libmp.libintmath.sage_trailing": [], "mpmath.libmp.libmpf.<lambda1>": [], "mpmath.libmp.libmpf.from_man_exp": ["mpmath.libmp.libmpf.strict_normalize", "<builtin>.int", "mpmath.libmp.libmpf._normalize"], "mpmath.libmp.libmpf.strict_normalize": ["mpmath.libmp.libmpf._normalize", "<builtin>.type"], "mpmath.libmp.libmpf._normalize": ["<builtin>.int"], "mpmath.libmp.libmpc": ["<builtin>.print", "mpmath.libmp.libmpf.from_float"], "mpmath.libmp.libelefun": ["mpmath.libmp.libelefun.constant_memo", "mpmath.libmp.libelefun.def_mpf_constant", "<builtin>.min", "<builtin>.print"], "mpmath.libmp.libelefun.constant_memo": [], "mpmath.libmp.libelefun.def_mpf_constant": [], "mpmath.libmp.libmpf.from_float": ["mpmath.libmp.libmpf.from_man_exp", "<builtin>.int"], "mpmath.libmp.libhyper": [], "mpmath.libmp.gammazeta": ["<builtin>.range", "mpmath.libmp.libintmath.ifac", "mpmath.libmp.libmpf.from_int", "mpmath.libmp.gammazeta.bernoulli_size", "mpmath.libmp.libelefun.constant_memo", "mpmath.libmp.libelefun.def_mpf_constant"], "mpmath.libmp.libmpf.from_int": ["mpmath.libmp.libmpf.from_man_exp"], "mpmath.libmp.gammazeta.bernoulli_size": ["<builtin>.int"], "mpmath.libmp.libintmath.ifac": ["<builtin>.len", "<map>.get"], "mpmath.libmp.libmpi": ["mpmath.libmp.libmpf.from_float"], "mpmath.visualization": [], "colorsys": [], "mpmath.ctx_base.StandardBaseContext": ["<builtin>.staticmethod"], "mpmath.math2": ["<builtin>.len", "mpmath.math2._mathfun_n", "mpmath.math2._mathfun_real", "mpmath.math2._mathfun"], "mpmath.math2._mathfun_n": [], "mpmath.math2._mathfun": [], "mpmath.math2._mathfun_real": [], "mpmath.function_docs": [], "mpmath.ctx_fp.FPContext": ["<builtin>.property", "<builtin>.staticmethod", "<builtin>.classmethod"], "mpmath.ctx_mp": ["re.compile"], "mpmath.rational": [], "mpmath.ctx_mp_python": ["mpmath.ctx_mp_python.binary_op"], "mpmath.ctx_mp_python._mpf": ["<builtin>.property", "<builtin>.classmethod"], "mpmath.ctx_mp_python.binary_op": ["mpmath.libmp.backend.exec_", "<builtin>.globals"], "mpmath.libmp.backend.exec_": ["<builtin>.exec"], "<builtin>.exec": [], "mpmath.ctx_mp_python._constant": ["<builtin>.property"], "mpmath.ctx_mp_python._mpc": ["<builtin>.property", "<builtin>.classmethod"], "mpmath.ctx_mp_python.PythonMPContext": ["<builtin>.property", "<builtin>.classmethod"], "mpmath.ctx_mp.MPContext": ["<builtin>.property"], "mpmath.ctx_iv": ["mpmath.ctx_iv._binary_op"], "mpmath.ctx_iv.ivmpf": ["<builtin>.property"], "mpmath.ctx_iv.ivmpc": ["<builtin>.property"], "mpmath.ctx_iv._binary_op": [], "mpmath.ctx_iv.ivmpf_constant": ["<builtin>.property"], "mpmath.ctx_iv.MPIntervalContext": ["<builtin>.property", "<builtin>.classmethod"], "mpmath.ctx_fp.FPContext.__init__": ["mpmath.ctx_base.StandardBaseContext._init_aliases", "mpmath.ctx_base.StandardBaseContext.__init__"], "mpmath.ctx_base.StandardBaseContext.__init__": ["mpmath.functions.rszeta.RSCache.__init__", "mpmath.matrices.matrices.MatrixMethods.__init__", "mpmath.calculus.quadrature.QuadratureMethods.__init__", "mpmath.calculus.inverselaplace.LaplaceTransformInversionMethods.__init__", "mpmath.functions.functions.SpecialFunctions.__init__"], "mpmath.functions.functions.SpecialFunctions.__init__": [], "mpmath.functions.rszeta.RSCache.__init__": [], "mpmath.calculus.quadrature.QuadratureMethods.__init__": [], "mpmath.calculus.inverselaplace.LaplaceTransformInversionMethods.__init__": [], "mpmath.matrices.matrices.MatrixMethods.__init__": ["<builtin>.type"], "mpmath.ctx_base.StandardBaseContext._init_aliases": ["<builtin>.setattr", "<map>.items", "<builtin>.getattr"], "mpmath.ctx_mp.MPContext.__init__": ["mpmath.ctx_mp_python.PythonMPContext.default", "mpmath.ctx_mp.MPContext.init_builtins", "mpmath.ctx_base.StandardBaseContext.__init__", "mpmath.ctx_base.StandardBaseContext._init_aliases", "mpmath.ctx_mp_python.PythonMPContext.__init__"], "mpmath.ctx_mp_python.PythonMPContext.__init__": ["<builtin>.type"], "mpmath.ctx_mp_python.PythonMPContext.default": [], "mpmath.ctx_mp.MPContext.init_builtins": ["mpmath.ctx_mp_python.PythonMPContext.make_mpc", "mpmath.ctx_mp_python.PythonMPContext.make_mpf", "mpmath.ctx_mp_python.PythonMPContext._wrap_libmp_function", "<builtin>.getattr"], "mpmath.ctx_mp_python.PythonMPContext.make_mpf": [], "mpmath.ctx_mp_python.PythonMPContext.make_mpc": [], "mpmath.ctx_mp_python.PythonMPContext._wrap_libmp_function": [], "mpmath.ctx_iv.MPIntervalContext.__init__": ["mpmath.ctx_iv.MPIntervalContext._init_builtins", "mpmath.ctx_iv.MPIntervalContext._set_prec", "mpmath.ctx_base.StandardBaseContext.__init__", "<builtin>.type"], "mpmath.ctx_iv.MPIntervalContext._set_prec": ["mpmath.libmp.libmpf.prec_to_dps", "<builtin>.int", "<builtin>.max"], "mpmath.libmp.libmpf.prec_to_dps": ["<builtin>.round", "<builtin>.int", "<builtin>.max"], "<builtin>.round": [], "mpmath.ctx_iv.MPIntervalContext._init_builtins": ["mpmath.ctx_iv.MPIntervalContext._wrap_mpi_function"], "mpmath.ctx_iv.MPIntervalContext._wrap_mpi_function": [], "sympy.release": [], "sympy.core.cache": ["sympy.core.cache.__cacheit_debug", "<builtin>.RuntimeError", "<builtin>.int", "sympy.core.cache.__cacheit", "sympy.core.cache._getenv"], "sympy.core.cache._getenv": ["os.getenv"], "sympy.core.cache.__cacheit_debug": [], "sympy.core.cache.__cacheit": [], "sympy.enable_warnings": ["warnings.filterwarnings"], "sympy.__sympy_debug": ["os.getenv", "<builtin>.RuntimeError", "<builtin>.eval"], "sympy.core.sympify": [], "sympy.core.random": [], "sympy.utilities.iterables": ["sympy.utilities.decorator.deprecated.deprecated_decorator", "sympy.utilities.decorator.deprecated"], "sympy.utilities.enumerative": [], "sympy.utilities.misc": ["<builtin>.getattr", "<builtin>.str"], "sympy.utilities.decorator": [], "sympy.utilities.exceptions": ["contextlib.contextmanager", "warnings.simplefilter"], "sympy.utilities.exceptions.SymPyDeprecationWarning": ["<builtin>.classmethod"], "sympy.utilities.decorator.deprecated": [], "sympy.utilities.decorator.deprecated.deprecated_decorator": ["functools.wraps", "<builtin>.hasattr"], "sympy.utilities.decorator.deprecated.deprecated_decorator.wrapper": ["sympy.utilities.iterables.interactive_traversal", "sympy.utilities.iterables.ordered", "sympy.utilities.iterables.default_sort_key", "sympy.utilities.iterables.postorder_traversal", "sympy.utilities.exceptions.sympy_deprecation_warning"], "sympy.utilities.exceptions.sympy_deprecation_warning": ["warnings.warn", "sympy.utilities.exceptions.SymPyDeprecationWarning.__init__"], "sympy.utilities.exceptions.SymPyDeprecationWarning.__init__": ["<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.any", "<builtin>.super", "<builtin>.TypeError", "textwrap.dedent"], "sympy.utilities.iterables.postorder_traversal": ["sympy.core.traversal.postorder_traversal"], "sympy.core.traversal": [], "sympy.core.basic": ["sympy.utilities.decorator.deprecated.deprecated_decorator", "sympy.utilities.decorator.deprecated", "functools.cmp_to_key", "sympy.core.assumptions._prepare_class_assumptions"], "sympy.core.assumptions": ["sympy.core.assumptions._load_pre_generated_assumption_rules", "<builtin>.frozenset"], "sympy.core.facts": [], "sympy.core.logic": [], "sympy.core.logic.Logic": ["<builtin>.staticmethod"], "sympy.core.logic.AndOr_Base": ["<builtin>.classmethod"], "sympy.core.logic.Not": ["<builtin>.property"], "sympy.core.facts.Prover": ["<builtin>.property"], "sympy.core.facts.FactRules": ["<builtin>.classmethod"], "sympy.core.assumptions_generated": ["<builtin>.dict", "<builtin>.set"], "sympy.core.assumptions._load_pre_generated_assumption_rules": ["sympy.core.facts.FactRules._from_python"], "sympy.core.facts.FactRules._from_python": ["<builtin>.setattr", "<builtin>.set", "sympy.core.facts.FactRules.__init__"], "sympy.core.facts.FactRules.__init__": ["append", "<map>.keys", "<builtin>.isinstance", "<str>.splitlines", "<builtin>.ValueError", "sympy.core.facts.Prover.process_rule", "sympy.core.facts._as_pair", "sympy.core.logic.Logic.fromstring", "sympy.core.facts._base_fact", "sympy.core.facts.Prover.__init__", "sympy.core.facts.rules_2prereq", "sympy.core.facts.deduce_alpha_implications", "<map>.items", "sympy.core.facts.apply_beta_to_alpha_route"], "<str>.splitlines": [], "sympy.core.facts.Prover.__init__": ["<builtin>.set"], "sympy.core.logic.Logic.fromstring": ["<builtin>.ValueError", "<builtin>.len"], "sympy.core.facts.Prover.process_rule": ["sympy.core.facts.Prover._process_rule", "<builtin>.isinstance"], "sympy.core.facts.Prover._process_rule": ["append", "<builtin>.range", "<builtin>.isinstance", "<builtin>.sorted", "<builtin>.len", "sympy.core.facts.Prover.process_rule"], "sympy.core.facts.deduce_alpha_implications": ["sympy.core.facts.transitive_closure", "<builtin>.ValueError"], "sympy.core.facts.transitive_closure": ["<builtin>.set", "<builtin>.map"], "sympy.core.facts.apply_beta_to_alpha_route": ["<builtin>.isinstance", "<builtin>.enumerate", "<builtin>.any", "<builtin>.set", "<builtin>.TypeError", "<map>.get", "<map>.items"], "sympy.core.facts._base_fact": ["<builtin>.isinstance"], "sympy.core.facts._as_pair": ["<builtin>.isinstance"], "sympy.core.facts.rules_2prereq": ["<builtin>.isinstance"], "sympy.core.assumptions.StdFactKB": ["<builtin>.property"], "sympy.core.sorting": [], "sympy.core.kind": [], "sympy.multipledispatch.dispatcher": ["<builtin>.set"], "sympy.multipledispatch.conflict": [], "sympy.multipledispatch.utils": [], "sympy.multipledispatch.dispatcher.Dispatcher": ["<builtin>.property", "<builtin>.classmethod"], "sympy.multipledispatch.dispatcher.MethodDispatcher": ["<builtin>.classmethod"], "sympy.core.kind.KindDispatcher": ["<builtin>.property", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.core.cache.__cacheit_nocache": [], "sympy.core.cache.__cacheit_debug.func_wrapper": ["sympy.core.cache.__cacheit", "functools.wraps", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.core.cache.__cacheit.func_wrapper": ["functools.lru_cache.decorating_function", "functools.lru_cache", "functools.wraps"], "sympy.core._print_helpers": [], "sympy.core.basic.Basic": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.property", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "functools.cmp_to_key": [], "sympy.core.assumptions._prepare_class_assumptions": ["<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.set", "<map>.update", "<builtin>.reversed", "sympy.core.assumptions.as_property", "<builtin>.getattr", "<builtin>.bool", "sympy.core.assumptions.make_property", "<builtin>.setattr", "sympy.core.assumptions.StdFactKB.__init__", "<builtin>.type"], "sympy.core.assumptions.as_property": [], "sympy.core.assumptions.StdFactKB.__init__": ["sympy.core.facts.FactKB.deduce_all_facts", "<builtin>.isinstance", "<builtin>.super", "<map>.copy"], "sympy.core.facts.FactKB.deduce_all_facts": ["<builtin>.isinstance", "<builtin>.set", "<builtin>.all", "sympy.core.facts.FactKB._tell", "<map>.items"], "sympy.core.facts.FactKB._tell": [], "<builtin>.all": [], "sympy.core.assumptions.make_property": ["<builtin>.property", "sympy.core.assumptions.as_property"], "sympy.core.basic.Atom": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.property", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.core.singleton": ["sympy.core.singleton.SingletonRegistry.__init__"], "sympy.core.core": [], "sympy.core.singleton.SingletonRegistry": ["<builtin>.staticmethod"], "sympy.core.singleton.SingletonRegistry.__init__": [], "sympy.core.traversal.postorder_traversal": ["sympy.utilities.iterables.iterable", "<builtin>.isinstance", "sympy.core.sorting.ordered", "sympy.core.traversal.postorder_traversal"], "sympy.utilities.iterables.iterable": ["<builtin>.isinstance", "<builtin>.iter", "<builtin>.hasattr"], "sympy.core.sorting.ordered": ["", "<builtin>.isinstance", "<builtin>.sorted", "sympy.utilities.iterables.uniq", "<builtin>.ValueError", "<builtin>.len", "sympy.core.sorting.ordered", "<builtin>.list"], "sympy.utilities.iterables.uniq": ["<builtin>.enumerate", "sympy.utilities.iterables.uniq", "<builtin>.hasattr", "<builtin>.len", "<builtin>.set", "sympy.utilities.iterables.uniq.check"], "sympy.utilities.iterables.uniq.check": ["<builtin>.RuntimeError", "<builtin>.len"], "sympy.utilities.iterables.interactive_traversal": ["sympy.interactive.traversal.interactive_traversal"], "sympy.interactive.traversal": [], "sympy.printing": [], "sympy.printing.pretty": [], "sympy.printing.pretty.pretty": ["sympy.printing.printer.print_function", "sympy.printing.printer.print_function.decorator"], "sympy.core": [], "sympy.core.expr": [], "sympy.core.evalf": ["<builtin>.float", "typing.overload"], "sympy.external.gmpy": ["sympy.external.gmpy._get_flint", "warnings.warn", "sympy.external.gmpy._get_gmpy2", "<builtin>.type"], "sympy.external": [], "sympy.external.importtools": ["re.compile", "sympy.external.importtools.__sympy_debug"], "sympy.external.importtools.__sympy_debug": ["os.getenv", "<builtin>.RuntimeError", "<builtin>.eval"], "sympy.external.pythonmpq": [], "sympy.external.pythonmpq.PythonMPQ": ["<builtin>.classmethod"], "sympy.external.ntheory": ["<builtin>.range"], "sympy.external.gmpy._get_flint": ["warnings.warn", "sympy.external.gmpy._flint_version_okay"], "sympy.external.gmpy._flint_version_okay": [], "sympy.external.gmpy._get_gmpy2": ["warnings.warn", "sympy.external.importtools.import_module"], "sympy.external.importtools.import_module": ["<builtin>.isinstance", "sympy.external.importtools.version_tuple", "<builtin>.str", "warnings.warn", "<map>.get", "<builtin>.map", "<builtin>.repr", "<builtin>.__import__", "<builtin>.getattr"], "sympy.external.importtools.version_tuple": ["append", "<builtin>.int", "<builtin>.tuple"], "sympy.utilities.lambdify": ["sympy.utilities.decorator.doctest_depends_on", "sympy.utilities.decorator.doctest_depends_on.depends_on_deco"], "sympy.utilities.decorator.doctest_depends_on": [], "sympy.utilities.decorator.doctest_depends_on.depends_on_deco": ["inspect.isclass", "sympy.utilities.decorator.no_attrs_in_subclass.__init__"], "sympy.utilities.decorator.no_attrs_in_subclass.__init__": [], "sympy.utilities.lambdify._EvaluatorPrinter": ["<builtin>.classmethod"], "sympy.core.add": ["sympy.core.operations.AssocOpDispatcher.__init__"], "sympy.core.parameters": ["contextlib.contextmanager", "sympy.core.parameters._global_parameters.__init__"], "sympy.core.parameters._global_parameters.__init__": [], "sympy.core.operations": [], "sympy.core.operations.AssocOp": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.classmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.core.operations.LatticeOp": ["<builtin>.classmethod"], "sympy.core.operations.AssocOpDispatcher": ["<builtin>.property", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.core.numbers": ["<builtin>.type", "sympy.core.numbers._register_classes", "sympy.multipledispatch.core.dispatch", "sympy.multipledispatch.core.dispatch._"], "sympy.core.containers": [], "sympy.core.containers.Tuple": ["<builtin>.property"], "sympy.core.containers.Dict": ["<builtin>.property"], "sympy.core.decorators": [], "sympy.core.intfunc": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "sympy.multipledispatch": [], "sympy.multipledispatch.core": [], "sympy.core.numbers.Number": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.decorators._sympifyit.deco", "sympy.core.decorators._sympifyit", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.core.decorators._sympifyit": [], "sympy.core.decorators._sympifyit.deco": ["sympy.core.decorators.__sympifyit"], "sympy.core.decorators.__sympifyit": ["<builtin>.LookupError", "functools.wraps"], "<builtin>.LookupError": [], "sympy.core.numbers.Float": ["sympy.core.decorators._sympifyit.deco", "<builtin>.property", "sympy.core.decorators._sympifyit", "<builtin>.classmethod"], "sympy.core.numbers.Rational": ["sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.decorators._sympifyit.deco", "sympy.core.decorators._sympifyit", "<builtin>.property", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.core.numbers.Integer": ["sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.decorators._sympifyit.deco", "sympy.core.decorators._sympifyit", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.core.numbers.AlgebraicNumber": ["<builtin>.set", "<builtin>.property"], "sympy.core.numbers.Zero": ["<builtin>.staticmethod"], "sympy.core.numbers.One": ["<builtin>.staticmethod"], "sympy.core.numbers.NegativeOne": ["<builtin>.staticmethod"], "sympy.core.numbers.Half": ["<builtin>.staticmethod"], "sympy.core.numbers.Infinity": ["sympy.core.decorators._sympifyit", "sympy.core.decorators._sympifyit.deco"], "sympy.core.numbers.NegativeInfinity": ["sympy.core.decorators._sympifyit", "sympy.core.decorators._sympifyit.deco"], "sympy.core.numbers.NaN": ["sympy.core.decorators._sympifyit", "sympy.core.decorators._sympifyit.deco"], "sympy.multipledispatch.core.dispatch": ["<builtin>.tuple"], "sympy.multipledispatch.core.dispatch._": ["sympy.multipledispatch.core.ismethod", "inspect.currentframe", "sympy.multipledispatch.dispatcher.Dispatcher.__init__"], "sympy.multipledispatch.core.ismethod": ["inspect.signature"], "sympy.multipledispatch.dispatcher.Dispatcher.__init__": [], "inspect.currentframe": ["<builtin>.hasattr"], "sympy.core.numbers.ComplexInfinity": ["<builtin>.staticmethod"], "sympy.core.numbers.Exp1": ["<builtin>.staticmethod"], "sympy.core.numbers.Pi": ["<builtin>.staticmethod"], "sympy.core.numbers.ImaginaryUnit": ["<builtin>.property", "<builtin>.staticmethod"], "sympy.core.power": ["sympy.multipledispatch.dispatcher.Dispatcher.add", "sympy.multipledispatch.dispatcher.Dispatcher.__init__"], "sympy.core.function": [], "sympy.core.mul": ["sympy.core.operations.AssocOpDispatcher.__init__"], "sympy.core.mul.Mul": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.property", "sympy.core.kind.KindDispatcher.__init__", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.core.kind.KindDispatcher.__init__": ["sympy.multipledispatch.dispatcher.Dispatcher.__init__"], "sympy.core.operations.AssocOpDispatcher.__init__": ["operator.attrgetter.__init__", "sympy.multipledispatch.dispatcher.Dispatcher.__init__"], "sympy.core.rules": [], "sympy.core.function.FunctionClass": ["<builtin>.property"], "sympy.core.function.Application": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.property", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.core.function.Function": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.property", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.core.function.AppliedUndef": ["<builtin>.property"], "sympy.core.function.UndefinedFunction": ["<builtin>.property"], "sympy.core.function.WildFunction": ["<builtin>.set"], "sympy.core.function.Derivative": ["sympy.core.decorators._sympifyit.deco", "<builtin>.property", "sympy.core.decorators._sympifyit", "<builtin>.classmethod"], "sympy.core.function.Lambda": ["<builtin>.property", "<builtin>.classmethod"], "sympy.core.function.Subs": ["<builtin>.property"], "sympy.core.symbol": ["re.compile"], "sympy.logic.boolalg": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.logic.boolalg.Boolean": ["sympy.core.decorators.sympify_return.wrapper", "<builtin>.property", "sympy.core.decorators.sympify_return"], "sympy.core.decorators.sympify_return": [], "sympy.core.decorators.sympify_return.wrapper": ["sympy.core.decorators._SympifyWrapper.__init__"], "sympy.core.decorators._SympifyWrapper.__init__": [], "sympy.logic.boolalg.BooleanAtom": ["<builtin>.property"], "sympy.logic.boolalg.BooleanTrue": ["<builtin>.property"], "sympy.logic.boolalg.BooleanFalse": ["<builtin>.property"], "sympy.logic.boolalg.BooleanFunction": ["<builtin>.classmethod"], "sympy.logic.boolalg.And": ["<builtin>.classmethod"], "sympy.logic.boolalg.Or": ["<builtin>.classmethod"], "sympy.logic.boolalg.Not": ["<builtin>.classmethod"], "sympy.logic.boolalg.Xor": ["<builtin>.property", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.logic.boolalg.Nand": ["<builtin>.classmethod"], "sympy.logic.boolalg.Nor": ["<builtin>.classmethod"], "sympy.logic.boolalg.Xnor": ["<builtin>.classmethod"], "sympy.logic.boolalg.Implies": ["<builtin>.classmethod"], "sympy.logic.boolalg.Equivalent": ["<builtin>.property", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.logic.boolalg.ITE": ["<builtin>.classmethod"], "sympy.logic.boolalg.Exclusive": ["<builtin>.classmethod"], "sympy.core.symbol.Symbol": ["sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.property", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.core.symbol.Dummy": ["sympy.core.cache.__cacheit_debug.func_wrapper", "random.Random.__init__", "sympy.core.cache.__cacheit_nocache", "random.Random.randint", "sympy.core.cache.__cacheit.func_wrapper"], "random.Random.randint": ["random.Random.randrange"], "random.Random.randrange": ["<builtin>.int", "<builtin>.ValueError", "warnings.warn", "<builtin>.TypeError", "operator.index", "random.Random._randbelow_with_getrandbits"], "operator.index": ["<int>.__index__"], "<int>.__index__": [], "random.Random._randbelow_with_getrandbits": [], "sympy.core.symbol.Wild": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.core.relational": ["sympy.multipledispatch.core.dispatch", "sympy.multipledispatch.core.dispatch._"], "sympy.core.relational.Relational": ["<builtin>.property"], "sympy.core.relational.Equality": ["<builtin>.property", "<builtin>.classmethod"], "sympy.core.relational.Unequality": ["<builtin>.property", "<builtin>.classmethod"], "sympy.core.relational._Inequality": ["<builtin>.classmethod"], "sympy.core.relational._Greater": ["<builtin>.property"], "sympy.core.relational._Less": ["<builtin>.property"], "sympy.core.relational.GreaterThan": ["<builtin>.property", "<builtin>.classmethod"], "sympy.core.relational.LessThan": ["<builtin>.property", "<builtin>.classmethod"], "sympy.core.relational.StrictGreaterThan": ["<builtin>.property", "<builtin>.classmethod"], "sympy.core.relational.StrictLessThan": ["<builtin>.property", "<builtin>.classmethod"], "sympy.core.power.Pow": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.property", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.multipledispatch.dispatcher.Dispatcher.add": ["<builtin>.isinstance", "<builtin>.any", "<map>.clear", "sympy.multipledispatch.utils.expand_tuples", "sympy.multipledispatch.dispatcher.Dispatcher.get_func_annotations", "sympy.multipledispatch.dispatcher.Dispatcher.reorder", "<builtin>.TypeError", "<builtin>.str", "sympy.multipledispatch.dispatcher.Dispatcher.add"], "sympy.multipledispatch.dispatcher.Dispatcher.get_func_annotations": ["sympy.multipledispatch.dispatcher.Dispatcher.get_func_params", "<builtin>.any", "<builtin>.tuple"], "sympy.multipledispatch.dispatcher.Dispatcher.get_func_params": ["inspect.signature", "<builtin>.hasattr"], "sympy.multipledispatch.utils.expand_tuples": ["sympy.multipledispatch.utils.expand_tuples", "<builtin>.isinstance"], "sympy.multipledispatch.dispatcher.Dispatcher.reorder": ["", "sympy.multipledispatch.conflict.ambiguities", "sympy.multipledispatch.dispatcher.Dispatcher.__init__"], "sympy.multipledispatch.conflict.ambiguities": ["<builtin>.any", "<builtin>.hash", "<builtin>.list", "sympy.multipledispatch.conflict.supercedes", "<builtin>.map", "sympy.multipledispatch.conflict.ambiguous"], "<builtin>.hash": [], "sympy.multipledispatch.conflict.ambiguous": ["sympy.multipledispatch.conflict.supercedes", "sympy.multipledispatch.conflict.consistent"], "sympy.multipledispatch.conflict.consistent": ["<builtin>.all", "<builtin>.issubclass", "<builtin>.zip", "<builtin>.len"], "sympy.multipledispatch.conflict.supercedes": ["<builtin>.all", "<builtin>.map", "<builtin>.len"], "sympy.core.numbers._register_classes": [], "sympy.core.add.Add": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.property", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.integrals.integrals": [], "sympy.concrete.expr_with_limits": [], "sympy.functions.elementary.piecewise": [], "sympy.functions.elementary.miscellaneous": [], "sympy.core.exprtools": [], "sympy.core.coreerrors": [], "sympy.core.exprtools.Factors": ["<builtin>.property"], "sympy.core.mod": [], "sympy.core.mod.Mod": ["<builtin>.classmethod"], "sympy.functions.elementary.miscellaneous.IdentityFunction": ["<builtin>.property"], "sympy.functions.elementary.miscellaneous.MinMaxBase": ["<builtin>.classmethod"], "sympy.functions.elementary.miscellaneous.Rem": ["<builtin>.classmethod"], "sympy.functions.elementary.piecewise.ExprCondPair": ["<builtin>.property"], "sympy.functions.elementary.piecewise.Piecewise": ["<builtin>.classmethod"], "sympy.matrices.matrixbase": [], "sympy.assumptions.refine": [], "sympy.assumptions.ask": [], "sympy.assumptions.assume": ["contextlib.contextmanager"], "sympy.utilities.source": [], "sympy.assumptions.assume.AppliedPredicate": ["<builtin>.property"], "sympy.assumptions.assume.PredicateMeta": ["<builtin>.property"], "sympy.assumptions.assume.Predicate": ["<builtin>.property", "<builtin>.classmethod"], "sympy.assumptions.assume.UndefinedPredicate": ["<builtin>.property"], "sympy.assumptions.cnf": [], "sympy.assumptions.cnf.Literal": ["<builtin>.property"], "sympy.assumptions.cnf.OR": ["<builtin>.property"], "sympy.assumptions.cnf.AND": ["<builtin>.property"], "sympy.assumptions.cnf.CNF": ["<builtin>.classmethod"], "sympy.assumptions.cnf.EncodedCNF": ["<builtin>.property"], "sympy.logic.inference": [], "sympy.logic.inference.KB": ["<builtin>.property"], "sympy.assumptions.ask.AssumptionKeys": ["sympy.utilities.decorator.memoize_property"], "sympy.utilities.decorator.memoize_property": ["<builtin>.property", "functools.wraps", "<builtin>.object"], "sympy.assumptions.ask_generated": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.assumptions": [], "sympy.assumptions.relation": [], "sympy.assumptions.relation.binrel": [], "sympy.assumptions.relation.binrel.BinaryRelation": ["<builtin>.property"], "sympy.assumptions.relation.binrel.AppliedBinaryRelation": ["<builtin>.property"], "sympy.polys": [], "sympy.polys.polytools": ["sympy.utilities.decorator.public"], "sympy.polys.polyoptions": ["sympy.polys.polyoptions.Options._init_dependencies_order"], "sympy.polys.polyerrors": [], "sympy.utilities": [], "sympy.polys.polyoptions.Option": ["<builtin>.classmethod"], "sympy.polys.polyoptions.BooleanOption": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Options": ["<builtin>.property", "<builtin>.classmethod"], "sympy.polys.polyoptions.Expand": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Gens": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Wrt": ["re.compile", "<builtin>.classmethod"], "sympy.polys.polyoptions.Sort": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Order": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Composite": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Domain": ["re.compile", "<builtin>.classmethod"], "sympy.polys.polyoptions.Split": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Gaussian": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Extension": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Modulus": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Strict": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Auto": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Frac": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Formal": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Include": ["<builtin>.classmethod"], "sympy.polys.polyoptions.All": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Gen": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Series": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Symbols": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Method": ["<builtin>.classmethod"], "sympy.polys.polyoptions.Options._init_dependencies_order": ["<builtin>.RuntimeError", "append", "<builtin>.set", "<builtin>.list", "sympy.utilities.iterables.topological_sort"], "sympy.utilities.iterables.topological_sort": ["append", "<builtin>.sorted", "<builtin>.ValueError", "<builtin>.set", "<builtin>.list"], "sympy.polys.constructor": ["sympy.utilities.decorator.public"], "sympy.polys.domains": ["extend"], "sympy.polys.domains.domain": [], "sympy.polys.domains.domainelement": [], "sympy.polys.orderings": ["sympy.polys.orderings.InverseOrder.__init__"], "sympy.polys.orderings.ProductOrder": ["<builtin>.property"], "sympy.polys.orderings.InverseOrder": ["<builtin>.property"], "sympy.polys.orderings.InverseOrder.__init__": [], "sympy.polys.polyutils": ["re.compile", "<builtin>.float", "<builtin>.type"], "sympy.polys.domains.modularinteger": [], "sympy.polys.domains.modularinteger.ModularInteger": ["<builtin>.classmethod"], "sympy.polys.domains.domain.Domain": ["<builtin>.property"], "sympy.polys.domains.finitefield": ["<builtin>.int"], "sympy.polys.domains.field": [], "sympy.polys.domains.ring": [], "sympy.polys.domains.simpledomain": [], "sympy.polys.galoistools": [], "sympy.polys.polyconfig": ["contextlib.contextmanager", "sympy.polys.polyconfig.configure"], "sympy.polys.polyconfig.configure": ["os.getenv", "<map>.items", "<builtin>.eval"], "sympy.polys.domains.groundtypes": [], "sympy.polys.domains.pythonrational": ["sympy.utilities.decorator.public"], "sympy.utilities.decorator.public": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.type"], "sympy.polys.domains.finitefield.FiniteField": ["<builtin>.property"], "sympy.polys.domains.integerring": ["sympy.polys.domains.integerring.IntegerRing.__init__"], "sympy.polys.domains.characteristiczero": [], "sympy.polys.domains.integerring.IntegerRing": ["<builtin>.type"], "sympy.polys.domains.integerring.IntegerRing.__init__": [], "sympy.polys.domains.rationalfield": ["sympy.polys.domains.rationalfield.RationalField.__init__"], "sympy.polys.domains.rationalfield.RationalField": ["<builtin>.type"], "sympy.polys.domains.rationalfield.RationalField.__init__": [], "sympy.polys.domains.algebraicfield": [], "sympy.polys.polyclasses": [], "sympy.polys.densebasic": ["<builtin>.float"], "sympy.polys.monomials": ["sympy.utilities.decorator.public"], "sympy.polys.densearith": [], "sympy.polys.densetools": [], "sympy.polys.euclidtools": [], "sympy.polys.sqfreetools": [], "sympy.polys.factortools": [], "sympy.polys.rootisolation": [], "sympy.polys.rootisolation.RealInterval": ["<builtin>.property"], "sympy.polys.rootisolation.ComplexInterval": ["<builtin>.property"], "sympy.polys.polyclasses.DMP": ["<builtin>.property", "<builtin>.classmethod"], "sympy.polys.polyclasses.DMP_Python": ["<builtin>.property", "<builtin>.classmethod"], "sympy.polys.polyclasses.DUP_Flint": ["<builtin>.property", "<builtin>.classmethod"], "sympy.polys.polyclasses.DMF": ["<builtin>.property", "<builtin>.classmethod"], "sympy.polys.polyclasses.ANP": ["<builtin>.property", "<builtin>.classmethod"], "sympy.polys.domains.gaussiandomains": ["sympy.polys.domains.gaussiandomains.GaussianIntegerRing.__init__", "sympy.polys.domains.gaussiandomains.GaussianRationalField.__init__"], "sympy.polys.domains.gaussiandomains.GaussianElement": ["<builtin>.classmethod"], "sympy.polys.domains.gaussiandomains.GaussianIntegerRing": ["<builtin>.property", "sympy.polys.domains.integerring.IntegerRing.__init__"], "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.__init__": [], "sympy.polys.domains.gaussiandomains.GaussianRationalField": ["<builtin>.property", "sympy.polys.domains.rationalfield.RationalField.__init__"], "sympy.polys.domains.gaussiandomains.GaussianRationalField.__init__": [], "sympy.polys.domains.realfield": ["sympy.polys.domains.realfield.RealField.__init__"], "sympy.polys.domains.mpelements": [], "sympy.polys.domains.mpelements.RealElement": ["<builtin>.property"], "sympy.polys.domains.mpelements.ComplexElement": ["<builtin>.property"], "sympy.polys.domains.mpelements.MPContext": ["<builtin>.property"], "sympy.polys.domains.realfield.RealField": ["<builtin>.property"], "sympy.polys.domains.realfield.RealField.__init__": ["sympy.polys.domains.realfield.RealField.dtype", "sympy.polys.domains.mpelements.MPContext.__init__"], "sympy.polys.domains.mpelements.MPContext.__init__": ["sympy.polys.domains.mpelements.MPContext._make_tol", "<builtin>.int", "mpmath.ctx_mp_python.PythonMPContext.make_mpf", "mpmath.ctx_mp_python.PythonMPContext._set_prec", "mpmath.ctx_mp_python.PythonMPContext.make_mpc", "sympy.polys.domains.mpelements.MPContext._convert_tol", "mpmath.ctx_mp_python.PythonMPContext._set_dps"], "mpmath.ctx_mp_python.PythonMPContext._set_dps": ["<builtin>.int", "<builtin>.max", "mpmath.libmp.libmpf.dps_to_prec"], "mpmath.libmp.libmpf.dps_to_prec": ["<builtin>.round", "<builtin>.int", "<builtin>.max"], "mpmath.ctx_mp_python.PythonMPContext._set_prec": ["mpmath.libmp.libmpf.prec_to_dps", "<builtin>.int", "<builtin>.max"], "sympy.polys.domains.mpelements.MPContext._convert_tol": ["<builtin>.isinstance", "mpmath.libmp.libmpf.from_float", "<builtin>.ValueError", "<builtin>.hasattr", "mpmath.libmp.libmpf.from_str", "mpmath.libmp.libmpf.from_int"], "mpmath.libmp.libmpf.from_str": ["<builtin>.int", "mpmath.libmp.libmpf.mpf_pow_int", "<builtin>.abs", "mpmath.libmp.libmpf.from_int", "mpmath.libmp.libmpf.str_to_man_exp", "mpmath.libmp.libmpf.from_rational"], "mpmath.libmp.libmpf.from_rational": ["mpmath.libmp.libmpf.from_int", "mpmath.libmp.libmpf.mpf_div"], "mpmath.libmp.libmpf.mpf_div": ["mpmath.libmp.libmpf.strict_normalize1", "<builtin>.divmod", "mpmath.libmp.libmpf.mpf_sign", "mpmath.libmp.libmpf._normalize1", "mpmath.libmp.libmpf.strict_normalize", "mpmath.libmp.libmpf._normalize"], "mpmath.libmp.libmpf.mpf_sign": [], "mpmath.libmp.libmpf.strict_normalize1": ["mpmath.libmp.libmpf._normalize1", "<builtin>.type"], "mpmath.libmp.libmpf._normalize1": ["<builtin>.int"], "<builtin>.divmod": [], "mpmath.libmp.libmpf.str_to_man_exp": ["<builtin>.float", "<builtin>.int", "<builtin>.len"], "mpmath.libmp.libmpf.mpf_pow_int": ["mpmath.libmp.libmpf.strict_normalize1", "<builtin>.int", "mpmath.libmp.libmpf.mpf_pow_int", "mpmath.libmp.libmpf.strict_normalize", "mpmath.libmp.libmpf._normalize1", "mpmath.libmp.libmpf.mpf_pos", "mpmath.libmp.libmpf._normalize", "mpmath.libmp.libmpf.mpf_div"], "mpmath.libmp.libmpf.mpf_pos": ["mpmath.libmp.libmpf.strict_normalize1", "mpmath.libmp.libmpf._normalize1"], "sympy.polys.domains.mpelements.MPContext._make_tol": [], "sympy.polys.domains.realfield.RealField.dtype": ["<builtin>.isinstance", "<builtin>.int"], "sympy.polys.domains.complexfield": ["sympy.polys.domains.complexfield.ComplexField.__init__"], "sympy.polys.domains.complexfield.ComplexField": ["<builtin>.property"], "sympy.polys.domains.complexfield.ComplexField.__init__": ["sympy.polys.domains.complexfield.ComplexField.dtype", "sympy.polys.domains.mpelements.MPContext.__init__"], "sympy.polys.domains.complexfield.ComplexField.dtype": ["<builtin>.isinstance", "<builtin>.int"], "sympy.polys.domains.polynomialring": [], "sympy.polys.domains.compositedomain": [], "sympy.polys.domains.compositedomain.CompositeDomain": ["<builtin>.property"], "sympy.polys.domains.polynomialring.PolynomialRing": ["<builtin>.property"], "sympy.polys.domains.fractionfield": [], "sympy.polys.domains.fractionfield.FractionField": ["<builtin>.property"], "sympy.polys.domains.expressiondomain": ["sympy.polys.domains.expressiondomain.ExpressionDomain.__init__"], "sympy.polys.domains.expressiondomain.ExpressionDomain": ["sympy.polys.domains.expressiondomain.ExpressionDomain.Expression.__init__"], "sympy.polys.domains.expressiondomain.ExpressionDomain.Expression.__init__": ["<builtin>.isinstance", "sympy.core.sympify.sympify"], "sympy.core.sympify.sympify": [], "sympy.polys.domains.expressiondomain.ExpressionDomain.__init__": [], "sympy.polys.domains.expressionrawdomain": ["sympy.polys.domains.expressionrawdomain.ExpressionRawDomain.__init__"], "sympy.polys.domains.expressionrawdomain.ExpressionRawDomain": ["<builtin>.classmethod"], "sympy.polys.domains.expressionrawdomain.ExpressionRawDomain.__init__": [], "sympy.polys.domains.pythonfinitefield": [], "sympy.polys.domains.pythonintegerring": [], "sympy.polys.domains.gmpyfinitefield": [], "sympy.polys.domains.gmpyintegerring": [], "sympy.polys.domains.gmpyintegerring.GMPYIntegerRing": ["<builtin>.type", "sympy.polys.domains.groundtypes._GMPYInteger.__init__"], "sympy.polys.domains.groundtypes._GMPYInteger.__init__": [], "sympy.polys.domains.pythonrationalfield": [], "sympy.polys.domains.gmpyrationalfield": [], "sympy.polys.domains.gmpyrationalfield.GMPYRationalField": ["sympy.polys.domains.groundtypes._GMPYRational.__init__", "<builtin>.type"], "sympy.polys.domains.groundtypes._GMPYRational.__init__": [], "sympy.polys.fglmtools": [], "sympy.polys.groebnertools": [], "sympy.polys.rationaltools": ["sympy.utilities.decorator.public"], "sympy.polys.polytools.Poly": ["sympy.polys.polytools._polifyit", "<builtin>.classmethod", "sympy.core.decorators._sympifyit.deco", "<builtin>.property", "sympy.core.decorators._sympifyit"], "sympy.polys.polytools._polifyit": ["functools.wraps"], "sympy.polys.polytools.PurePoly": ["<builtin>.property", "sympy.core.decorators._sympifyit", "sympy.core.decorators._sympifyit.deco"], "sympy.polys.polytools.GroebnerBasis": ["<builtin>.property", "<builtin>.classmethod"], "sympy.polys.polyfuncs": ["sympy.utilities.decorator.public"], "sympy.polys.specialpolys": ["sympy.utilities.decorator.public"], "sympy.ntheory": [], "sympy.ntheory.generate": ["sympy.ntheory.generate.Sieve.__init__", "sympy.utilities.decorator.deprecated", "sympy.utilities.decorator.deprecated.deprecated_decorator"], "sympy.ntheory.primetest": [], "sympy.ntheory.generate.Sieve.__init__": ["<builtin>.all", "<builtin>.ValueError", "<builtin>.len"], "sympy.ntheory.factor_": ["sympy.utilities.decorator.deprecated.deprecated_decorator", "sympy.utilities.decorator.deprecated"], "sympy.ntheory.digits": [], "sympy.ntheory.ecm": [], "sympy.ntheory.partitions_": ["sympy.utilities.memoization.recurrence_memo.decorator", "sympy.utilities.decorator.deprecated.deprecated_decorator", "sympy.utilities.decorator.deprecated", "sympy.utilities.memoization.recurrence_memo"], "sympy.ntheory.residue_ntheory": ["sympy.utilities.decorator.deprecated.deprecated_decorator", "sympy.utilities.decorator.deprecated"], "sympy.ntheory.modular": [], "sympy.utilities.memoization": [], "sympy.utilities.memoization.recurrence_memo": [], "sympy.utilities.memoization.recurrence_memo.decorator": ["functools.wraps"], "sympy.ntheory.multinomial": [], "sympy.ntheory.continued_fraction": [], "sympy.ntheory.egyptian_fraction": [], "sympy.ntheory.qs": [], "sympy.polys.rings": ["sympy.utilities.decorator.public"], "sympy.polys.compatibility": [], "sympy.polys.heuristicgcd": [], "sympy.printing.defaults": [], "sympy.utilities.magic": [], "sympy.polys.rings.PolyRing": ["<builtin>.property"], "sympy.polys.rings.PolyElement": ["<builtin>.property"], "sympy.polys.numberfields.minpoly": ["sympy.utilities.decorator.public"], "sympy.functions.elementary.exponential": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.combinatorial.factorials": [], "sympy.functions.combinatorial.factorials.factorial": ["<builtin>.classmethod"], "sympy.functions.combinatorial.factorials.subfactorial": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.classmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.combinatorial.factorials.factorial2": ["<builtin>.classmethod"], "sympy.functions.combinatorial.factorials.RisingFactorial": ["<builtin>.classmethod"], "sympy.functions.combinatorial.factorials.FallingFactorial": ["<builtin>.classmethod"], "sympy.functions.combinatorial.factorials.binomial": ["<builtin>.classmethod"], "sympy.functions.elementary.exponential.ExpBase": ["<builtin>.property"], "sympy.functions.elementary.exponential.exp": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.property", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.exponential.log": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.exponential.LambertW": ["<builtin>.classmethod"], "sympy.functions.elementary.trigonometric": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.combinatorial.numbers": ["sympy.core.cache.__cacheit.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.slice", "sympy.core.cache.__cacheit_debug.func_wrapper"], "sympy.polys.appellseqs": ["sympy.utilities.decorator.public"], "sympy.functions.combinatorial.numbers.carmichael": ["<builtin>.staticmethod"], "sympy.functions.combinatorial.numbers.fibonacci": ["<builtin>.classmethod", "sympy.utilities.memoization.recurrence_memo.decorator", "sympy.utilities.memoization.recurrence_memo", "<builtin>.staticmethod"], "sympy.functions.combinatorial.numbers.lucas": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.tribonacci": ["<builtin>.classmethod", "sympy.utilities.memoization.recurrence_memo.decorator", "sympy.utilities.memoization.recurrence_memo", "<builtin>.staticmethod"], "sympy.functions.combinatorial.numbers.bernoulli": ["<builtin>.classmethod", "<builtin>.staticmethod"], "sympy.functions.combinatorial.numbers.bell": ["<builtin>.classmethod", "sympy.utilities.memoization.recurrence_memo.decorator", "sympy.utilities.memoization.recurrence_memo", "<builtin>.staticmethod"], "sympy.functions.combinatorial.numbers.harmonic": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.euler": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.catalan": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.genocchi": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.andre": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.partition": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.divisor_sigma": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.udivisor_sigma": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.legendre_symbol": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.jacobi_symbol": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.kronecker_symbol": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.mobius": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.primenu": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.primeomega": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.totient": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.reduced_totient": ["<builtin>.classmethod"], "sympy.functions.combinatorial.numbers.primepi": ["<builtin>.classmethod"], "<builtin>.slice": [], "sympy.functions.combinatorial.numbers.motzkin": ["<builtin>.classmethod", "sympy.utilities.memoization.recurrence_memo.decorator", "sympy.utilities.memoization.recurrence_memo", "<builtin>.staticmethod"], "sympy.functions.elementary.integers": ["sympy.multipledispatch.core.dispatch", "sympy.multipledispatch.core.dispatch._"], "sympy.functions.elementary.integers.RoundFunction": ["<builtin>.classmethod"], "sympy.functions.elementary.integers.floor": ["<builtin>.classmethod"], "sympy.functions.elementary.integers.ceiling": ["<builtin>.classmethod"], "sympy.functions.elementary.integers.frac": ["<builtin>.classmethod"], "sympy.functions.elementary._trigonometric_special": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.trigonometric.sin": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.trigonometric.cos": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.trigonometric.tan": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.trigonometric.cot": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.trigonometric.ReciprocalTrigonometricFunction": ["<builtin>.classmethod"], "sympy.functions.elementary.trigonometric.sec": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.trigonometric.csc": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.trigonometric.sinc": ["<builtin>.classmethod"], "sympy.functions.elementary.trigonometric.InverseTrigonometricFunction": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.trigonometric.asin": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.trigonometric.acos": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.trigonometric.atan": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.trigonometric.acot": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.trigonometric.asec": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.trigonometric.acsc": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.trigonometric.atan2": ["<builtin>.classmethod"], "sympy.polys.orthopolys": ["sympy.utilities.decorator.public"], "sympy.polys.ring_series": [], "sympy.functions": [], "sympy.functions.elementary.hyperbolic": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.hyperbolic.sinh": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.hyperbolic.cosh": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.hyperbolic.tanh": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.hyperbolic.coth": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.hyperbolic.ReciprocalHyperbolicFunction": ["<builtin>.classmethod"], "sympy.functions.elementary.hyperbolic.csch": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.hyperbolic.sech": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.hyperbolic.asinh": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.hyperbolic.acosh": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.hyperbolic.atanh": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.hyperbolic.acoth": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.hyperbolic.asech": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.elementary.hyperbolic.acsch": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.special.error_functions": [], "sympy.functions.special.hyper": [], "sympy.functions.special.hyper.hyper": ["<builtin>.property", "<builtin>.classmethod"], "sympy.functions.special.hyper.meijerg": ["<builtin>.property"], "sympy.functions.special.hyper.HyperRep": ["<builtin>.classmethod"], "sympy.functions.special.hyper.HyperRep_power1": ["<builtin>.classmethod"], "sympy.functions.special.hyper.HyperRep_power2": ["<builtin>.classmethod"], "sympy.functions.special.hyper.HyperRep_log1": ["<builtin>.classmethod"], "sympy.functions.special.hyper.HyperRep_atanh": ["<builtin>.classmethod"], "sympy.functions.special.hyper.HyperRep_asin1": ["<builtin>.classmethod"], "sympy.functions.special.hyper.HyperRep_asin2": ["<builtin>.classmethod"], "sympy.functions.special.hyper.HyperRep_sqrts1": ["<builtin>.classmethod"], "sympy.functions.special.hyper.HyperRep_sqrts2": ["<builtin>.classmethod"], "sympy.functions.special.hyper.HyperRep_log2": ["<builtin>.classmethod"], "sympy.functions.special.hyper.HyperRep_cosasin": ["<builtin>.classmethod"], "sympy.functions.special.hyper.HyperRep_sinasin": ["<builtin>.classmethod"], "sympy.functions.special.hyper.appellf1": ["<builtin>.classmethod"], "sympy.functions.special.error_functions.erf": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.special.error_functions.erfc": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.special.error_functions.erfi": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.special.error_functions.erf2": ["<builtin>.classmethod"], "sympy.functions.special.error_functions.erfinv": ["<builtin>.classmethod"], "sympy.functions.special.error_functions.erfcinv": ["<builtin>.classmethod"], "sympy.functions.special.error_functions.erf2inv": ["<builtin>.classmethod"], "sympy.functions.special.error_functions.Ei": ["<builtin>.classmethod"], "sympy.functions.special.error_functions.expint": ["<builtin>.classmethod"], "sympy.functions.special.error_functions.li": ["<builtin>.classmethod"], "sympy.functions.special.error_functions.Li": ["<builtin>.classmethod"], "sympy.functions.special.error_functions.TrigonometricIntegral": ["<builtin>.classmethod"], "sympy.functions.special.error_functions.Si": ["<builtin>.classmethod"], "sympy.functions.special.error_functions.Ci": ["<builtin>.classmethod"], "sympy.functions.special.error_functions.Shi": ["<builtin>.classmethod"], "sympy.functions.special.error_functions.Chi": ["<builtin>.classmethod"], "sympy.functions.special.error_functions.FresnelIntegral": ["<builtin>.classmethod"], "sympy.functions.special.error_functions.fresnels": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.special.error_functions.fresnelc": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.special.error_functions._erfs": ["<builtin>.classmethod"], "sympy.functions.special.gamma_functions": [], "sympy.functions.special.zeta_functions": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.special.zeta_functions.polylog": ["<builtin>.classmethod"], "sympy.functions.special.zeta_functions.zeta": ["<builtin>.classmethod"], "sympy.functions.special.zeta_functions.dirichlet_eta": ["<builtin>.classmethod"], "sympy.functions.special.zeta_functions.riemann_xi": ["<builtin>.classmethod"], "sympy.functions.special.zeta_functions.stieltjes": ["<builtin>.classmethod"], "sympy.functions.special.gamma_functions.gamma": ["<builtin>.classmethod"], "sympy.functions.special.gamma_functions.lowergamma": ["<builtin>.classmethod"], "sympy.functions.special.gamma_functions.uppergamma": ["<builtin>.classmethod"], "sympy.functions.special.gamma_functions.polygamma": ["<builtin>.classmethod"], "sympy.functions.special.gamma_functions.loggamma": ["<builtin>.classmethod"], "sympy.functions.special.gamma_functions.digamma": ["<builtin>.classmethod"], "sympy.functions.special.gamma_functions.trigamma": ["<builtin>.classmethod"], "sympy.functions.special.gamma_functions.multigamma": ["<builtin>.classmethod"], "sympy.functions.special.tensor_functions": [], "sympy.functions.special.tensor_functions.LeviCivita": ["<builtin>.classmethod"], "sympy.functions.special.tensor_functions.KroneckerDelta": ["<builtin>.property", "<builtin>.classmethod"], "sympy.functions.special.singularity_functions": [], "sympy.functions.special.delta_functions": [], "sympy.polys.polyroots": ["sympy.utilities.decorator.public"], "sympy.polys.polyquinticconst": [], "sympy.polys.polyquinticconst.PolyQuintic": ["<builtin>.property"], "sympy.functions.special.delta_functions.DiracDelta": ["<builtin>.classmethod"], "sympy.functions.special.delta_functions.Heaviside": ["<builtin>.property", "<builtin>.classmethod"], "sympy.functions.special.singularity_functions.SingularityFunction": ["<builtin>.classmethod"], "sympy.functions.special.bsplines": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "sympy.sets.sets": [], "sympy.sets.sets.Set": ["sympy.core.decorators.sympify_return.wrapper", "<builtin>.property", "sympy.utilities.decorator.deprecated", "sympy.core.decorators.sympify_return", "sympy.utilities.decorator.deprecated.deprecated_decorator", "<builtin>.staticmethod"], "sympy.sets.sets.ProductSet": ["<builtin>.property"], "sympy.sets.sets.Interval": ["<builtin>.property", "<builtin>.classmethod"], "sympy.sets.sets.Union": ["<builtin>.property"], "sympy.sets.sets.Intersection": ["<builtin>.property", "<builtin>.staticmethod"], "sympy.sets.sets.Complement": ["<builtin>.property", "<builtin>.staticmethod"], "sympy.sets.sets.EmptySet": ["<builtin>.property", "sympy.utilities.decorator.deprecated.deprecated_decorator", "sympy.utilities.decorator.deprecated"], "sympy.sets.sets.UniversalSet": ["<builtin>.property"], "sympy.sets.sets.FiniteSet": ["<builtin>.property"], "sympy.sets.sets.SymmetricDifference": ["<builtin>.property", "<builtin>.staticmethod"], "sympy.sets.sets.DisjointUnion": ["<builtin>.property"], "sympy.functions.special.bessel": [], "sympy.functions.special.bessel.BesselBase": ["<builtin>.property", "<builtin>.classmethod"], "sympy.functions.special.bessel.besselj": ["<builtin>.classmethod"], "sympy.functions.special.bessel.bessely": ["<builtin>.classmethod"], "sympy.functions.special.bessel.besseli": ["<builtin>.classmethod"], "sympy.functions.special.bessel.besselk": ["<builtin>.classmethod"], "sympy.functions.special.bessel.jn": ["<builtin>.classmethod"], "sympy.functions.special.bessel.yn": ["sympy.functions.special.bessel.assume_integer_order"], "sympy.functions.special.bessel.assume_integer_order": ["functools.wraps"], "sympy.functions.special.bessel.SphericalHankelBase": ["sympy.functions.special.bessel.assume_integer_order"], "sympy.functions.special.bessel.hn1": ["sympy.functions.special.bessel.assume_integer_order"], "sympy.functions.special.bessel.hn2": ["sympy.functions.special.bessel.assume_integer_order"], "sympy.functions.special.bessel.airyai": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.special.bessel.airybi": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.functions.special.bessel.airyaiprime": ["<builtin>.classmethod"], "sympy.functions.special.bessel.airybiprime": ["<builtin>.classmethod"], "sympy.functions.special.bessel.marcumq": ["<builtin>.classmethod"], "sympy.functions.special.polynomials": [], "sympy.functions.special.polynomials.OrthogonalPolynomial": ["<builtin>.classmethod"], "sympy.functions.special.polynomials.jacobi": ["<builtin>.classmethod"], "sympy.functions.special.polynomials.gegenbauer": ["<builtin>.classmethod"], "sympy.functions.special.polynomials.chebyshevt": ["<builtin>.classmethod", "<builtin>.staticmethod"], "sympy.functions.special.polynomials.chebyshevu": ["<builtin>.classmethod", "<builtin>.staticmethod"], "sympy.functions.special.polynomials.chebyshevt_root": ["<builtin>.classmethod"], "sympy.functions.special.polynomials.chebyshevu_root": ["<builtin>.classmethod"], "sympy.functions.special.polynomials.legendre": ["<builtin>.classmethod", "<builtin>.staticmethod"], "sympy.functions.special.polynomials.assoc_legendre": ["<builtin>.classmethod"], "sympy.functions.special.polynomials.hermite": ["<builtin>.classmethod", "<builtin>.staticmethod"], "sympy.functions.special.polynomials.hermite_prob": ["<builtin>.classmethod", "<builtin>.staticmethod"], "sympy.functions.special.polynomials.laguerre": ["<builtin>.classmethod", "<builtin>.staticmethod"], "sympy.functions.special.polynomials.assoc_laguerre": ["<builtin>.classmethod"], "sympy.functions.special.spherical_harmonics": [], "sympy.functions.special.spherical_harmonics.Ynm": ["<builtin>.classmethod"], "sympy.functions.special.spherical_harmonics.Znm": ["<builtin>.classmethod"], "sympy.functions.special.elliptic_integrals": [], "sympy.functions.special.elliptic_integrals.elliptic_k": ["<builtin>.classmethod"], "sympy.functions.special.elliptic_integrals.elliptic_f": ["<builtin>.classmethod"], "sympy.functions.special.elliptic_integrals.elliptic_e": ["<builtin>.classmethod"], "sympy.functions.special.elliptic_integrals.elliptic_pi": ["<builtin>.classmethod"], "sympy.functions.special.beta_functions": [], "sympy.functions.special.beta_functions.beta": ["<builtin>.classmethod"], "sympy.functions.special.mathieu_functions": [], "sympy.functions.special.mathieu_functions.mathieus": ["<builtin>.classmethod"], "sympy.functions.special.mathieu_functions.mathieuc": ["<builtin>.classmethod"], "sympy.functions.special.mathieu_functions.mathieusprime": ["<builtin>.classmethod"], "sympy.functions.special.mathieu_functions.mathieucprime": ["<builtin>.classmethod"], "sympy.polys.rootoftools": ["sympy.utilities.decorator.public", "sympy.polys.rootoftools._pure_key_dict.__init__", "sympy.multipledispatch.core.dispatch", "sympy.multipledispatch.core.dispatch._"], "sympy.polys.rootoftools._pure_key_dict.__init__": [], "sympy.polys.rootoftools.ComplexRootOf": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.property", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.polys.rootoftools.RootSum": ["<builtin>.property", "<builtin>.classmethod"], "sympy.polys.numberfields": [], "sympy.polys.numberfields.subfield": ["sympy.utilities.decorator.public"], "sympy.polys.numberfields.utilities": ["sympy.utilities.decorator.public"], "sympy.polys.matrices.exceptions": [], "sympy.printing.lambdarepr": ["<builtin>.setattr"], "sympy.printing.pycode": ["<builtin>.dict", "<builtin>.setattr", "<map>.items"], "sympy.printing.precedence": ["<map>.copy"], "sympy.printing.codeprinter": [], "sympy.printing.str": ["sympy.printing.printer.print_function", "sympy.printing.printer.print_function.decorator"], "sympy.printing.printer": ["contextlib.contextmanager"], "sympy.printing.printer.Printer": ["<builtin>.property", "<builtin>.classmethod"], "sympy.printing.printer._PrintFunction": ["<builtin>.property"], "sympy.printing.printer.print_function": [], "sympy.printing.printer.print_function.decorator": ["sympy.printing.printer._PrintFunction.__init__", "<builtin>.type"], "sympy.printing.printer._PrintFunction.__init__": ["<builtin>.list", "functools.update_wrapper", "inspect.signature"], "sympy.printing.pycode.AbstractPythonCodePrinter": ["<builtin>.dict", "<map>.items"], "sympy.printing.pycode.MpmathPrinter": ["<builtin>.dict", "<map>.items"], "sympy.printing.pycode.SymPyPrinter": ["<builtin>.dict"], "sympy.printing.numpy": ["<builtin>.dict", "<map>.items", "<builtin>.setattr"], "sympy.polys.numberfields.basis": ["sympy.utilities.decorator.public"], "sympy.polys.numberfields.modules": [], "sympy.polys.matrices.domainmatrix": [], "sympy.polys.matrices.domainscalar": [], "sympy.polys.matrices.domainscalar.DomainScalar": ["<builtin>.classmethod"], "sympy.polys.matrices.ddm": [], "sympy.polys.matrices.dense": ["typing.TypeVar.__init__"], "sympy.polys.matrices._typing": ["typing.TypeVar.__init__"], "sympy.polys.matrices.lll": ["sympy.polys.domains.rationalfield.RationalField.__init__"], "sympy.polys.matrices.ddm.DDM": ["sympy.polys.domains.rationalfield.RationalField.__init__", "sympy.utilities.decorator.doctest_depends_on", "sympy.utilities.decorator.doctest_depends_on.depends_on_deco", "<builtin>.classmethod"], "sympy.polys.matrices.sdm": [], "sympy.polys.matrices.sdm.SDM": ["sympy.polys.domains.rationalfield.RationalField.__init__", "sympy.utilities.decorator.doctest_depends_on", "sympy.utilities.decorator.doctest_depends_on.depends_on_deco", "<builtin>.classmethod"], "sympy.polys.matrices.dfm": [], "sympy.polys.matrices.dfm.DFM_dummy": ["<builtin>.classmethod"], "sympy.polys.matrices._dfm": ["sympy.external.importtools.import_module"], "sympy.polys.matrices._dfm.DFM": ["<builtin>.property", "sympy.utilities.decorator.doctest_depends_on", "sympy.utilities.decorator.doctest_depends_on.depends_on_deco", "<builtin>.classmethod"], "sympy.polys.matrices.rref": [], "sympy.polys.matrices.domainmatrix.DomainMatrix": ["sympy.utilities.decorator.doctest_depends_on.depends_on_deco", "<builtin>.classmethod", "sympy.polys.domains.rationalfield.RationalField.__init__", "<builtin>.property", "sympy.utilities.decorator.doctest_depends_on"], "sympy.polys.matrices.normalforms": [], "sympy.polys.numberfields.exceptions": [], "sympy.polys.numberfields.modules.Module": ["<builtin>.property"], "sympy.polys.numberfields.modules.PowerBasis": ["<builtin>.property"], "sympy.polys.numberfields.modules.Submodule": ["<builtin>.property"], "sympy.polys.numberfields.modules.ModuleElement": ["<builtin>.property", "<builtin>.classmethod"], "sympy.polys.numberfields.modules.PowerBasisElement": ["<builtin>.property"], "sympy.polys.numberfields.primes": ["sympy.utilities.decorator.public"], "sympy.polys.numberfields.primes.PrimeIdeal": ["<builtin>.property"], "sympy.polys.numberfields.galoisgroups": ["sympy.utilities.decorator.public"], "sympy.polys.numberfields.galois_resolvents": [], "sympy.polys.numberfields.galois_resolvents.Resolvent": ["<builtin>.staticmethod"], "sympy.polys.partfrac": ["sympy.utilities.decorator.xthreaded", "sympy.utilities.decorator.public"], "sympy.utilities.decorator.xthreaded": ["sympy.utilities.decorator.threaded_factory"], "sympy.utilities.decorator.threaded_factory": ["functools.wraps"], "sympy.matrices": [], "sympy.matrices.exceptions": [], "sympy.matrices.kind": ["sympy.core.kind.KindDispatcher.register", "sympy.core.kind.KindDispatcher.register._"], "sympy.core.kind.KindDispatcher.register": ["<builtin>.RuntimeError", "sympy.multipledispatch.dispatcher.str_signature", "<builtin>.len"], "sympy.multipledispatch.dispatcher.str_signature": [], "sympy.core.kind.KindDispatcher.register._": ["sympy.multipledispatch.dispatcher.Dispatcher.add", "<builtin>.reversed", "<builtin>.tuple"], "sympy.matrices.dense": ["sympy.utilities.decorator.doctest_depends_on", "sympy.utilities.decorator.doctest_depends_on.depends_on_deco"], "sympy.matrices.decompositions": [], "sympy.matrices.utilities": ["sympy.matrices.utilities.DotProdSimpState.__init__", "contextlib.contextmanager"], "sympy.matrices.utilities.DotProdSimpState.__init__": [], "sympy.matrices.determinant": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.matrices.repmatrix": [], "sympy.polys.matrices": [], "sympy.matrices.repmatrix.RepMatrix": ["<builtin>.property", "<builtin>.classmethod"], "sympy.matrices.repmatrix.MutableRepMatrix": ["<builtin>.classmethod"], "sympy.matrices.solvers": [], "sympy.matrices.eigen": [], "sympy.polys.matrices.eigen": [], "sympy.polys.agca.extensions": [], "sympy.polys.agca.extensions.ExtensionElement": ["<builtin>.property"], "sympy.polys.agca.extensions.MonogenicFiniteExtension": ["<builtin>.property"], "sympy.matrices.dense.DenseMatrix": ["<builtin>.property"], "sympy.matrices.sparse": [], "sympy.matrices.sparse.SparseRepMatrix": ["<builtin>.property", "<builtin>.classmethod"], "sympy.matrices.sparse.MutableSparseMatrix": ["<builtin>.classmethod"], "sympy.matrices.sparsetools": [], "sympy.matrices.immutable": ["sympy.multipledispatch.core.dispatch", "sympy.multipledispatch.core.dispatch._"], "sympy.matrices.expressions": [], "sympy.matrices.expressions.slice": [], "sympy.matrices.expressions.matexpr": ["sympy.matrices.expressions.matexpr.get_postprocessor", "sympy.multipledispatch.core.dispatch", "sympy.multipledispatch.core.dispatch._"], "sympy.matrices.expressions.matexpr.MatrixExpr": ["sympy.core.decorators.call_highest_priority", "sympy.core.decorators.call_highest_priority.priority_decorator", "<builtin>.classmethod", "sympy.matrices.expressions.matexpr._sympifyit", "<builtin>.property", "<builtin>.staticmethod", "sympy.matrices.expressions.matexpr._sympifyit.deco"], "sympy.core.decorators.call_highest_priority": [], "sympy.core.decorators.call_highest_priority.priority_decorator": ["functools.wraps"], "sympy.matrices.expressions.matexpr._sympifyit": [], "sympy.matrices.expressions.matexpr._sympifyit.deco": ["functools.wraps"], "sympy.matrices.expressions.matexpr.get_postprocessor": [], "sympy.matrices.expressions.matexpr.MatrixElement": ["<builtin>.property"], "sympy.matrices.expressions.matexpr.MatrixSymbol": ["<builtin>.property"], "sympy.matrices.expressions.matexpr._LeftRightArgs": ["<builtin>.property", "<builtin>.staticmethod"], "sympy.matrices.expressions.matmul": ["sympy.strategies.core.exhaust", "sympy.strategies.tools.typed", "sympy.core.operations.AssocOpDispatcher.register_handlerclass", "sympy.strategies.core.do_one", "sympy.strategies.rl.rm_id"], "sympy.strategies": [], "sympy.strategies.rl": [], "sympy.strategies.util": ["sympy.strategies.util.assoc"], "sympy.strategies.util.assoc": ["<map>.copy"], "sympy.strategies.traverse": [], "sympy.strategies.core": ["typing.TypeVar.__init__"], "sympy.strategies.tools": [], "sympy.strategies.branch": [], "sympy.strategies.branch.traverse": [], "sympy.strategies.branch.core": [], "sympy.strategies.branch.tools": [], "sympy.matrices.expressions._shape": [], "sympy.matrices.expressions.inverse": [], "sympy.matrices.expressions.matpow": [], "sympy.matrices.expressions.special": [], "sympy.matrices.expressions.special.ZeroMatrix": ["<builtin>.property"], "sympy.matrices.expressions.special.GenericZeroMatrix": ["<builtin>.property"], "sympy.matrices.expressions.special.Identity": ["<builtin>.property"], "sympy.matrices.expressions.special.GenericIdentity": ["<builtin>.property"], "sympy.matrices.expressions.special.OneMatrix": ["<builtin>.property"], "sympy.matrices.expressions.matpow.MatPow": ["<builtin>.property", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.matrices.expressions.inverse.Inverse": ["<builtin>.property"], "sympy.matrices.expressions.transpose": [], "sympy.matrices.expressions.transpose.Transpose": ["<builtin>.property"], "sympy.matrices.expressions.permutation": [], "sympy.matrices.expressions.permutation.PermutationMatrix": ["<builtin>.property"], "sympy.matrices.expressions.permutation.MatrixPermute": ["<builtin>.property"], "sympy.matrices.expressions.matmul.MatMul": ["<builtin>.property", "<builtin>.classmethod"], "sympy.core.operations.AssocOpDispatcher.register_handlerclass": ["<builtin>.RuntimeError", "sympy.multipledispatch.dispatcher.str_signature", "<builtin>.len", "<builtin>.set", "<builtin>.reversed", "sympy.multipledispatch.dispatcher.Dispatcher.add", "<builtin>.tuple"], "sympy.strategies.rl.rm_id": [], "sympy.strategies.core.do_one": [], "sympy.strategies.tools.typed": ["sympy.strategies.core.switch"], "sympy.strategies.core.switch": [], "sympy.strategies.core.exhaust": [], "sympy.matrices.expressions.matadd": ["sympy.strategies.core.exhaust", "sympy.strategies.rl.glom", "sympy.core.operations.AssocOpDispatcher.register_handlerclass", "sympy.strategies.core.do_one", "sympy.strategies.rl.rm_id", "sympy.strategies.core.condition", "sympy.strategies.rl.sort"], "sympy.matrices.expressions.matadd.MatAdd": ["<builtin>.property", "<builtin>.classmethod"], "sympy.strategies.rl.glom": [], "sympy.strategies.rl.sort": [], "sympy.strategies.core.condition": [], "sympy.matrices.expressions.determinant": [], "sympy.matrices.expressions.determinant.Determinant": ["<builtin>.property"], "sympy.matrices.expressions.determinant.Permanent": ["<builtin>.property"], "sympy.matrices.expressions.slice.MatrixSlice": ["<builtin>.property"], "sympy.matrices.expressions.blockmatrix": [], "sympy.matrices.expressions.trace": [], "sympy.matrices.expressions.trace.Trace": ["<builtin>.property"], "sympy.matrices.expressions.blockmatrix.BlockMatrix": ["<builtin>.property"], "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix": ["<builtin>.property"], "sympy.matrices.expressions.companion": [], "sympy.matrices.expressions.companion.CompanionMatrix": ["<builtin>.property"], "sympy.matrices.expressions.funcmatrix": [], "sympy.matrices.expressions.funcmatrix.FunctionMatrix": ["<builtin>.property"], "sympy.matrices.expressions.adjoint": [], "sympy.matrices.expressions.adjoint.Adjoint": ["<builtin>.property"], "sympy.matrices.expressions.hadamard": [], "sympy.matrices.expressions.hadamard.HadamardProduct": ["<builtin>.property"], "sympy.matrices.expressions.hadamard.HadamardPower": ["<builtin>.property"], "sympy.matrices.expressions.diagonal": [], "sympy.matrices.expressions.diagonal.DiagonalMatrix": ["<builtin>.property"], "sympy.matrices.expressions.diagonal.DiagonalOf": ["<builtin>.property"], "sympy.matrices.expressions.diagonal.DiagMatrix": ["<builtin>.property"], "sympy.matrices.expressions.dotproduct": [], "sympy.matrices.expressions.kronecker": ["sympy.strategies.core.condition", "sympy.strategies.core.do_one", "sympy.strategies.core.exhaust"], "sympy.matrices.expressions.kronecker.KroneckerProduct": ["<builtin>.property"], "sympy.matrices.expressions.sets": [], "sympy.matrices.expressions.sets.MatrixSet": ["<builtin>.property", "<builtin>.classmethod"], "sympy.matrices.immutable.ImmutableRepMatrix": ["<builtin>.property", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.matrices.immutable.ImmutableDenseMatrix": ["<builtin>.classmethod"], "sympy.matrices.immutable.ImmutableSparseMatrix": ["<builtin>.classmethod"], "sympy.polys.fields": ["sympy.utilities.decorator.public"], "sympy.tensor.array": [], "sympy.tensor.array.dense_ndim_array": [], "sympy.tensor.array.mutable_ndim_array": [], "sympy.tensor.array.ndim_array": [], "sympy.tensor.array.ndim_array.ArrayKind": ["<builtin>.classmethod"], "sympy.tensor.array.ndim_array.NDimArray": ["<builtin>.property", "<builtin>.classmethod"], "sympy.tensor.array.dense_ndim_array.DenseNDimArray": ["<builtin>.property", "<builtin>.classmethod"], "sympy.tensor.array.dense_ndim_array.ImmutableDenseNDimArray": ["<builtin>.classmethod"], "sympy.tensor.array.dense_ndim_array.MutableDenseNDimArray": ["<builtin>.property", "<builtin>.classmethod"], "sympy.tensor.array.sparse_ndim_array": [], "sympy.tensor.array.sparse_ndim_array.SparseNDimArray": ["<builtin>.classmethod"], "sympy.tensor.array.sparse_ndim_array.MutableSparseNDimArray": ["<builtin>.property"], "sympy.tensor.array.arrayop": [], "sympy.tensor.array.array_comprehension": [], "sympy.tensor.array.array_comprehension.ArrayComprehension": ["<builtin>.property", "<builtin>.classmethod"], "sympy.tensor.array.array_comprehension.ArrayComprehensionMap": ["<builtin>.property"], "sympy.matrices.reductions": [], "sympy.matrices.inverse": [], "sympy.matrices.subspaces": [], "sympy.matrices.graph": [], "sympy.matrices.matrixbase.MatrixBase": ["sympy.core.decorators.call_highest_priority", "sympy.core.decorators.call_highest_priority.priority_decorator", "<builtin>.classmethod", "<builtin>.property", "<builtin>.staticmethod"], "sympy.sets.fancysets": [], "sympy.sets.fancysets.Rationals": ["<builtin>.property"], "sympy.sets.fancysets.Naturals": ["<builtin>.property"], "sympy.sets.fancysets.Integers": ["<builtin>.property"], "sympy.sets.fancysets.Reals": ["<builtin>.property"], "sympy.sets.fancysets.ImageSet": ["<builtin>.property", "<builtin>.classmethod"], "sympy.sets.fancysets.Range": ["<builtin>.property"], "sympy.sets.fancysets.ComplexRegion": ["<builtin>.property", "<builtin>.classmethod"], "sympy.sets.fancysets.CartesianComplexRegion": ["sympy.core.symbol.symbols", "<builtin>.property"], "sympy.core.symbol.symbols": ["append", "<builtin>.range", "<builtin>.isinstance", "<builtin>.int", "<builtin>.ValueError", "<builtin>.len", "<str>.endswith", "sympy.core.symbol.symbols.literal", "<builtin>.all", "<builtin>.str", "<builtin>.tuple", "<str>.index", "<str>.rstrip", "<builtin>.chr", "<builtin>.type"], "<str>.rstrip": [], "sympy.core.symbol.symbols.literal": [], "<str>.index": [], "sympy.sets.fancysets.PolarComplexRegion": ["sympy.core.symbol.symbols", "<builtin>.property"], "sympy.sets.fancysets.Complexes": ["<builtin>.property"], "sympy.tensor.indexed": ["sympy.multipledispatch.core.dispatch", "sympy.multipledispatch.core.dispatch._"], "sympy.tensor.indexed.Indexed": ["<builtin>.property"], "sympy.tensor.indexed.IndexedBase": ["<builtin>.property", "<builtin>.staticmethod"], "sympy.tensor.indexed.Idx": ["<builtin>.property"], "sympy.concrete.expr_with_limits.ExprWithLimits": ["<builtin>.property"], "sympy.integrals.rationaltools": [], "sympy.series.formal": [], "sympy.discrete.convolutions": [], "sympy.discrete.transforms": [], "sympy.series.limits": [], "sympy.calculus.accumulationbounds": ["sympy.multipledispatch.core.dispatch", "sympy.multipledispatch.core.dispatch._"], "sympy.series.order": [], "sympy.series.order.Order": ["<builtin>.property", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.calculus.accumulationbounds.AccumulationBounds": ["<builtin>.property", "sympy.core.decorators._sympifyit", "sympy.core.decorators._sympifyit.deco"], "sympy.series.gruntz": ["sympy.utilities.misc.debug_decorator", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.utilities.misc.debug_decorator": [], "sympy.series.limits.Limit": ["<builtin>.property"], "sympy.series.sequences": [], "sympy.series.sequences.SeqBase": ["sympy.core.decorators.call_highest_priority", "sympy.core.decorators.call_highest_priority.priority_decorator", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.property", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.series.sequences.EmptySequence": ["<builtin>.property"], "sympy.series.sequences.SeqExpr": ["<builtin>.property"], "sympy.series.sequences.SeqPer": ["<builtin>.property"], "sympy.series.sequences.SeqFormula": ["<builtin>.property"], "sympy.series.sequences.RecursiveSeq": ["<builtin>.property"], "sympy.series.sequences.SeqExprOp": ["<builtin>.property"], "sympy.series.sequences.SeqAdd": ["<builtin>.staticmethod"], "sympy.series.sequences.SeqMul": ["<builtin>.staticmethod"], "sympy.series.series_class": [], "sympy.series.series_class.SeriesBase": ["<builtin>.property", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.series.formal.Coeff": ["<builtin>.classmethod"], "sympy.series.formal.FormalPowerSeries": ["<builtin>.property"], "sympy.series.formal.FiniteFormalPowerSeries": ["<builtin>.property"], "sympy.series.formal.FormalPowerSeriesProduct": ["<builtin>.property"], "sympy.series.formal.FormalPowerSeriesCompose": ["<builtin>.property"], "sympy.series.formal.FormalPowerSeriesInverse": ["<builtin>.property"], "sympy.tensor.functions": ["functools.singledispatch"], "sympy.tensor.functions.TensorProduct": ["<builtin>.property"], "sympy.integrals.integrals.Integral": ["<builtin>.property"], "sympy.integrals.deltafunctions": [], "sympy.integrals.meijerint": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.integrals.trigonometry": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.concrete.summations": [], "sympy.calculus.singularities": [], "sympy.concrete.expr_with_intlimits": [], "sympy.concrete.expr_with_intlimits.ExprWithIntLimits": ["<builtin>.property"], "sympy.concrete.gosper": [], "sympy.series.limitseq": [], "sympy.series.residues": [], "sympy.concrete.products": [], "sympy.concrete.products.Product": ["<builtin>.property"], "sympy.core.expr.Expr": ["sympy.core.decorators.sympify_return.wrapper", "sympy.core.decorators.call_highest_priority", "sympy.core.decorators.call_highest_priority.priority_decorator", "<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.property", "sympy.core.decorators.sympify_return", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.core.expr.AtomicExpr": ["<builtin>.property"], "sympy.core.expr.ExprBuilder": ["<builtin>.staticmethod"], "sympy.core.multidimensional": [], "sympy.printing.conventions": ["re.compile"], "sympy.printing.pretty.pretty.PrettyPrinter": ["<builtin>.property"], "sympy.printing.latex": ["re.compile", "<builtin>.frozenset", "sympy.printing.printer.print_function", "sympy.printing.printer.print_function.decorator"], "sympy.core.alphabets": [], "sympy.vector.basisdependent": [], "sympy.simplify.simplify": ["sympy.utilities.decorator.deprecated.deprecated_decorator", "sympy.utilities.decorator.deprecated"], "sympy.simplify.combsimp": [], "sympy.simplify.gammasimp": [], "sympy.simplify.gammasimp._rf": ["<builtin>.classmethod"], "sympy.simplify.cse_opts": [], "sympy.simplify.hyperexpand": [], "sympy.series": [], "sympy.series.series": [], "sympy.series.approximants": ["sympy.utilities.decorator.public"], "sympy.series.fourier": [], "sympy.series.fourier.FourierSeries": ["<builtin>.property"], "sympy.series.fourier.FiniteFourierSeries": ["<builtin>.property"], "sympy.simplify.powsimp": [], "sympy.simplify.hyperexpand.Hyper_Function": ["<builtin>.property"], "sympy.simplify.hyperexpand.G_Function": ["<builtin>.property"], "sympy.simplify.hyperexpand.Formula": ["<builtin>.property"], "sympy.simplify.hyperexpand.MeijerFormula": ["<builtin>.property"], "sympy.simplify.hyperexpand.ReduceOrder": ["<builtin>.classmethod"], "sympy.simplify.radsimp": [], "sympy.simplify.sqrtdenest": [], "sympy.simplify.trigsimp": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.simplify.cse_main": [], "sympy.simplify.cse_main.Unevaluated": ["<builtin>.property"], "sympy.strategies.tree": [], "sympy.vector.vector": [], "sympy.vector.coordsysrect": [], "sympy.solvers": [], "sympy.solvers.solvers": ["sympy.utilities.decorator.conserve_mpmath_dps"], "sympy.simplify": [], "sympy.simplify.fu": ["<builtin>.dict", "<builtin>.zip", "<builtin>.list", "<builtin>.locals", "<builtin>.map"], "sympy.simplify.epathtools": [], "sympy.simplify.ratsimp": [], "sympy.polys.solvers": [], "sympy.polys.domainmatrix": [], "sympy.polys.solvers.RawMatrix": ["<builtin>.staticmethod"], "sympy.solvers.polysys": [], "sympy.utilities.decorator.conserve_mpmath_dps": ["functools.update_wrapper"], "sympy.solvers.bivariate": [], "sympy.solvers.diophantine.diophantine": ["sympy.core.symbol.symbols", "<builtin>.sorted"], "sympy.solvers.solveset": [], "sympy.polys.matrices.linsolve": [], "sympy.sets": [], "sympy.sets.contains": [], "sympy.sets.contains.Contains": ["<builtin>.property"], "sympy.sets.conditionset": [], "sympy.sets.conditionset.ConditionSet": ["<builtin>.property"], "sympy.sets.ordinals": [], "sympy.sets.ordinals.OmegaPower": ["<builtin>.property"], "sympy.sets.ordinals.Ordinal": ["<builtin>.property", "<builtin>.classmethod"], "sympy.sets.ordinals.OrdinalOmega": ["<builtin>.property"], "sympy.sets.powerset": [], "sympy.sets.powerset.PowerSet": ["<builtin>.property", "sympy.core.decorators._sympifyit", "sympy.core.decorators._sympifyit.deco"], "sympy.sets.handlers.comparison": ["sympy.multipledispatch.core.dispatch", "sympy.multipledispatch.core.dispatch._"], "sympy.calculus.util": [], "sympy.solvers.diophantine.diophantine.DiophantineEquationType": ["<builtin>.property"], "sympy.solvers.diophantine.diophantine.GeneralPythagorean": ["<builtin>.property"], "sympy.solvers.recurr": [], "sympy.concrete": [], "sympy.solvers.ode": [], "sympy.solvers.ode.ode": ["sympy.core.multidimensional.vectorize.__init__"], "sympy.solvers.deutils": [], "sympy.core.multidimensional.vectorize.__init__": ["<builtin>.isinstance", "<builtin>.TypeError"], "sympy.solvers.ode.single": [], "sympy.solvers.ode.riccati": [], "sympy.integrals": [], "sympy.integrals.transforms": ["sympy.integrals.transforms._noconds_.make_wrapper", "sympy.integrals.transforms._noconds_"], "sympy.integrals.transforms.IntegralTransform": ["<builtin>.property"], "sympy.integrals.transforms._noconds_": [], "sympy.integrals.transforms._noconds_.make_wrapper": ["functools.wraps"], "sympy.integrals.transforms.InverseMellinTransform": ["<builtin>.property"], "sympy.integrals.transforms.HankelTypeTransform": ["<builtin>.property"], "sympy.integrals.laplace": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.integrals.laplace.DEBUG_WRAP", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.integrals.laplace.DEBUG_WRAP": [], "sympy.integrals.laplace.InverseLaplaceTransform": ["<builtin>.property"], "sympy.integrals.singularityfunctions": [], "sympy.solvers.ode.hypergeometric": [], "sympy.solvers.ode.nonhomogeneous": [], "sympy.solvers.ode.subscheck": [], "sympy.solvers.ode.lie_group": [], "sympy.solvers.pde": [], "sympy.solvers.ode.single.SingleODEProblem": ["sympy.core.cache.cached_property"], "sympy.core.cache.cached_property": ["<builtin>.property", "<builtin>.object"], "sympy.solvers.ode.single.NthAlgebraic": ["<builtin>.staticmethod"], "sympy.solvers.ode.systems": [], "sympy.solvers.inequalities": [], "sympy.logic": [], "sympy.solvers.decompogen": [], "sympy.solvers.simplex": [], "sympy.vector.scalar": [], "sympy.vector.scalar.BaseScalar": ["<builtin>.property"], "sympy.vector": [], "sympy.vector.dyadic": [], "sympy.vector.dyadic.Dyadic": ["<builtin>.property"], "sympy.vector.dyadic.DyadicMul": ["<builtin>.property"], "sympy.vector.deloperator": [], "sympy.vector.operators": [], "sympy.vector.functions": [], "sympy.vector.point": [], "sympy.vector.point.Point": ["sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.vector.orienters": [], "sympy.vector.orienters.AxisOrienter": ["<builtin>.property", "sympy.core.cache.__cacheit_nocache", "sympy.core.cache.__cacheit_debug.func_wrapper", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.vector.orienters.ThreeAngleOrienter": ["<builtin>.property"], "sympy.vector.orienters.QuaternionOrienter": ["<builtin>.property"], "sympy.vector.implicitregion": [], "sympy.solvers.diophantine": [], "sympy.geometry": [], "sympy.geometry.point": [], "sympy.geometry.exceptions": [], "sympy.geometry.entity": ["<builtin>.range", "sympy.multipledispatch.core.dispatch", "sympy.multipledispatch.core.dispatch._"], "sympy.sets.handlers.intersection": ["sympy.multipledispatch.dispatcher.Dispatcher.register", "sympy.multipledispatch.dispatcher.Dispatcher.__init__", "sympy.multipledispatch.dispatcher.Dispatcher.register._"], "sympy.multipledispatch.dispatcher.Dispatcher.register": [], "sympy.multipledispatch.dispatcher.Dispatcher.register._": ["sympy.multipledispatch.dispatcher.Dispatcher.add"], "sympy.sets.handlers.union": ["sympy.multipledispatch.dispatcher.Dispatcher.register", "sympy.multipledispatch.dispatcher.Dispatcher.__init__", "sympy.multipledispatch.dispatcher.Dispatcher.register._"], "sympy.geometry.entity.GeometryEntity": ["<builtin>.property"], "sympy.geometry.point.Point": ["<builtin>.property", "<builtin>.staticmethod", "<builtin>.classmethod"], "sympy.geometry.point.Point2D": ["<builtin>.property"], "sympy.geometry.point.Point3D": ["<builtin>.property", "<builtin>.staticmethod"], "sympy.geometry.line": ["<builtin>.range"], "sympy.geometry.util": [], "sympy.geometry.line.LinearEntity": ["<builtin>.property", "<builtin>.staticmethod"], "sympy.geometry.line.Ray": ["<builtin>.property"], "sympy.geometry.line.Segment": ["<builtin>.property"], "sympy.geometry.line.LinearEntity2D": ["<builtin>.property"], "sympy.geometry.line.Line2D": ["<builtin>.property"], "sympy.geometry.line.Ray2D": ["<builtin>.property"], "sympy.geometry.line.LinearEntity3D": ["<builtin>.property"], "sympy.geometry.line.Ray3D": ["<builtin>.property"], "sympy.geometry.plane": ["<builtin>.range"], "sympy.geometry.plane.Plane": ["<builtin>.property", "<builtin>.staticmethod"], "sympy.geometry.ellipse": ["<builtin>.range"], "sympy.geometry.ellipse.Ellipse": ["<builtin>.property"], "sympy.geometry.ellipse.Circle": ["<builtin>.property"], "sympy.geometry.polygon": ["<builtin>.range"], "sympy.geometry.polygon.Polygon": ["<builtin>.property", "<builtin>.staticmethod"], "sympy.geometry.polygon.RegularPolygon": ["<builtin>.property"], "sympy.geometry.polygon.Triangle": ["<builtin>.property"], "sympy.geometry.curve": [], "sympy.geometry.curve.Curve": ["<builtin>.property"], "sympy.geometry.parabola": [], "sympy.geometry.parabola.Parabola": ["<builtin>.property"], "sympy.vector.implicitregion.ImplicitRegion": ["<builtin>.property"], "sympy.vector.parametricregion": ["functools.singledispatch"], "sympy.vector.parametricregion.ParametricRegion": ["<builtin>.property"], "sympy.vector.integrals": [], "sympy.vector.integrals.ParametricIntegral": ["<builtin>.property", "<builtin>.classmethod"], "sympy.vector.coordsysrect.CoordSys3D": ["<builtin>.classmethod", "sympy.core.cache.__cacheit_debug.func_wrapper", "<builtin>.property", "sympy.core.cache.__cacheit_nocache", "<builtin>.staticmethod", "sympy.core.cache.__cacheit.func_wrapper"], "sympy.vector.vector.Vector": ["<builtin>.property"], "sympy.vector.vector.BaseVector": ["<builtin>.property"], "sympy.vector.vector.VectorMul": ["<builtin>.property"], "sympy.vector.basisdependent.BasisDependent": ["sympy.core.decorators._sympifyit", "sympy.core.decorators.call_highest_priority", "sympy.core.decorators.call_highest_priority.priority_decorator", "sympy.core.decorators._sympifyit.deco"], "sympy.vector.basisdependent.BasisDependentZero": ["sympy.core.decorators.call_highest_priority", "sympy.core.decorators.call_highest_priority.priority_decorator"], "sympy.printing.latex.LatexPrinter": ["<builtin>.property"], "sympy.printing.python": [], "sympy.printing.repr": ["sympy.printing.printer.print_function", "sympy.printing.printer.print_function.decorator"], "sympy.printing.smtlib": [], "sympy.assumptions.relation.equality": [], "sympy.assumptions.relation.equality.EqualityPredicate": ["<builtin>.property"], "sympy.assumptions.relation.equality.UnequalityPredicate": ["<builtin>.property"], "sympy.assumptions.relation.equality.StrictGreaterThanPredicate": ["<builtin>.property"], "sympy.assumptions.relation.equality.GreaterThanPredicate": ["<builtin>.property"], "sympy.assumptions.relation.equality.StrictLessThanPredicate": ["<builtin>.property"], "sympy.assumptions.relation.equality.LessThanPredicate": ["<builtin>.property"], "sympy.printing.glsl": [], "sympy.printing.glsl.GLSLPrinter": ["<builtin>.dict", "<builtin>.set"], "sympy.printing.rcode": [], "sympy.printing.rcode.RCodePrinter": ["<builtin>.dict", "<builtin>.set"], "sympy.printing.jscode": [], "sympy.printing.jscode.JavascriptCodePrinter": ["<builtin>.dict"], "sympy.printing.julia": [], "sympy.printing.julia.JuliaCodePrinter": ["<builtin>.dict"], "sympy.printing.mathematica": [], "sympy.printing.mathematica.MCodePrinter": ["<builtin>.dict", "<builtin>.set"], "sympy.printing.octave": [], "sympy.printing.octave.OctaveCodePrinter": ["<builtin>.dict"], "sympy.printing.rust": [], "sympy.printing.rust.RustCodePrinter": ["<builtin>.dict", "<builtin>.set"], "sympy.printing.gtk": [], "sympy.utilities.mathml": ["sympy.utilities.decorator.doctest_depends_on", "sympy.utilities.decorator.doctest_depends_on.depends_on_deco"], "sympy.printing.preview": ["sympy.utilities.decorator.doctest_depends_on", "sympy.utilities.decorator.doctest_depends_on.depends_on_deco"], "sympy.printing.tree": [], "sympy.printing.tableform": [], "sympy.printing.dot": [], "sympy.printing.maple": [], "sympy.printing.maple.MapleCodePrinter": ["<builtin>.dict"], "sympy.interactive.traversal.interactive_traversal": ["sympy.interactive.traversal.interactive_traversal._interactive_traversal"], "sympy.interactive.traversal.interactive_traversal._interactive_traversal": ["<builtin>.print", "<builtin>.isinstance", "<builtin>.enumerate", "<builtin>.hasattr", "<builtin>.len", "sympy.interactive.traversal.interactive_traversal.cprint", "<builtin>.list", "<builtin>.input", "sympy.printing.pretty.pretty.pprint", "<builtin>.type"], "sympy.interactive.traversal.interactive_traversal.cprint": ["<builtin>.map", "<builtin>.print"], "sympy.printing.pretty.pretty.pprint": [], "<builtin>.input": [], "sympy.utilities.iterables.default_sort_key": [], "sympy.utilities.iterables.ordered": [], "sympy.discrete": [], "sympy.tensor": [], "sympy.tensor.index_methods": [], "sympy.parsing": [], "sympy.parsing.sympy_parser": ["sympy.parsing.sympy_parser.split_symbols_custom", "sympy.parsing.sympy_parser._T.__init__", "<map>.items", "sympy.utilities.misc.func_name"], "sympy.parsing.sympy_parser.split_symbols_custom": [], "sympy.utilities.misc.func_name": ["<map>.get", "<builtin>.getattr", "<builtin>.str", "<builtin>.type"], "sympy.parsing.sympy_parser._T.__init__": ["<builtin>.len"], "sympy.calculus": [], "sympy.calculus.euler": [], "sympy.calculus.finite_diff": [], "sympy.algebras": [], "sympy.algebras.quaternion": [], "sympy.algebras.quaternion.Quaternion": ["<builtin>.property", "<builtin>.staticmethod", "<builtin>.classmethod"], "sympy.core.cache.lazy_function": [], "sympy.core.cache.lazy_function.LazyFunctionMeta": ["<builtin>.property"], "sympy.core.cache.lazy_function.LazyFunction": ["<builtin>.property"], "sympy.plotting.plot": [], "sympy.plotting.backends.base_backend": [], "sympy.plotting.series": [], "sympy.plotting.utils": [], "sympy.plotting.intervalmath": [], "sympy.plotting.intervalmath.interval_arithmetic": [], "sympy.plotting.intervalmath.interval_membership": [], "sympy.plotting.intervalmath.interval_arithmetic.interval": ["<builtin>.property"], "sympy.plotting.intervalmath.lib_interval": [], "sympy.plotting.series.BaseSeries": ["<builtin>.property", "<builtin>.staticmethod"], "sympy.plotting.series.Line2DBaseSeries": ["<builtin>.property"], "sympy.plotting.series.LineOver1DRangeSeries": ["<builtin>.property"], "sympy.plotting.series.ParametricLineBaseSeries": ["<builtin>.property"], "sympy.plotting.series.SurfaceOver2DRangeSeries": ["<builtin>.property"], "sympy.plotting.series.ParametricSurfaceSeries": ["<builtin>.property"], "sympy.plotting.series.ImplicitSeries": ["<builtin>.property", "<builtin>.staticmethod"], "sympy.plotting.backends.base_backend.Plot": ["<builtin>.property"], "sympy.plotting.backends.matplotlibbackend": [], "sympy.plotting.backends.matplotlibbackend.matplotlib": [], "sympy.plotting.backends.matplotlibbackend.matplotlib.MatplotlibBackend": ["<builtin>.staticmethod"], "sympy.plotting.backends.textbackend": [], "sympy.plotting.backends.textbackend.text": [], "sympy.plotting.textplot": [], "sympy.plotting.plotgrid": [], "sympy.plotting.plotgrid.PlotGrid": ["<builtin>.property"], "sympy.plotting": [], "sympy.plotting.plot_implicit": ["sympy.utilities.decorator.doctest_depends_on", "sympy.utilities.decorator.doctest_depends_on.depends_on_deco"], "sympy.plotting.pygletplot": ["sympy.utilities.decorator.doctest_depends_on", "sympy.utilities.decorator.doctest_depends_on.depends_on_deco"], "sympy.interactive": [], "sympy.interactive.printing": [], "sympy.interactive.session": [], "torch._prims_common.CUDARngStateHelper": ["contextlib.nullcontext.__init__", "<builtin>.staticmethod"], "contextlib.nullcontext.__init__": [], "torch.nn.modules.module.Module": ["typing.TypeVar.__init__", "typing.overload"], "torch.nn.modules.linear": [], "torch.nn.init": ["torch.nn.init._make_deprecate"], "torch.nn.init._make_deprecate": [], "torch.nn.modules.lazy": [], "torch.nn.modules.lazy._LazyProtocol": ["<builtin>.property"], "torch.nn.modules.activation": [], "torch.nn.modules.adaptive": ["collections.namedtuple"], "torch.nn.modules.container": ["typing.TypeVar.__init__"], "torch.nn.modules.container.Sequential": ["torch._jit_internal._copy_to_script_wrapper", "typing.overload"], "torch._jit_internal._copy_to_script_wrapper": [], "torch.nn.modules.container.ModuleList": ["torch._jit_internal._copy_to_script_wrapper", "typing.overload"], "torch.nn.modules.container.ModuleDict": ["torch._jit_internal._copy_to_script_wrapper"], "torch.nn.modules.container.ParameterList": ["typing.overload"], "torch.nn.modules.batchnorm": [], "torch.nn.modules._functions": [], "torch.nn.modules._functions.SyncBatchNorm": ["<builtin>.staticmethod"], "torch.nn.modules._functions.CrossMapLRN2d": ["<builtin>.staticmethod"], "torch.nn.modules._functions.BackwardHookFunction": ["<builtin>.staticmethod"], "torch.nn.modules.batchnorm.SyncBatchNorm": ["<builtin>.classmethod"], "torch.nn.modules.channelshuffle": [], "torch.nn.modules.conv": [], "torch.nn.common_types": ["typing.TypeVar.__init__"], "torch.nn.modules.conv._ConvTransposeMixin": ["typing_extensions.deprecated.__init__"], "torch.nn.modules.distance": [], "torch.nn.modules.dropout": [], "torch.nn.modules.flatten": [], "torch.nn.modules.fold": [], "torch.nn.modules.instancenorm": [], "torch.nn.modules.loss": [], "torch.nn.modules.normalization": [], "torch.nn.modules.padding": [], "torch.nn.modules.pixelshuffle": [], "torch.nn.modules.pooling": [], "torch.nn.modules.rnn": ["typing_extensions.deprecated.__init__"], "torch.nn.utils.rnn": ["typing.TypeVar.__init__"], "torch.nn.utils.rnn.PackedSequence": ["<builtin>.property", "typing.overload"], "torch.nn.modules.rnn.RNNBase": ["<builtin>.property"], "torch.nn.modules.rnn.RNN": ["typing.overload", "torch._jit_internal._overload_method"], "torch._jit_internal._overload_method": ["torch._jit_internal._qualified_name", "<builtin>.RuntimeError", "append", "torch._jit_internal.get_class_name_lineno", "<map>.get", "torch._jit_internal._check_overload_body"], "torch._jit_internal.get_class_name_lineno": ["<builtin>.range", "inspect.currentframe"], "torch.nn.modules.rnn.LSTM": ["typing.overload", "torch._jit_internal._overload_method"], "torch.nn.modules.rnn.GRU": ["typing.overload", "torch._jit_internal._overload_method"], "torch.nn.modules.sparse": [], "torch.nn.modules.sparse.Embedding": ["<builtin>.classmethod"], "torch.nn.modules.sparse.EmbeddingBag": ["<builtin>.classmethod"], "torch.nn.modules.transformer": [], "torch.nn.modules.transformer.Transformer": ["<builtin>.staticmethod"], "torch.nn.modules.upsampling": [], "torch.nn.attention": ["contextlib.contextmanager"], "torch.nn.parallel": [], "torch.nn.parallel.data_parallel": ["typing.TypeVar.__init__"], "torch.nn.parallel.parallel_apply": [], "torch.nn.parallel.replicate": ["typing.TypeVar.__init__"], "torch.nn.parallel.comm": [], "torch.cuda.nccl": [], "torch.nn.parallel.scatter_gather": ["typing_extensions.deprecated.__init__", "typing.overload", "typing.TypeVar.__init__"], "torch.nn.parallel._functions": [], "torch.nn.parallel._functions.Broadcast": ["<builtin>.staticmethod"], "torch.nn.parallel._functions.ReduceAddCoalesced": ["<builtin>.staticmethod"], "torch.nn.parallel._functions.Gather": ["<builtin>.staticmethod"], "torch.nn.parallel._functions.Scatter": ["<builtin>.staticmethod"], "torch.nn.parallel.distributed": ["torch.distributed.is_available", "torch.distributed.rpc.is_available", "logging.getLogger"], "torch.distributed.algorithms.join": [], "torch.distributed.algorithms.join.Joinable": ["abc.abstractmethod", "<builtin>.property"], "torch.distributed.algorithms.join._JoinConfig": ["<builtin>.staticmethod"], "torch.distributed.algorithms.join.Join": ["<builtin>.staticmethod"], "torch.distributed.utils": ["typing.TypeVar.__init__", "typing.overload"], "torch.nn.parallel.distributed._DDPSink": ["<builtin>.staticmethod"], "torch.nn.parallel.distributed.DistributedDataParallel": ["<builtin>.classmethod", "<builtin>.property", "contextlib.contextmanager", "torch._compile._disable_dynamo", "torch._compile._disable_dynamo.inner", "<builtin>.staticmethod"], "torch._compile._disable_dynamo": ["functools.wraps"], "torch._compile._disable_dynamo.inner": ["<builtin>.getattr"], "torch._dynamo": ["torch._compile._disable_dynamo", "torch.jit._builtins._register_builtin"], "torch._dynamo.convert_frame": ["torch._dynamo.convert_frame.Tracker.__init__", "torch._dynamo.eval_frame.TorchPatcher.suppress_torch_distributed_warnings", "typing_extensions.ParamSpec.__init__", "typing.TypeVar.__init__", "torch._logging._internal.getArtifactLogger", "collections.Counter.__init__", "threading.RLock", "functools.wraps", "collections.OrderedDict.__init__", "logging.getLogger"], "cProfile": [], "profile": [], "pstats": [], "torch._logging": [], "torch._logging._registrations": ["torch._logging._internal.register_artifact", "torch._logging._internal.register_log"], "torch._logging._internal": ["_weakrefset.WeakSet.__init__", "torch._logging._internal._default_formatter", "functools.lru_cache", "re.escape", "functools.lru_cache.decorating_function", "logging.getLogger"], "torch._logging.structured": ["<builtin>.set"], "torch.utils._traceback": ["contextlib.contextmanager"], "torch.utils._traceback.CapturedTraceback": ["<builtin>.staticmethod"], "torch._logging._internal.LogRegistry": ["dataclasses.field"], "torch._logging._internal.LogState": ["dataclasses.field"], "torch._logging._internal._default_formatter": ["torch._logging._internal.TorchLogsFormatter.__init__", "logging.Formatter.__init__"], "torch._logging._internal.TorchLogsFormatter.__init__": ["<builtin>.super"], "torch._guards": ["typing.TypeVar.__init__", "contextlib.contextmanager", "logging.getLogger"], "unittest.mock": ["<builtin>.dir", "unittest.mock._Sentinel.__init__", "unittest.mock._Call.__init__", "inspect.signature", "<builtin>.type"], "asyncio": [], "asyncio.base_events": ["<builtin>.object", "<builtin>.hasattr"], "concurrent.futures": [], "concurrent.futures._base": ["collections.namedtuple", "logging.getLogger"], "concurrent.futures._base.Future": ["<builtin>.classmethod"], "ssl": ["collections.namedtuple", "<builtin>.hasattr", "<builtin>.getattr"], "ssl._ASN1Object": ["<builtin>.classmethod"], "ssl.SSLContext": ["<builtin>.property", "<builtin>.hasattr"], "ssl.SSLObject": ["<builtin>.property", "<builtin>.classmethod"], "ssl.SSLSocket": ["<builtin>.property", "ssl._sslcopydoc", "<builtin>.classmethod"], "ssl._sslcopydoc": ["<builtin>.getattr"], "asyncio.constants": [], "asyncio.coroutines": ["asyncio.coroutines._is_debug_mode", "<builtin>.set", "<builtin>.object"], "asyncio.base_futures": ["<builtin>.set"], "asyncio.format_helpers": [], "asyncio.log": ["logging.getLogger"], "asyncio.coroutines._is_debug_mode": ["<builtin>.bool"], "asyncio.coroutines.CoroWrapper": ["<builtin>.property"], "asyncio.events": [], "asyncio.exceptions": [], "asyncio.futures": [], "asyncio.futures.Future": ["<builtin>.property", "<builtin>.classmethod"], "asyncio.protocols": [], "asyncio.sslproto": [], "asyncio.transports": [], "asyncio.sslproto._SSLPipe": ["<builtin>.property"], "asyncio.sslproto._SSLProtocolTransport": ["<builtin>.property"], "asyncio.staggered": [], "asyncio.locks": [], "asyncio.mixins": ["<builtin>.object"], "asyncio.tasks": ["_weakrefset.WeakSet.__init__", "types.coroutine"], "asyncio.base_tasks": [], "asyncio.tasks.Task": ["<builtin>.classmethod"], "types.coroutine": ["<builtin>.callable", "functools.wraps", "<builtin>.TypeError", "<builtin>.getattr"], "asyncio.trsock": [], "asyncio.trsock.TransportSocket": ["<builtin>.property"], "asyncio.base_events.Server": ["<builtin>.property"], "asyncio.runners": [], "asyncio.queues": [], "asyncio.queues.Queue": ["<builtin>.property", "<builtin>.classmethod"], "asyncio.streams": ["<builtin>.hasattr"], "asyncio.streams.StreamReaderProtocol": ["<builtin>.property"], "asyncio.streams.StreamWriter": ["<builtin>.property"], "asyncio.subprocess": [], "asyncio.subprocess.Process": ["<builtin>.property"], "asyncio.threads": [], "asyncio.windows_events": ["<builtin>.ImportError"], "asyncio.base_subprocess": [], "asyncio.proactor_events": [], "asyncio.selector_events": [], "asyncio.windows_utils": ["<builtin>.ImportError"], "asyncio.windows_utils.PipeHandle": ["<builtin>.property"], "pprint": ["<builtin>.frozenset", "<builtin>.type"], "unittest.util": ["collections.namedtuple"], "unittest.mock._Sentinel.__init__": [], "unittest.mock.NonCallableMock": ["<builtin>.property", "unittest.mock._delegating_property"], "unittest.mock._delegating_property": ["<builtin>.property"], "unittest.mock._patch": ["contextlib.contextmanager"], "unittest.mock.AsyncMockMixin": ["unittest.mock._delegating_property"], "unittest.mock._Call": ["<builtin>.property"], "unittest.mock._Call.__init__": [], "torch.utils.weak": [], "torch._guards.Guard": ["<builtin>.property", "<builtin>.staticmethod"], "torch._guards.Checkpointable": ["abc.abstractmethod"], "torch._guards.GuardsCheckpointState": ["<builtin>.set"], "torch._guards.CompileContext": ["<builtin>.staticmethod"], "torch._guards.TracingContext": ["contextlib.contextmanager", "<builtin>.staticmethod"], "torch._logging._internal.register_log": ["torch._logging._internal.LogRegistry.register_log"], "torch._logging._internal.LogRegistry.register_log": ["<builtin>.isinstance"], "torch._logging._internal.register_artifact": ["torch._logging._internal.LogRegistry.register_artifact_name"], "torch._logging._internal.LogRegistry.register_artifact_name": ["logging.Formatter.__init__"], "torch._dynamo.distributed": [], "torch._dynamo.config": ["<builtin>.int", "torch._dynamo.config.is_fbcode", "<builtin>.set", "posixpath.abspath", "torch._dynamo.config.default_debug_dir_root", "<builtin>.bool", "torch.utils._config_module.install_config_module", "posixpath.dirname", "extend"], "getpass": [], "torch._dynamo.config.is_fbcode": ["<builtin>.hasattr"], "torch._dynamo.config.default_debug_dir_root": ["getpass.getuser", "torch._dynamo.config.is_fbcode", "ntpath.join", "posixpath.join", "tempfile.gettempdir"], "tempfile.gettempdir": ["tempfile._gettempdir"], "tempfile._gettempdir": ["tempfile._get_default_tempdir"], "tempfile._get_default_tempdir": ["tempfile._candidate_tempdir_list", "<builtin>.range", "<builtin>.next", "ntpath.join", "posixpath.join", "posixpath.abspath", "genericpath.isdir", "<builtin>.FileNotFoundError", "ntpath.abspath"], "tempfile._candidate_tempdir_list": ["os.getenv", "extend", "append"], "<builtin>.FileNotFoundError": [], "getpass.getuser": [], "torch.utils._config_module": ["<builtin>.type"], "unittest": ["extend"], "unittest.result": [], "unittest.result.TestResult": ["unittest.result.failfast"], "unittest.result.failfast": ["functools.wraps"], "unittest.case": ["<builtin>.object"], "unittest.case._Outcome": ["contextlib.contextmanager"], "unittest.case._AssertRaisesContext": ["<builtin>.classmethod"], "unittest.case.TestCase": ["contextlib.contextmanager", "<builtin>.classmethod", "unittest.case.TestCase._deprecate"], "unittest.case.TestCase._deprecate": [], "unittest.suite": [], "unittest.loader": ["re.compile", "unittest.loader.TestLoader.__init__"], "unittest.loader.TestLoader": ["<builtin>.staticmethod"], "unittest.loader.TestLoader.__init__": ["<builtin>.set", "<builtin>.super"], "unittest.main": [], "unittest.runner": [], "unittest.signals": ["weakref.WeakKeyDictionary.__init__"], "torch.utils._config_module.ConfigModule": ["typing_extensions.deprecated.__init__"], "torch.utils._config_module.install_config_module": ["<builtin>.set", "torch.utils._config_module.install_config_module.visit", "torch.utils._config_module.get_assignments_with_compile_ignored_comments"], "torch.utils._config_module.install_config_module.ConfigModuleInstance": ["<builtin>.set"], "torch.utils._config_module.get_assignments_with_compile_ignored_comments": ["<builtin>.set", "inspect.getsource", "<str>.encode", "tokenize.tokenize"], "inspect.getsource": ["inspect.getsourcelines"], "torch.utils._config_module.install_config_module.visit": ["<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.AssertionError", "<builtin>.list", "torch.utils._config_module.install_config_module.visit", "<builtin>.setattr", "torch.utils._config_module.SubConfigProxy.__init__", "<builtin>.delattr", "<builtin>.type"], "torch.utils._config_module.SubConfigProxy.__init__": ["<builtin>.super"], "torch._dynamo.utils": ["typing.overload", "functools.lru_cache", "<builtin>.iter", "torch._dynamo.utils.DuplicateWarningChecker.__init__", "<builtin>.set", "typing.TypeVar.__init__", "torch.utils._triton.has_triton_package", "functools.lru_cache.decorating_function", "torch._dynamo.utils.ExactWeakKeyDictionary.__init__", "contextlib.contextmanager", "collections.OrderedDict.__init__", "logging.getLogger", "collections.OrderedDict.values", "<builtin>.type"], "uuid": ["platform.system", "uuid.UUID.__init__", "<builtin>.getattr"], "uuid.UUID": ["<builtin>.property"], "uuid.UUID.__init__": ["<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.len", "<builtin>.TypeError", "<builtin>.repr"], "torch._functorch.config": ["torch.utils._config_module.install_config_module", "torch._inductor.config.is_fbcode"], "torch._inductor.config": ["torch._inductor.config.decide_worker_start_method", "<builtin>.int", "torch._inductor.config.autotune_remote_cache_default", "ntpath.join", "posixpath.join", "torch._inductor.config.is_fbcode", "torch._inductor.config.fx_graph_remote_cache_default", "torch.utils._config_module.install_config_module", "torch._inductor.config.decide_compile_threads"], "torch._inductor.config.is_fbcode": ["<builtin>.hasattr"], "torch._inductor.config.fx_graph_remote_cache_default": [], "torch._inductor.config.autotune_remote_cache_default": [], "torch._inductor.config.decide_worker_start_method": ["torch._inductor.config.is_fbcode"], "torch._inductor.config.decide_compile_threads": ["<builtin>.int", "<builtin>.min", "<builtin>.len", "<builtin>.hasattr", "torch._inductor.config.is_fbcode"], "torch._inductor.config.cpp": ["<builtin>.int"], "torch._inductor.config.triton": ["<builtin>.int", "torch._inductor.config.is_fbcode"], "torch._inductor.config.cuda": ["ntpath.dirname", "ntpath.join", "posixpath.join", "posixpath.abspath", "posixpath.dirname", "ntpath.abspath"], "torch.fx.experimental.symbolic_shapes": ["torch.fx.experimental.symbolic_shapes.lru_cache.inner", "torch.fx.experimental.symbolic_shapes.lru_cache", "logging.getLogger"], "torch.fx": [], "torch.fx.graph_module": ["torch.fx._compatibility.compatibility.mark_back_compat", "torch.fx._compatibility.compatibility.mark_not_back_compat", "torch.fx._compatibility.compatibility", "torch.fx.graph_module._EvalCacheLoader.__init__"], "torch.package": [], "torch.package.analyze.is_from_package": [], "torch.package.file_structure_representation": [], "torch.package.glob_group": [], "torch.package.glob_group.GlobGroup": ["<builtin>.staticmethod"], "torch.package.importer": [], "torch.package.importer.Importer": ["abc.abstractmethod"], "torch.package.package_exporter": [], "pickletools": ["pickletools.assure_pickle_consistency", "<builtin>.enumerate", "<builtin>.ValueError", "pickletools.OpcodeInfo.__init__", "pickletools.ArgumentDescriptor.__init__", "pickletools.StackObject.__init__", "<builtin>.type"], "pickletools.ArgumentDescriptor.__init__": ["<builtin>.isinstance"], "pickletools.StackObject.__init__": ["<builtin>.isinstance"], "pickletools.OpcodeInfo.__init__": ["<builtin>.isinstance", "<builtin>.len"], "pickletools.assure_pickle_consistency": ["append", "<builtin>.print", "<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.len", "<map>.copy", "re.match", "<map>.items", "<builtin>.getattr"], "torch.package._digraph": [], "torch.package._digraph.DiGraph": ["<builtin>.property"], "torch.package._importlib": [], "torch.package._package_pickler": [], "torch.package._stdlib": [], "torch.package.find_file_dependencies": [], "torch.package.find_file_dependencies._ExtractModuleReferences": ["<builtin>.classmethod"], "torch.package.package_importer": ["<builtin>.object", "weakref.WeakValueDictionary.__init__"], "torch.package._directory_reader": [], "torch.package._package_unpickler": [], "torch.fx._compatibility": ["typing.TypeVar.__init__"], "torch.fx.graph": ["<builtin>.dict", "torch.fx.graph._register_custom_builtin", "<builtin>.type"], "torch.fx.node": ["torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat", "<builtin>.hasattr", "<builtin>.float", "torch.fx._compatibility.compatibility.mark_back_compat"], "torch.fx.immutable_collections": ["torch.utils._pytree.register_pytree_node", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat", "torch.fx._compatibility.compatibility.mark_back_compat", "torch.fx.immutable_collections._create_immutable_container"], "torch.fx.immutable_collections._create_immutable_container": ["<builtin>.setattr", "<builtin>.type"], "torch.fx._compatibility.compatibility": [], "torch.fx._compatibility.compatibility.mark_back_compat": ["textwrap.dedent", "<builtin>.getattr"], "torch.fx._compatibility.compatibility.mark_not_back_compat": ["textwrap.dedent", "<builtin>.getattr"], "torch.utils._pytree.register_pytree_node": ["torch.utils._cxx_pytree._private_register_pytree_node", "torch.utils._pytree._private_register_pytree_node"], "torch.utils._cxx_pytree": ["typing.overload", "typing_extensions.deprecated.__init__", "typing.TypeVar.__init__", "torch.utils._cxx_pytree._private_register_pytree_node", "<builtin>.type"], "torch.utils._cxx_pytree._private_register_pytree_node": ["torch.utils._cxx_pytree._reverse_args"], "torch.utils._cxx_pytree._reverse_args": ["functools.wraps"], "torch.fx.operator_schemas": ["torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat", "<builtin>.dir", "typing.TypeVar.__init__", "<builtin>.getattr", "torch.fx._compatibility.compatibility.mark_back_compat", "torch.fx.operator_schemas._nonzero_schemas", "<builtin>.type"], "torch.fx.operator_schemas._nonzero_schemas": ["append"], "torch.fx.node.Node": ["torch.fx._compatibility.compatibility.mark_back_compat", "<builtin>.property", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat"], "torch.fx._pytree": ["torch.fx._pytree.register_pytree_flatten_spec"], "torch.return_types": ["append", "inspect.isclass", "<builtin>.globals", "torch.return_types.pytree_register_structseq", "<builtin>.dir", "<builtin>.issubclass", "<builtin>.getattr"], "torch.return_types.pytree_register_structseq": ["torch.utils._pytree.register_pytree_node"], "torch.fx._pytree.register_pytree_flatten_spec": [], "torch.fx._symbolic_trace": ["torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat", "contextlib.contextmanager", "torch.fx._symbolic_trace.wrap", "torch.fx._compatibility.compatibility.mark_back_compat"], "torch.fx._lazy_graph_module": ["torch.fx._compatibility.compatibility.mark_back_compat", "contextlib.contextmanager", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat"], "torch.fx._lazy_graph_module._LazyGraphModule": ["<builtin>.property", "<builtin>.staticmethod", "<builtin>.classmethod"], "torch.fx.proxy": ["torch.fx.proxy._scope", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat", "torch.fx.proxy._define_reflectable", "torch.fx._compatibility.compatibility.mark_back_compat", "logging.getLogger"], "torch.fx.traceback": ["torch.fx._compatibility.compatibility.mark_back_compat", "contextlib.contextmanager", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat"], "torch.fx.proxy.TracerBase": ["torch.fx._compatibility.compatibility.mark_back_compat", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat"], "torch.fx.proxy.Proxy": ["torch.fx._compatibility.compatibility.mark_back_compat", "<builtin>.classmethod", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat"], "torch.fx.proxy.Attribute": ["torch.fx._compatibility.compatibility.mark_back_compat", "<builtin>.property", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat"], "torch.fx.proxy.ParameterProxy": ["<builtin>.property"], "torch.fx.proxy._scope": ["<builtin>.setattr"], "torch.fx.proxy._define_reflectable": ["<builtin>.setattr"], "torch.fx._symbolic_trace.Tracer": ["torch.fx._compatibility.compatibility.mark_back_compat", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat"], "torch.fx._symbolic_trace.wrap": ["<builtin>.RuntimeError", "<builtin>.isinstance", "<builtin>.id", "<builtin>.callable", "inspect.currentframe", "<builtin>.NotImplementedError"], "torch.fx.graph._register_custom_builtin": [], "torch.fx.graph.Graph": ["torch.fx._compatibility.compatibility.mark_back_compat", "<builtin>.property", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat"], "torch.fx.graph_module._EvalCacheLoader.__init__": [], "torch.fx.graph_module._WrappedCall": ["<builtin>.staticmethod"], "torch.fx.graph_module.GraphModule": ["torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat", "<builtin>.property", "contextlib.contextmanager", "torch.fx._compatibility.compatibility.mark_back_compat"], "torch.fx.interpreter": [], "torch.fx.config": [], "torch.hub": ["re.compile", "typing_extensions.deprecated.__init__", "contextlib.contextmanager"], "zipfile": [], "zipfile.ZipInfo": ["<builtin>.classmethod"], "zipfile._ZipWriteFile": ["<builtin>.property"], "zipfile.ZipFile": ["<builtin>.property", "<builtin>.classmethod"], "zipfile.CompleteDirs": ["<builtin>.classmethod", "<builtin>.staticmethod"], "zipfile.Path": ["<builtin>.property"], "urllib.error": [], "urllib.response": [], "urllib.response.addinfourl": ["<builtin>.property"], "urllib.error.HTTPError": ["<builtin>.property"], "urllib.request": ["re.compile", "append", "<builtin>.hasattr"], "email": [], "http.client": ["re.compile", "<builtin>.globals"], "email.parser": [], "email.feedparser": ["re.compile", "<builtin>.object"], "email.errors": [], "email._policybase": [], "email.header": ["re.compile", "email.charset.Charset.__init__"], "email.quoprimime": ["<builtin>.range", "<str>.encode", "<builtin>.chr", "<builtin>.ord"], "email.base64mime": [], "email.charset": [], "email.encoders": [], "quopri": [], "email.charset.Charset.__init__": ["<map>.get", "<builtin>.isinstance", "<str>.encode", "<builtin>.str"], "email.utils": ["re.compile"], "email._parseaddr": [], "calendar": ["datetime.date.toordinal", "calendar._localized_day.__init__", "calendar._localized_month.__init__", "<builtin>.range"], "calendar._localized_month": ["<builtin>.range"], "calendar._localized_day": ["<builtin>.range"], "calendar._localized_day.__init__": [], "calendar._localized_month.__init__": [], "calendar.Calendar": ["<builtin>.property"], "datetime.date.toordinal": ["datetime._ymd2ord"], "datetime._ymd2ord": ["datetime._days_before_month", "datetime._days_in_month", "datetime._days_before_year"], "datetime._days_in_month": ["datetime._is_leap"], "datetime._is_leap": [], "datetime._days_before_month": ["datetime._is_leap"], "email._policybase.Policy": ["abc.abstractmethod"], "email.message": ["re.compile"], "uu": [], "email._encoded_words": ["re.compile", "<builtin>.ord"], "email._encoded_words._QByteMap": ["<str>.encode"], "email.iterators": [], "http": [], "http.client.HTTPConnection": ["<builtin>.staticmethod"], "urllib.request.Request": ["<builtin>.property"], "urllib.request.AbstractBasicAuthHandler": ["re.compile"], "nturl2path": [], "tqdm": [], "tqdm._monitor": [], "tqdm._tqdm_pandas": [], "tqdm.cli": ["re.compile", "logging.getLogger"], "tqdm.std": [], "tqdm.utils": ["re.compile", "<builtin>.any"], "tqdm.utils.DisableOnWriteError": ["<builtin>.staticmethod"], "tqdm.std.TqdmDefaultWriteLock": ["tqdm.std.TRLock", "<builtin>.classmethod"], "tqdm.std.TRLock": ["threading.RLock"], "tqdm.std.Bar": ["<builtin>.map", "<builtin>.range", "<builtin>.property"], "tqdm.std.tqdm": ["_weakrefset.WeakSet.__init__", "<builtin>.classmethod", "<builtin>.property", "contextlib.contextmanager", "tqdm.utils.envwrap", "tqdm.utils.envwrap.wrap", "<builtin>.staticmethod"], "tqdm.utils.envwrap": ["<builtin>.len"], "tqdm.utils.envwrap.wrap": ["<builtin>.getattr", "inspect.signature", "<builtin>.type"], "tqdm.version": [], "tqdm._dist_ver": [], "tqdm.gui": [], "torch.fx.interpreter.Interpreter": ["torch.fx._compatibility.compatibility.mark_back_compat", "contextlib.contextmanager", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat"], "torch.fx.interpreter.Transformer": ["torch.fx._compatibility.compatibility.mark_back_compat", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat"], "torch.fx.subgraph_rewriter": ["torch.fx._compatibility.compatibility.mark_back_compat", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat"], "torch.fx.passes.utils.matcher_with_name_node_map_utils": [], "torch.fx.passes.utils.matcher_utils": ["torch.fx.passes.utils.matcher_utils._init_logger"], "torch.fx.passes.utils.matcher_utils._init_logger": ["logging.StreamHandler.__init__", "logging.Handler.setFormatter", "logging.Handler.setLevel", "logging.Formatter.__init__", "logging.getLogger"], "logging.Handler.setLevel": ["logging._checkLevel"], "torch.fx.passes.utils.matcher_utils.InternalMatch": ["dataclasses.field"], "torch.fx.experimental._config": ["torch.utils._config_module.install_config_module", "<builtin>.int"], "torch.fx.experimental.recording": ["torch._logging._internal.getArtifactLogger", "logging.getLogger"], "torch._logging._internal.getArtifactLogger": ["torch._logging._internal.configure_artifact_log", "<builtin>.ValueError", "<builtin>.repr", "logging.getLogger", "torch._logging._internal.LogRegistry.register_artifact_log"], "torch._logging._internal.LogRegistry.register_artifact_log": [], "torch._logging._internal.configure_artifact_log": ["torch._logging._internal.LogRegistry.is_off_by_default", "torch._logging._internal.LogState.is_artifact_enabled"], "torch._logging._internal.LogRegistry.is_off_by_default": [], "torch._logging._internal.LogState.is_artifact_enabled": [], "torch.fx.experimental.recording.FakeTensorMeta": ["<builtin>.staticmethod"], "torch.fx.experimental.sym_node": ["append", "torch.fx.experimental.sym_node._make_node_magic", "torch.fx.experimental.sym_node._make_node_sizes_strides", "torch.fx.experimental.sym_node._make_user_magic", "<map>.items", "torch.fx.experimental.sym_node._get_sym_node_fn", "torch._logging._internal.getArtifactLogger", "torch.fx.experimental.sym_node._get_sym_math_fn", "<builtin>.setattr", "logging.getLogger", "<builtin>.getattr"], "torch.fx.experimental.sym_node.SymNode": ["<builtin>.property"], "torch.fx.experimental.sym_node._get_sym_node_fn": [], "torch.fx.experimental.sym_node._get_sym_math_fn": [], "torch.fx.experimental.sym_node._make_node_magic": ["<builtin>.setattr", "functools.lru_cache.decorating_function", "functools.lru_cache"], "torch.fx.experimental.sym_node._make_node_sizes_strides": ["<builtin>.setattr", "<builtin>.hasattr"], "torch.fx.experimental.sym_node._make_user_magic": ["functools.update_wrapper", "<builtin>.setattr", "<builtin>.getattr"], "torch.utils._sympy.functions": ["torch.utils._sympy.functions.make_opaque_unary_fn"], "torch.utils._sympy.numbers": [], "torch.utils._sympy.numbers.IntInfinity": ["sympy.core.decorators._sympifyit", "sympy.core.decorators._sympifyit.deco"], "torch.utils._sympy.numbers.NegativeIntInfinity": ["sympy.core.decorators._sympifyit", "sympy.core.decorators._sympifyit.deco"], "torch.utils._sympy.functions.FloorDiv": ["<builtin>.property", "<builtin>.classmethod"], "torch.utils._sympy.functions.ModularIndexing": ["<builtin>.classmethod"], "torch.utils._sympy.functions.Where": ["<builtin>.classmethod"], "torch.utils._sympy.functions.PythonMod": ["<builtin>.classmethod"], "torch.utils._sympy.functions.Mod": ["<builtin>.classmethod"], "torch.utils._sympy.functions.CeilToInt": ["<builtin>.classmethod"], "torch.utils._sympy.functions.FloorToInt": ["<builtin>.classmethod"], "torch.utils._sympy.functions.LShift": ["<builtin>.classmethod"], "torch.utils._sympy.functions.RShift": ["<builtin>.classmethod"], "torch.utils._sympy.functions.MinMaxBase": ["<builtin>.classmethod"], "torch.utils._sympy.functions.PowByNatural": ["<builtin>.classmethod"], "torch.utils._sympy.functions.FloatPow": ["<builtin>.classmethod"], "torch.utils._sympy.functions.FloatTrueDiv": ["<builtin>.classmethod"], "torch.utils._sympy.functions.IntTrueDiv": ["<builtin>.classmethod"], "torch.utils._sympy.functions.IsNonOverlappingAndDenseIndicator": ["<builtin>.classmethod"], "torch.utils._sympy.functions.TruncToFloat": ["<builtin>.classmethod"], "torch.utils._sympy.functions.TruncToInt": ["<builtin>.classmethod"], "torch.utils._sympy.functions.RoundToInt": ["<builtin>.classmethod"], "torch.utils._sympy.functions.RoundDecimal": ["<builtin>.classmethod"], "torch.utils._sympy.functions.ToFloat": ["<builtin>.classmethod"], "torch.utils._sympy.functions.make_opaque_unary_fn": [], "torch.utils._sympy.functions.make_opaque_unary_fn.OpaqueUnaryFn": ["<builtin>.classmethod"], "torch.utils._sympy.solve": ["logging.getLogger"], "torch.utils._sympy.value_ranges": ["typing.TypeVar.__init__", "logging.getLogger"], "torch.utils._sympy.interp": ["logging.getLogger", "functools.lru_cache", "functools.lru_cache.decorating_function"], "torch.utils._sympy.value_ranges.ValueRanges": ["<builtin>.classmethod", "typing.overload", "<builtin>.staticmethod"], "torch.utils._sympy.value_ranges.SymPyValueRangeAnalysis": ["<builtin>.classmethod", "<builtin>.staticmethod"], "torch.utils._sympy.value_ranges.ValueRangeAnalysis": ["<builtin>.classmethod", "<builtin>.staticmethod"], "torch.utils._sympy.singleton_int": ["sympy.multipledispatch.core.dispatch", "sympy.multipledispatch.core.dispatch._"], "torch.utils._sympy.singleton_int.SingletonInt": ["<builtin>.property"], "torch._subclasses.meta_utils": [], "torch.utils._mode_utils": ["typing.TypeVar.__init__"], "torch._subclasses.fake_tensor": ["functools.lru_cache", "typing.TypeVar.__init__", "functools.lru_cache.decorating_function", "torch._subclasses.fake_tensor.ordered_set", "torch._logging._internal.getArtifactLogger", "contextlib.contextmanager", "<builtin>.str", "logging.getLogger"], "torch.multiprocessing.reductions": ["torch.multiprocessing.reductions.SharedCache.__init__"], "multiprocessing.util": ["multiprocessing.util._platform_supports_abstract_sockets", "weakref.WeakValueDictionary.__init__"], "multiprocessing.util._platform_supports_abstract_sockets": ["<builtin>.hasattr"], "multiprocessing.resource_sharer": ["multiprocessing.resource_sharer._ResourceSharer.__init__"], "multiprocessing.resource_sharer._ResourceSharer": ["<builtin>.staticmethod"], "multiprocessing.resource_sharer._ResourceSharer.__init__": ["multiprocessing.util.register_after_fork"], "multiprocessing.util.register_after_fork": ["<builtin>.id", "<builtin>.next"], "torch.multiprocessing.reductions.StorageWeakRef": ["<builtin>.classmethod"], "torch.multiprocessing.reductions.SharedCache.__init__": ["torch.multiprocessing.reductions.SharedCache._after_fork", "multiprocessing.util.register_after_fork"], "torch.multiprocessing.reductions.SharedCache._after_fork": [], "torch.utils._backport_slots": ["typing.TypeVar.__init__"], "torch.utils._stats": ["collections.OrderedDict.__init__"], "torch._subclasses._fake_tensor_utils": [], "torch._subclasses._fake_tensor_utils._DeconstructedSymNode": ["<builtin>.staticmethod"], "torch._subclasses._fake_tensor_utils._DeconstructedSymType": ["<builtin>.staticmethod"], "torch._subclasses.fake_tensor.FakeTensorConverter": ["<builtin>.property"], "torch._subclasses.fake_tensor.FakeTensor": ["<builtin>.classmethod", "torch._subclasses.fake_tensor.SymIntMemoDescriptor.__init__", "<builtin>.property", "torch.utils._stats.count", "<builtin>.staticmethod"], "torch._subclasses.fake_tensor.SymIntMemoDescriptor.__init__": [], "torch.utils._stats.count": ["functools.wraps"], "torch._subclasses.fake_tensor.FakeTensorMode": ["torch._subclasses.fake_tensor.ordered_set", "<builtin>.property", "torch.utils._stats.count", "<builtin>.classmethod"], "torch._subclasses.fake_tensor.ordered_set": [], "torch._subclasses.fake_impls": ["functools.lru_cache", "torch._subclasses.fake_impls.ordered_set", "functools.lru_cache.decorating_function", "torch._subclasses.fake_impls.register_op_impl", "torch._subclasses.fake_impls.register_op_impl.impl_decorator"], "torch._custom_op": [], "torch._dispatch.python": ["contextlib.contextmanager"], "torch._subclasses.fake_impls.ordered_set": [], "torch._subclasses.fake_impls.register_op_impl": [], "torch._subclasses.fake_impls.register_op_impl.impl_decorator": ["append", "<builtin>.isinstance", "<builtin>.callable", "torch._subclasses.fake_impls.register_op_impl", "torch._subclasses.fake_impls.register_op_impl.impl_decorator"], "torch._subclasses.meta_utils.MetaTensorDesc": ["<builtin>.property"], "torch.utils._sympy.symbol": [], "torch._dynamo.source": [], "torch._dynamo.bytecode_transformation": ["<builtin>.set"], "torch._dynamo.bytecode_analysis": ["<builtin>.set"], "torch._dynamo.source.DefaultsSource": ["dataclasses.field"], "torch.fx.experimental.symbolic_shapes.lru_cache": [], "torch.fx.experimental.symbolic_shapes.lru_cache.inner": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "torch.fx.experimental.symbolic_shapes.RuntimeAssert": ["dataclasses.field"], "torch.fx.experimental.symbolic_shapes.DimConstraints": ["<builtin>.classmethod"], "torch.fx.experimental.symbolic_shapes.ShapeEnv": ["torch.fx.experimental.symbolic_shapes.lru_cache", "torch.fx.experimental.symbolic_shapes.lru_cache.inner", "torch.fx.experimental.symbolic_shapes._lru_cache", "torch.fx.experimental.recording.record_shapeenv_event.decorator", "<builtin>.property", "contextlib.contextmanager", "torch.fx.experimental.recording.record_shapeenv_event"], "torch.fx.experimental.recording.record_shapeenv_event": [], "torch.fx.experimental.recording.record_shapeenv_event.decorator": ["<builtin>.callable", "functools.wraps", "inspect.getfullargspec"], "inspect.getfullargspec": ["append", "inspect._signature_from_callable", "<builtin>.TypeError"], "torch.fx.experimental.symbolic_shapes._lru_cache": ["torch.fx.experimental.symbolic_shapes.lru_cache.inner", "torch.fx.experimental.symbolic_shapes.lru_cache", "functools.wraps"], "torch.fx._utils": [], "torch.utils._triton": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "torch._numpy": ["<builtin>.float"], "torch._numpy.fft": ["torch._numpy.fft.upcast", "torch._numpy._normalizations.normalizer"], "torch._numpy._dtypes_impl": ["collections.namedtuple"], "torch._numpy._casting_dicts": [], "torch._numpy._util": [], "torch._numpy._normalizations": ["typing.TypeVar.__init__"], "torch._numpy._dtypes": ["<map>.keys", "<builtin>.list", "<map>.items", "<builtin>.vars"], "torch._numpy._dtypes.DType": ["<builtin>.property"], "torch._numpy.fft.upcast": ["functools.wraps"], "torch._numpy._normalizations.normalizer": ["torch._numpy._normalizations.normalizer.normalizer_inner"], "torch._numpy._normalizations.normalizer.normalizer_inner": ["functools.wraps"], "torch._numpy.linalg": ["torch._numpy.linalg.linalg_errors", "torch._numpy._normalizations.normalizer"], "torch._numpy.linalg.linalg_errors": ["functools.wraps"], "torch._numpy.random": ["torch._numpy._normalizations.normalizer", "torch._numpy.random.deco_stream"], "torch._numpy.random.deco_stream": ["functools.wraps"], "torch._numpy._funcs": ["append", "torch._numpy._funcs.IndexExpression.__init__", "<builtin>.vars", "torch._numpy._normalizations.normalizer", "torch._numpy._funcs._public_functions"], "torch._numpy._funcs_impl": [], "torch._numpy._reductions_impl": ["torch._numpy._reductions_impl._deco_axis_expand"], "torch._numpy._reductions_impl._deco_axis_expand": ["functools.wraps"], "torch._numpy._funcs._public_functions": ["inspect.getmembers"], "torch._numpy._funcs._public_functions.is_public_function": ["inspect.isfunction"], "torch._numpy._funcs.IndexExpression.__init__": [], "torch._numpy._getlimits": [], "torch._numpy._ndarray": [], "torch._numpy._ufuncs": ["torch._numpy._ufuncs.deco_unary_ufunc", "<builtin>.vars", "torch._numpy._ufuncs.deco_binary_ufunc", "torch._numpy._normalizations.normalizer", "<builtin>.dir", "<builtin>.getattr"], "torch._numpy._binary_ufuncs_impl": [], "torch._numpy._unary_ufuncs_impl": [], "torch._numpy._ufuncs.deco_binary_ufunc": ["torch._numpy._normalizations.normalizer"], "torch._numpy._ufuncs.deco_unary_ufunc": ["torch._numpy._normalizations.normalizer"], "torch._numpy._ndarray.ndarray": ["<builtin>.vars", "torch._numpy._normalizations.normalizer", "<builtin>.property", "torch._numpy._ndarray.create_method", "<map>.items", "<builtin>.getattr"], "torch._numpy._ndarray.create_method": [], "torch._dynamo.utils.DuplicateWarningChecker.__init__": ["torch._dynamo.utils.DuplicateWarningChecker.reset"], "torch._dynamo.utils.DuplicateWarningChecker.reset": ["collections.OrderedDict.__init__"], "torch._dynamo.utils.CleanupHook": ["<builtin>.staticmethod"], "torch.utils._triton.has_triton_package": [], "triton.compiler.compiler": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "triton.backends": ["triton.backends._discover_backends"], "triton.backends.driver": [], "triton.backends.driver.DriverBase": ["abc.abstractmethod", "abc.abstractclassmethod.__init__"], "abc.abstractclassmethod.__init__": ["<builtin>.super"], "triton.backends.compiler": [], "triton.backends.compiler.BaseBackend": ["abc.abstractmethod", "abc.abstractclassmethod.__init__", "<builtin>.staticmethod"], "triton.backends._discover_backends": ["<builtin>.dict", "ntpath.dirname", "triton.backends._find_concrete_subclasses", "ntpath.join", "posixpath.join", "triton.backends._load_module", "posixpath.dirname", "genericpath.isdir"], "triton.backends._load_module": [], "triton.backends._find_concrete_subclasses": ["append", "<builtin>.RuntimeError", "<builtin>.isinstance", "<builtin>.len", "<builtin>.dir", "<builtin>.issubclass", "inspect.isabstract", "<builtin>.getattr"], "inspect.isabstract": ["<builtin>.type", "<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.issubclass", "<builtin>.getattr"], "triton": [], "triton.runtime": [], "triton.runtime.autotuner": [], "triton.testing": ["contextlib.contextmanager"], "triton.language": [], "triton.language.math": ["triton.language.math._add_math_3arg_docstr._decorator", "triton.language.math._check_dtype", "typing.TypeVar.__init__", "triton.language.math._add_math_2arg_docstr", "triton.language.core._tensor_member_fn", "triton.language.math._add_math_2arg_docstr._decorator", "triton.language.math._add_math_3arg_docstr", "triton.language.math._add_math_1arg_docstr", "triton.language.math._add_math_1arg_docstr._decorator", "triton.language.core.builtin", "triton.language.math._check_dtype.wrapper"], "triton.language.core": ["triton.language.core.dtype.__init__", "typing.TypeVar.__init__", "triton.language.core._tensor_member_fn", "triton.runtime.jit.jit", "triton.language.core._add_atomic_docstr", "triton.language.core._add_atomic_docstr._decorator", "contextlib.contextmanager", "triton.language.core.constexpr.__init__", "triton.language.core.pointer_type.__init__", "triton.language.core.builtin"], "triton.runtime.jit": ["typing.overload", "<builtin>.len", "typing.TypeVar.__init__", "<map>.values", "<builtin>.list"], "triton.runtime.driver": ["triton.runtime.driver.DriverConfig.__init__"], "triton.runtime.driver.DriverConfig.__init__": ["triton.runtime.driver.LazyProxy.__init__"], "triton.runtime.driver.LazyProxy.__init__": [], "triton.runtime.jit.DependenciesFinder": ["<builtin>.property"], "triton.runtime.jit.KernelParam": ["functools.cached_property.__init__", "<builtin>.property"], "<map>.values": [], "triton.runtime.jit.JITFunction": ["<builtin>.property", "<builtin>.staticmethod"], "triton.runtime.jit.MockTensor": ["<builtin>.staticmethod"], "triton.language.semantic": ["typing.TypeVar.__init__"], "triton.language.core.builtin": ["<builtin>.callable", "functools.wraps", "<builtin>.setattr"], "triton.language.core.dtype": ["<builtin>.property", "<builtin>.staticmethod"], "triton.language.core.pointer_type": ["<builtin>.property"], "triton.language.core.block_type": ["<builtin>.property"], "triton.language.core.dtype.__init__": ["<builtin>.RuntimeError", "<builtin>.int", "<builtin>.hasattr"], "triton.language.core.pointer_type.__init__": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.type"], "triton.language.core.constexpr.__init__": ["<builtin>.isinstance"], "triton.language.core.tensor": ["<builtin>.property", "triton.language.core.builtin"], "triton.language.core._tensor_member_fn": ["<builtin>.len", "triton.language.core.is_builtin", "<builtin>.callable", "<builtin>.list", "<builtin>.setattr", "inspect.signature"], "triton.language.core.is_builtin": ["<builtin>.getattr"], "triton.runtime.jit.jit": [], "triton.language.core._add_atomic_docstr": [], "triton.language.core._add_atomic_docstr._decorator": [], "triton.language.math._add_math_2arg_docstr": [], "triton.language.math._add_math_2arg_docstr._decorator": [], "triton.language.math._check_dtype": [], "triton.language.math._check_dtype.wrapper": ["functools.wraps"], "triton.language.math._add_math_1arg_docstr": [], "triton.language.math._add_math_1arg_docstr._decorator": [], "triton.language.math._add_math_3arg_docstr": [], "triton.language.math._add_math_3arg_docstr._decorator": [], "triton.language.extra": [], "triton.language.extra.cuda": [], "triton.language.extra.cuda.libdevice": ["triton.language.core.extern"], "triton.language.core.extern": ["triton.language.core.builtin"], "triton.language.extra.cuda.utils": ["triton.language.core.extern", "triton.language.core.builtin"], "triton.language.extra.hip": [], "triton.language.extra.hip.libdevice": ["triton.language.core.extern"], "triton.language.standard": ["triton.language.core._add_reduction_docstr", "triton.language.core._add_reduction_docstr._decorator", "triton.language.core._add_scan_docstr._decorator", "triton.language.core._tensor_member_fn", "triton.runtime.jit.jit", "triton.language.math._add_math_1arg_docstr", "triton.language.core._add_scan_docstr", "triton.language.math._add_math_1arg_docstr._decorator", "triton.language.core.builtin"], "triton.language.core._add_reduction_docstr": [], "triton.language.core._add_reduction_docstr._decorator": [], "triton.language.core._add_scan_docstr": [], "triton.language.core._add_scan_docstr._decorator": [], "triton.language.random": ["triton.runtime.jit.jit"], "triton.runtime.errors": [], "triton.errors": [], "triton.runtime.cache": [], "triton.runtime.cache.CacheManager": ["abc.abstractmethod"], "triton.runtime.cache.RemoteCacheBackend": ["abc.abstractmethod"], "triton.compiler": [], "triton.compiler.errors": [], "triton.tools": [], "triton.compiler.code_generator": ["<builtin>.type"], "triton.compiler.code_generator.CodeGenerator": ["triton.compiler.code_generator.CodeGenerator.static_executor"], "triton.compiler.code_generator.CodeGenerator.static_executor": [], "triton.compiler.compiler.AttrsDescriptor": ["<builtin>.staticmethod"], "torch._subclasses": [], "torch._subclasses.fake_utils": [], "torch._dynamo.utils.ExactWeakKeyDictionary.__init__": [], "torch._dynamo.utils.CompileTimeInstructionCounter": ["contextlib.contextmanager", "<builtin>.classmethod"], "torch._dynamo.exc": ["logging.getLogger", "<builtin>.object"], "torch._dynamo.trace_rules": ["<builtin>.sorted", "torch._dynamo.trace_rules.add", "functools.lru_cache", "<builtin>.set", "torch._dynamo.trace_rules._as_posix_path", "re.escape", "torch._dynamo.trace_rules._recompile_re", "functools.lru_cache.decorating_function", "re.compile", "importlib.import_module", "torch._dynamo.trace_rules._module_dir", "torch.distributed.is_available", "<builtin>.map", "torch._dynamo.trace_rules.FunctionIdSet.__init__", "extend"], "torch._inductor.test_operators": [], "torch._inductor.test_operators.Realize": ["<builtin>.staticmethod"], "torch.utils._content_store": ["torch.utils._content_store.lazy_compile.decorate_fn", "torch.utils._content_store.lazy_compile"], "torch._prims": ["torch._prims._make_var_reduction_prim", "torch._prims.debug_prims.register_debug_prims", "torch._prims._make_reduction_prim", "torch.library.Library.__init__", "torch._prims._make_elementwise_unary_prim", "torch._prims._make_prim", "torch._prims._make_elementwise_binary_prim", "torch._prims.rng_prims.register_rng_prims"], "torch._higher_order_ops.effects": ["torch._ops.HigherOrderOperator.py_impl", "weakref.WeakKeyDictionary.__init__", "torch._ops.HigherOrderOperator.fallthrough", "torch._higher_order_ops.effects.WithEffects.__init__"], "torch._higher_order_ops.torchbind": ["torch._higher_order_ops.utils.autograd_not_implemented", "torch._higher_order_ops.torchbind.CallTorchBind.__init__", "torch._ops.HigherOrderOperator.py_impl", "torch._ops.OperatorBase.py_functionalize_impl", "torch.fx.node.has_side_effect", "contextlib.contextmanager", "logging.getLogger"], "torch._functorch._aot_autograd.utils": ["torch._logging._internal.getArtifactLogger", "<builtin>.type"], "torch.fx.experimental._backward_state": [], "torch.fx.experimental.proxy_tensor": ["typing.overload", "torch.utils._pytree.register_pytree_node", "typing_extensions.ParamSpec.__init__", "typing.TypeVar.__init__", "torch._logging._internal.getArtifactLogger", "contextlib.contextmanager", "torch._compile._disable_dynamo", "logging.getLogger", "<builtin>.object", "<builtin>.type"], "torch.fx.passes.shape_prop": [], "torch.utils._thunk": ["typing.TypeVar.__init__"], "torch.fx.experimental.proxy_tensor.PythonKeyTracer": ["typing.overload"], "torch.fx.experimental.proxy_tensor.ProxyTorchDispatchMode": ["<builtin>.property", "torch.utils._stats.count", "<builtin>.classmethod"], "torch.fx.experimental.proxy_tensor._MakefxTracer": ["contextlib.contextmanager"], "torch._higher_order_ops.utils": ["contextlib.contextmanager"], "torch._higher_order_ops.torchbind.CallTorchBind.__init__": ["<builtin>.super"], "torch.fx.node.has_side_effect": [], "torch._higher_order_ops.utils.autograd_not_implemented": [], "torch._ops.OperatorBase.py_functionalize_impl": ["torch._ops.OperatorBase.py_impl", "torch._ops.OperatorBase.py_impl.inner"], "torch._subclasses.functional_tensor": ["torch._logging._internal.getArtifactLogger", "torch._subclasses.functional_tensor.FunctionalTensorMode.__init__", "contextlib.contextmanager"], "torch._subclasses.functional_tensor.FunctionalTensor": ["<builtin>.property", "torch._subclasses.functional_tensor._conversion_method_template", "<builtin>.staticmethod"], "torch._subclasses.functional_tensor._conversion_method_template": [], "torch._subclasses.functional_tensor.FunctionalTensorMode": ["<builtin>.classmethod"], "torch._subclasses.functional_tensor.FunctionalTensorMode.__init__": ["weakref.WeakKeyDictionary.__init__", "<builtin>.super"], "torch._subclasses.functional_tensor.BaseFunctionalizeAPI": ["abc.abstractmethod"], "torch._ops.OperatorBase.py_impl": [], "torch._ops.OperatorBase.py_impl.inner": ["<builtin>.RuntimeError", "<builtin>.isinstance", "inspect.isclass", "torch._ops.OperatorBase.name", "<builtin>.issubclass"], "torch._ops.OperatorBase.name": [], "torch._higher_order_ops.effects.WithEffects.__init__": ["<builtin>.super"], "torch._ops.HigherOrderOperator.fallthrough": [], "torch._prims.debug_prims": ["contextlib.contextmanager"], "torch._prims.rng_prims": ["torch._prims.rng_prims.register_run_with_rng_state_op", "torch._prims.rng_prims.register_run_and_save_rng_state_op"], "torch._prims.rng_prims.register_run_and_save_rng_state_op": ["torch._prims.rng_prims.register_run_and_save_rng_state_op.RunAndSaveRngState.__init__", "torch._higher_order_ops.utils.autograd_not_implemented", "torch._ops.HigherOrderOperator.py_impl"], "torch._prims.rng_prims.register_run_and_save_rng_state_op.RunAndSaveRngState.__init__": ["<builtin>.super"], "torch._prims.rng_prims.register_run_with_rng_state_op": ["torch._higher_order_ops.utils.autograd_not_implemented", "torch._ops.HigherOrderOperator.py_impl", "torch._ops.OperatorBase.py_functionalize_impl", "torch._prims.rng_prims.register_run_with_rng_state_op.RunWithRngState.__init__"], "torch._prims.rng_prims.register_run_with_rng_state_op.RunWithRngState.__init__": ["<builtin>.super"], "torch._prims_common.wrappers": ["typing.TypeVar.__init__", "typing.overload", "typing_extensions.ParamSpec.__init__"], "torch.library.Library.__init__": ["<builtin>.set", "weakref.finalize.__init__", "<builtin>.ValueError", "traceback.extract_stack"], "weakref.finalize.__init__": ["<builtin>.next"], "torch._prims._make_elementwise_unary_prim": ["torch._prims._make_prim"], "torch._prims._make_prim": ["append", "torch._library.utils.is_functional_schema", "torch._library.custom_ops.custom_op", "<builtin>.any", "<builtin>.len", "torch._library.custom_ops.CustomOpDef.register_fake", "torch.library.Library.impl", "torch.library.Library.define", "<builtin>.set", "<builtin>.getattr", "torch._subclasses.fake_impls.contains_tensor_types", "<builtin>.str", "<builtin>.tuple"], "torch._library.utils.is_functional_schema": ["torchgen.model.FunctionSchema.parse", "<builtin>.isinstance", "torch._library.utils.is_functional_schema.is_functional"], "torch._library.utils.is_functional_schema.is_functional": ["<builtin>.any", "<builtin>.len"], "torchgen.model.FunctionSchema.parse": ["torchgen.model.parse_returns", "<builtin>.len", "torchgen.model.Arguments.parse", "torchgen.model.OperatorName.parse", "<builtin>.str"], "torchgen.model.OperatorName.parse": ["<builtin>.str", "torchgen.model.BaseOperatorName.parse"], "torchgen.model.BaseOperatorName.parse": ["re.match", "<builtin>.str", "<builtin>.any", "<builtin>.len"], "torchgen.model.Arguments.parse": ["<builtin>.enumerate", "<builtin>.len", "torchgen.model.Arguments._preparse", "<builtin>.zip", "<builtin>.all", "torchgen.model.Arguments.parse.pred", "torchgen.model.Type.parse", "<builtin>.tuple"], "torchgen.model.Arguments._preparse": ["torchgen.model.Argument.parse"], "torchgen.model.Argument.parse": ["re.match", "torchgen.model.Type.parse", "torchgen.model.Annotation.parse", "<builtin>.str"], "torchgen.model.Annotation.parse": ["re.match", "<builtin>.len", "<builtin>.str", "<builtin>.tuple"], "torchgen.model.Type.parse": ["<builtin>.str", "torchgen.model.Type._parse"], "torchgen.model.Type._parse": ["re.match", "torchgen.model.Type.parse", "<builtin>.int", "<builtin>.RuntimeError"], "torchgen.model.Arguments.parse.pred": [], "torchgen.model.parse_returns": ["torchgen.model.Return.parse", "<builtin>.tuple"], "torchgen.model.Return.parse": ["re.match", "torchgen.model.Type.parse", "torchgen.model.Annotation.parse", "<builtin>.str"], "torch._library.custom_ops.custom_op": ["torch._library.custom_ops.custom_op.inner"], "torch._library.custom_ops.custom_op.inner": ["<builtin>.ValueError", "torch._library.infer_schema.infer_schema", "torch._library.custom_ops.CustomOpDef.register_kernel", "<builtin>.set", "torch._library.custom_ops.CustomOpDef.__init__"], "torch._library.infer_schema.infer_schema": ["append", "torch._library.infer_schema.parse_return", "<builtin>.isinstance", "<builtin>.enumerate", "<builtin>.ValueError", "torch._library.infer_schema.tuple_to_list", "<builtin>.len", "<builtin>.set", "torch._library.infer_schema.infer_schema.error_fn", "torch._library.infer_schema.infer_schema.convert_type_string", "<builtin>.str", "<str>.startswith", "torch._library.infer_schema.supported_param", "inspect.signature", "<builtin>.type"], "torch._library.infer_schema.supported_param": [], "torch._library.infer_schema.infer_schema.error_fn": ["<builtin>.ValueError"], "torch._library.infer_schema.infer_schema.convert_type_string": ["torch._library.infer_schema.infer_schema.error_fn", "<builtin>.eval"], "torch._library.infer_schema.tuple_to_list": ["<builtin>.len", "<builtin>.tuple", "<builtin>.getattr"], "torch._library.infer_schema.parse_return": ["torch._library.infer_schema.infer_schema.error_fn", "typing.get_origin", "<map>.keys", "typing.get_args"], "typing.get_origin": ["<builtin>.isinstance"], "typing.get_args": ["typing._is_param_expr", "<builtin>.list", "<builtin>.isinstance", "<builtin>.len"], "typing._is_param_expr": ["<builtin>.isinstance"], "torch._library.custom_ops.CustomOpDef.__init__": ["<builtin>.set", "torch._library.custom_ops.get_library_allowing_overwrite", "torch._library.custom_ops.CustomOpDef._register_to_dispatcher"], "torch._library.custom_ops.get_library_allowing_overwrite": ["torch.library.Library.__init__"], "torch._library.custom_ops.CustomOpDef._register_to_dispatcher": ["torch._library.autograd.make_autograd_impl", "torch._library.utils.has_kwarg_only_tensors", "torch._library.utils.lookup_op", "<builtin>.NotImplementedError"], "torch._library.utils.has_kwarg_only_tensors": ["torch._library.utils.is_tensorlist_like_type", "torch._library.utils.is_tensor_like_type"], "torch._library.utils.is_tensor_like_type": [], "torch._library.utils.is_tensorlist_like_type": [], "torch._library.utils.lookup_op": ["torch._library.utils.parse_namespace", "<builtin>.getattr"], "torch._library.utils.parse_namespace": ["<builtin>.ValueError", "<builtin>.len"], "torch._library.autograd.make_autograd_impl": ["<builtin>.any", "torch._library.utils.has_kwarg_only_args", "torch._library.autograd.supports_tensorlist", "torch._library.utils.is_tensorlist_like_type", "<builtin>.staticmethod", "<builtin>.type"], "torch._library.utils.has_kwarg_only_args": ["<builtin>.any"], "torch._library.autograd.supports_tensorlist": [], "torch._library.custom_ops.CustomOpDef.register_kernel": ["torch._library.custom_ops.CustomOpDef._register_backend_select_dispatcher", "torch._library.custom_ops.CustomOpDef.register_kernel.inner", "<builtin>.ValueError", "torch._library.utils.get_device_arg_index", "torch._library.utils.has_tensor_arg"], "torch._library.utils.has_tensor_arg": ["torch._library.utils.is_tensorlist_like_type", "torch._library.utils.is_tensor_like_type", "<builtin>.any"], "torch._library.utils.get_device_arg_index": ["<builtin>.enumerate"], "torch._library.custom_ops.CustomOpDef._register_backend_select_dispatcher": ["torch.library.Library.impl"], "torch.library.Library.impl": ["<builtin>.RuntimeError", "<builtin>.isinstance", "<builtin>.callable", "<builtin>.TypeError", "<builtin>.type"], "torch._library.custom_ops.CustomOpDef.register_kernel.inner": ["torch._compile._disable_dynamo", "torch.library.Library.impl", "<builtin>.list", "<builtin>.isinstance"], "torch._library.custom_ops.CustomOpDef.register_fake": [], "torch.library.Library.define": ["<builtin>.RuntimeError", "<builtin>.isinstance", "<builtin>.hasattr", "torch._ops._refresh_packet", "<builtin>.tuple", "<builtin>.getattr"], "torch._ops._refresh_packet": ["torch._ops._get_packet"], "torch._ops._get_packet": ["torch.jit._builtins._register_builtin"], "torch._subclasses.fake_impls.contains_tensor_types": ["torch._subclasses.fake_impls.contains_tensor_types", "<builtin>.any"], "torch._prims._make_elementwise_binary_prim": ["torch._prims._make_prim"], "torch._prims._make_reduction_prim": ["torch._prims._make_prim"], "torch._prims._make_var_reduction_prim": ["torch._prims._make_prim"], "torch._prims.rng_prims.register_rng_prims": ["torch._prims.rng_prims.register_philox_rand"], "torch._prims.rng_prims.register_philox_rand": ["torch._prims.rng_prims.register_rng_prim"], "torch._prims.rng_prims.register_rng_prim": ["torch._library.custom_ops.CustomOpDef.register_fake", "torch._library.custom_ops.custom_op", "<builtin>.getattr"], "torch._prims.debug_prims.register_debug_prims": ["torch.library._impl.register", "torch.library.impl", "torch.library.define"], "torch.library.define": ["<builtin>.isinstance", "<builtin>.ValueError", "torch.library.Library.define", "torch.library.Library.__init__", "torch._library.utils.parse_namespace", "<builtin>.type"], "torch.library.impl": ["torch.library._impl"], "torch.library._impl": ["<builtin>.set", "torch.library._impl.register", "<builtin>.isinstance", "torch.library._device_type_to_key"], "torch.library._device_type_to_key": [], "torch.library._impl.register": ["torch.library.Library.__init__", "torch.library.Library.impl", "torch._library.utils.parse_namespace", "torch._compile._disable_dynamo"], "torch.utils._content_store.lazy_compile": [], "torch.utils._content_store.lazy_compile.decorate_fn": ["functools.wraps"], "torch._dynamo.resume_execution": [], "torch._dynamo.resume_execution.ResumeFunctionMetadata": ["dataclasses.field"], "torch._dynamo.resume_execution.ContinueExecutionCache": ["torch._dynamo.utils.ExactWeakKeyDictionary.__init__", "<builtin>.staticmethod", "<builtin>.classmethod"], "torch._dynamo.variables": [], "torch._dynamo.variables.base": [], "torch._dynamo.current_scope_id": ["contextlib.contextmanager"], "torch._dynamo.symbolic_convert": ["functools.lru_cache", "torch._dynamo.variables.builtin.BuiltinVariable.__init__", "functools.lru_cache.decorating_function", "torch._logging._internal.getArtifactLogger", "logging.getLogger", "<builtin>.getattr"], "torch._dynamo.logging": ["torch.hub._Faketqdm.__init__"], "torch.hub._Faketqdm.__init__": [], "torch._dynamo.code_context": ["torch._dynamo.code_context.CodeContextDict.__init__"], "torch._dynamo.code_context.CodeContextDict.__init__": ["torch._dynamo.utils.ExactWeakKeyDictionary.__init__"], "torch._dynamo.codegen": [], "torch._dynamo.variables.nn_module": ["contextlib.contextmanager"], "torch._dynamo.guards": ["functools.lru_cache", "<builtin>.float", "functools.lru_cache.decorating_function", "torch._logging._internal.getArtifactLogger", "logging.getLogger"], "torch.utils._device": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "torch._dynamo.mutation_guard": [], "torch._dynamo.mutation_guard.MutationTracker": ["torch._dynamo.utils.ExactWeakKeyDictionary.__init__"], "torch._dynamo.mutation_guard.GenerationTracker": ["torch._dynamo.utils.ExactWeakKeyDictionary.__init__", "<builtin>.staticmethod", "<builtin>.classmethod"], "torch._dynamo.eval_frame": ["inspect.getsourcefile", "posixpath.join", "unittest.mock.patch", "torch._dynamo.utils.ExactWeakKeyDictionary.__init__", "unittest.mock._patch.__init__", "posixpath.dirname", "logging.getLogger"], "torch.utils.checkpoint": ["torch._compile._disable_dynamo", "<builtin>.set", "contextlib.contextmanager"], "torch._functorch._aot_autograd.functional_utils": ["torch._logging._internal.getArtifactLogger"], "torch.testing._internal.logging_tensor": ["contextlib.contextmanager", "logging.getLogger"], "torch.testing._internal.logging_tensor.LoggingTensor": ["<builtin>.classmethod", "<builtin>.staticmethod"], "torch.utils.checkpoint.DefaultDeviceType": ["<builtin>.staticmethod"], "torch.utils.checkpoint.CheckpointFunction": ["<builtin>.staticmethod"], "torch.utils.checkpoint._NoopSaveInputs": ["<builtin>.staticmethod"], "torch.export.dynamic_shapes": ["logging.getLogger"], "torch.export.exported_program": ["contextlib.contextmanager"], "torch.fx.passes.runtime_assert": ["torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat", "torch._logging._internal.getArtifactLogger", "torch.fx._compatibility.compatibility.mark_back_compat", "logging.getLogger"], "torch._export.utils": [], "torch._export.passes.lift_constants_pass": [], "torch._export.verifier": [], "torch.export.graph_signature": [], "torch._functorch._aot_autograd.schemas": ["collections.namedtuple", "typing.NewType.__init__"], "torch._functorch._aot_autograd.schemas.InputAliasInfo": ["functools.cached_property.__init__"], "torch._functorch._aot_autograd.schemas.ViewAndMutationMeta": ["<builtin>.property", "dataclasses.field"], "typing.NewType.__init__": ["typing._caller", "<str>.rpartition"], "<str>.rpartition": [], "typing._caller": [], "torch._functorch._aot_autograd.schemas.GraphSignature": ["<builtin>.classmethod"], "torch.export.graph_signature.ExportGraphSignature": ["<builtin>.property"], "torch._export.verifier.Verifier": ["typing.final"], "typing.final": [], "torch.export": [], "torch.fx.passes.infra.pass_base": ["collections.namedtuple"], "torch.fx.passes.infra.pass_base.PassBase": ["abc.abstractmethod"], "torch.fx.passes.infra.pass_manager": ["torch.fx._compatibility.compatibility.mark_back_compat", "logging.getLogger", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat"], "torch.export.unflatten": ["contextlib.contextmanager"], "torch.export._tree_utils": [], "torch.export._remove_effect_tokens_pass": [], "torch.export.unflatten.FlatArgsAdapter": ["abc.abstractmethod"], "torch.export.exported_program.ExportedProgram": ["torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat", "typing.final", "torch.export.exported_program._disable_prexisiting_fake_mode", "<builtin>.property", "torch.fx._compatibility.compatibility.mark_back_compat"], "torch.export.exported_program._disable_prexisiting_fake_mode": ["functools.wraps"], "torch.export.dynamic_shapes._Dim": ["<builtin>.staticmethod"], "torch.export.dynamic_shapes._StaticDim": ["<builtin>.property"], "torch.export.dynamic_shapes._DerivedDim": ["<builtin>.property"], "torch.export.dynamic_shapes._Constraint": ["<builtin>.property"], "torch.export.dynamic_shapes._DerivedConstraint": ["<builtin>.property"], "torch._dynamo.external_utils": [], "torch._dynamo.external_utils.FakeCompiledAutogradEngine": ["<builtin>.staticmethod"], "torch._dynamo.backends.registry": ["logging.getLogger", "functools.lru_cache", "functools.lru_cache.decorating_function"], "importlib.metadata": ["collections.namedtuple"], "csv": [], "csv.DictReader": ["<builtin>.property"], "importlib.metadata._adapters": [], "importlib.metadata._text": [], "importlib.metadata._adapters.Message": ["<builtin>.map", "<builtin>.property", "<builtin>.set"], "importlib.metadata._meta": ["typing.TypeVar.__init__"], "importlib.metadata._meta.PackageMetadata": ["<builtin>.property"], "importlib.metadata._itertools": [], "importlib.abc": ["importlib.abc._register"], "importlib.abc._register": ["<builtin>.getattr"], "importlib.abc.InspectLoader": ["<builtin>.staticmethod"], "importlib.metadata.PackageNotFoundError": ["<builtin>.property"], "importlib.metadata.Sectioned": ["<builtin>.staticmethod", "textwrap.dedent", "<builtin>.classmethod"], "importlib.metadata.EntryPoint": ["re.compile", "<builtin>.property"], "importlib.metadata.EntryPoints": ["<builtin>.property", "<builtin>.staticmethod", "<builtin>.classmethod"], "importlib.metadata.SelectableGroups": ["<builtin>.property", "<builtin>.classmethod"], "importlib.metadata.Distribution": ["abc.abstractmethod", "<builtin>.staticmethod", "<builtin>.property", "<builtin>.classmethod"], "importlib.metadata.DistributionFinder.Context": ["<builtin>.property"], "importlib.metadata.DistributionFinder": ["abc.abstractmethod", "importlib.metadata.DistributionFinder.Context.__init__"], "importlib.metadata.DistributionFinder.Context.__init__": ["<builtin>.vars"], "importlib.metadata.FastPath": ["<builtin>.property", "functools.lru_cache.decorating_function", "functools.lru_cache"], "importlib.metadata.Prepared": ["<builtin>.staticmethod"], "importlib.metadata.MetadataPathFinder": ["importlib.metadata.DistributionFinder.Context.__init__", "<builtin>.classmethod"], "importlib.metadata.PathDistribution": ["<builtin>.property"], "torch._dynamo.hooks": [], "torch._dynamo.types": [], "torch._dynamo.eval_frame.OptimizedModule": ["<builtin>.property"], "unittest.mock.patch": ["unittest.mock._patch.__init__", "unittest.mock._get_target"], "unittest.mock._get_target": ["<str>.rsplit", "<builtin>.TypeError"], "<str>.rsplit": [], "unittest.mock._patch.__init__": ["unittest.mock._is_instance_mock", "<builtin>.ValueError", "unittest.mock._check_spec_arg_typos"], "unittest.mock._check_spec_arg_typos": ["<builtin>.RuntimeError"], "unittest.mock._is_instance_mock": ["<builtin>.issubclass", "<builtin>.type"], "torch._dynamo.eval_frame.TorchPatcher": ["<builtin>.staticmethod", "functools.lru_cache.decorating_function", "functools.lru_cache"], "torch._dynamo.guards.GuardManager": ["contextlib.contextmanager"], "torch._dynamo.variables.functions": ["typing.TypeVar.__init__"], "torch._dynamo.variables.constant": [], "torch._dynamo.variables.constant.ConstantVariable": ["<builtin>.property", "<builtin>.staticmethod"], "torch._dynamo.variables.constant.EnumVariable": ["<builtin>.classmethod"], "torch.distributed._composable.fsdp._fsdp_param_group": ["logging.getLogger"], "torch._dynamo.compiled_autograd": ["torch._logging._internal.getArtifactLogger", "contextlib.contextmanager"], "torch._dynamo.compiled_autograd.AutogradCompilerInstance": ["<builtin>.staticmethod"], "torch.distributed.fsdp._common_utils": ["weakref.WeakKeyDictionary.__init__", "typing.no_type_check"], "torch.distributed.fsdp._flat_param": ["logging.getLogger", "functools.lru_cache", "functools.lru_cache.decorating_function"], "torch.testing._internal.distributed.fake_pg": ["torch.distributed.distributed_c10d.Backend.register_backend"], "torch.distributed.distributed_c10d.Backend.register_backend": ["append", "<builtin>.isinstance", "<str>.upper", "<builtin>.hasattr", "warnings.warn", "<builtin>.setattr", "torch.distributed.distributed_c10d.is_ucc_available"], "torch.distributed.distributed_c10d.is_ucc_available": [], "<str>.upper": [], "torch.distributed.fsdp._fsdp_extensions": [], "torch.distributed._shard.sharded_tensor.api": [], "torch.distributed._shard.sharding_spec": [], "torch.distributed._shard.metadata": [], "torch.distributed._shard.sharding_spec.api": [], "torch.distributed._shard.sharded_tensor.metadata": [], "torch.distributed._shard.sharded_tensor.metadata.TensorProperties": ["<builtin>.staticmethod", "dataclasses.field"], "torch.distributed._shard.sharded_tensor.metadata.ShardedTensorMetadata": ["dataclasses.field"], "torch.distributed._shard.op_registry_utils": [], "torch.distributed._shard.common_op_utils": [], "torch.distributed._shard.sharding_spec._internals": [], "torch.distributed._shard.sharded_tensor": [], "torch.distributed._shard.sharded_tensor._ops": [], "torch.distributed._shard.sharded_tensor._ops.misc_ops": ["torch.distributed._shard.sharded_tensor._sharded_op_impl"], "torch.distributed._shard.sharded_tensor._sharded_op_impl": [], "torch.distributed._shard.sharded_tensor._ops.tensor_ops": ["torch.distributed._shard.sharded_tensor._sharded_op_impl", "torch.distributed._shard.sharded_tensor._ops._common._register_sharded_op_on_local_shards", "torch.distributed._shard.common_op_utils._register_default_op"], "torch.distributed._shard.sharded_tensor._ops._common": [], "torch.distributed._shard.common_op_utils._register_default_op": ["torch.distributed._shard.sharded_tensor._sharded_op_impl"], "torch.distributed._shard.sharded_tensor._ops._common._register_sharded_op_on_local_shards": ["torch.distributed._shard.sharded_tensor._sharded_op_impl", "torch.distributed._shard.sharded_tensor._ops._common._sharded_op_common.decorator_sharded_func", "torch.distributed._shard.sharded_tensor._ops._common._sharded_op_common"], "torch.distributed._shard.sharded_tensor._ops._common._sharded_op_common": [], "torch.distributed._shard.sharded_tensor._ops._common._sharded_op_common.decorator_sharded_func": ["functools.wraps"], "torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding": ["torch.distributed._shard.sharding_spec.api.custom_sharding_spec_op"], "torch.distributed.nn.functional": [], "torch.distributed.nn.functional._Broadcast": ["<builtin>.staticmethod"], "torch.distributed.nn.functional._Gather": ["<builtin>.staticmethod"], "torch.distributed.nn.functional._Scatter": ["<builtin>.staticmethod"], "torch.distributed.nn.functional._Reduce": ["<builtin>.staticmethod"], "torch.distributed.nn.functional._Reduce_Scatter": ["<builtin>.staticmethod"], "torch.distributed.nn.functional._AllGather": ["<builtin>.staticmethod"], "torch.distributed.nn.functional._AllGatherBase": ["<builtin>.staticmethod"], "torch.distributed.nn.functional._AlltoAll": ["<builtin>.staticmethod"], "torch.distributed.nn.functional._AlltoAllSingle": ["<builtin>.staticmethod"], "torch.distributed.nn.functional._AllReduce": ["<builtin>.staticmethod"], "torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops._common": [], "torch.distributed._shard.sharding_spec.api.custom_sharding_spec_op": [], "torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding_bag": ["torch.distributed._shard.sharding_spec.api.custom_sharding_spec_op"], "torch.distributed._shard.sharded_tensor._ops.binary_cmp": ["torch.distributed._shard.sharded_tensor._sharded_op_impl"], "torch.distributed._shard.sharded_tensor._ops.init": ["torch.distributed._shard.sharded_tensor._sharded_op_impl", "torch.distributed._shard.sharded_tensor._ops.init.register_tensor_creation_op"], "torch.distributed._shard.sharded_tensor._ops.init.register_tensor_creation_op": ["torch.distributed._shard.sharded_tensor._sharded_op_impl"], "torch.distributed._shard.sharding_spec.api.ShardingSpec": ["abc.abstractmethod"], "torch.distributed._shard.sharding_spec.chunk_sharding_spec": [], "torch.distributed._shard._utils": [], "torch.distributed._shard.sharded_tensor.shard": [], "torch.distributed._shard.sharded_tensor.shard.Shard": ["<builtin>.classmethod"], "torch.distributed._shard.sharded_tensor.utils": [], "torch.distributed._shard.sharding_spec.chunk_sharding_spec.ChunkShardingSpec": ["<builtin>.staticmethod"], "torch.distributed._shard.sharded_tensor.reshard": [], "torch.distributed._shard.sharded_tensor.api.ShardedTensorBase": ["<builtin>.classmethod"], "torch.distributed._shard.sharded_tensor.api.ShardedTensor": ["typing_extensions.deprecated.__init__", "<builtin>.classmethod"], "torch.distributed.fsdp._shard_utils": [], "torch.distributed.tensor": [], "torch.distributed.tensor._ops": [], "torch.distributed.tensor._ops._conv_ops": ["torch.distributed.tensor._ops.utils.register_prop_rule.wrapper", "torch.distributed.tensor._ops.utils.register_prop_rule"], "torch.distributed.tensor._dtensor_spec": [], "torch.distributed.tensor.placement_types": ["<builtin>.dict"], "torch.distributed._functional_collectives": ["torch._running_with_deploy", "torch.library.Library.define", "torch.library.Library.impl", "torch.library.Library.__init__", "warnings.warn", "torch.fx.node.has_side_effect", "<builtin>.getattr"], "torch.distributed._functional_collectives_impl": [], "torch.compiler": ["typing.TypeVar.__init__"], "torch.distributed._functional_collectives.AsyncCollectiveTensor": ["<builtin>.classmethod", "<builtin>.staticmethod"], "torch.distributed._functional_collectives._FromTorchTensor": ["<builtin>.staticmethod"], "torch.distributed.tensor._collective_utils": ["torch.library.register_fake.register", "torch._running_with_deploy", "torch.library.register_fake", "warnings.warn", "logging.getLogger"], "torch.library.register_fake": ["torch.library.register_fake.register", "torch._library.custom_ops._maybe_get_opdef", "<builtin>.isinstance", "<builtin>.ValueError"], "torch._library.custom_ops._maybe_get_opdef": ["<builtin>.isinstance"], "torch.library.register_fake.register": ["torch.library.Library.__init__", "torch.library.Library._register_fake", "torch._library.utils.parse_namespace"], "torch.library.Library._register_fake": ["torch._library.utils.get_source", "torch.library._check_pystubs_once", "inspect.getmodule"], "torch._library.utils.get_source": ["inspect.getframeinfo"], "inspect.getframeinfo": ["inspect.getsourcefile", "inspect.findsource", "inspect.istraceback", "inspect.getfile", "inspect.isframe", "<builtin>.TypeError"], "torch.library._check_pystubs_once": [], "torch.distributed.tensor._collective_utils.MeshTopoInfo": ["<builtin>.staticmethod", "functools.lru_cache.decorating_function", "functools.lru_cache"], "torch.distributed.tensor.placement_types.Shard": ["<builtin>.staticmethod"], "torch.distributed.tensor._dtensor_spec.DTensorSpec": ["<builtin>.property", "<builtin>.classmethod"], "torch.distributed.tensor._op_schema": [], "torch.distributed.tensor._op_schema.PlacementStrategy": ["functools.cached_property.__init__"], "torch.distributed.tensor._op_schema.OpStrategy": ["<builtin>.property"], "torch.distributed.tensor._op_schema.OpSchema": ["<builtin>.property"], "torch.distributed.tensor._ops.utils": [], "torch.distributed.tensor._api": [], "torch.distributed.tensor._dispatch": ["logging.getLogger"], "torch.distributed.tensor._random": [], "torch.distributed.tensor._random._RNGStateTracker": ["<builtin>.property"], "torch.distributed.tensor._random.OffsetBasedRNGTracker": ["contextlib.contextmanager"], "torch.distributed.tensor._random.TensorParallelRNGTracker": ["contextlib.contextmanager"], "torch.distributed.tensor._redistribute": ["logging.getLogger", "functools.lru_cache", "functools.lru_cache.decorating_function"], "torch.distributed.tensor.device_mesh": [], "torch.distributed.tensor._redistribute.Redistribute": ["<builtin>.staticmethod"], "torch.distributed.tensor._sharding_prop": [], "torch.distributed.tensor._utils": [], "torch.distributed.tensor._sharding_prop.ShardingPropagator": ["functools.lru_cache"], "torch.distributed.tensor._tp_conv": [], "torch.distributed.tensor._dispatch.OpDispatcher": ["<builtin>.staticmethod"], "torch.distributed.tensor._api._ToTorchTensor": ["<builtin>.staticmethod"], "torch.distributed.tensor._api._FromTorchTensor": ["<builtin>.staticmethod"], "torch.distributed.tensor._api.DTensor": ["torch.distributed.tensor._dispatch.OpDispatcher.__init__", "<builtin>.classmethod", "<builtin>.property", "torch._compile._disable_dynamo", "<builtin>.staticmethod"], "torch.distributed.tensor._dispatch.OpDispatcher.__init__": ["torch.distributed.tensor._sharding_prop.ShardingPropagator.__init__"], "torch.distributed.tensor._sharding_prop.ShardingPropagator.__init__": ["torch.distributed.tensor._sharding_prop.LocalLRUCache.__init__"], "torch.distributed.tensor._sharding_prop.LocalLRUCache.__init__": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "torch.distributed.tensor._ops.utils.register_prop_rule": [], "torch.distributed.tensor._ops.utils.register_prop_rule.wrapper": ["<builtin>.isinstance"], "torch.distributed.tensor._ops._embedding_ops": ["torch.distributed.tensor._ops.utils.register_op_strategy", "torch.distributed.tensor._ops.utils.register_op_strategy.wrapper"], "torch.distributed.tensor._ops._embedding_ops._MaskPartial": ["dataclasses.field"], "torch.distributed.tensor._ops.utils.register_op_strategy": [], "torch.distributed.tensor._ops.utils.register_op_strategy.wrapper": ["<builtin>.isinstance", "<builtin>.any"], "torch.distributed.tensor._ops._experimental_ops": ["torch.distributed.tensor._ops.utils.register_op_strategy", "torch.distributed.tensor._ops.utils.register_op_strategy.wrapper"], "torch.distributed.tensor._ops._math_ops": ["<builtin>.list", "<map>.keys", "torch.distributed.tensor._ops.utils.register_op_strategy", "torch.distributed.tensor._ops.utils.register_op_strategy.wrapper"], "torch.distributed.tensor._ops._matrix_ops": ["torch.distributed.tensor._ops.utils.register_op_strategy", "torch.distributed.tensor._ops.utils.register_op_strategy.wrapper"], "torch.distributed.tensor._ops._einsum_strategy": [], "torch.distributed.tensor._ops._einsum_strategy.EinsumDims": ["<builtin>.classmethod"], "torch.distributed.tensor._ops._pointwise_ops": ["torch.distributed.tensor._ops.utils.register_op_strategy", "torch.distributed.tensor._ops.utils.register_op_strategy.wrapper"], "torch.distributed.tensor._ops._random_ops": ["torch.distributed.tensor._ops.utils.register_op_strategy", "torch.distributed.tensor._ops.utils.register_op_strategy.wrapper"], "torch.distributed.tensor._ops._tensor_ops": ["torch.distributed.tensor._ops.utils.register_prop_rule.wrapper", "torch.distributed.tensor._ops.utils.register_prop_rule", "torch.distributed.tensor._ops.utils.register_op_strategy", "torch.distributed.tensor._ops.utils.register_op_strategy.wrapper"], "torch.distributed.tensor._ops._common_rules": [], "torch.distributed.tensor._ops._view_ops": ["torch.distributed.tensor._ops._view_ops.register_op_strategy_map"], "torch.distributed.tensor._ops._view_ops.Broadcast": ["<builtin>.classmethod"], "torch.distributed.tensor._ops._view_ops.NewDim": ["<builtin>.classmethod"], "torch.distributed.tensor._ops._view_ops.Repeat": ["<builtin>.classmethod"], "torch.distributed.tensor._ops._view_ops.Flatten": ["<builtin>.classmethod"], "torch.distributed.tensor._ops._view_ops.Split": ["<builtin>.classmethod"], "torch.distributed.tensor._ops._view_ops.register_op_strategy_map": ["torch.distributed.tensor._ops.utils.register_op_strategy", "torch.distributed.tensor._ops.utils.register_op_strategy.wrapper"], "torch.optim.optimizer": ["typing_extensions.ParamSpec.__init__", "typing.TypeVar.__init__", "collections.OrderedDict.__init__"], "torch.utils._foreach_utils": ["torch.autograd.grad_mode.no_grad.__init__"], "torch.autograd.grad_mode.no_grad.__init__": ["torch._jit_internal.is_scripting", "<builtin>.super"], "torch._jit_internal.is_scripting": [], "torch.optim.optimizer.Optimizer": ["torch._compile._disable_dynamo", "typing.overload", "<builtin>.staticmethod"], "torch.distributed.fsdp._fsdp_extensions.FSDPExtensions": ["abc.abstractmethod"], "torch.distributed.fsdp._flat_param.FlatParameter": ["<builtin>.classmethod"], "torch.distributed.fsdp._flat_param.FlatParamHandle": ["typing.no_type_check", "<builtin>.property", "contextlib.contextmanager", "torch.autograd.grad_mode.no_grad.__init__", "<builtin>.staticmethod"], "typing.no_type_check": ["typing.no_type_check", "<builtin>.isinstance"], "torch.distributed._composable_state": [], "torch.distributed.algorithms._checkpoint.checkpoint_wrapper": [], "torch.distributed.algorithms._checkpoint.checkpoint_wrapper.ActivationWrapper": ["abc.abstractmethod", "<builtin>.staticmethod"], "torch.distributed.fsdp.api": [], "torch.distributed.fsdp._common_utils._FSDPDeviceHandle": ["<builtin>.classmethod"], "torch.profiler": ["torch.optim.optimizer.register_optimizer_step_post_hook"], "torch.profiler.profiler": [], "gzip": [], "gzip.GzipFile": ["<builtin>.property"], "torch.profiler._memory_profiler": ["<builtin>.enumerate", "logging.getLogger"], "torch.profiler._utils": [], "torch.profiler._utils.EventMetrics": ["<builtin>.property"], "torch.profiler._memory_profiler.TensorKey": ["<builtin>.classmethod", "<builtin>.property", "<builtin>.staticmethod"], "torch.profiler._memory_profiler.SchemaMatcher": ["<builtin>.staticmethod", "<builtin>.classmethod"], "torch.profiler._memory_profiler.OpTree": ["<builtin>.property"], "torch.profiler._memory_profiler.SizeMap": ["<builtin>.staticmethod"], "torch.profiler._memory_profiler.DataFlowEdge": ["<builtin>.property"], "torch.profiler._memory_profiler.DataFlowNode": ["<builtin>.property"], "torch.profiler._memory_profiler.DataFlowGraph": ["<builtin>.property", "<builtin>.staticmethod"], "torch.profiler._memory_profiler.CategoryElement": ["dataclasses.field"], "torch.profiler._memory_profiler.CategoryDict": ["dataclasses.field"], "torch.profiler._memory_profiler.MemoryProfile": ["<builtin>.property"], "torch.profiler.profiler._ITraceObserver": ["abc.abstractmethod"], "torch.profiler.profiler.ExecutionTraceObserver": ["<builtin>.property"], "torch.profiler.itt": ["contextlib.contextmanager"], "torch.profiler.itt._ITTStub": ["<builtin>.staticmethod"], "torch.optim.optimizer.register_optimizer_step_post_hook": ["torch.utils.hooks.RemovableHandle.__init__"], "torch.utils.hooks.RemovableHandle.__init__": ["<builtin>.isinstance", "<builtin>.tuple"], "torch.distributed._composable.fsdp._fsdp_api": [], "torch.distributed._composable.fsdp._fsdp_collectives": ["torch.library.impl", "torch.library.Library.define", "torch.library._impl.register", "torch.library.Library.__init__", "torch.autograd.grad_mode.no_grad.__init__"], "torch.distributed._composable.fsdp._fsdp_common": [], "torch.distributed._composable.contract": ["torch.distributed._composable.contract.generate_state_key"], "torch.distributed._composable.contract.generate_state_key": ["<builtin>.str", "uuid.uuid4"], "uuid.uuid4": ["uuid.UUID.__init__"], "torch.distributed._composable.fsdp._fsdp_param": ["torch.library.impl", "torch.library.Library.define", "torch.library._impl.register", "torch.library.Library.__init__", "torch.fx.node.has_side_effect"], "torch.distributed._composable.fsdp._fsdp_param.ParamModuleInfo": ["dataclasses.field"], "torch.distributed._composable.fsdp._fsdp_param.FSDPParam": ["torch.autograd.grad_mode.no_grad.__init__", "<builtin>.property"], "torch.distributed._composable.fsdp._fsdp_param_group.FSDPParamGroup": ["<builtin>.property", "contextlib.contextmanager", "<builtin>.staticmethod"], "torch.distributed._composable.fsdp._fsdp_param_group.RegisterPostBackwardFunction": ["<builtin>.staticmethod"], "torch._dynamo.variables.functions.UserFunctionVariable": ["<builtin>.classmethod"], "torch._dynamo.variables.functions.SkipFunctionVariable": ["functools.lru_cache", "<builtin>.staticmethod", "functools.lru_cache.decorating_function", "<builtin>.classmethod"], "torch._dynamo.variables.functions.CollectiveFunctionRewriteVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.functions.PolyfilledFunctionVariable": ["<builtin>.classmethod", "<builtin>.property", "functools.lru_cache.decorating_function", "functools.lru_cache"], "torch._higher_order_ops.triton_kernel_wrap": ["torch._ops.HigherOrderOperator.fallthrough", "torch._higher_order_ops.triton_kernel_wrap.TritonKernelWrapperMutation.__init__", "torch._ops.HigherOrderOperator.py_impl", "torch._ops.OperatorBase.py_functionalize_impl", "torch._higher_order_ops.triton_kernel_wrap.TritonKernelWrapperFunctional.__init__", "torch._higher_order_ops.triton_kernel_wrap.MemoizeWithCycleCheck.__init__", "logging.getLogger"], "torch._higher_order_ops.triton_kernel_wrap.Op": ["dataclasses.field"], "torch._higher_order_ops.triton_kernel_wrap.MemoizeWithCycleCheck.__init__": ["torch._higher_order_ops.triton_kernel_wrap.MemoizeWithCycleCheck.reset"], "torch._higher_order_ops.triton_kernel_wrap.MemoizeWithCycleCheck.reset": [], "torch._higher_order_ops.triton_kernel_wrap.TritonKernelWrapperMutation.__init__": ["<builtin>.super"], "torch._higher_order_ops.triton_kernel_wrap.TritonKernelWrapperFunctional.__init__": ["<builtin>.super"], "torch._dynamo.variables.lazy": ["torch._dynamo.variables.lazy._populate"], "torch._dynamo.variables.tensor": ["<map>.values", "logging.getLogger"], "torch._dynamo._trace_wrapped_higher_order_op": ["torch._higher_order_ops.utils.autograd_not_implemented", "torch._dynamo._trace_wrapped_higher_order_op.TraceWrapped.__init__", "torch._ops.HigherOrderOperator.py_impl", "torch._ops.OperatorBase.py_functionalize_impl"], "torch._dynamo._trace_wrapped_higher_order_op.TraceWrapped.__init__": ["<builtin>.super"], "torch._dynamo.variables.lists": [], "torch._dynamo.variables.iter": [], "torch._dynamo.variables.lists.BaseListVariable": ["<builtin>.property", "<builtin>.staticmethod"], "torch._dynamo.variables.lists.RestrictedListSubclassVariable": ["<builtin>.property", "<builtin>.classmethod"], "torch._dynamo.variables.tensor.TensorVariable": ["functools.lru_cache", "functools.lru_cache.decorating_function", "<builtin>.staticmethod"], "torch._dynamo.variables.tensor.SymNodeVariable": ["<builtin>.classmethod"], "torch._dynamo.variables.tensor.NumpyNdarrayVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.tensor.UnspecializedPythonVariable": ["<builtin>.classmethod"], "torch._dynamo.variables.tensor.FakeItemVariable": ["<builtin>.classmethod"], "torch._dynamo.variables.lazy.LazyVariableTracker": ["<builtin>.classmethod", "<builtin>.staticmethod"], "torch._dynamo.variables.lazy._populate": ["<builtin>.callable", "torch._dynamo.variables.lazy._create_realize_and_forward", "<builtin>.setattr"], "torch._dynamo.variables.lazy._create_realize_and_forward": ["functools.wraps", "<builtin>.getattr"], "torch._dynamo.variables.user_defined": ["<builtin>.type"], "torch._dynamo.create_parameter_op": ["contextlib.contextmanager"], "torch._dynamo.create_parameter_op.TracableCreateParameter": ["<builtin>.staticmethod"], "torch._dynamo.variables.dicts": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "torch._dynamo.variables.dicts.ConstDictVariable._HashableTracker": ["<builtin>.property", "<builtin>.staticmethod"], "torch._dynamo.variables.dicts.DefaultDictVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.dicts.SetVariable": ["<builtin>.property", "<builtin>.staticmethod"], "torch._dynamo.variables.dicts.FrozensetVariable": ["<builtin>.property"], "torch._dynamo.variables.dicts.DictView": ["<builtin>.property"], "torch._dynamo.variables.dicts.DictKeys": ["<builtin>.property"], "torch._dynamo.variables.dicts.DictValues": ["<builtin>.property"], "torch._dynamo.variables.dicts.CustomizedDictVariable": ["<builtin>.classmethod", "<builtin>.staticmethod"], "torch._dynamo.variables.dicts.HFPretrainedConfigVariable": ["<builtin>.classmethod", "<builtin>.staticmethod"], "torch._dynamo.variables.user_defined.UserDefinedClassVariable": ["<builtin>.staticmethod", "functools.lru_cache.decorating_function", "functools.lru_cache"], "torch._dynamo.variables.user_defined.UserDefinedObjectVariable": ["<builtin>.staticmethod", "functools.lru_cache.decorating_function", "functools.lru_cache"], "torch._dynamo.variables.user_defined.FrozenDataClassVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.user_defined.KeyedJaggedTensorVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.nn_module.UnspecializedNNModuleVariable": ["<builtin>.staticmethod", "functools.lru_cache.decorating_function", "functools.lru_cache"], "torch._dynamo.variables.torch_function": ["torch.overrides.get_default_nowrap_functions"], "torch._dynamo.variables.ctx_manager": [], "torch._dynamo.device_interface": ["torch.cuda._is_compiled"], "torch.cuda._is_compiled": ["<builtin>.hasattr"], "torch._dynamo.device_interface.DeviceInterface.Worker": ["<builtin>.staticmethod"], "torch._dynamo.device_interface.DeviceInterface": ["<builtin>.staticmethod"], "torch._dynamo.device_interface.CudaInterface.Worker": ["<builtin>.staticmethod"], "torch._dynamo.device_interface.CudaInterface": ["<builtin>.staticmethod"], "torch._dynamo.device_interface.XpuInterface.Worker": ["<builtin>.staticmethod"], "torch._dynamo.device_interface.XpuInterface": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.GradInplaceRequiresGradCtxManagerVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.JvpIncrementNestingCtxManagerVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.SetFwdGradEnabledContextManager": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.DualLevelContextManager": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.GradIncrementNestingCtxManagerVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.CatchWarningsCtxManagerVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.VmapIncrementNestingCtxManagerVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.GradModeVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.InferenceModeVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.CUDADeviceVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.TorchFunctionDisableVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.DeterministicAlgorithmsVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.DisabledSavedTensorsHooksVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.AutocastModeVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.StreamContextVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.PreserveVersionContextVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.ctx_manager.FSDPParamGroupUseTrainingStateVariable": ["<builtin>.staticmethod"], "torch.overrides.get_default_nowrap_functions": [], "torch._dynamo.variables.torch_function.TorchFunctionModeStackVariable": ["<builtin>.classmethod", "<builtin>.staticmethod", "<builtin>.object"], "torch._dynamo.variables.torch_function.TorchFunctionModeVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.torch_function.TensorWithTFOverrideVariable": ["<builtin>.classmethod"], "torch._dynamo.funcname_cache": [], "torch._dynamo.output_graph": ["logging.getLogger", "functools.lru_cache", "functools.lru_cache.decorating_function"], "torch._dynamo.side_effects": [], "torch._dynamo.side_effects.SideEffects": ["<builtin>.staticmethod"], "torch._dynamo.variables.builder": ["inspect.isclass", "<builtin>.vars", "<builtin>.set", "<builtin>.id", "torch._dynamo.variables.builder.SourcelessBuilder.make_type_handlers", "torch._logging._internal.getArtifactLogger", "<builtin>.frozenset", "logging.getLogger"], "torch._dynamo.variables.distributed": [], "torch._dynamo.variables.distributed.DistributedVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.distributed.WorldMetaClassVariable": ["<builtin>.classmethod"], "torch._dynamo.variables.distributed.PlacementClassVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.distributed.PlacementVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.distributed.DeviceMeshVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.distributed.ProcessGroupVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.distributed.BackwardHookVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.higher_order_ops": ["contextlib.contextmanager", "logging.getLogger"], "torch.onnx.operators": [], "torch.onnx": [], "torch.onnx._exporter_states": [], "torch.onnx._internal.onnxruntime": ["torch.fx._compatibility.compatibility.mark_back_compat", "logging.getLogger", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat"], "torch._prims.executor": [], "torch._prims.context": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "torch._decomp": ["typing.TypeVar.__init__", "typing_extensions.ParamSpec.__init__"], "torch._decomp.decompositions": ["torch._decomp.decompositions.register_inplace", "torch._decomp.register_decomposition.decomposition_decorator", "torch._prims_common.wrappers.out_wrapper._out_wrapper", "torch._decomp.register_decomposition", "torch._prims_common.wrappers.out_wrapper"], "torch._meta_registrations": ["torch._meta_registrations.register_meta.wrapper", "torch._meta_registrations.register_meta", "torch._meta_registrations.activate_meta", "torch._prims_common.wrappers.out_wrapper._out_wrapper", "torch._meta_registrations._create_unary_float_meta_func", "torch.library.Library.__init__", "torch._meta_registrations._create_binary_float_meta_func", "torch._prims_common.wrappers.out_wrapper"], "torch._refs": ["torch._refs._make_elementwise_unary_reference", "torch._refs._make_alias", "torch._refs._make_inplace", "typing.overload", "torch._decomp.register_decomposition.decomposition_decorator", "torch._prims_common.wrappers.out_wrapper._out_wrapper", "torch._refs._make_elementwise_binary_reference.inner", "torch._refs._make_copy_from_view", "torch._prims_common.wrappers.elementwise_type_promotion_wrapper.__init__", "torch._refs._make_r_binary_op", "torch._refs._make_elementwise_unary_reference.inner", "torch._decomp.register_decomposition", "torch._prims_common.wrappers.out_wrapper", "torch._refs._make_elementwise_binary_reference", "functools.singledispatch", "<builtin>.object"], "torch._refs._make_elementwise_unary_reference": [], "torch._refs._make_elementwise_unary_reference.inner": ["torch._decomp.register_decomposition.decomposition_decorator", "torch._prims_common.wrappers.out_wrapper._out_wrapper", "torch._prims_common.wrappers.elementwise_unary_scalar_wrapper", "torch._prims_common.wrappers.elementwise_type_promotion_wrapper.__init__", "functools.wraps", "torch._decomp.register_decomposition", "torch._prims_common.get_aten_op", "torch._prims_common.wrappers.out_wrapper"], "torch._prims_common.wrappers.elementwise_type_promotion_wrapper.__init__": [], "torch._prims_common.wrappers.elementwise_unary_scalar_wrapper": ["functools.wraps", "inspect.signature"], "torch._prims_common.wrappers.out_wrapper": ["<builtin>.len"], "torch._prims_common.wrappers.out_wrapper._out_wrapper": ["<builtin>.dict", "<builtin>.range", "<builtin>.isinstance", "<builtin>.sorted", "inspect.Signature.__init__", "<builtin>.len", "<builtin>.getattr", "<builtin>.all", "functools.wraps", "typing.NamedTuple", "inspect.Parameter.__init__", "inspect.signature", "<builtin>.tuple"], "typing.NamedTuple": ["typing._make_nmtuple", "<builtin>.TypeError"], "typing._make_nmtuple": ["collections.namedtuple", "typing._type_check"], "inspect.Parameter.__init__": ["<str>.isidentifier", "<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.TypeError", "<str>.isdigit", "<builtin>.type"], "<str>.isdigit": [], "<str>.isidentifier": [], "torch._prims_common.get_aten_op": ["<builtin>.getattr", "<builtin>.len"], "torch._decomp.register_decomposition": [], "torch._decomp.register_decomposition.decomposition_decorator": ["torch._decomp._convert_out_params", "torch.utils._pytree.tree_map_"], "torch._decomp._convert_out_params": ["inspect.Signature.__init__", "<builtin>.zip", "functools.wraps", "inspect.Parameter.__init__", "inspect.signature", "<builtin>.getattr"], "torch.utils._pytree.tree_map_": ["torch.utils._pytree.tree_flatten", "<builtin>.map", "<builtin>.tuple"], "torch.utils._pytree.tree_flatten": ["torch.utils._pytree._tree_flatten_helper"], "torch.utils._pytree._tree_flatten_helper": ["torch.utils._pytree._get_node_type", "torch.utils._pytree._tree_flatten_helper", "torch.utils._pytree._is_leaf"], "torch.utils._pytree._is_leaf": ["torch.utils._pytree._get_node_type"], "torch.utils._pytree._get_node_type": ["torch.utils._pytree._is_namedtuple_instance", "<builtin>.type"], "torch.utils._pytree._is_namedtuple_instance": ["<builtin>.type", "<builtin>.isinstance", "<builtin>.len", "<builtin>.all", "<builtin>.getattr"], "torch._refs._make_alias": ["inspect.currentframe"], "torch._refs._make_elementwise_binary_reference": [], "torch._refs._make_elementwise_binary_reference.inner": ["torch._decomp.register_decomposition.decomposition_decorator", "torch._prims_common.wrappers.out_wrapper._out_wrapper", "torch._prims_common.wrappers.elementwise_type_promotion_wrapper.__init__", "functools.wraps", "torch._decomp.register_decomposition", "torch._prims_common.get_aten_op", "torch._prims_common.wrappers.out_wrapper"], "torch._refs._make_r_binary_op": [], "torch._refs._make_inplace": ["torch._decomp.register_decomposition.decomposition_decorator", "functools.wraps", "inspect.getmodule", "torch._decomp.register_decomposition", "<builtin>.getattr"], "torch._refs._make_copy_from_view": ["torch._decomp.register_decomposition.decomposition_decorator", "torch._prims_common.wrappers.out_wrapper._out_wrapper", "torch._decomp.register_decomposition", "functools.wraps", "torch._prims_common.wrappers.out_wrapper", "<builtin>.getattr"], "torch._refs._conversions": ["torch._decomp.register_decomposition.decomposition_decorator", "torch._prims_common.wrappers.out_wrapper._out_wrapper", "torch._decomp.register_decomposition", "torch._refs._conversions._make_conversion_method", "torch._prims_common.wrappers.out_wrapper"], "torch._refs._conversions._make_conversion_method": [], "torch._refs.fft": ["torch._decomp.register_decomposition.decomposition_decorator", "torch._decomp.register_decomposition", "torch._prims_common.wrappers.out_wrapper", "torch._prims_common.wrappers.out_wrapper._out_wrapper"], "torch._refs.linalg": ["torch._decomp.register_decomposition.decomposition_decorator", "torch._prims_common.wrappers.out_wrapper._out_wrapper", "torch._prims_common.wrappers.elementwise_type_promotion_wrapper.__init__", "torch._decomp.register_decomposition", "torch._prims_common.wrappers.out_wrapper"], "torch._refs.nn.functional": ["torch._refs._make_inplace", "torch._decomp.register_decomposition.decomposition_decorator", "torch._prims_common.wrappers.out_wrapper._out_wrapper", "torch._prims_common.wrappers.elementwise_unary_scalar_wrapper", "torch._refs.nn.functional._inplace_wrapper", "torch._prims_common.wrappers.elementwise_type_promotion_wrapper.__init__", "torch._decomp.register_decomposition", "torch._prims_common.wrappers.out_wrapper"], "torch._refs.nn.functional._inplace_wrapper": ["functools.wraps"], "torch._refs.special": ["torch._refs._make_elementwise_unary_reference", "torch._refs._make_alias", "torch._decomp.register_decomposition.decomposition_decorator", "torch._prims_common.wrappers.out_wrapper._out_wrapper", "torch._refs._make_elementwise_binary_reference.inner", "torch._prims_common.wrappers.elementwise_type_promotion_wrapper.__init__", "torch._refs._make_elementwise_unary_reference.inner", "torch._decomp.register_decomposition", "torch._refs._make_elementwise_binary_reference", "torch._prims_common.wrappers.out_wrapper"], "torch._meta_registrations.register_meta": [], "torch._meta_registrations.register_meta.wrapper": ["torch._decomp._convert_out_params", "torch.utils._pytree.tree_map_"], "torch._meta_registrations._create_unary_float_meta_func": ["torch._meta_registrations.register_meta.wrapper", "torch._meta_registrations.register_meta", "torch._prims_common.wrappers.out_wrapper", "torch._prims_common.wrappers.out_wrapper._out_wrapper"], "torch._meta_registrations._create_binary_float_meta_func": ["torch._meta_registrations.register_meta.wrapper", "torch._meta_registrations.register_meta", "torch._prims_common.wrappers.out_wrapper", "torch._prims_common.wrappers.out_wrapper._out_wrapper"], "torch._meta_registrations.activate_meta": ["torch.library.Library.impl", "<builtin>.RuntimeError", "<builtin>.isinstance", "<map>.items"], "torch._higher_order_ops.out_dtype": ["torch._higher_order_ops.out_dtype.OutDtypeOperator.__init__", "torch._higher_order_ops.utils.autograd_not_implemented", "torch._ops.HigherOrderOperator.py_impl", "torch._ops.OperatorBase.py_functionalize_impl"], "torch._higher_order_ops.out_dtype.OutDtypeOperator.__init__": ["<builtin>.super"], "torch._decomp.decompositions.register_inplace": ["torch._decomp.register_decomposition", "torch._decomp.register_decomposition.decomposition_decorator"], "torch._refs.nn": [], "torch.fx.passes.fake_tensor_prop": [], "torch.fx.passes.operator_support": ["torch.fx._compatibility.compatibility.mark_back_compat", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat"], "torch.fx.passes.tools_common": ["torch.fx._compatibility.compatibility.mark_back_compat", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat"], "torch.fx.passes.operator_support.OperatorSupportBase": ["abc.abstractmethod"], "torch.fx.passes.operator_support.OpSupports": ["<builtin>.classmethod"], "torch.onnx._internal": [], "torch.onnx._internal._exporter_legacy": ["contextlib.contextmanager", "logging.getLogger"], "torch.onnx.errors": [], "torch.onnx._internal.io_adapter": [], "torch.onnx._internal.diagnostics.infra": [], "torch.onnx._internal.diagnostics.infra._infra": [], "torch.onnx._internal.diagnostics.infra.formatter": [], "torch.onnx._internal.diagnostics.infra.sarif": [], "torch.onnx._internal.diagnostics.infra.sarif._address": [], "torch.onnx._internal.diagnostics.infra.sarif._property_bag": [], "torch.onnx._internal.diagnostics.infra.sarif._property_bag.PropertyBag": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._address.Address": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._artifact": [], "torch.onnx._internal.diagnostics.infra.sarif._artifact_content": [], "torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string": [], "torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string.MultiformatMessageString": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._artifact_content.ArtifactContent": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._artifact_location": [], "torch.onnx._internal.diagnostics.infra.sarif._message": [], "torch.onnx._internal.diagnostics.infra.sarif._message.Message": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._artifact_location.ArtifactLocation": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._artifact.Artifact": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._artifact_change": [], "torch.onnx._internal.diagnostics.infra.sarif._replacement": [], "torch.onnx._internal.diagnostics.infra.sarif._region": [], "torch.onnx._internal.diagnostics.infra.sarif._region.Region": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._replacement.Replacement": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._artifact_change.ArtifactChange": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._attachment": [], "torch.onnx._internal.diagnostics.infra.sarif._rectangle": [], "torch.onnx._internal.diagnostics.infra.sarif._rectangle.Rectangle": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._attachment.Attachment": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._code_flow": [], "torch.onnx._internal.diagnostics.infra.sarif._thread_flow": [], "torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location": [], "torch.onnx._internal.diagnostics.infra.sarif._location": [], "torch.onnx._internal.diagnostics.infra.sarif._location_relationship": [], "torch.onnx._internal.diagnostics.infra.sarif._location_relationship.LocationRelationship": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._logical_location": [], "torch.onnx._internal.diagnostics.infra.sarif._logical_location.LogicalLocation": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._physical_location": [], "torch.onnx._internal.diagnostics.infra.sarif._physical_location.PhysicalLocation": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._location.Location": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference": [], "torch.onnx._internal.diagnostics.infra.sarif._tool_component_reference": [], "torch.onnx._internal.diagnostics.infra.sarif._tool_component_reference.ToolComponentReference": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference.ReportingDescriptorReference": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._stack": [], "torch.onnx._internal.diagnostics.infra.sarif._stack_frame": [], "torch.onnx._internal.diagnostics.infra.sarif._stack_frame.StackFrame": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._stack.Stack": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._web_request": [], "torch.onnx._internal.diagnostics.infra.sarif._web_request.WebRequest": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._web_response": [], "torch.onnx._internal.diagnostics.infra.sarif._web_response.WebResponse": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location.ThreadFlowLocation": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._thread_flow.ThreadFlow": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._code_flow.CodeFlow": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._configuration_override": [], "torch.onnx._internal.diagnostics.infra.sarif._reporting_configuration": [], "torch.onnx._internal.diagnostics.infra.sarif._reporting_configuration.ReportingConfiguration": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._configuration_override.ConfigurationOverride": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._conversion": [], "torch.onnx._internal.diagnostics.infra.sarif._invocation": [], "torch.onnx._internal.diagnostics.infra.sarif._notification": [], "torch.onnx._internal.diagnostics.infra.sarif._exception": [], "torch.onnx._internal.diagnostics.infra.sarif._exception.Exception": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._notification.Notification": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._invocation.Invocation": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._tool": [], "torch.onnx._internal.diagnostics.infra.sarif._tool_component": [], "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor": [], "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship": [], "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship.ReportingDescriptorRelationship": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor.ReportingDescriptor": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._translation_metadata": [], "torch.onnx._internal.diagnostics.infra.sarif._translation_metadata.TranslationMetadata": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._tool_component.ToolComponent": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._tool.Tool": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._conversion.Conversion": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._edge": [], "torch.onnx._internal.diagnostics.infra.sarif._edge.Edge": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._edge_traversal": [], "torch.onnx._internal.diagnostics.infra.sarif._edge_traversal.EdgeTraversal": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._external_properties": [], "torch.onnx._internal.diagnostics.infra.sarif._graph": [], "torch.onnx._internal.diagnostics.infra.sarif._node": [], "torch.onnx._internal.diagnostics.infra.sarif._node.Node": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._graph.Graph": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._result": [], "torch.onnx._internal.diagnostics.infra.sarif._fix": [], "torch.onnx._internal.diagnostics.infra.sarif._fix.Fix": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._graph_traversal": [], "torch.onnx._internal.diagnostics.infra.sarif._graph_traversal.GraphTraversal": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._result_provenance": [], "torch.onnx._internal.diagnostics.infra.sarif._result_provenance.ResultProvenance": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._suppression": [], "torch.onnx._internal.diagnostics.infra.sarif._suppression.Suppression": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._result.Result": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._external_properties.ExternalProperties": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._external_property_file_reference": [], "torch.onnx._internal.diagnostics.infra.sarif._external_property_file_reference.ExternalPropertyFileReference": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._external_property_file_references": [], "torch.onnx._internal.diagnostics.infra.sarif._external_property_file_references.ExternalPropertyFileReferences": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._run": [], "torch.onnx._internal.diagnostics.infra.sarif._run_automation_details": [], "torch.onnx._internal.diagnostics.infra.sarif._run_automation_details.RunAutomationDetails": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._special_locations": [], "torch.onnx._internal.diagnostics.infra.sarif._special_locations.SpecialLocations": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._version_control_details": [], "torch.onnx._internal.diagnostics.infra.sarif._version_control_details.VersionControlDetails": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._run.Run": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.sarif._sarif_log": [], "torch.onnx._internal.diagnostics.infra.sarif._sarif_log.SarifLog": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra._infra.Rule": ["<builtin>.classmethod"], "torch.onnx._internal.diagnostics.infra._infra.Stack": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra._infra.RuleCollection": ["<builtin>.classmethod", "dataclasses.field"], "torch.onnx._internal.diagnostics.infra._infra.DiagnosticOptions": ["dataclasses.field"], "torch.onnx._internal.diagnostics.infra.context": ["typing.TypeVar.__init__", "logging.getLogger"], "torch.onnx._internal.diagnostics.infra.utils": ["functools.lru_cache"], "torch.onnx._internal.diagnostics.infra.sarif.version": [], "torch.onnx._internal.diagnostics.infra.context.Diagnostic": ["contextlib.contextmanager", "dataclasses.field"], "torch.onnx._internal.diagnostics.infra.context.DiagnosticContext": ["contextlib.contextmanager", "dataclasses.field"], "torch.onnx._internal.fx.decomposition_table": [], "torch.onnx._internal.fx.registration": [], "torch.onnx._internal.fx.registration.OpName": ["<builtin>.classmethod"], "torch.onnx._internal.fx.patcher": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "torch.onnx._internal.fx.serialization": ["logging.getLogger"], "torch.onnx._type_utils": ["<map>.items"], "torch.onnx._type_utils.JitScalarType": ["<builtin>.classmethod"], "torch.onnx._internal.fx.diagnostics": ["torch._logging._internal.getArtifactLogger", "functools.singledispatch"], "torch.onnx._internal.diagnostics": [], "torch.onnx._internal.diagnostics._diagnostic": ["contextlib.contextmanager", "torch.onnx._internal.diagnostics._diagnostic.ExportDiagnosticEngine.__init__"], "torch.onnx._internal.diagnostics._diagnostic.ExportDiagnosticEngine": ["<builtin>.property"], "torch.onnx._internal.diagnostics._diagnostic.ExportDiagnosticEngine.__init__": [], "torch.onnx._internal.diagnostics._rules": [], "torch.onnx._internal.diagnostics._rules._POERules": ["torch.onnx._internal.diagnostics.infra._infra.Rule.from_sarif", "dataclasses.field"], "torch.onnx._internal.diagnostics.infra._infra.Rule.from_sarif": [], "torch.onnx._internal.diagnostics.infra.decorator": [], "torch.onnx._internal.fx.type_utils": ["<map>.items"], "torch.onnx._internal.fx.type_utils.TensorLike": ["<builtin>.property"], "torch.onnx._internal.fx.diagnostics.Diagnostic": ["dataclasses.field"], "torch.onnx._internal.fx.diagnostics.DiagnosticContext": ["dataclasses.field"], "torch.onnx._internal._exporter_legacy.OnnxRegistry": ["<builtin>.property"], "torch.onnx._internal._exporter_legacy.ONNXProgram": ["<builtin>.property", "<builtin>.classmethod"], "torch.onnx._internal._exporter_legacy.FXGraphExtractor": ["abc.abstractmethod"], "torch.onnx._internal.fx.passes": [], "torch.onnx._internal.fx.passes.decomp": [], "torch.onnx._internal.fx._pass": ["contextlib.contextmanager"], "torch.onnx._internal.fx.onnxfunction_dispatcher": [], "torch.onnx._internal.fx.onnxfunction_dispatcher._OnnxSchemaChecker": ["<builtin>.property"], "torch.onnx._internal.fx._pass.PackageInfo": ["<builtin>.classmethod"], "torch.onnx._internal.fx._pass.Transform": ["abc.abstractmethod"], "torch.onnx._internal.fx._pass.Analysis": ["abc.abstractmethod"], "torch.onnx._internal.fx.passes._utils": [], "torch.onnx._internal.fx.passes.functionalization": [], "torch.func": [], "torch._functorch.eager_transforms": ["torch.utils._exposed_in.exposed_in.wrapper", "contextlib.contextmanager", "torch.utils._exposed_in.exposed_in", "torch._functorch.vmap.doesnt_support_saved_tensors_hooks"], "torch.fx.experimental.const_fold": [], "torch.fx.passes.split_module": ["torch.fx._compatibility.compatibility.mark_back_compat", "logging.getLogger", "torch.fx._compatibility.compatibility", "torch.fx._compatibility.compatibility.mark_not_back_compat"], "torch._functorch.vmap.doesnt_support_saved_tensors_hooks": ["functools.wraps"], "torch._functorch.functional_call": ["torch.utils._exposed_in.exposed_in.wrapper", "torch.utils._exposed_in.exposed_in"], "torch._functorch.batch_norm_replacement": ["torch.utils._exposed_in.exposed_in.wrapper", "torch.utils._exposed_in.exposed_in"], "torch.onnx._internal.fx.passes.modularization": [], "torch.onnx._internal.fx.passes.modularization._ModuleMeta": ["<builtin>.property", "<builtin>.classmethod"], "torch.onnx._internal.fx.passes.modularization._ModuleStackMeta": ["<builtin>.property"], "torch.onnx._internal.fx.passes.modularization._IRNode": ["abc.abstractmethod", "<builtin>.property"], "torch.onnx._internal.fx.passes.modularization._ModuleNode": ["<builtin>.property"], "torch.onnx._internal.fx.passes.modularization._LeafNode": ["<builtin>.property"], "torch.onnx._internal.fx.passes.readability": [], "torch.onnx._internal.fx.passes.type_promotion": ["torch.onnx._internal.fx.passes.type_promotion.DivElementwiseTypePromotionRule.__init__", "torch.onnx._internal.fx.passes.type_promotion.AllOrAnyReductionTypePromotionRule.__init__", "torch.onnx._internal.fx.passes.type_promotion.ReductionTypePromotionRule.__init__", "torch.onnx._internal.fx.passes.type_promotion.ElementwiseTypePromotionRule.__init__", "logging.getLogger"], "torch.onnx._internal.fx.passes.type_promotion.TypePromotionRule": ["abc.abstractmethod"], "torch.onnx._internal.fx.passes.type_promotion.ElementwiseTypePromotionRule.__init__": ["<builtin>.super"], "torch.onnx._internal.fx.passes.type_promotion.DivElementwiseTypePromotionRule.__init__": ["<builtin>.super"], "torch.onnx._internal.fx.passes.type_promotion.AllOrAnyReductionTypePromotionRule.__init__": ["<builtin>.super"], "torch.onnx._internal.fx.passes.type_promotion.ReductionTypePromotionRule.__init__": ["<builtin>.super"], "torch.onnx._internal.fx.passes.type_promotion.ElementwiseTypePromotionRuleSetGenerator": ["<builtin>.classmethod"], "torch.onnx._internal.fx.passes.virtualization": [], "torch.onnx._internal.fx.passes.virtualization.ReplaceGetAttrWithPlaceholder": ["<builtin>.property"], "torch.onnx._internal.onnxruntime.OrtBackend": ["<builtin>.staticmethod"], "torch.onnx.utils": ["torch._compile._disable_dynamo", "torch.onnx._deprecation.deprecated.decorator", "torch.onnx._deprecation.deprecated", "contextlib.contextmanager"], "torch.jit._trace": ["typing_extensions.ParamSpec.__init__", "typing.TypeVar.__init__", "torch.jit._trace.TracerWarning.ignore_lib_warnings", "contextlib.contextmanager", "torch.autograd.grad_mode.no_grad.__init__"], "torch.jit._trace.TracerWarning": ["<builtin>.staticmethod"], "torch.jit._trace.TracerWarning.ignore_lib_warnings": ["warnings.filterwarnings"], "torch.onnx._constants": [], "torch.onnx._deprecation": ["typing.TypeVar.__init__", "typing_extensions.ParamSpec.__init__"], "torch.onnx.symbolic_helper": ["typing_extensions.ParamSpec.__init__", "<builtin>.set", "typing.TypeVar.__init__", "torch.onnx.symbolic_helper.parse_args.decorator", "torch.onnx.symbolic_helper.parse_args"], "torch.onnx._globals": ["torch.onnx._globals._InternalGlobals.__init__"], "torch.onnx._globals._InternalGlobals": ["<builtin>.property"], "torch.onnx._globals._InternalGlobals.__init__": [], "torch.onnx._internal.jit_utils": ["re.compile"], "torch.onnx._internal.registration": ["typing.TypeVar.__init__", "torch.onnx._internal.registration.SymbolicRegistry.__init__"], "torch.onnx._internal.registration.SymbolicRegistry.__init__": [], "torch.onnx._internal.jit_utils.GraphContext": ["dataclasses.field"], "torch.onnx.symbolic_helper.parse_args": [], "torch.onnx.symbolic_helper.parse_args.decorator": ["functools.wraps"], "torch.onnx._internal.onnx_proto_utils": [], "torch.onnx._deprecation.deprecated": [], "torch.onnx._deprecation.deprecated.decorator": ["textwrap.dedent", "functools.wraps", "<builtin>.len"], "torch.onnx.symbolic_caffe2": ["torch.onnx.symbolic_helper.parse_args.decorator", "torch.onnx.symbolic_helper.parse_args"], "torch.onnx.symbolic_opset9": ["torch.onnx.symbolic_helper.quantized_args", "torch.onnx.symbolic_helper.parse_args.decorator", "torch.onnx.symbolic_opset9._export", "torch.onnx.symbolic_opset9.wrap_logical_op_with_cast_to", "torch.onnx.symbolic_opset9._max_pool", "torch.onnx._deprecation.deprecated", "torch.onnx._deprecation.deprecated.decorator", "torch.onnx.symbolic_helper._apply_params", "torch.onnx.symbolic_helper.parse_args", "torch.onnx.symbolic_helper.quantized_args.decorator", "torch.onnx.symbolic_opset9.wrap_logical_op_with_cast_to.decorator", "torch.onnx.symbolic_opset9.wrap_logical_op_with_negation"], "torch.onnx.symbolic_helper.quantized_args": [], "torch.onnx.symbolic_helper.quantized_args.decorator": ["functools.wraps"], "torch.onnx.symbolic_helper._apply_params": [], "torch.onnx.symbolic_opset9._export": [], "torch.onnx.symbolic_opset9._max_pool": ["torch.onnx.symbolic_helper.quantized_args", "torch.onnx.symbolic_helper.parse_args.decorator", "torch.onnx.symbolic_helper.quantized_args.decorator", "torch.onnx.symbolic_helper.parse_args"], "torch.onnx.symbolic_opset9.wrap_logical_op_with_negation": ["functools.wraps"], "torch.onnx.symbolic_opset9.wrap_logical_op_with_cast_to": [], "torch.onnx.symbolic_opset9.wrap_logical_op_with_cast_to.decorator": ["functools.wraps"], "torch.onnx.symbolic_opset7": ["torch.onnx.symbolic_helper._block_list_in_opset"], "torch.onnx.symbolic_helper._block_list_in_opset": [], "torch.onnx.symbolic_opset8": ["torch.onnx.symbolic_helper._block_list_in_opset", "torch.onnx.symbolic_helper.parse_args.decorator", "torch.onnx.symbolic_helper.parse_args", "torch.onnx.symbolic_helper._apply_params"], "torch.onnx.symbolic_opset10": ["torch.onnx.symbolic_helper._apply_params", "torch.onnx.symbolic_helper.parse_args.decorator", "torch.onnx.symbolic_helper.parse_args"], "torch.onnx.symbolic_opset11": ["torch.onnx.symbolic_helper.quantized_args", "torch.onnx.symbolic_helper.parse_args.decorator", "torch.onnx.symbolic_helper._apply_params", "torch.onnx.symbolic_helper.quantized_args.decorator", "torch.onnx.symbolic_helper.parse_args"], "torch.onnx.symbolic_opset12": ["torch.onnx.symbolic_helper.parse_args.decorator", "torch.onnx.symbolic_helper.parse_args"], "torch.onnx.symbolic_opset13": ["torch.onnx.symbolic_helper._apply_params", "torch.onnx.symbolic_helper.parse_args.decorator", "torch.onnx.symbolic_helper.parse_args"], "torch.onnx.symbolic_opset14": ["torch.onnx.symbolic_helper.quantized_args", "torch.onnx.symbolic_helper.parse_args.decorator", "torch.onnx.symbolic_helper.quantized_args.decorator", "torch.onnx.symbolic_helper.parse_args"], "torch.onnx.symbolic_opset15": ["torch.onnx.symbolic_opset9.wrap_logical_op_with_negation"], "torch.onnx.symbolic_opset16": ["torch.onnx.symbolic_helper.parse_args.decorator", "torch.onnx.symbolic_helper.parse_args"], "torch.onnx.symbolic_opset17": ["torch.onnx.symbolic_helper.parse_args.decorator", "torch.onnx.symbolic_helper.parse_args"], "torch.onnx.symbolic_opset18": ["torch.onnx.symbolic_helper.quantized_args", "torch.onnx.symbolic_helper.parse_args.decorator", "torch.onnx.symbolic_helper._apply_params", "torch.onnx.symbolic_helper.quantized_args.decorator", "torch.onnx.symbolic_helper.parse_args"], "torch.onnx.symbolic_opset19": [], "torch.onnx.symbolic_opset20": ["torch.onnx.symbolic_helper.parse_args.decorator", "torch.onnx.symbolic_helper.parse_args"], "torch._dynamo.variables.builtin": ["contextlib.contextmanager", "logging.getLogger"], "torch._dynamo.replay_record": ["torch.utils._import_utils.import_dill"], "torch._dynamo.replay_record.ModuleRecord": ["dataclasses.field"], "torch._dynamo.replay_record.DummyModule": ["<builtin>.property"], "torch._dynamo.replay_record.ExecutionRecord": ["<builtin>.classmethod", "dataclasses.field"], "torch._dynamo.replay_record.ExecutionRecorder": ["<builtin>.classmethod", "dataclasses.field"], "torch._dynamo.variables.builtin.BuiltinVariable": ["<builtin>.classmethod", "functools.lru_cache", "functools.lru_cache.decorating_function", "<builtin>.object", "<builtin>.staticmethod"], "torch._dynamo.variables.higher_order_ops.TorchHigherOrderOperatorVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.higher_order_ops.CondHigherOrderVariable": ["torch._dynamo.variables.higher_order_ops.raise_hard_error_if_graph_break", "torch._dynamo.variables.higher_order_ops.raise_hard_error_if_graph_break.deco"], "torch._dynamo.variables.higher_order_ops.raise_hard_error_if_graph_break": [], "torch._dynamo.variables.higher_order_ops.raise_hard_error_if_graph_break.deco": ["functools.wraps"], "torch._dynamo.variables.higher_order_ops.WhileLoopHigherOrderVariable": ["torch._dynamo.variables.higher_order_ops.raise_hard_error_if_graph_break", "torch._dynamo.variables.higher_order_ops.raise_hard_error_if_graph_break.deco"], "torch._dynamo.variables.higher_order_ops.AssociativeScanHigherOrderVariable": ["torch._dynamo.variables.higher_order_ops.raise_hard_error_if_graph_break", "torch._dynamo.variables.higher_order_ops.raise_hard_error_if_graph_break.deco"], "torch._dynamo.variables.higher_order_ops.HintsWrapperHigherOrderVariable": ["torch._dynamo.variables.higher_order_ops.raise_hard_error_if_graph_break", "torch._dynamo.variables.higher_order_ops.raise_hard_error_if_graph_break.deco"], "torch._dynamo.variables.higher_order_ops.StrictModeHigherOrderVariable": ["torch._dynamo.variables.higher_order_ops.raise_hard_error_if_graph_break", "torch._dynamo.variables.higher_order_ops.raise_hard_error_if_graph_break.deco"], "torch._dynamo.variables.higher_order_ops.FlexAttentionHigherOrderVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.misc": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "torch._dynamo.variables.misc.InspectSignatureVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.misc.SavedTensorBox": ["dataclasses.field"], "torch._dynamo.variables.misc.AutogradFunctionContextVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.misc.GetAttrVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.misc.NumpyVariable": ["<builtin>.classmethod"], "torch._dynamo.variables.misc.StringFormatVariable": ["<builtin>.classmethod"], "torch._dynamo.variables.misc.DebuggingVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.misc.ConstantLikeVariable": ["<builtin>.type"], "torch._dynamo.variables.misc.RandomVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.optimizer": [], "torch._dynamo.variables.script_object": [], "torch._dynamo.variables.script_object.TorchScriptObjectVariable": ["torch._dynamo.variables.script_object._raise_hard_error_if_graph_break.deco", "<builtin>.staticmethod", "torch._dynamo.variables.script_object._raise_hard_error_if_graph_break", "<builtin>.classmethod"], "torch._dynamo.variables.script_object._raise_hard_error_if_graph_break": [], "torch._dynamo.variables.script_object._raise_hard_error_if_graph_break.deco": ["functools.wraps"], "torch._dynamo.variables.sdpa": [], "torch._dynamo.variables.sdpa.SDPAParamsVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.torch": ["logging.getLogger", "extend"], "torch._dynamo.variables.torch.BaseTorchVariable": ["<builtin>.classmethod"], "torch._dynamo.variables.torch.TorchCtxManagerClassVariable": ["<builtin>.staticmethod"], "torch._dynamo.variables.torch.TorchInGraphFunctionVariable": ["<builtin>.classmethod", "<builtin>.staticmethod", "functools.lru_cache.decorating_function", "functools.lru_cache"], "torch._dynamo.variables.builder.GraphArg": ["<builtin>.property"], "torch._dynamo.variables.builder.VariableBuilder": ["<builtin>.classmethod", "<builtin>.staticmethod", "functools.lru_cache.decorating_function", "functools.lru_cache"], "torch._dynamo.variables.builder.SourcelessBuilder": ["<builtin>.staticmethod"], "torch._dynamo.variables.builder.SourcelessBuilder.make_type_handlers": [], "torch._dynamo.output_graph.OutputGraph": ["<builtin>.property", "contextlib.contextmanager", "<builtin>.staticmethod"], "torch._dynamo.variables.builtin.BuiltinVariable.__init__": ["<builtin>.super"], "torch._dynamo.symbolic_convert.SpeculationLog": ["dataclasses.field"], "torch._dynamo.symbolic_convert.LocalState": ["dataclasses.field"], "torch._dynamo.symbolic_convert.InstructionTranslatorBase": ["torch._dynamo.symbolic_convert.break_graph_if_unsupported.decorator", "torch._dynamo.symbolic_convert.generic_jump", "<builtin>.property", "functools.cached_property.__init__", "contextlib.contextmanager", "torch._dynamo.symbolic_convert.break_graph_if_unsupported", "torch._dynamo.symbolic_convert.stack_op"], "torch._dynamo.symbolic_convert.generic_jump": [], "torch._dynamo.symbolic_convert.break_graph_if_unsupported": [], "torch._dynamo.symbolic_convert.break_graph_if_unsupported.decorator": ["functools.wraps"], "torch._dynamo.symbolic_convert.stack_op": ["torch._dynamo.variables.builtin.BuiltinVariable.__init__", "functools.wraps", "inspect.signature", "<builtin>.len"], "torch._dynamo.symbolic_convert.InstructionTranslator": ["contextlib.contextmanager", "<builtin>.staticmethod"], "torch._dynamo.symbolic_convert.InliningInstructionTranslator": ["<builtin>.property", "<builtin>.staticmethod", "<builtin>.classmethod"], "torch._dynamo.variables.base.VariableTracker": ["<builtin>.classmethod"], "torch._dynamo.trace_rules.FunctionIdSet.__init__": [], "torch._dynamo.trace_rules._as_posix_path": ["pathlib.PurePath.as_posix", "ntpath.normpath", "posixpath.normpath"], "pathlib.PurePath.as_posix": ["<builtin>.str"], "importlib.import_module": ["<str>.startswith", "<builtin>.TypeError"], "torch._dynamo.trace_rules._module_dir": ["torch._dynamo.trace_rules._strip_init_py", "<builtin>.getattr"], "torch._dynamo.trace_rules._strip_init_py": ["torch._dynamo.trace_rules._as_posix_path", "<builtin>.len"], "torch._dynamo.trace_rules.add": ["append", "<builtin>.isinstance", "importlib.util.find_spec", "torch._dynamo.trace_rules.add", "torch._dynamo.trace_rules._recompile_re"], "importlib.util.find_spec": ["<builtin>.ValueError", "importlib.util.resolve_name", "<builtin>.__import__", "<str>.startswith", "<builtin>.ModuleNotFoundError"], "importlib.util.resolve_name": ["<builtin>.ImportError", "<str>.startswith", "<builtin>.repr"], "<builtin>.ModuleNotFoundError": [], "torch._dynamo.trace_rules._recompile_re": ["re.compile", "torch._dynamo.trace_rules._as_posix_path", "re.escape"], "torch._dynamo.cache_size": ["logging.getLogger"], "torch._dynamo.repro.after_dynamo": ["importlib.import_module", "logging.getLogger"], "torch._dynamo.debug_utils": ["functools.lru_cache", "typing.TypeVar.__init__", "torch._dynamo.debug_utils._mk_defaulter", "functools.lru_cache.decorating_function", "importlib.import_module", "logging.getLogger"], "torch._dynamo.testing": ["logging.getLogger"], "torch._dynamo.debug_utils.NNModuleToString": ["<builtin>.staticmethod"], "torch._dynamo.debug_utils._mk_defaulter": [], "torch._dynamo.convert_frame.Tracker.__init__": ["<builtin>.set"], "torch._dynamo.eval_frame.TorchPatcher.suppress_torch_distributed_warnings": [], "collections.Counter.__init__": ["collections.Counter.update", "<builtin>.super"], "collections.Counter.update": ["<builtin>.isinstance", "collections._count_elements", "<builtin>.super", "collections.Counter.update"], "collections._count_elements": [], "torch._dynamo.convert_frame.ConvertFrameAssert": ["<builtin>.property"], "torch._dynamo.convert_frame.ConvertFrame": ["<builtin>.property"], "torch._dynamo.callback": ["torch._dynamo.callback.CompilationCallbackHandler.__init__"], "torch._dynamo.callback.CompilationCallbackHandler.__init__": [], "torch._dynamo.decorators": ["<builtin>.globals", "torch._dynamo.decorators._disallow_in_graph_helper", "torch._dynamo.decorators._disallow_in_graph_helper.inner", "<builtin>.dir", "typing.TypeVar.__init__", "torch._dynamo.decorators.forbid_in_graph", "torch._dynamo.trace_rules.add_module_init_func", "<builtin>.getattr"], "torch._dynamo.comptime": [], "torch._dynamo.comptime._Comptime": ["<builtin>.staticmethod"], "torch._dynamo.decorators._disallow_in_graph_helper": [], "torch._dynamo.decorators._disallow_in_graph_helper.inner": ["<builtin>.isinstance", "torch._dynamo.decorators.disallow_in_graph", "<builtin>.id", "torch._dynamo.trace_rules.lookup", "<builtin>.callable", "torch._dynamo.trace_rules.lookup_callable"], "torch._dynamo.decorators.disallow_in_graph": ["torch._dynamo.decorators._disallow_in_graph_helper", "torch._dynamo.decorators._disallow_in_graph_helper.inner"], "torch._dynamo.trace_rules.lookup_callable": ["torch._dynamo.trace_rules.is_callable_allowed", "torch._dynamo.trace_rules.is_builtin_callable", "torch._dynamo.utils.hashable", "torch._dynamo.trace_rules.is_callable_disallowed"], "torch._dynamo.utils.hashable": ["<builtin>.hash"], "torch._dynamo.trace_rules.is_callable_disallowed": ["torch._dynamo.trace_rules._maybe_init_lazy_module", "<builtin>.id"], "torch._dynamo.trace_rules._maybe_init_lazy_module": ["<builtin>.getattr"], "torch._dynamo.trace_rules.is_callable_allowed": ["torch._dynamo.trace_rules._maybe_init_lazy_module", "<builtin>.id"], "torch._dynamo.trace_rules.is_builtin_callable": ["<builtin>.id"], "torch._dynamo.trace_rules.lookup": ["torch._dynamo.trace_rules.lookup_inner"], "torch._dynamo.trace_rules.lookup_inner": ["torch._dynamo.trace_rules.check_file", "torch._dynamo.utils.hashable", "torch._dynamo.trace_rules.is_aten_op_or_tensor_method", "torch._dynamo.utils.getfile", "torch._dynamo.trace_rules.get_torch_obj_rule_map"], "torch._dynamo.trace_rules.get_torch_obj_rule_map": ["torch._dynamo.trace_rules.load_object", "torch._dynamo.trace_rules._module_dir", "<builtin>.AssertionError", "<builtin>.len"], "torch._dynamo.trace_rules.load_object": ["torch._dynamo.trace_rules._load_obj_from_str", "<builtin>.getattr", "torch._dynamo.utils.unwrap_if_wrapper", "<builtin>.len"], "torch._dynamo.trace_rules._load_obj_from_str": ["importlib.import_module", "<builtin>.getattr"], "torch._dynamo.utils.unwrap_if_wrapper": ["torch._dynamo.utils.unwrap_with_attr_name_if_wrapper"], "torch._dynamo.utils.unwrap_with_attr_name_if_wrapper": ["inspect.getattr_static", "torch._dynamo.utils.is_function"], "torch._dynamo.utils.is_function": ["<builtin>.isinstance"], "inspect.getattr_static": ["inspect._check_instance", "inspect._static_getmro", "<builtin>.AttributeError", "inspect._shadowed_dict", "inspect._is_type", "inspect._check_class", "<builtin>.type"], "inspect._is_type": ["inspect._static_getmro"], "inspect._static_getmro": [], "inspect._shadowed_dict": ["inspect._static_getmro"], "inspect._check_instance": [], "inspect._check_class": ["inspect._static_getmro", "inspect._shadowed_dict", "<builtin>.type"], "torch._dynamo.trace_rules.is_aten_op_or_tensor_method": ["<builtin>.isinstance", "torch._dynamo.trace_rules.get_tensor_method"], "torch._dynamo.trace_rules.get_tensor_method": ["<builtin>.isinstance", "<builtin>.set", "<builtin>.dir", "<builtin>.frozenset", "<builtin>.getattr"], "torch._dynamo.utils.getfile": ["inspect.getfile"], "torch._dynamo.trace_rules.check_file": ["<builtin>.any", "torch._dynamo.trace_rules._as_posix_path", "<builtin>.bool", "torch._dynamo.trace_rules.is_torch_inline_allowed", "torch._dynamo.trace_rules.get_legacy_mod_inlinelist"], "torch._dynamo.trace_rules.get_legacy_mod_inlinelist": ["torch._dynamo.trace_rules._as_posix_path", "torch._dynamo.trace_rules._module_dir", "<builtin>.len"], "torch._dynamo.trace_rules.is_torch_inline_allowed": ["torch._dynamo.trace_rules.get_mod_inlinelist", "<builtin>.any"], "torch._dynamo.trace_rules.get_mod_inlinelist": ["torch._dynamo.trace_rules._as_posix_path", "torch._dynamo.trace_rules._module_dir", "<builtin>.len"], "torch._dynamo.decorators.forbid_in_graph": ["<builtin>.callable", "<builtin>.isinstance", "torch._dynamo.decorators.forbid_in_graph"], "torch._dynamo.trace_rules.add_module_init_func": [], "torch._dynamo.polyfills.loader": ["importlib.import_module", "<builtin>.getattr", "<builtin>.id", "<builtin>.tuple"], "torch.nn.utils": [], "torch.nn.utils.parametrizations": [], "torch.nn.utils.parametrize": ["contextlib.contextmanager"], "torch.nn.utils.parametrizations._Orthogonal": ["torch.autograd.grad_mode.no_grad.__init__"], "torch.nn.utils.parametrizations._SpectralNorm": ["torch.autograd.grad_mode.no_grad.__init__"], "torch.nn.utils.stateless": ["typing_extensions.deprecated.__init__"], "torch.nn.utils._named_member_accessor": ["<builtin>.object"], "torch.nn.utils.clip_grad": ["typing_extensions.deprecated.__init__", "torch.nn.utils.clip_grad._no_grad"], "torch.nn.utils.clip_grad._no_grad": ["functools.update_wrapper"], "torch.nn.utils.convert_parameters": [], "torch.nn.utils.fusion": ["typing.TypeVar.__init__"], "torch.nn.utils.init": [], "torch.nn.utils.memory_format": [], "torch.nn.utils.spectral_norm": ["typing.TypeVar.__init__"], "torch.nn.utils.spectral_norm.SpectralNorm": ["<builtin>.staticmethod"], "torch.nn.utils.weight_norm": ["typing.TypeVar.__init__"], "torch.nn.utils.weight_norm.WeightNorm": ["typing_extensions.deprecated.__init__", "<builtin>.staticmethod"], "torch.jit._recursive.ConcreteTypeStore.__init__": ["<builtin>.set"], "torch.jit._serialization": [], "torch.jit._monkeytype_config.JitTypeTraceStore.__init__": [], "torch.jit._script._get_methods": ["inspect.getmembers"], "torch.jit._script._get_methods.<lambda1>": ["inspect.ismethod", "inspect.isfunction"], "torch.jit._script._make_fail": [], "torch.jit._ir_utils": [], "torch.jit.script_if_tracing": ["torch.jit._trace._script_if_tracing"], "torch.jit._trace._script_if_tracing": ["functools.wraps"], "torch.distributions.von_mises.VonMises": ["torch.autograd.grad_mode.no_grad.__init__", "<builtin>.property", "torch.distributions.utils.lazy_property.__init__"], "torch.distributions.weibull": [], "torch.distributions.weibull.Weibull": ["<builtin>.property"], "torch.distributions.wishart": [], "torch.distributions.wishart.Wishart": ["torch.distributions.utils.lazy_property.__init__", "<builtin>.property", "torch.distributions.constraints._GreaterThan.__init__"], "torch.distributions.kl._add_kl_info": ["append", "<builtin>.sorted"], "torch.fft": [], "torch.linalg": [], "torch.mps": ["<builtin>.getattr"], "torch.mps.profiler": ["contextlib.contextmanager"], "torch.mps.event": [], "torch.mtia": ["torch._utils._LazySeedTracker.__init__"], "torch.mtia._utils": [], "torch.multiprocessing": ["torch.multiprocessing.reductions.init_reductions"], "torch.multiprocessing.spawn": ["logging.getLogger"], "multiprocessing.connection": ["multiprocessing.reduction.ForkingPickler.register", "<builtin>.hasattr"], "multiprocessing.connection._ConnectionBase": ["<builtin>.property"], "multiprocessing.connection.Listener": ["<builtin>.property"], "multiprocessing.connection.PipeListener": ["<builtin>.staticmethod"], "torch.multiprocessing.reductions.init_reductions": ["multiprocessing.reduction.ForkingPickler.register"], "torch.nested": [], "torch.optim": [], "torch.optim.lr_scheduler": [], "torch.optim.lr_scheduler.ReduceLROnPlateau": ["<builtin>.property"], "torch.optim.lr_scheduler.CyclicLR": ["<builtin>.staticmethod"], "torch.optim.lr_scheduler.OneCycleLR": ["<builtin>.staticmethod"], "torch.optim.swa_utils": ["torch.autograd.grad_mode.no_grad.__init__"], "torch.optim.swa_utils.SWALR": ["<builtin>.staticmethod"], "torch.optim._adafactor": ["torch.optim.optimizer._disable_dynamo_if_unsupported", "torch.optim.optimizer._disable_dynamo_if_unsupported.wrapper"], "torch.optim._adafactor.Adafactor": ["torch.autograd.grad_mode.no_grad.__init__"], "torch.optim.optimizer._disable_dynamo_if_unsupported": ["<builtin>.globals"], "torch.optim.optimizer._disable_dynamo_if_unsupported.wrapper": ["torch._compile._disable_dynamo", "<builtin>.list", "functools.wraps", "inspect.signature"], "torch.optim.adadelta": ["torch.optim.optimizer._disable_dynamo_if_unsupported", "torch.optim.optimizer._disable_dynamo_if_unsupported.wrapper"], "torch.optim.adadelta.Adadelta": ["torch.optim.optimizer._use_grad_for_differentiable"], "torch.optim.optimizer._use_grad_for_differentiable": ["functools.update_wrapper"], "torch.optim.adagrad": [], "torch.optim.adagrad.Adagrad": ["torch.optim.optimizer._use_grad_for_differentiable"], "torch.optim.adam": ["torch.optim.optimizer._disable_dynamo_if_unsupported", "torch.optim.optimizer._disable_dynamo_if_unsupported.wrapper"], "torch.optim.adam.Adam": ["torch.optim.optimizer._use_grad_for_differentiable"], "torch.optim.adamax": ["torch.optim.optimizer._disable_dynamo_if_unsupported", "torch.optim.optimizer._disable_dynamo_if_unsupported.wrapper"], "torch.optim.adamax.Adamax": ["torch.optim.optimizer._use_grad_for_differentiable"], "torch.optim.adamw": ["torch.optim.optimizer._disable_dynamo_if_unsupported", "torch.optim.optimizer._disable_dynamo_if_unsupported.wrapper"], "torch.optim.adamw.AdamW": ["torch.optim.optimizer._use_grad_for_differentiable"], "torch.optim.asgd": ["torch.optim.optimizer._disable_dynamo_if_unsupported", "torch.optim.optimizer._disable_dynamo_if_unsupported.wrapper"], "torch.optim.asgd.ASGD": ["torch.optim.optimizer._use_grad_for_differentiable"], "torch.optim.lbfgs": [], "torch.optim.lbfgs.LBFGS": ["torch.autograd.grad_mode.no_grad.__init__"], "torch.optim.nadam": ["torch.optim.optimizer._disable_dynamo_if_unsupported", "torch.optim.optimizer._disable_dynamo_if_unsupported.wrapper"], "torch.optim.nadam.NAdam": ["torch.optim.optimizer._use_grad_for_differentiable"], "torch.optim.radam": ["torch.optim.optimizer._disable_dynamo_if_unsupported", "torch.optim.optimizer._disable_dynamo_if_unsupported.wrapper"], "torch.optim.radam.RAdam": ["torch.optim.optimizer._use_grad_for_differentiable"], "torch.optim.rmsprop": ["torch.optim.optimizer._disable_dynamo_if_unsupported", "torch.optim.optimizer._disable_dynamo_if_unsupported.wrapper"], "torch.optim.rmsprop.RMSprop": ["torch.optim.optimizer._use_grad_for_differentiable"], "torch.optim.rprop": ["torch.optim.optimizer._disable_dynamo_if_unsupported", "torch.optim.optimizer._disable_dynamo_if_unsupported.wrapper"], "torch.optim.rprop.Rprop": ["torch.optim.optimizer._use_grad_for_differentiable"], "torch.optim.sgd": [], "torch.optim.sgd.SGD": ["torch.optim.optimizer._use_grad_for_differentiable"], "torch.optim.sparse_adam": [], "torch.optim._functional": [], "torch.optim.sparse_adam.SparseAdam": ["torch.autograd.grad_mode.no_grad.__init__"], "torch.sparse": [], "torch.sparse.semi_structured": ["collections.namedtuple"], "torch.sparse._semi_structured_conversions": [], "torch.sparse._semi_structured_ops": ["contextlib.contextmanager"], "torch.sparse.semi_structured.SparseSemiStructuredTensor": ["<builtin>.classmethod", "<builtin>.staticmethod"], "torch.sparse.semi_structured.SparseSemiStructuredTensorCUTLASS": ["<builtin>.classmethod"], "torch.sparse.semi_structured.SparseSemiStructuredTensorCUSPARSELT": ["<builtin>.classmethod"], "torch.sparse.check_sparse_tensor_invariants": ["<builtin>.staticmethod"], "torch.special": [], "torch.xpu": ["functools.lru_cache", "torch._utils._LazySeedTracker.__init__", "torch._utils._dummy_type", "functools.lru_cache.decorating_function", "torch.xpu._is_compiled", "<builtin>.getattr"], "torch.xpu._utils": [], "torch.xpu.streams": ["torch._utils._dummy_type", "<builtin>.hasattr"], "torch.xpu.streams.Stream": ["<builtin>.property"], "torch.xpu.streams.Event": ["<builtin>.property"], "torch.xpu._is_compiled": [], "torch.xpu.memory": [], "torch.xpu.random": [], "torch.signal.windows": [], "torch.signal.windows.windows": ["torch.signal.windows.windows._add_docstr", "torch._torch_docs.merge_dicts", "torch._torch_docs.parse_kwargs", "torch.signal.windows.windows._add_docstr.decorator"], "torch.signal.windows.windows._add_docstr": [], "torch.signal.windows.windows._add_docstr.decorator": [], "torch.ao": [], "torch.nn.intrinsic": [], "torch.ao.nn.intrinsic": [], "torch.ao.nn.intrinsic.modules": [], "torch.ao.nn.intrinsic.modules.fused": [], "torch.nn.intrinsic.modules": [], "torch.nn.intrinsic.modules.fused": [], "torch.nn.intrinsic.qat": [], "torch.nn.intrinsic.qat.modules": [], "torch.nn.intrinsic.qat.modules.conv_fused": [], "torch.ao.nn.intrinsic.qat": [], "torch.ao.nn.intrinsic.qat.modules": [], "torch.ao.nn.intrinsic.qat.modules.conv_fused": ["typing.TypeVar.__init__"], "torch.ao.nn.qat": [], "torch.ao.nn.qat.modules": [], "torch.ao.nn.qat.modules.conv": ["typing.TypeVar.__init__"], "torch.ao.nn.qat.modules.conv._ConvNd": ["<builtin>.staticmethod"], "torch.ao.nn.qat.modules.conv.Conv1d": ["<builtin>.classmethod"], "torch.ao.nn.qat.modules.conv.Conv2d": ["<builtin>.classmethod"], "torch.ao.nn.qat.modules.conv.Conv3d": ["<builtin>.classmethod"], "torch.ao.nn.qat.modules.embedding_ops": [], "torch.ao.nn.qat.modules.embedding_ops.Embedding": ["<builtin>.classmethod"], "torch.ao.nn.qat.modules.embedding_ops.EmbeddingBag": ["<builtin>.classmethod"], "torch.ao.nn.qat.modules.linear": [], "torch.ao.nn.qat.modules.linear.Linear": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.qat.modules.conv_fused._ConvBnNd": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.qat.modules.conv_fused.ConvBnReLU1d": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.qat.modules.conv_fused.ConvReLU1d": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.qat.modules.conv_fused.ConvBnReLU2d": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.qat.modules.conv_fused.ConvReLU2d": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.qat.modules.conv_fused.ConvBnReLU3d": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.qat.modules.conv_fused.ConvReLU3d": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.qat.modules.linear_fused": [], "torch.ao.nn.intrinsic.qat.modules.linear_fused.LinearBn1d": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.qat.modules.linear_relu": [], "torch.ao.nn.intrinsic.qat.modules.linear_relu.LinearReLU": ["<builtin>.classmethod"], "torch.nn.intrinsic.qat.modules.linear_fused": [], "torch.nn.intrinsic.qat.modules.linear_relu": [], "torch.nn.intrinsic.quantized": [], "torch.nn.intrinsic.quantized.dynamic": [], "torch.nn.intrinsic.quantized.dynamic.modules": [], "torch.nn.intrinsic.quantized.dynamic.modules.linear_relu": [], "torch.ao.nn.intrinsic.quantized.dynamic": [], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [], "torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu": [], "torch.ao.nn.quantized.dynamic": [], "torch.ao.nn.quantized.dynamic.modules": [], "torch.ao.nn.quantized.dynamic.modules.conv": [], "torch.ao.nn.quantized": [], "torch.ao.nn.quantized.functional": [], "torch.ao.nn.quantized.modules.utils": ["torch.ao.nn.quantized.modules.utils._ntuple_from_first"], "torch.ao.nn.quantized.modules.utils.WeightedQuantizedModule": ["abc.abstractmethod", "<builtin>.classmethod"], "torch.ao.nn.quantized.modules.utils._ntuple_from_first": [], "torch.ao.nn.quantized.modules": [], "torch.ao.nn.quantizable": [], "torch.ao.nn.quantizable.modules": [], "torch.ao.nn.quantizable.modules.activation": [], "torch.ao.nn.quantizable.modules.activation.MultiheadAttention": ["torch._jit_internal.unused", "<builtin>.classmethod"], "torch._jit_internal.unused": ["<builtin>.isinstance", "<builtin>.setattr"], "torch.ao.nn.quantizable.modules.rnn": [], "torch.ao.nn.quantizable.modules.rnn.LSTMCell": ["<builtin>.classmethod"], "torch.ao.nn.quantizable.modules.rnn._LSTMSingleLayer": ["<builtin>.classmethod"], "torch.ao.nn.quantizable.modules.rnn._LSTMLayer": ["<builtin>.classmethod"], "torch.ao.nn.quantizable.modules.rnn.LSTM": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.activation": [], "torch.ao.nn.quantized.modules.activation.ReLU6": ["<builtin>.staticmethod"], "torch.ao.nn.quantized.modules.activation.Hardswish": ["<builtin>.classmethod", "<builtin>.staticmethod"], "torch.ao.nn.quantized.modules.activation.ELU": ["<builtin>.classmethod", "<builtin>.staticmethod"], "torch.ao.nn.quantized.modules.activation.LeakyReLU": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.activation.Sigmoid": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.activation.Softmax": ["<builtin>.classmethod", "<builtin>.staticmethod"], "torch.ao.nn.quantized.modules.activation.MultiheadAttention": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.activation.PReLU": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.batchnorm": [], "torch.ao.nn.quantized.modules.batchnorm._BatchNorm": ["<builtin>.classmethod", "<builtin>.staticmethod"], "torch.ao.nn.quantized.modules.batchnorm.BatchNorm2d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.batchnorm.BatchNorm3d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.conv": ["typing.TypeVar.__init__"], "torch.ao.nn.quantized.modules.conv._ConvNd": ["<builtin>.classmethod", "<builtin>.staticmethod", "torch._jit_internal.export"], "torch._jit_internal.export": [], "torch.ao.nn.quantized.modules.conv.Conv1d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.conv.Conv2d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.conv.Conv3d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.conv._ConvTransposeNd": ["<builtin>.staticmethod", "<builtin>.classmethod"], "torch.ao.nn.quantized.modules.conv.ConvTranspose1d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.conv.ConvTranspose2d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.conv.ConvTranspose3d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.dropout": [], "torch.ao.nn.quantized.modules.dropout.Dropout": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.embedding_ops": [], "torch.ao.nn.quantized.modules.embedding_ops.EmbeddingPackedParams": ["torch._jit_internal.export"], "torch.ao.nn.quantized.modules.embedding_ops.Embedding": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.embedding_ops.EmbeddingBag": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.functional_modules": [], "torch.ao.nn.quantized.modules.functional_modules.QFunctional": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.linear": [], "torch.ao.nn.quantized.modules.linear.LinearPackedParams": ["torch._jit_internal.export"], "torch.ao.nn.quantized.modules.linear.Linear": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.normalization": [], "torch.ao.nn.quantized.modules.normalization.LayerNorm": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.normalization.GroupNorm": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.normalization.InstanceNorm1d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.normalization.InstanceNorm2d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.normalization.InstanceNorm3d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.rnn": [], "torch.ao.nn.quantized.modules.rnn.LSTM": ["<builtin>.classmethod"], "torch.ao.nn.quantized.modules.Quantize": ["<builtin>.staticmethod"], "torch.ao.nn.quantized.modules.DeQuantize": ["<builtin>.staticmethod"], "torch.ao.nn.quantized.dynamic.modules.linear": [], "torch.ao.nn.quantized.dynamic.modules.linear.Linear": ["<builtin>.classmethod"], "torch.ao.nn.quantized.dynamic.modules.rnn": ["typing_extensions.deprecated.__init__"], "torch.ao.nn.quantized.dynamic.modules.rnn.RNNBase": ["<builtin>.classmethod"], "torch.ao.nn.quantized.dynamic.modules.rnn.LSTM": ["torch._jit_internal.ignore", "<builtin>.classmethod", "torch._jit_internal.export"], "torch._jit_internal.ignore": ["<builtin>.callable", "<builtin>.RuntimeError", "<builtin>.isinstance", "warnings.warn"], "torch.ao.nn.quantized.dynamic.modules.rnn.GRU": ["torch._jit_internal.ignore", "<builtin>.classmethod", "torch._jit_internal.export"], "torch.ao.nn.quantized.dynamic.modules.rnn.RNNCellBase": ["<builtin>.classmethod"], "torch.ao.nn.quantized.dynamic.modules.rnn.RNNCell": ["<builtin>.classmethod"], "torch.ao.nn.quantized.dynamic.modules.rnn.LSTMCell": ["<builtin>.classmethod"], "torch.ao.nn.quantized.dynamic.modules.rnn.GRUCell": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu.LinearReLU": ["<builtin>.classmethod"], "torch.nn.intrinsic.quantized.modules": [], "torch.nn.intrinsic.quantized.modules.bn_relu": [], "torch.ao.nn.intrinsic.quantized": [], "torch.ao.nn.intrinsic.quantized.modules": [], "torch.ao.nn.intrinsic.quantized.modules.bn_relu": [], "torch.ao.nn.intrinsic.quantized.modules.bn_relu.BNReLU2d": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.quantized.modules.bn_relu.BNReLU3d": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.quantized.modules.conv_add": [], "torch.ao.nn.intrinsic.quantized.modules.conv_add.ConvAdd2d": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.quantized.modules.conv_add.ConvAddReLU2d": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.quantized.modules.conv_relu": [], "torch.ao.nn.intrinsic.quantized.modules.conv_relu.ConvReLU1d": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.quantized.modules.conv_relu.ConvReLU2d": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.quantized.modules.conv_relu.ConvReLU3d": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.quantized.modules.linear_relu": [], "torch.ao.nn.intrinsic.quantized.modules.linear_relu.LinearReLU": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.quantized.modules.linear_relu.LinearLeakyReLU": ["<builtin>.classmethod"], "torch.ao.nn.intrinsic.quantized.modules.linear_relu.LinearTanh": ["<builtin>.classmethod"], "torch.nn.intrinsic.quantized.modules.conv_relu": [], "torch.nn.intrinsic.quantized.modules.linear_relu": [], "torch.nn.qat": [], "torch.nn.qat.dynamic": [], "torch.nn.qat.dynamic.modules": [], "torch.nn.qat.dynamic.modules.linear": [], "torch.ao.nn.qat.dynamic.modules.linear": [], "torch.nn.qat.modules": [], "torch.nn.qat.modules.conv": [], "torch.nn.qat.modules.embedding_ops": [], "torch.nn.qat.modules.linear": [], "torch.nn.quantizable": [], "torch.nn.quantizable.modules": [], "torch.nn.quantized": [], "torch.nn.quantized.dynamic": [], "torch.nn.quantized.functional": [], "torch.nn.quantized.modules": [], "torch._size_docs": ["torch._size_docs.add_docstr_all"], "torch._size_docs.add_docstr_all": ["<builtin>.getattr"], "torch._storage_docs": ["torch._storage_docs.add_docstr_all"], "torch._storage_docs.add_docstr_all": ["<builtin>.getattr"], "torch._tensor_docs": ["torch._tensor_docs.add_docstr_all", "torch._torch_docs.parse_kwargs"], "torch._tensor_docs.add_docstr_all": ["<builtin>.getattr"], "torch.quantization": [], "torch.quantization.fake_quantize": [], "torch.ao.quantization.fake_quantize": ["torch.ao.quantization.fake_quantize.FakeQuantizeBase.with_args"], "torch.ao.quantization.observer": [], "torch.ao.quantization.utils": [], "torch.ao.quantization.quant_type": [], "torch.ao.quantization.observer.ObserverBase": ["abc.abstractmethod", "<builtin>.classmethod"], "torch.ao.quantization.observer.UniformQuantizationObserverBase": ["torch._jit_internal.export"], "torch.ao.quantization.observer.MinMaxObserver": ["torch._jit_internal.export"], "torch.ao.quantization.observer.PerChannelMinMaxObserver": ["torch._jit_internal.export"], "torch.ao.quantization.observer.HistogramObserver": ["torch._jit_internal.export"], "torch.ao.quantization.observer.FixedQParamsObserver": ["torch._jit_internal.export"], "torch.ao.quantization.observer.PlaceholderObserver": ["torch._jit_internal.export"], "torch.ao.quantization.observer.RecordingObserver": ["torch._jit_internal.export"], "torch.ao.quantization.observer.NoopObserver": ["torch._jit_internal.export"], "torch.ao.quantization.observer.ReuseInputObserver": ["torch._jit_internal.export"], "torch.ao.quantization.fake_quantize.FakeQuantizeBase": ["<builtin>.classmethod", "abc.abstractmethod", "torch._jit_internal.export"], "torch.ao.quantization.fake_quantize.FakeQuantize": ["torch._jit_internal.export"], "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize": ["torch._jit_internal.export"], "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize": ["torch._jit_internal.export"], "torch.ao.quantization.fake_quantize.FakeQuantizeBase.with_args": ["torch.ao.quantization.observer._with_args"], "torch.ao.quantization.observer._with_args": ["torch.ao.quantization.observer._PartialWrapper.__init__"], "torch.ao.quantization.observer._PartialWrapper.__init__": [], "torch.quantization.fuse_modules": [], "torch.ao.quantization.fuse_modules": [], "torch.ao.quantization.fuser_method_mappings": ["torch.ao.quantization.fuser_method_mappings._sequential_wrapper2"], "torch.ao.quantization.fuser_method_mappings._sequential_wrapper2": [], "torch.quantization.fuser_method_mappings": [], "torch.quantization.observer": [], "torch.quantization.qconfig": [], "torch.ao.quantization.qconfig": ["collections.namedtuple", "typing_extensions.deprecated.__init__", "torch.ao.quantization.fake_quantize.FakeQuantizeBase.with_args"], "torch.quantization.quant_type": [], "torch.quantization.quantization_mappings": [], "torch.ao.quantization.quantization_mappings": [], "torch.ao.nn": [], "torch.ao.nn.qat.dynamic": [], "torch.ao.nn.qat.dynamic.modules": [], "torch.ao.nn.quantized.reference": [], "torch.ao.nn.quantized.reference.modules": [], "torch.ao.nn.quantized.reference.modules.conv": [], "torch.ao.nn.quantized.reference.modules.utils": [], "torch.ao.nn.quantized.reference.modules.conv._ConvNd": ["<builtin>.staticmethod"], "torch.ao.nn.quantized.reference.modules.conv.Conv1d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.reference.modules.conv.Conv2d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.reference.modules.conv.Conv3d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.reference.modules.conv._ConvTransposeNd": ["<builtin>.staticmethod"], "torch.ao.nn.quantized.reference.modules.conv.ConvTranspose1d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.reference.modules.conv.ConvTranspose2d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.reference.modules.conv.ConvTranspose3d": ["<builtin>.classmethod"], "torch.ao.nn.quantized.reference.modules.linear": [], "torch.ao.nn.quantized.reference.modules.linear.Linear": ["<builtin>.classmethod"], "torch.ao.nn.quantized.reference.modules.rnn": [], "torch.ao.nn.quantized.reference.modules.rnn.RNNCell": ["<builtin>.classmethod"], "torch.ao.nn.quantized.reference.modules.rnn.LSTMCell": ["<builtin>.classmethod"], "torch.ao.nn.quantized.reference.modules.rnn.GRUCell": ["<builtin>.classmethod"], "torch.ao.nn.quantized.reference.modules.rnn.LSTM": ["<builtin>.classmethod"], "torch.ao.nn.quantized.reference.modules.rnn.GRU": ["<builtin>.classmethod"], "torch.ao.nn.quantized.reference.modules.sparse": [], "torch.ao.nn.quantized.reference.modules.sparse.Embedding": ["<builtin>.classmethod"], "torch.ao.nn.quantized.reference.modules.sparse.EmbeddingBag": ["<builtin>.classmethod"], "torch.ao.nn.sparse": [], "torch.ao.nn.sparse.quantized": [], "torch.ao.nn.sparse.quantized.dynamic": [], "torch.ao.nn.sparse.quantized.dynamic.linear": [], "torch.ao.nn.sparse.quantized.linear": [], "torch.ao.nn.sparse.quantized.linear.LinearPackedParams": ["torch._jit_internal.export"], "torch.ao.nn.sparse.quantized.linear.Linear": ["<builtin>.classmethod"], "torch.ao.nn.sparse.quantized.utils": [], "torch.ao.nn.sparse.quantized.utils.LinearBlockSparsePattern": ["threading.RLock", "<builtin>.staticmethod"], "torch.ao.nn.sparse.quantized.dynamic.linear.Linear": ["<builtin>.classmethod"], "torch.ao.quantization.stubs": [], "torch.quantization.quantize": [], "torch.ao.quantization.quantize": [], "torch.quantization.quantize_jit": [], "torch.ao.quantization.quantize_jit": [], "torch.quantization.stubs": [], "torch.quasirandom": [], "torch.multiprocessing._atfork": [], "torch.multiprocessing._atfork.register_after_fork": ["torch.multiprocessing._atfork._register"], "torch.multiprocessing._atfork._register": [], "torch._lobpcg": [], "torch._lobpcg.LOBPCGAutogradFunction": ["<builtin>.staticmethod"], "torch._lobpcg.LOBPCG": ["torch._jit_internal.unused"], "torch.masked": [], "torch.masked._ops": ["torch.masked._ops._apply_docstring_templates"], "torch.masked._docs": [], "torch.masked.maskedtensor.core": [], "torch.masked.maskedtensor.core.MaskedTensor": ["<builtin>.classmethod", "<builtin>.property", "<builtin>.staticmethod"], "torch.masked.maskedtensor.creation": [], "torch.masked._ops._apply_docstring_templates": ["warnings.warn", "<builtin>.getattr"], "torch.utils.dlpack": [], "torch._higher_order_ops.cond": ["torch.utils._exposed_in.exposed_in", "torch._higher_order_ops.cond.CondOp.__init__", "torch._ops.HigherOrderOperator.py_impl", "torch._ops.OperatorBase.py_functionalize_impl", "torch.utils._exposed_in.exposed_in.wrapper", "logging.getLogger"], "torch._higher_order_ops.cond.CondOp.__init__": ["<builtin>.super"], "torch._higher_order_ops.cond.CondAutogradOp": ["<builtin>.staticmethod"], "torch._higher_order_ops.while_loop": ["torch._higher_order_ops.utils.autograd_not_implemented", "torch._higher_order_ops.while_loop.WhileLoopOp.__init__", "torch._ops.HigherOrderOperator.py_impl", "torch._ops.OperatorBase.py_functionalize_impl"], "torch._higher_order_ops.while_loop.WhileLoopOp.__init__": ["<builtin>.super"], "torch.cuda._sanitizer": ["typing.TypeVar.__init__", "logging.getLogger", "torch.cuda._sanitizer.CUDASanitizer.__init__"], "torch.cuda._gpu_trace": ["torch._utils.CallbackRegistry.__init__"], "torch._utils.CallbackRegistry.__init__": [], "torch.cuda._sanitizer.TensorInfo": ["dataclasses.field"], "torch.cuda._sanitizer.CUDASanitizer.__init__": ["torch.cuda._sanitizer.CUDASanitizerDispatchMode.__init__"], "torch.cuda._sanitizer.CUDASanitizerDispatchMode.__init__": ["torch.cuda._gpu_trace.register_callback_for_memory_allocation", "torch.cuda._gpu_trace.register_callback_for_memory_deallocation", "torch.cuda._gpu_trace.register_callback_for_event_wait", "torch.cuda._gpu_trace.register_callback_for_device_synchronization", "torch.cuda._gpu_trace.register_callback_for_event_record", "torch.cuda._gpu_trace.register_callback_for_stream_creation", "torch.cuda._gpu_trace.register_callback_for_stream_synchronization", "torch.cuda._gpu_trace.register_callback_for_event_creation", "torch.cuda._gpu_trace.register_callback_for_event_synchronization", "torch.cuda._sanitizer.EventHandler.__init__", "torch.cuda._gpu_trace.register_callback_for_event_deletion"], "torch.cuda._sanitizer.EventHandler.__init__": ["torch.cuda._sanitizer._TensorsAccessed.__init__", "torch.cuda._sanitizer.StreamSynchronizations.__init__"], "torch.cuda._sanitizer._TensorsAccessed.__init__": [], "torch.cuda._sanitizer.StreamSynchronizations.__init__": ["torch.cuda._sanitizer.StreamSynchronizations.create_stream"], "torch.cuda._sanitizer.StreamSynchronizations.create_stream": [], "torch.cuda._gpu_trace.register_callback_for_event_creation": [], "torch.cuda._gpu_trace.register_callback_for_event_deletion": [], "torch.cuda._gpu_trace.register_callback_for_event_record": [], "torch.cuda._gpu_trace.register_callback_for_event_wait": [], "torch.cuda._gpu_trace.register_callback_for_memory_allocation": [], "torch.cuda._gpu_trace.register_callback_for_memory_deallocation": [], "torch.cuda._gpu_trace.register_callback_for_stream_creation": [], "torch.cuda._gpu_trace.register_callback_for_device_synchronization": [], "torch.cuda._gpu_trace.register_callback_for_stream_synchronization": [], "torch.cuda._gpu_trace.register_callback_for_event_synchronization": [], "torch.cuda._sanitizer.enable_cuda_sanitizer": ["torch.cuda._sanitizer.CUDASanitizer.enable"], "torch.cuda._sanitizer.CUDASanitizer.enable": ["torch.utils._python_dispatch.TorchDispatchMode.__enter__"], "torch.utils._python_dispatch.TorchDispatchMode.__enter__": ["torch.utils._python_dispatch.TorchDispatchMode._lazy_init_old_dispatch_mode_flags", "torch.utils._python_dispatch._push_mode", "torch.utils._python_dispatch.TorchDispatchMode.is_infra_mode"], "torch.utils._python_dispatch.TorchDispatchMode._lazy_init_old_dispatch_mode_flags": ["<builtin>.hasattr"], "torch.utils._python_dispatch.TorchDispatchMode.is_infra_mode": [], "torch.utils._python_dispatch._push_mode": ["torch._ops.get_cached_ops", "torch._ops._set_mode_pre_dispatch", "<builtin>.hasattr"], "torch._ops.get_cached_ops": [], "torch._ops._set_mode_pre_dispatch": ["torch._ops.mode_stack_state_for_pre_dispatch", "<builtin>.isinstance", "torch._ops._len_torch_dispatch_stack_pre_dispatch", "torch._ops._ModeStackStateForPreDispatch.get", "torch._ops._ModeStackStateForPreDispatch.set", "<builtin>.AssertionError"], "torch._subclasses.schema_check_mode": ["collections.namedtuple"], "torch._ops._len_torch_dispatch_stack_pre_dispatch": ["torch._ops._ModeStackStateForPreDispatch.count", "torch._ops.mode_stack_state_for_pre_dispatch"], "torch._ops.mode_stack_state_for_pre_dispatch": [], "torch._ops._ModeStackStateForPreDispatch.count": ["<builtin>.int", "<builtin>.len"], "torch._ops._ModeStackStateForPreDispatch.get": ["<builtin>.len"], "torch._ops._ModeStackStateForPreDispatch.set": ["<builtin>.len"], "torch.backends.mps._init": ["torch.library.Library.__init__", "torch.library.Library.impl", "torch.backends.mps.is_built"], "torch.backends.mps.is_built": [], "torch._TritonLibrary": ["torch.library.Library.__init__", "<builtin>.classmethod"], "torch._inductor": [], "torch._logging._internal._init_logs": ["torch._logging._internal.configure_artifact_log", "torch._logging._internal.LogRegistry.get_artifact_log_qnames", "torch._logging._internal._update_log_state_from_env", "logging.Handler.setFormatter", "torch._logging._internal._setup_handlers", "torch._logging._internal.LogRegistry.get_log_qnames", "torch._logging._internal.TorchLogsFormatter.__init__", "torch._logging._internal.LogState.get_log_level_pairs", "torch._logging._internal._reset_logs", "torch._logging._internal.LazyTraceHandler.__init__", "logging.getLogger", "torch._logging._internal._track_handler"], "torch._logging._internal._reset_logs": ["torch._logging._internal._clear_handlers", "torch._logging._internal.LogRegistry.get_artifact_log_qnames", "torch._logging._internal.LogRegistry.get_log_qnames", "torch._logging._internal.LogRegistry.get_child_log_qnames", "logging.getLogger"], "torch._logging._internal.LogRegistry.get_log_qnames": [], "torch._logging._internal._clear_handlers": ["torch._logging._internal._is_torch_handler"], "torch._logging._internal._is_torch_handler": [], "torch._logging._internal.LogRegistry.get_artifact_log_qnames": ["<builtin>.set"], "torch._logging._internal.LogRegistry.get_child_log_qnames": ["<builtin>.set"], "torch._logging._internal._update_log_state_from_env": ["torch._logging._internal._parse_log_settings"], "torch._logging._internal._parse_log_settings": ["torch._logging._internal.help_message", "re.sub", "torch._logging._internal.LogState.enable_artifact", "torch._logging._internal.LogRegistry.is_log", "<builtin>.ValueError", "torch._logging._internal.LogRegistry.is_artifact", "torch._logging._internal.LogRegistry.register_child_log", "torch._logging._internal._validate_settings", "torch._logging._internal._has_registered_parent", "torch._logging._internal._parse_log_settings.get_name_level_pair", "torch._logging._internal.LogState.enable_log", "torch._logging._internal._invalid_settings_err_msg", "torch._logging._internal.LogRegistry.register_log", "torch._logging._internal._is_valid_module"], "torch._logging._internal.help_message": ["torch._logging._internal.help_message.pad_to", "<builtin>.sorted"], "torch._logging._internal.help_message.pad_to": ["<builtin>.len"], "torch._logging._internal._validate_settings": ["torch._logging._internal._gen_settings_regex", "re.fullmatch"], "torch._logging._internal._gen_settings_regex": ["re.compile"], "re.fullmatch": ["re._compile"], "torch._logging._internal._invalid_settings_err_msg": ["<builtin>.list"], "torch._logging._internal._parse_log_settings.get_name_level_pair": [], "torch._logging._internal.LogRegistry.is_log": [], "torch._logging._internal.LogRegistry.is_artifact": [], "torch._logging._internal._is_valid_module": ["<builtin>.__import__"], "torch._logging._internal._has_registered_parent": ["logging.getLogger", "torch._logging._internal.LogRegistry.get_log_qnames"], "torch._logging._internal.LogRegistry.register_child_log": [], "torch._logging._internal.LogState.enable_log": ["<builtin>.isinstance"], "torch._logging._internal.LogState.enable_artifact": [], "torch._logging._internal.LogState.get_log_level_pairs": [], "torch._logging._internal._setup_handlers": ["logging.StreamHandler.__init__", "logging.Handler.setFormatter", "logging.Handler.setLevel", "torch._logging._internal._init_logs.<lambda1>", "torch._logging._internal._track_handler"], "torch._logging._internal._track_handler": ["_weakrefset.WeakSet.add"], "torch._logging._internal._init_logs.<lambda1>": [], "torch._logging._internal.LazyTraceHandler.__init__": ["logging.Handler.__init__"], "torch._is_device_backend_autoload_enabled": ["os.getenv"], "torch._import_device_backends": ["<builtin>.RuntimeError", "importlib.metadata.entry_points"], "importlib.metadata.entry_points": ["importlib.metadata.SelectableGroups.select", "operator.attrgetter.__init__", "importlib.metadata.distributions", "importlib.metadata.SelectableGroups.load"], "importlib.metadata.distributions": ["importlib.metadata.Distribution.discover"], "importlib.metadata.Distribution.discover": ["importlib.metadata.Distribution._discover_resolvers", "importlib.metadata.DistributionFinder.Context.__init__", "<builtin>.ValueError"], "importlib.metadata.Distribution._discover_resolvers": ["<builtin>.filter", "<builtin>.getattr"], "importlib.metadata.SelectableGroups.load": ["operator.attrgetter.__init__", "<builtin>.sorted"], "importlib.metadata.SelectableGroups.select": [], "torchvision.transforms": [], "torchvision.transforms.transforms": [], "torchvision.utils": ["torch.autograd.grad_mode.no_grad.__init__"], "PIL.ImageDraw": [], "PIL.ImageDraw2": [], "PIL.ImageFont": ["PIL._util.DeferredError.new"], "PIL.features": [], "PIL": [], "PIL._version": [], "PIL.ImagePath": [], "torchvision.transforms.functional": ["torch._jit_internal.unused"], "torchvision.transforms._functional_pil": ["torch._jit_internal.unused"], "PIL.ImageEnhance": [], "PIL.ImageStat": [], "PIL.ImageStat.Stat": ["functools.cached_property.__init__"], "torchvision.transforms._functional_tensor": [], "torchvision.transforms.transforms.RandomCrop": ["<builtin>.staticmethod"], "torchvision.transforms.transforms.RandomPerspective": ["<builtin>.staticmethod"], "torchvision.transforms.transforms.RandomResizedCrop": ["<builtin>.staticmethod"], "torchvision.transforms.transforms.ColorJitter": ["<builtin>.float", "<builtin>.staticmethod", "torch._jit_internal.unused"], "torchvision.transforms.transforms.RandomRotation": ["<builtin>.staticmethod"], "torchvision.transforms.transforms.RandomAffine": ["<builtin>.staticmethod"], "torchvision.transforms.transforms.RandomErasing": ["<builtin>.staticmethod"], "torchvision.transforms.transforms.GaussianBlur": ["<builtin>.staticmethod"], "torchvision.transforms.transforms.ElasticTransform": ["<builtin>.staticmethod"], "torchvision.transforms.autoaugment": [], "torchvision.transforms.autoaugment.AutoAugment": ["<builtin>.staticmethod"], "torchvision.transforms.autoaugment.AugMix": ["torch._jit_internal.unused"], "easyocr.utils": [], "cv2": ["cv2.bootstrap", "<builtin>.print"], "numpy.core.multiarray": ["<builtin>.globals", "<builtin>.getattr"], "cv2.bootstrap": ["<builtin>.print", "ntpath.dirname", "os.add_dll_directory", "copy.copy", "platform.system", "posixpath.abspath", "cv2.bootstrap.load_first_config", "ntpath.realpath", "<builtin>.filter", "ntpath.abspath", "<builtin>.ImportError", "<builtin>.globals", "<builtin>.reversed", "<builtin>.setattr", "importlib.import_module", "cv2.__collect_extra_submodules", "<builtin>.hasattr", "cv2.__load_extra_py_code_for_module", "<builtin>.locals", "<builtin>.str", "posixpath.realpath", "posixpath.dirname"], "copy.copy": ["<builtin>.isinstance", "<map>", "copy._copy_immutable", "copy._reconstruct", "<builtin>.getattr", "<builtin>.issubclass", "<map>.get", "<builtin>.type"], "<map>": [], "copy._copy_immutable": [], "copy._reconstruct": ["<builtin>.isinstance", "copy.deepcopy", "<builtin>.len", "<builtin>.hasattr", "<builtin>.id", "<builtin>.setattr"], "copy.deepcopy": ["<builtin>.isinstance", "copy._deepcopy_atomic", "<map>", "copy._reconstruct", "<builtin>.getattr", "<builtin>.id", "copy._keep_alive", "<builtin>.issubclass", "<map>.get", "<builtin>.type"], "copy._deepcopy_atomic": [], "copy._keep_alive": ["<builtin>.id"], "cv2.load_config_py3": [], "cv2.load_config_py2": [], "cv2.bootstrap.load_first_config": ["<builtin>.print", "<builtin>.ImportError", "ntpath.join", "posixpath.join", "cv2.load_config_py2.exec_file_wrapper", "cv2.load_config_py3.exec_file_wrapper", "genericpath.exists"], "cv2.load_config_py3.exec_file_wrapper": ["<builtin>.compile", "<builtin>.open", "posixpath.basename", "ntpath.basename", "<builtin>.exec"], "cv2.load_config_py2.exec_file_wrapper": [], "cv2.__collect_extra_submodules": ["<builtin>.print", "ntpath.dirname", "posixpath.abspath", "<builtin>.filter", "posixpath.dirname", "ntpath.abspath"], "cv2.__load_extra_py_code_for_module": ["<builtin>.print", "<builtin>.hasattr", "<builtin>.filter", "<builtin>.setattr", "importlib.import_module"], "PIL.JpegImagePlugin": [], "PIL.JpegPresets": [], "PIL.MpoImagePlugin": [], "PIL.ImageSequence": [], "PIL.MpoImagePlugin.MpoImageFile": ["<builtin>.staticmethod"], "scipy.ndimage": ["<builtin>.dir", "scipy._lib._testutils.PytestTester.__init__"], "scipy.ndimage._filters": ["scipy._lib.doccer.filldoc.decorate"], "scipy._lib._util": ["typing.TypeVar.__init__", "contextlib.contextmanager", "numpy.lib._version.NumpyVersion.__init__", "warnings.catch_warnings.__init__", "collections.namedtuple"], "scipy._lib._array_api": [], "scipy._lib.array_api_compat": [], "scipy._lib.array_api_compat.common": [], "scipy._lib.array_api_compat.common._helpers": [], "scipy._lib.array_api_compat.common._typing": ["typing.TypeVar.__init__"], "scipy._lib.array_api_compat.numpy": ["<builtin>.__import__"], "scipy._lib.array_api_compat.numpy._aliases": ["scipy._lib.array_api_compat._internal.get_xp", "scipy._lib.array_api_compat._internal.get_xp.inner", "<builtin>.hasattr"], "scipy._lib.array_api_compat.common._aliases": [], "scipy._lib.array_api_compat._internal": [], "scipy._lib.array_api_compat._internal.get_xp": [], "scipy._lib.array_api_compat._internal.get_xp.inner": ["functools.wraps", "inspect.signature"], "scipy._lib.array_api_compat.numpy.linalg": ["scipy._lib.array_api_compat._internal.get_xp", "scipy._lib.array_api_compat._internal.get_xp.inner", "<builtin>.hasattr"], "scipy._lib.array_api_compat.common._linalg": [], "numpy.core.numeric": [], "numpy.lib._version.NumpyVersion.__init__": ["<builtin>.int", "<builtin>.ValueError", "<builtin>.len", "re.match", "<builtin>.bool", "re.search"], "numpy.random": ["numpy._pytesttester.PytestTester.__init__"], "numpy.random._pickle": [], "scipy.ndimage._ni_support": [], "scipy.ndimage._ni_docstrings": ["scipy._lib.doccer.filldoc"], "scipy._lib.doccer": [], "scipy._lib.doccer.filldoc": ["scipy._lib.doccer.unindent_dict"], "scipy._lib.doccer.unindent_dict": ["scipy._lib.doccer.unindent_string", "<map>.items"], "scipy._lib.doccer.unindent_string": ["scipy._lib.doccer.indentcount_lines"], "scipy._lib.doccer.indentcount_lines": ["<builtin>.min", "<builtin>.len"], "scipy._lib.doccer.filldoc.decorate": ["scipy._lib.doccer.docformat"], "scipy._lib.doccer.docformat": ["append", "scipy._lib.doccer.indentcount_lines", "<map>.items", "<builtin>.len"], "scipy.ndimage._fourier": [], "scipy.ndimage._interpolation": ["scipy._lib.doccer.filldoc.decorate"], "scipy.special": ["scipy._lib._testutils.PytestTester.__init__", "scipy.special._load_libsf_error_state"], "scipy.special._load_libsf_error_state": ["ntpath.dirname", "posixpath.dirname"], "scipy.special._sf_error": ["warnings.simplefilter"], "scipy.special._support_alternative_backends": ["<builtin>.list", "scipy.special._support_alternative_backends.support_alternative_backends", "<map>.items", "<builtin>.getattr"], "scipy": ["<builtin>.ImportError", "scipy._lib._pep440.parse", "warnings.warn", "scipy._lib._testutils.PytestTester.__init__", "scipy._lib._pep440.Version.__init__"], "scipy.__config__": ["<builtin>.bool", "scipy.__config__._cleanup"], "scipy.__config__._cleanup": ["scipy.__config__._cleanup", "<builtin>.isinstance", "<map>.items"], "scipy.version": [], "scipy._distributor_init": [], "scipy._lib._pep440": ["collections.namedtuple", "re.compile"], "scipy._lib._pep440.LegacyVersion": ["<builtin>.property"], "scipy._lib._pep440.Version": ["re.compile", "<builtin>.property"], "scipy._lib._pep440.parse": ["scipy._lib._pep440.LegacyVersion.__init__", "scipy._lib._pep440.Version.__init__"], "scipy._lib._pep440.Version.__init__": ["scipy._lib._pep440._parse_letter_version", "<builtin>.int", "scipy._lib._pep440._cmpkey", "scipy._lib._pep440._parse_local_version", "<builtin>.tuple"], "scipy._lib._pep440._parse_letter_version": ["<builtin>.int"], "scipy._lib._pep440._parse_local_version": ["<builtin>.int", "<builtin>.tuple"], "scipy._lib._pep440._cmpkey": ["<builtin>.list", "<builtin>.isinstance", "<builtin>.reversed", "<builtin>.tuple"], "scipy._lib._pep440.LegacyVersion.__init__": ["scipy._lib._pep440._legacy_cmpkey", "<builtin>.str"], "scipy._lib._pep440._legacy_cmpkey": ["append", "pop", "scipy._lib._pep440._parse_version_parts", "<str>.startswith", "<builtin>.tuple"], "scipy._lib._pep440._parse_version_parts": ["<map>.get"], "scipy._lib._ccallback": ["ctypes.CFUNCTYPE"], "scipy._lib._ccallback.LowLevelCallable": ["<builtin>.property", "<builtin>.classmethod"], "scipy._lib._testutils": ["sysconfig.get_config_var"], "scipy._lib._testutils.PytestTester.__init__": [], "scipy.special._support_alternative_backends.support_alternative_backends": ["functools.wraps", "<builtin>.getattr"], "scipy.special._basic": [], "scipy.special._logsumexp": [], "scipy.special._orthogonal": ["append", "<map>.keys", "<builtin>.globals", "<builtin>.list", "<map>.items"], "scipy.linalg": ["<builtin>.dir", "scipy._lib._testutils.PytestTester.__init__"], "scipy.linalg._misc": [], "scipy.linalg.blas": ["scipy.linalg.blas._memoize_get_funcs"], "scipy.linalg.blas._memoize_get_funcs": ["functools.wraps"], "scipy.linalg.lapack": ["re.compile", "scipy.linalg.blas._memoize_get_funcs", "numpy._core.getlimits.iinfo.__init__"], "scipy.linalg._basic": ["numpy._core.multiarray.can_cast"], "scipy.linalg._decomp": [], "scipy.linalg._decomp_svd": [], "numpy._core.multiarray.can_cast": [], "scipy.linalg._decomp_lu": ["numpy._core.multiarray.can_cast"], "scipy.linalg._decomp_ldl": [], "scipy.linalg._decomp_cholesky": [], "scipy.linalg._decomp_qr": [], "scipy.linalg._decomp_qz": [], "scipy.linalg._decomp_schur": [], "scipy.linalg._decomp_polar": [], "scipy.linalg._matfuncs": [], "scipy.linalg._expm_frechet": [], "scipy.linalg._matfuncs_sqrtm": [], "scipy.linalg._special_matrices": [], "scipy.linalg._solvers": [], "scipy.linalg._procrustes": [], "scipy.linalg._sketches": [], "scipy.sparse": ["<builtin>.dir", "warnings.filterwarnings", "scipy._lib._testutils.PytestTester.__init__"], "scipy.sparse._base": ["<builtin>.frozenset"], "scipy.sparse._sputils": [], "scipy.sparse._matrix": [], "scipy.sparse._matrix.spmatrix": ["<builtin>.property"], "scipy.sparse._base._spbase": ["<builtin>.property", "<builtin>.classmethod"], "scipy.sparse._csr": [], "scipy.sparse._compressed": [], "scipy.sparse._data": ["<builtin>.setattr", "scipy.sparse._data._create_method"], "scipy.sparse._data._data_matrix": ["<builtin>.property"], "scipy.sparse._data._create_method": [], "scipy.sparse._index": [], "scipy.sparse._compressed._cs_matrix": ["<builtin>.property"], "scipy.sparse._csr._csr_base": ["<builtin>.staticmethod"], "scipy.sparse._csc": [], "scipy.sparse._csc._csc_base": ["<builtin>.staticmethod"], "scipy.sparse._lil": [], "scipy.sparse._dok": [], "scipy.sparse._dok._dok_base": ["<builtin>.classmethod"], "scipy.sparse._dok.dok_matrix": ["<builtin>.property"], "scipy.sparse._coo": [], "scipy.sparse._coo._coo_base": ["<builtin>.property"], "scipy.sparse._dia": [], "scipy.sparse._bsr": [], "scipy.sparse._bsr._bsr_base": ["<builtin>.property"], "scipy.sparse._construct": [], "scipy.sparse._extract": [], "scipy.sparse._matrix_io": ["<builtin>.dict"], "scipy.sparse.csgraph": ["scipy._lib._testutils.PytestTester.__init__"], "scipy.sparse.csgraph._laplacian": [], "scipy.sparse.linalg": ["<builtin>.dir", "scipy._lib._testutils.PytestTester.__init__"], "scipy.sparse.linalg._isolve": ["scipy._lib._testutils.PytestTester.__init__"], "scipy.sparse.linalg._isolve.iterative": [], "scipy.sparse.linalg._interface": [], "scipy.sparse.linalg._interface.LinearOperator": ["<builtin>.property"], "scipy.sparse.linalg._interface._AdjointMatrixOperator": ["<builtin>.property"], "scipy.sparse.linalg._isolve.utils": [], "scipy.sparse.linalg._isolve.minres": [], "scipy.sparse.linalg._isolve.lgmres": [], "scipy.sparse.linalg._isolve._gcrotmk": [], "scipy.sparse.linalg._isolve.lsqr": [], "scipy.sparse.linalg._isolve.lsmr": [], "scipy.sparse.linalg._isolve.tfqmr": [], "scipy.sparse.linalg._dsolve": ["scipy._lib._testutils.PytestTester.__init__"], "scipy.sparse.linalg._dsolve.linsolve": ["<builtin>.dict"], "scipy.sparse.linalg._dsolve._add_newdocs": ["numpy._core.function_base.add_newdoc"], "scipy.sparse.linalg._eigen": ["scipy._lib._testutils.PytestTester.__init__"], "scipy.sparse.linalg._eigen.arpack": [], "scipy.sparse.linalg._eigen.arpack.arpack": ["scipy._lib._threadsafety.ReentrancyLock.__init__", "<map>.copy"], "scipy._lib._threadsafety": [], "scipy._lib.decorator": ["<builtin>.len", "re.compile", "inspect.getfullargspec", "scipy._lib.decorator.decorator", "collections.namedtuple"], "scipy._lib.decorator.FunctionMaker": ["<builtin>.classmethod"], "scipy._lib.decorator.decorator": ["scipy._lib.decorator.get_init", "inspect.isclass", "inspect.isfunction", "scipy._lib.decorator.FunctionMaker.create", "scipy._lib.decorator.decorate"], "scipy._lib.decorator.decorate": ["scipy._lib.decorator.FunctionMaker.create", "<builtin>.hasattr"], "scipy._lib.decorator.FunctionMaker.create": ["scipy._lib.decorator.FunctionMaker.__init__", "scipy._lib.decorator.FunctionMaker.make", "<builtin>.isinstance", "<str>.splitlines"], "scipy._lib.decorator.FunctionMaker.__init__": ["inspect.isfunction", "<builtin>.enumerate", "<builtin>.hasattr", "<builtin>.list", "<builtin>.setattr", "inspect.getfullargspec", "<builtin>.TypeError", "<builtin>.getattr"], "scipy._lib.decorator.FunctionMaker.make": ["<builtin>.print", "<builtin>.SyntaxError", "<builtin>.vars", "<builtin>.next", "<builtin>.set", "<str>.endswith", "<builtin>.compile", "<builtin>.NameError", "<builtin>.exec", "scipy._lib.decorator.FunctionMaker.update"], "<builtin>.NameError": [], "scipy._lib.decorator.FunctionMaker.update": ["<builtin>.getattr"], "scipy._lib.decorator.get_init": [], "scipy.sparse.linalg._eigen.arpack.arpack.IterOpInv": ["<builtin>.property"], "scipy._lib._threadsafety.ReentrancyLock.__init__": ["threading.RLock"], "scipy.sparse.linalg._eigen.lobpcg": ["<builtin>.dir", "scipy._lib._testutils.PytestTester.__init__"], "scipy.sparse.linalg._eigen.lobpcg.lobpcg": [], "scipy.sparse.linalg._eigen._svds": [], "scipy.sparse.linalg._svdp": [], "scipy.sparse.linalg._svdp._AProd": ["<builtin>.property"], "scipy.sparse.linalg._matfuncs": [], "scipy.sparse.linalg._expm_multiply": [], "scipy.sparse.linalg._onenormest": ["scipy.sparse.linalg._onenormest._blocked_elementwise"], "scipy.sparse.linalg._onenormest._blocked_elementwise": [], "scipy.sparse.linalg._matfuncs.MatrixPowerOperator": ["<builtin>.property"], "scipy.sparse.linalg._matfuncs.ProductOperator": ["<builtin>.property"], "scipy.sparse.linalg._matfuncs._ExpmPadeHelper": ["<builtin>.property"], "scipy.sparse.linalg._norm": [], "scipy.sparse.linalg._special_sparse_arrays": [], "scipy.sparse.linalg.isolve": [], "scipy._lib.deprecation": ["<builtin>.object"], "scipy.sparse.linalg.dsolve": [], "scipy.sparse.linalg.interface": [], "scipy.sparse.linalg.eigen": [], "scipy.sparse.linalg.matfuncs": [], "scipy.sparse.base": [], "scipy.sparse.bsr": [], "scipy.sparse.compressed": [], "scipy.sparse.construct": [], "scipy.sparse.coo": [], "scipy.sparse.csc": [], "scipy.sparse.csr": [], "scipy.sparse.data": [], "scipy.sparse.dia": [], "scipy.sparse.dok": [], "scipy.sparse.extract": [], "scipy.sparse.lil": [], "scipy.sparse.sparsetools": [], "scipy.sparse.sputils": [], "scipy.linalg._decomp_cossin": [], "scipy.linalg.decomp": [], "scipy.linalg.decomp_cholesky": [], "scipy.linalg.decomp_lu": [], "scipy.linalg.decomp_qr": [], "scipy.linalg.decomp_svd": [], "scipy.linalg.decomp_schur": [], "scipy.linalg.basic": [], "scipy.linalg.misc": [], "scipy.linalg.special_matrices": [], "scipy.linalg.matfuncs": [], "scipy.special._spfun_stats": [], "scipy.special._ellip_harm": ["numpy.lib._function_base_impl.vectorize.__init__"], "numpy.lib._function_base_impl.vectorize.__init__": ["<builtin>.isinstance", "numpy.lib._function_base_impl.iterable", "<builtin>.hasattr", "<builtin>.ValueError", "<builtin>.set", "<builtin>.callable", "numpy.lib._function_base_impl._get_vectorize_dtype", "numpy.lib._function_base_impl._parse_gufunc_signature", "<builtin>.TypeError"], "numpy.lib._function_base_impl.iterable": ["<builtin>.iter"], "numpy.lib._function_base_impl._get_vectorize_dtype": [], "numpy.lib._function_base_impl._parse_gufunc_signature": ["re.sub", "<builtin>.ValueError", "re.match", "re.findall", "<builtin>.tuple"], "re.findall": ["re._compile"], "scipy.special._lambertw": [], "scipy.special._spherical_bessel": [], "scipy.special.add_newdocs": [], "scipy.special.basic": [], "scipy.special.orthogonal": ["<builtin>.list", "<map>.keys"], "scipy.special.specfun": [], "scipy.special.sf_error": [], "scipy.special.spfun_stats": [], "scipy.ndimage._measurements": [], "scipy.ndimage._morphology": [], "scipy.ndimage.filters": [], "scipy.ndimage.fourier": [], "scipy.ndimage.interpolation": [], "scipy.ndimage.measurements": [], "scipy.ndimage.morphology": [], "easyocr.imgproc": [], "skimage.io": ["skimage.io._update_doc", "skimage.io.manage_plugins.reset_plugins"], "skimage.io.manage_plugins": ["skimage.io.manage_plugins._clear_plugins", "skimage.io.manage_plugins.find_available_plugins", "skimage.io.manage_plugins._scan_plugins"], "configparser": ["<builtin>.object"], "configparser.ParsingError": ["<builtin>.property"], "configparser.BasicInterpolation": ["re.compile"], "configparser.ExtendedInterpolation": ["re.compile"], "configparser.LegacyInterpolation": ["re.compile", "<builtin>.staticmethod"], "configparser.RawConfigParser": ["re.compile", "<builtin>.property"], "configparser.SectionProxy": ["<builtin>.property"], "configparser.ConverterMapping": ["re.compile"], "skimage.io.collection": [], "tifffile": [], "tifffile.tifffile": ["typing.overload"], "tifffile._imagecodecs": ["typing.overload"], "tifffile.tifffile.TiffWriter": ["<builtin>.property", "<builtin>.staticmethod"], "tifffile.tifffile.TiffFile": ["<builtin>.property", "functools.cached_property.__init__"], "tifffile.tifffile.TiffFormat": ["<builtin>.property"], "tifffile.tifffile.TiffPage": ["functools.cached_property.__init__", "<builtin>.property"], "tifffile.tifffile.TiffFrame": ["<builtin>.property"], "tifffile.tifffile.TiffPages": ["<builtin>.property", "typing.overload"], "tifffile.tifffile.TiffTag": ["<builtin>.property", "<builtin>.staticmethod", "<builtin>.classmethod"], "tifffile.tifffile.TiffTagRegistry": ["typing.overload"], "tifffile.tifffile.TiffPageSeries": ["<builtin>.property", "typing.overload", "functools.cached_property.__init__"], "tifffile.tifffile.ZarrStore": ["<builtin>.property", "<builtin>.staticmethod"], "tifffile.tifffile.ZarrTiffStore": ["<builtin>.staticmethod"], "tifffile.tifffile.FileSequence": ["<builtin>.property", "typing.overload"], "tifffile.tifffile.TiledSequence": ["<builtin>.property"], "tifffile.tifffile.FileHandle": ["<builtin>.property"], "tifffile.tifffile.StoredShape": ["<builtin>.property", "typing.overload"], "tifffile.tifffile.Timer": ["<builtin>.staticmethod"], "tifffile.tifffile.OmeXml": ["<builtin>.staticmethod"], "tifffile.tifffile._TIFF": ["functools.cached_property.__init__", "<builtin>.property"], "skimage.io.collection.ImageCollection": ["<builtin>.property"], "skimage.io.collection.MultiImage": ["<builtin>.property"], "skimage.io.manage_plugins._clear_plugins": [], "skimage.io.manage_plugins._scan_plugins": ["glob", "<builtin>.print", "warnings.warn", "skimage.io.manage_plugins._parse_config_file"], "skimage.io.manage_plugins._parse_config_file": ["configparser.RawConfigParser.options", "configparser.RawConfigParser.sections", "configparser.RawConfigParser.get", "configparser.RawConfigParser.read"], "configparser.RawConfigParser.read": ["append", "<builtin>.isinstance", "<builtin>.open", "os._fspath", "configparser.RawConfigParser._read"], "configparser.RawConfigParser._read": ["configparser.MissingSectionHeaderError.__init__", "<builtin>.min", "<builtin>.enumerate", "configparser.RawConfigParser._join_multiline_values", "configparser.RawConfigParser._handle_error", "<builtin>.set", "configparser.ParsingError.__init__", "configparser.DuplicateOptionError.__init__", "configparser.DuplicateSectionError.__init__", "configparser.SectionProxy.__init__", "configparser.RawConfigParser.optionxform"], "configparser.RawConfigParser._handle_error": ["configparser.ParsingError.__init__", "configparser.ParsingError.append", "<builtin>.repr"], "configparser.ParsingError.__init__": ["configparser.Error.__init__", "<builtin>.ValueError"], "configparser.Error.__init__": [], "configparser.ParsingError.append": ["append"], "configparser.RawConfigParser.optionxform": [], "configparser.DuplicateOptionError.__init__": ["append", "configparser.Error.__init__", "insert", "<builtin>.repr", "extend"], "configparser.MissingSectionHeaderError.__init__": ["configparser.Error.__init__"], "configparser.SectionProxy.__init__": ["<builtin>.setattr", "<builtin>.getattr"], "configparser.DuplicateSectionError.__init__": ["append", "configparser.Error.__init__", "insert", "<builtin>.repr", "extend"], "configparser.RawConfigParser._join_multiline_values": ["<builtin>.isinstance"], "configparser.RawConfigParser.sections": ["<builtin>.list"], "configparser.RawConfigParser.options": ["configparser.NoSectionError.__init__", "<builtin>.list"], "configparser.NoSectionError.__init__": ["configparser.Error.__init__"], "configparser.RawConfigParser.get": ["configparser.NoOptionError.__init__", "configparser.RawConfigParser._unify_values", "configparser.RawConfigParser.optionxform"], "configparser.RawConfigParser._unify_values": ["configparser.NoSectionError.__init__", "collections.ChainMap.__init__", "configparser.RawConfigParser.optionxform", "<builtin>.str"], "collections.ChainMap.__init__": ["<builtin>.list"], "configparser.NoOptionError.__init__": ["configparser.Error.__init__"], "skimage.io.manage_plugins.find_available_plugins": ["<builtin>.set"], "skimage.io.sift": [], "skimage.io._image_stack": [], "skimage.io.manage_plugins.reset_plugins": ["skimage.io.manage_plugins._clear_plugins", "skimage.io.manage_plugins._load_preferred_plugins"], "skimage.io.manage_plugins._load_preferred_plugins": ["skimage.io.manage_plugins._set_plugin", "<map>.keys"], "skimage.io.manage_plugins._set_plugin": ["skimage.io.manage_plugins.use_plugin"], "skimage.io.manage_plugins.use_plugin": ["<builtin>.RuntimeError", "skimage.io.manage_plugins._load"], "skimage.io.manage_plugins._load": ["<builtin>.print", "skimage.io.manage_plugins._inject_imread_collection_if_needed", "<builtin>.ValueError", "<builtin>.hasattr", "skimage.io.manage_plugins.find_available_plugins", "<builtin>.__import__", "<builtin>.getattr"], "skimage.io.manage_plugins._inject_imread_collection_if_needed": ["skimage.io.collection.imread_collection_wrapper", "<builtin>.getattr", "<builtin>.setattr", "<builtin>.hasattr"], "skimage.io.collection.imread_collection_wrapper": [], "skimage.io._update_doc": ["textwrap.wrap", "<builtin>.len", "skimage.io.manage_plugins.plugin_info", "<builtin>.zip", "<builtin>.max", "skimage.io._format_plugin_info_table", "extend"], "skimage.io.manage_plugins.plugin_info": ["<builtin>.ValueError"], "skimage.io._format_plugin_info_table": ["skimage.io._separator"], "skimage.io._separator": [], "textwrap.wrap": ["textwrap.TextWrapper.__init__", "textwrap.TextWrapper.wrap"], "textwrap.TextWrapper.__init__": [], "textwrap.TextWrapper.wrap": ["textwrap.TextWrapper._fix_sentence_endings", "textwrap.TextWrapper._split_chunks", "textwrap.TextWrapper._wrap_chunks"], "textwrap.TextWrapper._split_chunks": ["textwrap.TextWrapper._split", "textwrap.TextWrapper._munge_whitespace"], "textwrap.TextWrapper._munge_whitespace": [], "textwrap.TextWrapper._split": [], "textwrap.TextWrapper._fix_sentence_endings": ["<builtin>.len"], "textwrap.TextWrapper._wrap_chunks": ["append", "<builtin>.ValueError", "<builtin>.len", "<builtin>.sum", "textwrap.TextWrapper._handle_long_word", "<builtin>.map"], "textwrap.TextWrapper._handle_long_word": ["append", "<builtin>.any", "<builtin>.len"], "<builtin>.sum": [], "easyocr.config": ["posixpath.expanduser", "ntpath.dirname", "ntpath.expanduser", "posixpath.dirname", "<map>.items"], "bidi": ["<builtin>.str"], "bidi.wrapper": [], "yaml": [], "yaml.error": [], "yaml.tokens": [], "yaml.events": [], "yaml.nodes": [], "yaml.loader": [], "yaml.reader": [], "yaml.reader.Reader": ["re.compile"], "yaml.scanner": [], "yaml.parser": [], "yaml.composer": [], "yaml.constructor": ["yaml.constructor.BaseConstructor.add_multi_constructor", "yaml.constructor.BaseConstructor.add_constructor"], "yaml.constructor.BaseConstructor": ["<builtin>.classmethod"], "yaml.constructor.SafeConstructor": ["re.compile"], "yaml.constructor.BaseConstructor.add_constructor": ["<map>.copy"], "yaml.constructor.BaseConstructor.add_multi_constructor": ["<map>.copy"], "yaml.resolver": ["re.compile", "<builtin>.list", "yaml.resolver.BaseResolver.add_implicit_resolver"], "yaml.resolver.BaseResolver": ["<builtin>.classmethod"], "yaml.resolver.BaseResolver.add_implicit_resolver": ["<map>.setdefault"], "yaml.dumper": [], "yaml.emitter": [], "yaml.serializer": [], "yaml.representer": ["yaml.representer.BaseRepresenter.add_multi_representer", "yaml.representer.BaseRepresenter.add_representer", "<builtin>.type"], "yaml.representer.BaseRepresenter": ["<builtin>.classmethod"], "yaml.representer.SafeRepresenter": ["<builtin>.repr"], "yaml.representer.BaseRepresenter.add_representer": ["<map>.copy"], "yaml.representer.BaseRepresenter.add_multi_representer": ["<map>.copy"], "yaml.cyaml": [], "yaml.YAMLObject": ["<builtin>.classmethod"], "handler.handle": ["easyocr.easyocr.Reader.readtext", "easyocr.easyocr.Reader.__init__", "<builtin>.print"], "easyocr.easyocr.Reader.__init__": ["pathlib.Path.mkdir", "posixpath.join", "easyocr.easyocr.Reader.getDetectorPath", "yaml.load", "<builtin>.ValueError", "easyocr.recognition.get_recognizer", "easyocr.easyocr.Reader.setModelLanguage", "ntpath.join", "<builtin>.open", "genericpath.isfile", "torch.cuda.is_available", "<builtin>.set", "torch.backends.mps.is_available", "easyocr.easyocr.Reader.initDetector", "easyocr.easyocr.Reader.setLanguageList", "<builtin>.str", "easyocr.utils.calculate_md5", "easyocr.utils.download_and_unzip", "<builtin>.FileNotFoundError"], "pathlib.Path.mkdir": ["pathlib.Path.is_dir", "pathlib.Path.mkdir"], "pathlib.Path.is_dir": ["pathlib.Path.stat", "pathlib._ignore_error", "stat.S_ISDIR"], "pathlib.Path.stat": [], "pathlib._ignore_error": ["<builtin>.getattr"], "torch.cuda.is_available": ["torch.cuda._is_compiled", "torch.cuda.device_count", "torch.cuda._nvml_based_avail"], "torch.cuda._nvml_based_avail": ["os.getenv"], "torch.cuda.device_count": ["torch.cuda._is_compiled", "torch.cuda._device_count_amdsmi", "torch.cuda._device_count_nvml"], "torch.cuda._device_count_amdsmi": ["typing.cast", "torch.cuda._parse_visible_devices", "<builtin>.enumerate", "<builtin>.len", "torch.cuda._raw_device_count_amdsmi", "<builtin>.type"], "torch.cuda._parse_visible_devices": ["torch.cuda._parse_visible_devices._strtoul", "os.getenv", "<builtin>.range", "typing.cast", "<builtin>.list", "torch.cuda._parse_visible_devices.parse_list_with_prefix"], "torch.cuda._parse_visible_devices.parse_list_with_prefix": ["typing.cast"], "typing.cast": [], "torch.cuda._parse_visible_devices._strtoul": ["<builtin>.int", "<builtin>.enumerate", "<builtin>.len"], "torch.cuda._raw_device_count_amdsmi": ["warnings.warn", "<builtin>.len"], "torch.cuda._device_count_nvml": ["typing.cast", "torch.cuda._parse_visible_devices", "torch.cuda._transform_uuid_to_ordinals", "<builtin>.enumerate", "<builtin>.len", "torch.cuda._raw_device_count_nvml", "torch.cuda._raw_device_uuid_nvml", "<builtin>.type"], "torch.cuda._raw_device_count_nvml": ["ctypes.CDLL.__init__", "warnings.warn"], "torch.cuda._raw_device_uuid_nvml": ["ctypes.create_string_buffer", "<builtin>.range", "ctypes.CDLL.__init__", "warnings.warn"], "ctypes.create_string_buffer": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.len"], "torch.cuda._transform_uuid_to_ordinals": ["torch.cuda._transform_uuid_to_ordinals.uuid_to_orinal", "typing.cast"], "torch.cuda._transform_uuid_to_ordinals.uuid_to_orinal": ["<builtin>.enumerate"], "torch.backends.mps.is_available": [], "easyocr.easyocr.Reader.getDetectorPath": ["genericpath.isfile", "<builtin>.RuntimeError", "ntpath.join", "posixpath.join", "easyocr.utils.calculate_md5", "easyocr.utils.download_and_unzip", "<builtin>.FileNotFoundError"], "easyocr.detection_db": [], "easyocr.DBNet.DBNet": [], "shapely.geometry": [], "shapely.geometry.base": [], "shapely": ["shapely._version.get_versions", "shapely.errors.setup_signal_checks"], "shapely.errors": [], "shapely._geometry": ["shapely.decorators.requires_geos.__init__", "shapely.decorators.multithreading_enabled"], "shapely._enum": [], "shapely._enum.ParamEnum": ["<builtin>.classmethod"], "shapely.decorators": [], "shapely.decorators.multithreading_enabled": ["functools.wraps"], "shapely.decorators.requires_geos.__init__": ["<str>.count", "<builtin>.int", "<builtin>.ValueError", "<builtin>.tuple"], "shapely.creation": ["shapely.decorators.multithreading_enabled"], "shapely.io": ["shapely.decorators.requires_geos.__init__"], "shapely._ragged_array": [], "shapely.coordinates": [], "shapely.predicates": ["shapely.decorators.requires_geos.__init__", "shapely.decorators.multithreading_enabled"], "shapely.constructive": ["shapely.decorators.requires_geos.__init__", "shapely.decorators.multithreading_enabled"], "shapely.algorithms._oriented_envelope": [], "shapely.affinity": [], "shapely.measurement": ["shapely.decorators.requires_geos.__init__", "shapely.decorators.multithreading_enabled"], "shapely.set_operations": ["shapely.decorators.requires_geos.__init__", "shapely.decorators.multithreading_enabled"], "shapely.linear": ["shapely.decorators.multithreading_enabled"], "shapely.strtree": [], "shapely.strtree.STRtree": ["shapely.decorators.requires_geos.__init__", "<builtin>.property"], "shapely._version": [], "shapely._version.get_versions": ["json.loads"], "json.loads": ["json.detect_encoding", "<str>.startswith", "<builtin>.isinstance", "<builtin>.TypeError"], "json.detect_encoding": ["<builtin>.len"], "shapely.errors.setup_signal_checks": ["threading.main_thread", "<builtin>.ValueError"], "threading.main_thread": [], "shapely.coords": [], "shapely.coords.CoordinateSequence": ["<builtin>.property"], "shapely.geometry.base.BaseGeometry": ["<builtin>.property"], "shapely.geometry.base.BaseMultipartGeometry": ["<builtin>.property"], "shapely.geometry.collection": [], "shapely.geometry.collection.GeometryCollection": ["<builtin>.property"], "shapely.geometry.geo": [], "shapely.geometry.linestring": [], "shapely.geometry.point": [], "shapely.geometry.point.Point": ["<builtin>.property"], "shapely.geometry.linestring.LineString": ["<builtin>.property"], "shapely.geometry.multilinestring": [], "shapely.geometry.multilinestring.MultiLineString": ["<builtin>.property"], "shapely.geometry.multipoint": [], "shapely.geometry.multipoint.MultiPoint": ["<builtin>.property"], "shapely.geometry.multipolygon": [], "shapely.geometry.polygon": [], "shapely.algorithms.cga": [], "shapely.geometry.polygon.LinearRing": ["<builtin>.property"], "shapely.geometry.polygon.Polygon": ["<builtin>.property", "<builtin>.classmethod"], "shapely.geometry.multipolygon.MultiPolygon": ["<builtin>.property"], "pyclipper": [], "pyclipper._version": [], "easyocr.DBNet.model.constructor": [], "easyocr.DBNet.model.constructor.Configurable": ["<builtin>.staticmethod"], "easyocr.detection": [], "easyocr.craft_utils": [], "easyocr.craft": [], "easyocr.model.modules": [], "torchvision": ["ntpath.dirname", "ntpath.join", "posixpath.join", "ntpath.realpath", "warnings.warn", "posixpath.realpath", "posixpath.dirname"], "modulefinder": [], "importlib._bootstrap_external": ["<builtin>.type", "append", "<builtin>.len", "<builtin>.all", "<int>.to_bytes", "importlib._bootstrap_external._make_relax_case", "<builtin>.object", "<builtin>.tuple"], "importlib._bootstrap_external._make_relax_case": [], "<int>.to_bytes": [], "importlib._bootstrap_external.WindowsRegistryFinder": ["<builtin>.classmethod", "<builtin>.staticmethod"], "importlib._bootstrap_external.FileLoader": ["importlib._bootstrap_external._check_name"], "importlib._bootstrap_external._check_name": ["importlib._bootstrap_external._check_name._wrap"], "importlib._bootstrap_external._check_name._wrap": ["<builtin>.getattr", "<builtin>.setattr", "<builtin>.hasattr"], "importlib._bootstrap_external.ExtensionFileLoader": ["importlib._bootstrap_external._check_name"], "importlib._bootstrap_external._NamespaceLoader": ["<builtin>.staticmethod"], "importlib._bootstrap_external.PathFinder": ["<builtin>.classmethod", "<builtin>.staticmethod"], "importlib._bootstrap_external.FileFinder": ["<builtin>.classmethod"], "torchvision.extension": ["torchvision.extension._check_cuda_version", "genericpath.exists", "os.add_dll_directory", "torchvision._internally_replaced_utils._get_extension_path"], "torchvision._internally_replaced_utils": ["torch.hub._get_torch_home", "posixpath.join", "ntpath.join"], "torch.hub._get_torch_home": ["os.getenv", "posixpath.expanduser", "ntpath.expanduser", "ntpath.join", "posixpath.join"], "torch.utils.model_zoo": [], "torchvision._internally_replaced_utils._get_extension_path": ["ntpath.dirname", "os.add_dll_directory", "posixpath.dirname", "<builtin>.hasattr"], "torchvision.extension._check_cuda_version": ["<builtin>.RuntimeError", "<builtin>.int", "<builtin>.str"], "torchvision._meta_registrations": ["torchvision._meta_registrations.register_meta", "torch.library.register_fake.register", "functools.lru_cache", "torchvision._meta_registrations.register_meta.wrapper", "torch.library.register_fake", "functools.lru_cache.decorating_function"], "torch._custom_ops": [], "torch._custom_op.impl": [], "torch._custom_op.autograd": ["functools.lru_cache"], "torchvision._meta_registrations.register_meta": [], "torchvision._meta_registrations.register_meta.wrapper": ["torchvision._meta_registrations.get_meta_lib", "torch.library.Library.impl", "<builtin>.getattr"], "torchvision._meta_registrations.get_meta_lib": ["torch.library.Library.__init__"], "torchvision.datasets": [], "torchvision.datasets._optical_flow": [], "torchvision.io.image": ["warnings.warn", "torchvision.extension._load_library"], "torchvision.extension._load_library": ["torchvision._internally_replaced_utils._get_extension_path"], "torchvision.datasets.utils": ["typing.TypeVar.__init__"], "urllib": [], "torchvision.datasets.vision": [], "torchvision.datasets._optical_flow.FlowDataset": ["abc.abstractmethod"], "torchvision.datasets._stereo_matching": [], "torchvision.datasets._stereo_matching.StereoMatchingDataset": ["abc.abstractmethod"], "torchvision.datasets.caltech": [], "torchvision.datasets.celeba": ["collections.namedtuple"], "torchvision.datasets.cifar": [], "torchvision.datasets.cityscapes": [], "torchvision.datasets.cityscapes.Cityscapes": ["collections.namedtuple"], "torchvision.datasets.clevr": [], "torchvision.datasets.coco": [], "torchvision.datasets.country211": [], "torchvision.datasets.folder": [], "torchvision.datasets.folder.DatasetFolder": ["<builtin>.staticmethod"], "torchvision.datasets.dtd": [], "torchvision.datasets.eurosat": [], "torchvision.datasets.fakedata": [], "torchvision.datasets.fer2013": [], "torchvision.datasets.fgvc_aircraft": [], "torchvision.datasets.flickr": [], "html.parser": ["re.compile"], "_markupbase": ["re.compile"], "html": ["re.compile"], "html.entities": ["<builtin>.chr", "<map>.items"], "torchvision.datasets.flowers102": [], "torchvision.datasets.food101": [], "torchvision.datasets.gtsrb": [], "torchvision.datasets.hmdb51": [], "torchvision.datasets.video_utils": ["typing.TypeVar.__init__"], "torchvision.io": [], "torchvision.io._load_gpu_decoder": ["torchvision.extension._load_library"], "torchvision.io._video_opt": ["torchvision.extension._load_library"], "torchvision.io.video": ["<builtin>.ImportError", "<builtin>.hasattr"], "torchvision.io.video_reader": ["<builtin>.ImportError", "<builtin>.hasattr"], "torchvision.datasets.video_utils.VideoClips": ["<builtin>.property", "<builtin>.staticmethod"], "torchvision.datasets.hmdb51.HMDB51": ["<builtin>.property"], "torchvision.datasets.imagenet": [], "torchvision.datasets.imagenet.ImageNet": ["<builtin>.property"], "torchvision.datasets.imagenette": [], "torchvision.datasets.inaturalist": [], "torchvision.datasets.kinetics": [], "torchvision.datasets.kinetics.Kinetics": ["<builtin>.property"], "torchvision.datasets.kitti": [], "torchvision.datasets.kitti.Kitti": ["<builtin>.property"], "torchvision.datasets.lfw": [], "torchvision.datasets.lsun": [], "torchvision.datasets.mnist": [], "torchvision.datasets.mnist.MNIST": ["<builtin>.property"], "torchvision.datasets.mnist.EMNIST": ["<builtin>.sorted", "<builtin>.set", "<builtin>.property", "<builtin>.list", "<builtin>.staticmethod"], "torchvision.datasets.mnist.QMNIST": ["<builtin>.property"], "torchvision.datasets.moving_mnist": [], "torchvision.datasets.omniglot": [], "torchvision.datasets.oxford_iiit_pet": [], "torchvision.datasets.pcam": [], "torchvision.datasets.phototour": [], "torchvision.datasets.places365": [], "torchvision.datasets.places365.Places365": ["<builtin>.property"], "torchvision.datasets.rendered_sst2": [], "torchvision.datasets.sbd": [], "torchvision.datasets.sbu": [], "torchvision.datasets.semeion": [], "torchvision.datasets.stanford_cars": [], "torchvision.datasets.stl10": [], "torchvision.datasets.sun397": [], "torchvision.datasets.svhn": [], "torchvision.datasets.ucf101": [], "torchvision.datasets.ucf101.UCF101": ["<builtin>.property"], "torchvision.datasets.usps": [], "torchvision.datasets.voc": ["ntpath.join", "posixpath.join"], "torchvision.datasets.voc.VOCSegmentation": ["<builtin>.property"], "torchvision.datasets.voc.VOCDetection": ["<builtin>.property", "<builtin>.staticmethod"], "torchvision.datasets.widerface": [], "torchvision.models": [], "torchvision.models.alexnet": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._utils.handle_legacy_interface", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.transforms._presets": [], "torchvision.models._api": ["typing.TypeVar.__init__"], "torchvision.models._api.WeightsEnum": ["<builtin>.property", "<builtin>.classmethod"], "torchvision.models._meta": [], "torchvision.models._utils": ["typing.TypeVar.__init__"], "torchvision._utils": ["typing.TypeVar.__init__"], "torchvision.models._utils.handle_legacy_interface": [], "torchvision.models._utils.handle_legacy_interface.outer_wrapper": ["torchvision.models._utils.kwonly_to_pos_or_kw", "functools.wraps"], "torchvision.models._utils.kwonly_to_pos_or_kw": ["<builtin>.enumerate", "<builtin>.next", "functools.wraps", "<builtin>.TypeError", "inspect.signature", "<builtin>.tuple"], "torchvision.models._api.register_model": [], "torchvision.models._api.register_model.wrapper": ["<builtin>.ValueError"], "torchvision.models.convnext": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._utils.handle_legacy_interface", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.ops.misc": [], "torchvision.ops.stochastic_depth": ["torch.fx._symbolic_trace.wrap"], "torchvision.models.densenet": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._utils.handle_legacy_interface", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.densenet._DenseLayer": ["torch._jit_internal.unused", "torch._jit_internal._overload_method"], "torchvision.models.efficientnet": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._utils.handle_legacy_interface", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.ops": ["torchvision.ops._register_onnx_ops._register_custom_op"], "torchvision.ops._register_onnx_ops": ["torch.onnx.symbolic_helper.parse_args.decorator", "torch.onnx.symbolic_helper.parse_args"], "torchvision.ops.boxes": ["torch.jit._trace._script_if_tracing"], "torchvision.ops._box_convert": [], "torchvision.ops._utils": [], "torchvision.ops.ciou_loss": [], "torchvision.ops.diou_loss": [], "torchvision.ops.deform_conv": [], "torchvision.ops.drop_block": ["torch.fx._symbolic_trace.wrap"], "torchvision.ops.feature_pyramid_network": [], "torchvision.ops.focal_loss": [], "torchvision.ops.giou_loss": [], "torchvision.ops.poolers": ["torch.fx._symbolic_trace.wrap", "torch._jit_internal.unused"], "torchvision.ops.roi_align": ["torchvision.ops.roi_align.lazy_compile.decorate_fn", "torch.fx._symbolic_trace.wrap", "torchvision.ops.roi_align.lazy_compile"], "torchvision.ops.roi_align.lazy_compile": [], "torchvision.ops.roi_align.lazy_compile.decorate_fn": ["functools.wraps"], "torchvision.ops.ps_roi_align": ["torch.fx._symbolic_trace.wrap"], "torchvision.ops.ps_roi_pool": ["torch.fx._symbolic_trace.wrap"], "torchvision.ops.roi_pool": ["torch.fx._symbolic_trace.wrap"], "torchvision.ops._register_onnx_ops._register_custom_op": ["torch.onnx.utils.register_custom_op_symbolic"], "torch.onnx.utils.register_custom_op_symbolic": ["torch.onnx._internal.registration.onnx_symbolic.wrapper", "<str>.startswith", "torch.onnx.utils._verify_custom_op_name", "torch.onnx._internal.registration.custom_onnx_symbolic"], "torch.onnx.utils._verify_custom_op_name": ["re.match", "<builtin>.ValueError", "torch.onnx._internal.jit_utils.parse_node_kind"], "torch.onnx._internal.jit_utils.parse_node_kind": ["<builtin>.ValueError"], "torch.onnx._internal.registration.custom_onnx_symbolic": ["torch.onnx._internal.registration.onnx_symbolic"], "torch.onnx._internal.registration.onnx_symbolic": [], "torch.onnx._internal.registration.onnx_symbolic.wrapper": ["torch.onnx._internal.registration.SymbolicRegistry.register", "<builtin>.isinstance"], "torch.onnx._internal.registration.SymbolicRegistry.register": ["<builtin>.ValueError", "torch.onnx._internal.registration._SymbolicFunctionGroup.__init__"], "torch.onnx._internal.registration._SymbolicFunctionGroup.__init__": ["torch.onnx._internal.registration.OverrideDict.__init__"], "torch.onnx._internal.registration.OverrideDict.__init__": [], "torchvision.models.efficientnet._MBConvConfig": ["<builtin>.staticmethod"], "torchvision.models.efficientnet.MBConvConfig": ["<builtin>.staticmethod"], "torchvision.models.googlenet": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper", "collections.namedtuple", "torchvision.models._utils.handle_legacy_interface"], "torchvision.models.googlenet.GoogLeNet": ["torch._jit_internal.unused"], "torchvision.models.inception": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper", "collections.namedtuple", "torchvision.models._utils.handle_legacy_interface"], "torchvision.models.inception.Inception3": ["torch._jit_internal.unused"], "torchvision.models.mnasnet": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._utils.handle_legacy_interface", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.mobilenet": [], "torchvision.models.mobilenetv2": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._utils.handle_legacy_interface", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.mobilenetv3": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._utils.handle_legacy_interface", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.mobilenetv3.InvertedResidualConfig": ["<builtin>.staticmethod"], "torchvision.models.regnet": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._utils.handle_legacy_interface", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.regnet.BlockParams": ["<builtin>.staticmethod", "<builtin>.classmethod"], "torchvision.models.resnet": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._utils.handle_legacy_interface", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.shufflenetv2": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._utils.handle_legacy_interface", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.shufflenetv2.InvertedResidual": ["<builtin>.staticmethod"], "torchvision.models.squeezenet": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._utils.handle_legacy_interface", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.vgg": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._utils.handle_legacy_interface", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.vgg.VGG16_Weights": ["<builtin>.float"], "torchvision.models.vision_transformer": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._utils.handle_legacy_interface", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.swin_transformer": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._api.register_model", "torch.fx._symbolic_trace.wrap", "torchvision.models._api.register_model.wrapper", "torchvision.models._utils.handle_legacy_interface"], "torchvision.models.maxvit": ["torchvision.models._utils.handle_legacy_interface.outer_wrapper", "torchvision.models._utils.handle_legacy_interface", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.detection": [], "torchvision.models.detection.faster_rcnn": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.detection._utils": ["torch._jit_internal.unused", "torch.jit._trace._script_if_tracing"], "torchvision.models.detection.anchor_utils": [], "torchvision.models.detection.image_list": [], "torchvision.models.detection.backbone_utils": [], "torchvision.models.detection.generalized_rcnn": [], "torchvision.models.detection.generalized_rcnn.GeneralizedRCNN": ["torch._jit_internal.unused"], "torchvision.models.detection.roi_heads": ["torch._jit_internal.unused", "torch.jit._trace._script_if_tracing"], "torchvision.models.detection.rpn": [], "torchvision.models.detection.transform": ["torch._jit_internal.unused"], "torchvision.models.detection.transform.GeneralizedRCNNTransform": ["torch._jit_internal.unused"], "torchvision.models.detection.fcos": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.detection.fcos.FCOS": ["torch._jit_internal.unused"], "torchvision.models.detection.keypoint_rcnn": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.detection.mask_rcnn": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.detection.retinanet": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.detection.retinanet.RetinaNet": ["torch._jit_internal.unused"], "torchvision.models.detection.ssd": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.detection.ssd.SSD": ["torch._jit_internal.unused"], "torchvision.models.detection.ssdlite": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.optical_flow": [], "torchvision.models.optical_flow.raft": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.optical_flow._utils": [], "torchvision.models.quantization": [], "torchvision.models.quantization.googlenet": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.quantization.utils": [], "torchvision.models.quantization.inception": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.quantization.mobilenet": [], "torchvision.models.quantization.mobilenetv2": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torch.ao.quantization": [], "torch.ao.quantization.pt2e._numeric_debugger": ["logging.getLogger"], "torch.ao.ns.fx.utils": ["torch.ao.ns.fx.utils.maybe_dequantize_first_two_tensor_args_and_handle_tuples"], "torch.ao.ns.fx.ns_types": [], "torch.ao.ns.fx.utils.maybe_dequantize_first_two_tensor_args_and_handle_tuples": [], "torch.ao.quantization.pt2e._numeric_debugger.QuantizationComparisonResult": ["<builtin>.property"], "torch.ao.quantization.pt2e.export_utils": [], "torch.ao.quantization.qconfig_mapping": [], "torch.ao.quantization.qconfig_mapping.QConfigMapping": ["<builtin>.classmethod"], "torchvision.models.quantization.mobilenetv3": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.quantization.resnet": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.quantization.shufflenetv2": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.segmentation": [], "torchvision.models.segmentation.deeplabv3": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.segmentation._utils": [], "torchvision.models.segmentation.fcn": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.segmentation.lraspp": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.video": [], "torchvision.models.video.mvit": ["torch.fx._symbolic_trace.wrap", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.video.resnet": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.video.resnet.Conv3DSimple": ["<builtin>.staticmethod"], "torchvision.models.video.resnet.Conv2Plus1D": ["<builtin>.staticmethod"], "torchvision.models.video.resnet.Conv3DNoTemporal": ["<builtin>.staticmethod"], "torchvision.models.video.s3d": ["torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.models.video.swin_transformer": ["torch.fx._symbolic_trace.wrap", "torchvision.models._api.register_model", "torchvision.models._api.register_model.wrapper"], "torchvision.version": ["torchvision.extension._check_cuda_version"], "packaging.version": ["re.compile"], "packaging.version.Version": ["re.compile", "<builtin>.property"], "easyocr.utils.calculate_md5": ["<builtin>.open", "<builtin>.iter"], "easyocr.utils.download_and_unzip": ["urllib.request.urlretrieve", "ntpath.join", "posixpath.join", "zipfile.ZipFile.__init__", "easyocr.utils.printProgressBar"], "easyocr.utils.printProgressBar": [], "urllib.request.urlretrieve": ["tempfile.NamedTemporaryFile", "append", "urllib.error.ContentTooShortError.__init__", "urllib.request.urlopen", "posixpath.normpath", "contextlib.closing.__init__", "<builtin>.open", "ntpath.normpath", "urllib.parse._splittype"], "urllib.parse._splittype": ["re.compile"], "urllib.request.urlopen": ["<builtin>.ValueError", "ssl.SSLContext.set_alpn_protocols", "ssl.create_default_context", "urllib.request.build_opener", "urllib.request.HTTPSHandler.__init__", "warnings.warn", "urllib.request.OpenerDirector.open"], "urllib.request.build_opener": ["remove", "append", "<builtin>.isinstance", "<builtin>.hasattr", "urllib.request.OpenerDirector.__init__", "<builtin>.set", "<builtin>.issubclass", "urllib.request.OpenerDirector.add_handler"], "urllib.request.OpenerDirector.__init__": [], "urllib.request.OpenerDirector.add_handler": ["<map>.setdefault", "<builtin>.int", "<builtin>.hasattr", "<builtin>.dir", "<builtin>.TypeError", "<map>.get", "bisect.insort_right", "<builtin>.type"], "bisect.insort_right": ["bisect.bisect_right", "insert"], "bisect.bisect_right": ["<builtin>.ValueError", "<builtin>.len"], "urllib.request.HTTPSHandler.__init__": ["urllib.request.AbstractHTTPHandler.__init__"], "urllib.request.AbstractHTTPHandler.__init__": [], "ssl.create_default_context": ["<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.hasattr", "<builtin>.TypeError", "ssl.SSLContext.load_default_certs"], "ssl.SSLContext.load_default_certs": ["<builtin>.isinstance", "ssl.SSLContext._load_windows_store_certs", "<builtin>.TypeError"], "ssl.SSLContext._load_windows_store_certs": ["<builtin>.bytearray", "warnings.warn"], "ssl.SSLContext.set_alpn_protocols": ["<builtin>.bytearray", "<builtin>.bytes", "<builtin>.len"], "urllib.request.OpenerDirector.open": ["<builtin>.isinstance", "urllib.request.Request.__init__", "urllib.request.OpenerDirector._open", "<map>.get", "<builtin>.getattr"], "urllib.request.Request.__init__": ["urllib.request.request_host", "<map>.items", "urllib.request.Request.add_header"], "urllib.request.Request.add_header": [], "urllib.request.request_host": ["urllib.parse.urlparse", "urllib.request.Request.get_header"], "urllib.parse.urlparse": ["urllib.parse.urlsplit", "urllib.parse._splitparams", "urllib.parse._coerce_args"], "urllib.parse._coerce_args": ["urllib.parse._decode_args", "<builtin>.isinstance", "<builtin>.TypeError"], "urllib.parse._decode_args": ["<builtin>.tuple"], "urllib.parse.urlsplit": ["<builtin>.ValueError", "<builtin>.len", "urllib.parse.clear_cache", "urllib.parse._splitnetloc", "urllib.parse._coerce_args", "<builtin>.bool", "<map>.get", "urllib.parse._checknetloc", "<builtin>.type"], "urllib.parse.clear_cache": ["<map>.clear"], "urllib.parse._splitnetloc": ["<builtin>.min", "<builtin>.len"], "urllib.parse._checknetloc": ["<str>.isascii", "<builtin>.ValueError"], "<str>.isascii": [], "urllib.parse._splitparams": [], "urllib.request.Request.get_header": [], "urllib.request.OpenerDirector._open": ["urllib.request.OpenerDirector._call_chain"], "urllib.request.OpenerDirector._call_chain": ["<builtin>.getattr", "<map>.get"], "tempfile.NamedTemporaryFile": ["tempfile._TemporaryFileWrapper.__init__", "tempfile._mkstemp_inner", "tempfile._sanitize_params"], "tempfile._sanitize_params": ["tempfile.gettempdirb", "tempfile.gettempdir", "tempfile._infer_return_type"], "tempfile._infer_return_type": ["os._fspath", "<builtin>.isinstance", "<builtin>.TypeError"], "tempfile.gettempdirb": ["tempfile._gettempdir"], "tempfile._mkstemp_inner": ["ntpath.abspath", "<builtin>.range", "<builtin>.FileExistsError", "<builtin>.next", "tempfile._get_candidate_names", "ntpath.join", "posixpath.join", "posixpath.abspath", "<builtin>.map", "genericpath.isdir"], "tempfile._get_candidate_names": [], "<builtin>.FileExistsError": [], "tempfile._TemporaryFileWrapper.__init__": ["tempfile._TemporaryFileCloser.__init__"], "tempfile._TemporaryFileCloser.__init__": [], "urllib.error.ContentTooShortError.__init__": ["urllib.error.URLError.__init__"], "urllib.error.URLError.__init__": [], "zipfile.ZipFile.__init__": ["<builtin>.isinstance", "<builtin>.ValueError", "zipfile._check_compression", "zipfile._Tellable.__init__", "zipfile.ZipFile._fpclose", "os._fspath", "threading.RLock", "zipfile.ZipFile._RealGetContents", "<builtin>.getattr"], "zipfile._check_compression": ["<builtin>.RuntimeError", "<builtin>.NotImplementedError"], "zipfile.ZipFile._RealGetContents": ["<builtin>.print", "zipfile._EndRecData", "<builtin>.len", "zipfile.ZipInfo._decodeExtra", "zipfile.ZipInfo.__init__", "<builtin>.NotImplementedError"], "zipfile._EndRecData": ["zipfile._EndRecData64", "<builtin>.list", "<builtin>.max", "<builtin>.len"], "zipfile._EndRecData64": ["<builtin>.len"], "zipfile.ZipInfo.__init__": ["<builtin>.chr", "<builtin>.ValueError"], "zipfile.ZipInfo._decodeExtra": ["<builtin>.len"], "zipfile._Tellable.__init__": [], "zipfile.ZipFile._fpclose": ["zipfile._Tellable.close"], "zipfile._Tellable.close": [], "yaml.load": ["yaml.constructor.BaseConstructor.get_single_data", "yaml.loader.FullLoader.__init__", "yaml.loader.SafeLoader.__init__"], "yaml.loader.FullLoader.__init__": ["yaml.constructor.BaseConstructor.__init__", "yaml.scanner.Scanner.__init__", "yaml.parser.Parser.__init__", "yaml.reader.Reader.__init__", "yaml.resolver.BaseResolver.__init__", "yaml.composer.Composer.__init__"], "yaml.reader.Reader.__init__": ["yaml.reader.Reader.check_printable", "yaml.reader.Reader.determine_encoding", "<builtin>.isinstance", "<builtin>.getattr"], "yaml.reader.Reader.determine_encoding": ["yaml.reader.Reader.update_raw", "<builtin>.isinstance", "yaml.reader.Reader.update", "<builtin>.len"], "yaml.reader.Reader.update_raw": ["<builtin>.len"], "yaml.reader.Reader.update": ["yaml.reader.Reader.check_printable", "yaml.reader.Reader.update_raw", "yaml.reader.ReaderError.__init__", "<builtin>.len"], "yaml.reader.ReaderError.__init__": [], "yaml.reader.Reader.check_printable": ["<builtin>.ord", "yaml.reader.ReaderError.__init__", "<builtin>.len"], "yaml.scanner.Scanner.__init__": ["yaml.scanner.Scanner.fetch_stream_start"], "yaml.scanner.Scanner.fetch_stream_start": ["yaml.tokens.StreamStartToken.__init__"], "yaml.tokens.StreamStartToken.__init__": [], "yaml.parser.Parser.__init__": [], "yaml.composer.Composer.__init__": [], "yaml.constructor.BaseConstructor.__init__": [], "yaml.resolver.BaseResolver.__init__": [], "yaml.constructor.BaseConstructor.get_single_data": ["yaml.constructor.BaseConstructor.construct_document"], "yaml.constructor.BaseConstructor.construct_document": ["yaml.constructor.BaseConstructor.construct_object"], "yaml.constructor.BaseConstructor.construct_object": ["append", "<builtin>.isinstance", "<builtin>.next", "<builtin>.len", "yaml.error.MarkedYAMLError.__init__"], "yaml.error.MarkedYAMLError.__init__": [], "easyocr.easyocr.Reader.setModelLanguage": ["<builtin>.set", "<builtin>.ValueError", "<str>.capitalize"], "<str>.capitalize": [], "easyocr.easyocr.Reader.setLanguageList": ["ntpath.join", "posixpath.join", "<builtin>.open", "<builtin>.set"], "easyocr.easyocr.Reader.initDetector": ["easyocr.detection.get_detector", "easyocr.detection_db.get_detector"], "easyocr.detection.get_detector": ["torch.nn.parallel.data_parallel.DataParallel.__init__", "easyocr.detection.copyStateDict", "torch.ao.quantization.quantize.quantize_dynamic", "torch.nn.modules.module.Module.to", "torch.nn.modules.module.Module.load_state_dict", "easyocr.craft.CRAFT.__init__", "torch.serialization.load"], "easyocr.craft.CRAFT.__init__": ["easyocr.craft.double_conv.__init__", "torch.nn.modules.module.Module.modules", "torch.nn.modules.container.Sequential.__init__", "easyocr.model.modules.vgg16_bn.__init__", "easyocr.model.modules.init_weights", "torch.nn.modules.activation.ReLU.__init__", "<builtin>.super", "torch.nn.modules.conv.Conv2d.__init__"], "easyocr.model.modules.vgg16_bn.__init__": ["<builtin>.range", "torch.nn.modules.module.Module.add_module", "torchvision.models.vgg.vgg16_bn", "torch.nn.modules.module.Module.modules", "torch.nn.modules.container.Sequential.__init__", "easyocr.model.modules.init_weights", "<builtin>.super", "<builtin>.str", "packaging.version.parse", "torch.nn.modules.conv.Conv2d.__init__"], "packaging.version.parse": ["packaging.version.Version.__init__"], "packaging.version.Version.__init__": ["<builtin>.int", "<builtin>.tuple", "packaging.version._parse_local_version", "packaging.version._parse_letter_version", "packaging.version._cmpkey"], "packaging.version._parse_letter_version": ["<builtin>.int"], "packaging.version._parse_local_version": ["<builtin>.int", "<builtin>.tuple"], "packaging.version._cmpkey": ["<builtin>.list", "<builtin>.isinstance", "<builtin>.reversed", "<builtin>.tuple"], "torchvision.models.vgg.vgg16_bn": ["torchvision.models.vgg._vgg", "torchvision.models._api.WeightsEnum.verify"], "torchvision.models._api.WeightsEnum.verify": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.type"], "torchvision.models.vgg._vgg": ["torchvision.models.vgg.make_layers", "torchvision.models._utils._ovewrite_named_param", "<builtin>.len", "torch.nn.modules.module.Module.load_state_dict", "torchvision.models.vgg.VGG.__init__"], "torchvision.models._utils._ovewrite_named_param": ["<builtin>.ValueError"], "torchvision.models.vgg.make_layers": ["typing.cast", "torch.nn.modules.container.Sequential.__init__", "torch.nn.modules.activation.ReLU.__init__", "torch.nn.modules.conv.Conv2d.__init__"], "torch.nn.modules.conv.Conv2d.__init__": ["<builtin>.super", "torch.nn.modules.utils._ntuple.parse", "<builtin>.isinstance"], "torch.nn.modules.utils._ntuple.parse": ["<builtin>.isinstance", "<builtin>.tuple"], "torch.nn.modules.activation.ReLU.__init__": ["<builtin>.super"], "torch.nn.modules.container.Sequential.__init__": [], "torchvision.models.vgg.VGG.__init__": ["torchvision.utils._log_api_usage_once", "<builtin>.isinstance", "torch.nn.init.normal_", "torch.nn.init.constant_", "torch.nn.modules.module.Module.modules", "torch.nn.modules.container.Sequential.__init__", "torch.nn.modules.activation.ReLU.__init__", "<builtin>.super", "torch.nn.modules.linear.Linear.__init__", "torch.nn.init.kaiming_normal_"], "torchvision.utils._log_api_usage_once": ["<builtin>.isinstance"], "torch.nn.modules.linear.Linear.__init__": ["torch.nn.modules.linear.Linear.reset_parameters", "<builtin>.super", "torch.nn.modules.module.Module.register_parameter"], "torch.nn.modules.module.Module.register_parameter": ["<builtin>.isinstance", "<builtin>.AttributeError", "<builtin>.ValueError", "<builtin>.hasattr", "<builtin>.KeyError", "torch.typename", "<builtin>.TypeError"], "torch.typename": ["<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.getattr"], "torch.nn.modules.linear.Linear.reset_parameters": ["torch.nn.init.kaiming_uniform_", "torch.nn.init.uniform_", "torch.nn.init._calculate_fan_in_and_fan_out"], "torch.nn.init.kaiming_uniform_": ["torch.nn.init._calculate_correct_fan", "torch.nn.init.calculate_gain", "warnings.warn", "torch.autograd.grad_mode.no_grad.__init__", "torch.overrides.handle_torch_function"], "torch.overrides.handle_torch_function": ["<builtin>.type", "torch.overrides._get_overloaded_args", "<builtin>.hasattr", "torch.overrides._get_current_function_mode", "warnings.warn", "<builtin>.TypeError", "<builtin>.map", "torch.overrides._pop_mode_temporarily", "<builtin>.tuple"], "torch.overrides._get_overloaded_args": ["<builtin>.enumerate", "<builtin>.len", "<builtin>.hasattr", "<builtin>.set", "insert", "<builtin>.issubclass"], "torch.overrides._pop_mode_temporarily": ["torch.overrides._pop_mode"], "torch.overrides._pop_mode": [], "torch.overrides._get_current_function_mode": [], "torch.nn.init._calculate_correct_fan": ["torch.nn.init._calculate_fan_in_and_fan_out", "<builtin>.ValueError"], "torch.nn.init._calculate_fan_in_and_fan_out": ["<builtin>.ValueError"], "torch.nn.init.calculate_gain": ["<builtin>.isinstance", "<builtin>.ValueError"], "torch.nn.init.uniform_": ["torch.nn.init._no_grad_uniform_", "torch.overrides.handle_torch_function"], "torch.nn.init._no_grad_uniform_": ["torch.autograd.grad_mode.no_grad.__init__"], "torch.nn.modules.module.Module.modules": ["torch.nn.modules.module.Module.named_modules"], "torch.nn.modules.module.Module.named_modules": ["<builtin>.set"], "torch.nn.init.normal_": ["torch.overrides.handle_torch_function", "torch.nn.init._no_grad_normal_"], "torch.nn.init._no_grad_normal_": ["torch.autograd.grad_mode.no_grad.__init__"], "torch.nn.init.constant_": ["torch.nn.init._no_grad_fill_", "torch.overrides.handle_torch_function"], "torch.nn.init._no_grad_fill_": ["torch.autograd.grad_mode.no_grad.__init__"], "torch.nn.init.kaiming_normal_": ["torch.nn.init._calculate_correct_fan", "torch.nn.init.calculate_gain", "warnings.warn", "torch.autograd.grad_mode.no_grad.__init__"], "torch.nn.modules.module.Module.load_state_dict": ["<builtin>.type", "<builtin>.RuntimeError", "<builtin>.isinstance", "<builtin>.len", "torch.nn.modules.module.Module.load_state_dict.load", "<builtin>.TypeError", "collections.OrderedDict.__init__", "<builtin>.getattr"], "torch.nn.modules.module.Module.load_state_dict.load": ["collections.OrderedDict.items", "torch.nn.modules.module.Module._load_from_state_dict", "torch.nn.modules.module.Module.load_state_dict.load"], "torch.nn.modules.module.Module._load_from_state_dict": ["torch.overrides.is_tensor_like", "collections.OrderedDict.keys", "<builtin>.len", "torch.nn.parameter.is_lazy", "<builtin>.getattr", "torch.nn.modules.module.Module.set_extra_state", "torch.__future__.get_swap_module_params_on_conversion", "warnings.warn", "torch.autograd.grad_mode.no_grad.__init__", "<builtin>.type"], "torch.__future__.get_swap_module_params_on_conversion": [], "torch.overrides.is_tensor_like": ["<builtin>.hasattr", "<builtin>.type"], "torch.nn.parameter.is_lazy": ["<builtin>.isinstance"], "torch.nn.modules.module.Module.set_extra_state": ["<builtin>.RuntimeError"], "collections.OrderedDict.keys": [], "collections.OrderedDict.items": [], "torch.nn.modules.module.Module.add_module": ["<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.KeyError", "torch.typename", "<builtin>.TypeError"], "easyocr.model.modules.init_weights": ["torch.nn.init.xavier_uniform_", "<builtin>.isinstance"], "torch.nn.init.xavier_uniform_": ["torch.nn.init._calculate_fan_in_and_fan_out", "<builtin>.float", "torch.nn.init._no_grad_uniform_"], "easyocr.craft.double_conv.__init__": ["torch.nn.modules.container.Sequential.__init__", "torch.nn.modules.activation.ReLU.__init__", "<builtin>.super", "torch.nn.modules.conv.Conv2d.__init__"], "torch.serialization.load": ["torch.serialization._legacy_load", "torch.serialization._load", "torch.serialization._open_file_like", "genericpath.getsize", "torch.serialization.get_default_mmap_options", "<builtin>.isinstance", "<builtin>.ValueError", "torch.storage._StorageBase.from_file", "warnings.warn", "torch.serialization._is_path", "torch.serialization.load._get_wo_message", "torch.jit._serialization.load", "torch.serialization._is_zipfile", "torch.serialization._check_dill_version", "torch.serialization._open_zipfile_reader.__init__", "os._fspath", "<builtin>.RuntimeError", "os.getenv", "torch.serialization._opener.__exit__", "torch.serialization._is_torchscript_zip", "torch.serialization._opener.__enter__", "<builtin>.str"], "torch.serialization._check_dill_version": ["torch.serialization.check_module_version_greater_or_equal", "<builtin>.ValueError", "<builtin>.str"], "torch.serialization.check_module_version_greater_or_equal": ["<builtin>.type", "<builtin>.RuntimeError", "<builtin>.enumerate", "warnings.warn", "<builtin>.str", "<builtin>.tuple"], "torch.serialization._open_file_like": ["<builtin>.RuntimeError", "torch.serialization._open_file.__init__", "torch.serialization._open_buffer_reader.__init__", "torch.serialization._is_path"], "torch.serialization._is_path": ["<builtin>.isinstance"], "torch.serialization._open_buffer_reader.__init__": ["torch.serialization._check_seekable", "<builtin>.super"], "torch.serialization._check_seekable": ["torch.serialization._check_seekable.raise_err_msg"], "torch.serialization._check_seekable.raise_err_msg": ["<builtin>.type", "<builtin>.str"], "torch.serialization._open_file.__init__": ["<builtin>.open", "<builtin>.super"], "torch.serialization._is_zipfile": ["<builtin>.len"], "torch.serialization._open_zipfile_reader.__init__": ["<builtin>.super"], "torch.serialization._opener.__enter__": [], "torch.serialization._opener.__exit__": [], "torch.serialization._is_torchscript_zip": [], "torch.jit._serialization.load": ["<builtin>.isinstance", "<builtin>.ValueError", "torch.jit._serialization.validate_map_location", "torch._utils_internal.log_torchscript_usage", "torch._jit_internal._get_model_id", "os._fspath", "genericpath.exists", "torch.jit._recursive.wrap_cpp_module", "genericpath.isdir"], "torch.jit._serialization.validate_map_location": ["<builtin>.isinstance", "<builtin>.ValueError", "torch.serialization.validate_cuda_device", "<builtin>.str", "<builtin>.type"], "torch.serialization.validate_cuda_device": ["torch.serialization._validate_device"], "torch.serialization._validate_device": ["<builtin>.RuntimeError", "<builtin>.getattr", "<str>.upper", "<builtin>.hasattr"], "torch.jit._recursive.wrap_cpp_module": ["torch.jit._script.RecursiveScriptModule._construct"], "torch.jit._script.RecursiveScriptModule._construct": [], "torch._jit_internal._get_model_id": ["<builtin>.isinstance", "<builtin>.str"], "torch._utils_internal.log_torchscript_usage": [], "genericpath.getsize": [], "torch.serialization.get_default_mmap_options": [], "torch.storage._StorageBase.from_file": [], "torch.serialization._load": ["<builtin>.ValueError", "torch.serialization.get_default_load_endianness", "torch.serialization._get_restore_location", "torch._utils._validate_loaded_sparse_tensors", "warnings.warn", "torch._weights_only_unpickler.Unpickler.load", "pickle._Unpickler.load"], "torch.serialization._get_restore_location": ["<builtin>.isinstance"], "torch.serialization.get_default_load_endianness": [], "torch._weights_only_unpickler.Unpickler.load": ["", "<builtin>.range", "<builtin>.isinstance", "pop", "<builtin>.ValueError", "<builtin>.len", "<builtin>.hasattr", "<builtin>.set", "torch._weights_only_unpickler.Unpickler.persistent_load", "<builtin>.tuple", "torch._weights_only_unpickler._get_allowed_globals", "torch._weights_only_unpickler._get_user_allowed_globals", "warnings.warn", "pickle.decode_long", "torch.serialization._maybe_decode_ascii", "<builtin>.str", "torch._weights_only_unpickler.Unpickler.pop_mark", "<builtin>.type"], "pickle.decode_long": [], "torch.serialization._maybe_decode_ascii": ["<builtin>.isinstance"], "torch._weights_only_unpickler.Unpickler.persistent_load": [], "torch._weights_only_unpickler.Unpickler.pop_mark": [], "torch._weights_only_unpickler._get_user_allowed_globals": [], "torch._weights_only_unpickler._get_allowed_globals": ["<map>.keys", "torch.storage._dtype_to_storage_type_map", "torch.serialization.StorageType.__init__", "torch.storage._new_dtypes", "torch._weights_only_unpickler._tensor_rebuild_functions", "<builtin>.str"], "torch.storage._dtype_to_storage_type_map": [], "torch.storage._new_dtypes": [], "torch.serialization.StorageType.__init__": ["torch.storage._get_dtype_from_pickle_storage_type"], "torch.storage._get_dtype_from_pickle_storage_type": ["<builtin>.KeyError", "torch.storage._storage_type_to_dtype_map"], "torch.storage._storage_type_to_dtype_map": ["torch.storage._dtype_to_storage_type_map", "<map>.items"], "torch._weights_only_unpickler._tensor_rebuild_functions": [], "torch._utils._validate_loaded_sparse_tensors": ["<builtin>.NotImplementedError"], "torch.serialization.load._get_wo_message": ["re.search"], "pickle._Unpickler.load": ["pickle._Unpickler.load_stop", "<builtin>.isinstance", "<builtin>.hasattr", "pickle._Unframer.read", "pickle._Unframer.__init__"], "pickle._Unframer.__init__": [], "pickle._Unframer.read": ["<builtin>.len"], "pickle._Unpickler.load_stop": ["pickle._Stop.__init__"], "pickle._Stop.__init__": [], "torch.serialization._legacy_load": ["<builtin>.RuntimeError", "torch._guards.active_fake_mode", "torch.serialization._is_zipfile", "torch.serialization._should_read_directly", "<builtin>.hasattr", "torch.serialization._legacy_load.legacy_load", "torch._utils._validate_loaded_sparse_tensors", "torch.serialization._get_restore_location", "pickle._load", "torch._weights_only_unpickler.Unpickler.load", "torch._utils._element_size", "torch._weights_only_unpickler.load", "torch.serialization._check_seekable", "pickle._Unpickler.load", "<builtin>.type"], "torch.serialization._should_read_directly": ["torch.serialization._is_compressed_file"], "torch.serialization._is_compressed_file": [], "torch.serialization._legacy_load.legacy_load": ["typing.cast", "<builtin>.range", "contextlib.closing.__init__", "torch.storage.TypedStorage.__init__", "ntpath.join", "posixpath.join", "torch.serialization._get_restore_location.restore_location", "pickle._Unpickler.load", "<builtin>.open", "torch._utils._element_size", "torch._weights_only_unpickler.Unpickler.load", "torch._weights_only_unpickler.load", "pickle._load", "torch.serialization.mkdtemp", "tarfile.TarFile.open"], "tarfile.TarFile.open": ["append", "<builtin>.sorted", "tarfile.TarFile.__init__", "<builtin>.ValueError", "tarfile._Stream.__init__", "tarfile.TarFile.taropen", "tarfile._Stream.close", "<builtin>.getattr"], "tarfile.TarFile.taropen": ["tarfile.TarFile.__init__", "<builtin>.ValueError"], "tarfile.TarFile.__init__": ["append", "<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.hasattr", "<builtin>.len", "tarfile.TarFile.next", "posixpath.abspath", "<map>.copy", "<builtin>.str", "genericpath.exists", "ntpath.abspath"], "tarfile.TarFile.next": ["<builtin>.isinstance", "<builtin>.str", "tarfile.TarFile._check", "tarfile.TarFile._dbg"], "tarfile.TarFile._check": ["<builtin>.OSError"], "tarfile.TarFile._dbg": ["<builtin>.print"], "tarfile._Stream.__init__": ["tarfile._Stream._init_read_gz", "tarfile._StreamProxy.__init__", "tarfile._StreamProxy.getcomptype", "tarfile._LowLevelFile.__init__", "tarfile._Stream._init_write_gz"], "tarfile._LowLevelFile.__init__": ["<builtin>.hasattr"], "tarfile._StreamProxy.__init__": ["tarfile._LowLevelFile.read"], "tarfile._LowLevelFile.read": [], "tarfile._StreamProxy.getcomptype": [], "tarfile._Stream._init_write_gz": ["tarfile._Stream.__write", "posixpath.basename", "<builtin>.int", "ntpath.basename"], "tarfile._Stream.__write": ["<builtin>.len"], "tarfile._Stream._init_read_gz": ["tarfile._Stream.__read", "<builtin>.ord", "tarfile._Stream.read"], "tarfile._Stream.__read": ["append", "<builtin>.len"], "tarfile._Stream.read": ["tarfile._Stream._read", "<builtin>.len"], "tarfile._Stream._read": ["append", "tarfile._Stream.__read", "<builtin>.len"], "tarfile._Stream.close": [], "torch.serialization.mkdtemp": ["tempfile.mkdtemp"], "tempfile.mkdtemp": ["<builtin>.range", "<builtin>.FileExistsError", "<builtin>.next", "tempfile._get_candidate_names", "ntpath.join", "posixpath.join", "tempfile._sanitize_params", "<builtin>.map", "genericpath.isdir"], "torch._weights_only_unpickler.load": ["torch._weights_only_unpickler.Unpickler.__init__", "torch._weights_only_unpickler.Unpickler.load"], "torch._weights_only_unpickler.Unpickler.__init__": [], "torch._utils._element_size": ["<builtin>.RuntimeError", "<builtin>.isinstance", "<builtin>.type"], "torch.serialization._get_restore_location.restore_location": ["torch.serialization.default_restore_location"], "torch.serialization.default_restore_location": ["<builtin>.RuntimeError", "torch.typename"], "torch.storage.TypedStorage.__init__": ["<builtin>.RuntimeError", "<builtin>.isinstance", "<builtin>.int", "<builtin>.len", "torch.storage.TypedStorage._element_size", "torch.storage._get_storage_from_sequence", "torch.storage._warn_typed_storage_removal", "<builtin>.TypeError", "torch.storage._isint", "<builtin>.type"], "torch.storage._warn_typed_storage_removal": ["warnings.warn", "torch.storage._get_always_warn_typed_storage_removal", "torch.storage._warn_typed_storage_removal.is_first_time"], "torch.storage._get_always_warn_typed_storage_removal": [], "torch.storage._warn_typed_storage_removal.is_first_time": ["<builtin>.hasattr"], "torch.storage._isint": ["<builtin>.isinstance"], "torch.storage._get_storage_from_sequence": [], "torch.storage.TypedStorage._element_size": ["torch._utils._element_size"], "torch._guards.active_fake_mode": ["<builtin>.isinstance", "<builtin>.reversed", "<builtin>.enumerate", "torch.utils._python_dispatch._get_current_dispatch_mode_stack"], "torch.utils._python_dispatch._get_current_dispatch_mode_stack": ["<builtin>.range"], "pickle._load": ["pickle._Unpickler.__init__", "pickle._Unpickler.load"], "pickle._Unpickler.__init__": ["<builtin>.iter"], "easyocr.detection.copyStateDict": ["<builtin>.list", "collections.OrderedDict.__init__"], "torch.nn.parallel.data_parallel.DataParallel.__init__": ["<builtin>.RuntimeError", "torch._utils._get_device_index", "<builtin>.len", "torch.nn.modules.module.Module.to", "torch.nn.parallel.data_parallel._check_balance", "torch._utils._get_all_device_indices", "torch._utils._get_available_device_type", "<builtin>.super"], "torch._utils._get_available_device_type": ["torch.mtia.is_available", "<builtin>.hasattr", "torch.cuda.is_available", "torch.xpu.is_available", "<builtin>.getattr"], "torch.xpu.is_available": ["torch.xpu.device_count"], "torch.xpu.device_count": ["torch.xpu._is_compiled"], "torch.mtia.is_available": ["torch.mtia._is_compiled", "torch.mtia.device_count"], "torch.mtia._is_compiled": [], "torch.mtia.device_count": [], "torch._utils._get_all_device_indices": ["torch._utils._get_device_attr"], "torch._utils._get_device_attr": ["torch._utils._get_all_device_indices.<lambda1>", "torch._utils._get_available_device_type", "torch._utils._get_devices_properties.<lambda1>", "torch._utils._get_current_device_index.<lambda1>", "<builtin>.getattr"], "torch._utils._get_all_device_indices.<lambda1>": ["<builtin>.range", "<builtin>.list", "torch.mtia.device_count", "torch.xpu.device_count", "torch.cuda.device_count"], "torch._utils._get_device_index": ["<builtin>.isinstance", "<builtin>.ValueError", "torch._utils._get_current_device_index", "torch._jit_internal.is_scripting", "torch._utils.get_current_device_index"], "torch._utils._get_current_device_index": ["torch._utils._get_device_attr"], "torch._utils._get_current_device_index.<lambda1>": ["torch.cuda.current_device", "torch.xpu.current_device", "torch.mtia.current_device"], "torch.cuda.current_device": ["torch.cuda._lazy_init"], "torch.cuda._lazy_init": ["torch.cuda.is_initialized", "<builtin>.hasattr"], "torch.xpu.current_device": ["torch.xpu._lazy_init"], "torch.xpu._lazy_init": ["torch.xpu.is_initialized", "<builtin>.hasattr"], "torch.xpu.is_initialized": [], "torch.mtia.current_device": [], "torch._utils.get_current_device_index": ["torch.cuda.current_device", "torch.cuda.device_count"], "torch.nn.parallel.data_parallel._check_balance": ["torch.nn.parallel.data_parallel._check_balance.warn_imbalance", "torch._utils._get_devices_properties", "torch._utils._get_device_index"], "torch._utils._get_devices_properties": ["torch._utils._get_device_attr"], "torch._utils._get_devices_properties.<lambda1>": ["torch.cuda.get_device_properties", "torch.xpu.get_device_properties"], "torch.cuda.get_device_properties": ["<builtin>.AssertionError", "torch.cuda.device_count", "torch.cuda._lazy_init"], "torch.xpu.get_device_properties": ["torch.xpu.device_count", "torch.xpu._lazy_init", "torch.xpu._utils._get_device_index", "<builtin>.AssertionError"], "torch.xpu._utils._get_device_index": ["torch._jit_internal.is_scripting", "<builtin>.isinstance", "<builtin>.ValueError", "torch._utils._get_device_index"], "torch.nn.parallel.data_parallel._check_balance.warn_imbalance": ["<builtin>.min", "<builtin>.enumerate", "torch.nn.parallel.data_parallel._check_balance.<lambda2>", "warnings.warn", "<builtin>.max", "torch.nn.parallel.data_parallel._check_balance.<lambda1>", "operator.itemgetter.__init__"], "torch.nn.parallel.data_parallel._check_balance.<lambda1>": [], "torch.nn.parallel.data_parallel._check_balance.<lambda2>": [], "torch.nn.modules.module.Module.to": [], "torch.ao.quantization.quantize.quantize_dynamic": ["<builtin>.dict", "<builtin>.RuntimeError", "torch.ao.quantization.quantize.propagate_qconfig_", "<builtin>.isinstance", "copy.deepcopy", "<builtin>.ValueError", "torch.ao.quantization.quantization_mappings.get_default_dynamic_quant_module_mappings", "<builtin>.zip", "<builtin>.str", "torch.ao.quantization.quantize.convert"], "torch.ao.quantization.quantization_mappings.get_default_dynamic_quant_module_mappings": [], "torch.ao.quantization.quantize.propagate_qconfig_": ["torch.ao.quantization.quantize._propagate_qconfig_helper"], "torch.ao.quantization.quantize._propagate_qconfig_helper": ["torch.ao.quantization.qconfig._assert_valid_qconfig", "<builtin>.getattr", "torch.ao.quantization.qconfig._add_module_to_qconfig_obs_ctr", "torch.ao.quantization.quantize._propagate_qconfig_helper", "<map>.get", "<builtin>.type"], "torch.ao.quantization.qconfig._assert_valid_qconfig": ["<builtin>.isinstance"], "torch.ao.quantization.qconfig._add_module_to_qconfig_obs_ctr": ["torch.ao.quantization.qconfig._add_module_to_qconfig_obs_ctr.configure_constructor_to_put_obs_on_module_device"], "torch.ao.quantization.qconfig._add_module_to_qconfig_obs_ctr.configure_constructor_to_put_obs_on_module_device": [], "torch.ao.quantization.quantize.convert": ["torch.ao.quantization.quantize._convert", "copy.deepcopy", "torch.ao.quantization.quantize._remove_qconfig"], "torch.ao.quantization.quantize._convert": ["torch.ao.quantization.quantize._convert", "<builtin>.isinstance", "copy.deepcopy", "torch.ao.quantization.quantize.swap_module", "torch.nn.utils.parametrize.type_before_parametrizations", "torch.ao.quantization.quantization_mappings.get_default_static_quant_module_mappings", "<map>.get", "torch.ao.quantization.quantization_mappings.get_default_static_quant_reference_module_mappings", "<map>.items", "torch.ao.quantization.quantize.get_default_custom_config_dict"], "torch.ao.quantization.quantization_mappings.get_default_static_quant_reference_module_mappings": ["copy.deepcopy"], "torch.ao.quantization.quantization_mappings.get_default_static_quant_module_mappings": ["copy.deepcopy"], "torch.ao.quantization.quantize.get_default_custom_config_dict": [], "torch.nn.utils.parametrize.type_before_parametrizations": ["torch.nn.utils.parametrize.is_parametrized", "<builtin>.type"], "torch.nn.utils.parametrize.is_parametrized": ["<builtin>.len", "<builtin>.isinstance", "<builtin>.getattr"], "torch.ao.quantization.quantize.swap_module": ["<builtin>.iter", "torch.nn.utils.parametrize.type_before_parametrizations", "torch.ao.quantization.quantize._get_unique_devices_", "<builtin>.hasattr", "<builtin>.len", "<builtin>.next", "torch.ao.quantization.utils.get_qparam_dict", "inspect.signature"], "torch.ao.quantization.utils.get_qparam_dict": ["<builtin>.RuntimeError", "<builtin>.isinstance", "<builtin>.hasattr", "torch.ao.quantization.utils.is_per_channel", "torch.ao.quantization.utils.is_per_tensor", "<builtin>.getattr"], "torch.ao.quantization.utils.is_per_tensor": [], "torch.ao.quantization.utils.is_per_channel": [], "torch.ao.quantization.quantize._get_unique_devices_": [], "torch.ao.quantization.quantize._remove_qconfig": ["torch.ao.quantization.quantize._remove_activation_post_process", "torch.ao.quantization.quantize._remove_qconfig", "<builtin>.hasattr"], "torch.ao.quantization.quantize._remove_activation_post_process": ["torch.ao.quantization.quantize._remove_activation_post_process.remove_hooks", "torch.ao.quantization.observer._is_activation_post_process", "<builtin>.delattr", "<builtin>.hasattr"], "torch.ao.quantization.observer._is_activation_post_process": ["torch.ao.quantization.observer._is_observer_script_module", "<builtin>.isinstance"], "torch.ao.quantization.observer._is_observer_script_module": ["re.sub", "<builtin>.isinstance"], "torch.ao.quantization.quantize._remove_activation_post_process.remove_hooks": ["<builtin>.set"], "easyocr.detection_db.get_detector": ["torch.nn.parallel.data_parallel.DataParallel.__init__", "<builtin>.ValueError", "easyocr.DBNet.DBNet.DBNet.initialize_model", "ntpath.join", "posixpath.join", "torch.nn.modules.module.Module.to", "torch.ao.quantization.quantize.quantize_dynamic", "easyocr.DBNet.DBNet.DBNet.__init__"], "easyocr.DBNet.DBNet.DBNet.__init__": ["genericpath.isfile", "ntpath.dirname", "<builtin>.ValueError", "easyocr.DBNet.DBNet.DBNet.initialize_model", "ntpath.join", "posixpath.join", "easyocr.DBNet.DBNet.DBNet.set_relative_import_path", "<builtin>.open", "posixpath.dirname", "<builtin>.FileNotFoundError", "yaml.safe_load"], "yaml.safe_load": ["yaml.load"], "yaml.loader.SafeLoader.__init__": ["yaml.constructor.BaseConstructor.__init__", "yaml.scanner.Scanner.__init__", "yaml.parser.Parser.__init__", "yaml.reader.Reader.__init__", "yaml.resolver.BaseResolver.__init__", "yaml.composer.Composer.__init__"], "easyocr.DBNet.DBNet.DBNet.set_relative_import_path": ["<builtin>.isinstance", "easyocr.DBNet.DBNet.DBNet.set_relative_import_path"], "easyocr.DBNet.DBNet.DBNet.initialize_model": ["<builtin>.isinstance", "easyocr.DBNet.DBNet.DBNet.construct_model", "easyocr.DBNet.DBNet.DBNet.load_weight"], "easyocr.DBNet.DBNet.DBNet.construct_model": ["easyocr.DBNet.model.constructor.Configurable.construct_class_from_config"], "easyocr.DBNet.model.constructor.Configurable.construct_class_from_config": ["easyocr.DBNet.model.constructor.Configurable.extract_class_from_args"], "easyocr.DBNet.model.constructor.Configurable.extract_class_from_args": ["importlib.import_module", "<builtin>.getattr"], "easyocr.DBNet.DBNet.DBNet.load_weight": ["torch.serialization.load", "<builtin>.RuntimeError"], "easyocr.recognition.get_recognizer": ["torch.nn.parallel.data_parallel.DataParallel.__init__", "<builtin>.len", "torch.ao.quantization.quantize.quantize_dynamic", "torch.nn.modules.module.Module.to", "collections.OrderedDict.__init__", "importlib.import_module", "torch.serialization.load", "easyocr.utils.CTCLabelConverter.__init__"], "easyocr.utils.CTCLabelConverter.__init__": ["<builtin>.enumerate", "<builtin>.len", "<builtin>.open", "<builtin>.list", "<map>.items"], "easyocr.easyocr.Reader.readtext": ["easyocr.easyocr.Reader.recognize", "easyocr.utils.reformat_input", "easyocr.easyocr.Reader.detect"], "easyocr.utils.reformat_input": ["urllib.request.urlretrieve", "posixpath.expanduser", "numpy._core.fromnumeric.squeeze", "ntpath.expanduser", "<builtin>.ValueError", "<builtin>.len", "easyocr.utils.printProgressBar", "<str>.startswith", "easyocr.imgproc.loadImage", "<builtin>.type"], "numpy._core.fromnumeric.squeeze": ["numpy._core.fromnumeric._wrapit"], "numpy._core.fromnumeric._wrapit": ["<builtin>.getattr"], "easyocr.imgproc.loadImage": ["<builtin>.len"], "easyocr.easyocr.Reader.detect": ["append", "easyocr.detection_db.get_textbox", "easyocr.detection.get_textbox", "easyocr.utils.reformat_input", "easyocr.utils.group_text_box", "<builtin>.max", "easyocr.utils.diff"], "easyocr.detection.get_textbox": ["<builtin>.enumerate", "easyocr.detection.test_net", "<builtin>.sorted", "append"], "easyocr.detection.test_net": ["append", "<builtin>.range", "<builtin>.isinstance", "<builtin>.len", "easyocr.craft_utils.adjustResultCoordinates", "easyocr.imgproc.resize_aspect_ratio", "easyocr.imgproc.normalizeMeanVariance", "easyocr.craft_utils.getDetBoxes", "<builtin>.list", "torch.autograd.grad_mode.no_grad.__init__", "numpy._core.fromnumeric.transpose"], "easyocr.imgproc.resize_aspect_ratio": ["<builtin>.int", "<builtin>.max"], "easyocr.imgproc.normalizeMeanVariance": [], "numpy._core.fromnumeric.transpose": ["numpy._core.fromnumeric._wrapfunc"], "numpy._core.fromnumeric._wrapfunc": ["numpy._core.fromnumeric._wrapit", "<builtin>.getattr"], "easyocr.craft_utils.getDetBoxes": ["easyocr.craft_utils.getPoly_core", "<builtin>.Exception", "easyocr.craft_utils.getDetBoxes_core", "<builtin>.len"], "easyocr.craft_utils.getDetBoxes_core": ["append", "<builtin>.range", "numpy._core.multiarray.where", "<builtin>.min", "<builtin>.int", "numpy._core.numeric.roll", "numpy._core.fromnumeric.max", "numpy.linalg._linalg.norm", "<builtin>.abs", "numpy._core.fromnumeric.clip", "scipy.ndimage._measurements.label", "<builtin>.max"], "numpy._core.fromnumeric.clip": ["numpy._core.fromnumeric._wrapfunc", "<builtin>.TypeError", "<builtin>.ValueError"], "numpy._core.fromnumeric.max": ["numpy._core.fromnumeric._wrapreduction"], "numpy._core.fromnumeric._wrapreduction": ["<builtin>.getattr", "<builtin>.type"], "scipy.ndimage._measurements.label": ["scipy.ndimage._morphology.generate_binary_structure", "<builtin>.RuntimeError", "<builtin>.isinstance", "<builtin>.ValueError", "numpy._core.fromnumeric.all", "numpy.lib._type_check_impl.iscomplexobj", "<builtin>.TypeError"], "numpy.lib._type_check_impl.iscomplexobj": ["<builtin>.issubclass"], "scipy.ndimage._morphology.generate_binary_structure": ["numpy._core.numeric.indices"], "numpy._core.numeric.indices": ["<builtin>.len", "<builtin>.enumerate", "<builtin>.tuple"], "numpy._core.fromnumeric.all": ["numpy._core.fromnumeric._wrapreduction_any_all"], "numpy._core.fromnumeric._wrapreduction_any_all": ["<builtin>.getattr", "<builtin>.type"], "numpy._core.multiarray.where": [], "numpy._core.numeric.roll": ["<builtin>.range", "<builtin>.int", "<builtin>.slice", "<builtin>.ValueError", "numpy._core.multiarray.empty_like", "numpy._core.numeric.roll", "<builtin>.zip", "numpy._core.numeric.normalize_axis_tuple"], "numpy._core.numeric.normalize_axis_tuple": ["<builtin>.type", "<builtin>.ValueError", "<builtin>.len", "<builtin>.set", "operator.index", "<builtin>.tuple"], "numpy._core.multiarray.empty_like": [], "numpy.linalg._linalg.norm": ["<builtin>.range", "<builtin>.isinstance", "<builtin>.int", "numpy.linalg._linalg._multi_svd_norm", "<builtin>.ValueError", "numpy.linalg._linalg.isComplexType", "<builtin>.len", "<builtin>.abs", "<builtin>.list", "<builtin>.issubclass", "<builtin>.TypeError", "<builtin>.tuple"], "numpy.linalg._linalg.isComplexType": ["<builtin>.issubclass"], "numpy.linalg._linalg._multi_svd_norm": ["numpy.linalg._linalg.svd", "numpy._core.numeric.moveaxis", "numpy._core.fromnumeric.amax", "numpy._core.fromnumeric.sum", "numpy._core.fromnumeric.amin"], "numpy._core.numeric.moveaxis": ["<builtin>.range", "<builtin>.sorted", "<builtin>.ValueError", "<builtin>.len", "<builtin>.zip", "numpy._core.numeric.normalize_axis_tuple"], "numpy.linalg._linalg.svd": ["numpy.linalg._linalg._assert_stacked_2d", "numpy._core.fromnumeric.argsort", "numpy.linalg._linalg._makearray", "numpy.lib._shape_base_impl.take_along_axis", "numpy.linalg._linalg.isComplexType", "numpy.linalg._linalg.transpose", "numpy._core._ufunc_config.errstate.__init__", "numpy.linalg._linalg.eigvalsh", "<builtin>.abs", "numpy.linalg._linalg._realType", "numpy.linalg._linalg.eigh", "numpy.linalg._linalg._commonType", "numpy._core.fromnumeric.sort"], "numpy.linalg._linalg._makearray": ["<builtin>.getattr"], "numpy.linalg._linalg.eigvalsh": ["numpy.linalg._linalg._assert_stacked_2d", "numpy.linalg._linalg._makearray", "<builtin>.ValueError", "<str>.upper", "numpy.linalg._linalg.isComplexType", "numpy._core._ufunc_config.errstate.__init__", "numpy.linalg._linalg._realType", "numpy.linalg._linalg._assert_stacked_square", "numpy.linalg._linalg._commonType"], "numpy.linalg._linalg._assert_stacked_2d": [], "numpy.linalg._linalg._assert_stacked_square": [], "numpy.linalg._linalg._commonType": ["numpy.linalg._linalg._realType", "<builtin>.issubclass", "<builtin>.TypeError", "numpy.linalg._linalg.isComplexType"], "numpy.linalg._linalg._realType": ["<map>.get"], "numpy._core.fromnumeric.sort": [], "numpy.linalg._linalg.eigh": ["numpy.linalg._linalg._assert_stacked_2d", "numpy.linalg._linalg._makearray", "<builtin>.ValueError", "<str>.upper", "numpy.linalg._linalg.isComplexType", "numpy._core._ufunc_config.errstate.__init__", "numpy.linalg._linalg._realType", "numpy.linalg._linalg._assert_stacked_square", "numpy.linalg._linalg._commonType"], "numpy._core.fromnumeric.argsort": ["numpy._core.fromnumeric._wrapfunc"], "numpy.lib._shape_base_impl.take_along_axis": ["numpy.lib._shape_base_impl._make_along_axis_idx", "<builtin>.ValueError", "<builtin>.len"], "numpy.lib._shape_base_impl._make_along_axis_idx": ["append", "<builtin>.range", "<builtin>.ValueError", "<builtin>.len", "<builtin>.zip", "<builtin>.list", "<builtin>.IndexError", "numpy._core.numerictypes.issubdtype", "<builtin>.tuple"], "numpy._core.numerictypes.issubdtype": ["<builtin>.issubclass", "numpy._core.numerictypes.issubclass_"], "numpy._core.numerictypes.issubclass_": ["<builtin>.issubclass"], "<builtin>.IndexError": [], "numpy.linalg._linalg.transpose": ["numpy._core.fromnumeric.swapaxes"], "numpy._core.fromnumeric.swapaxes": ["numpy._core.fromnumeric._wrapfunc"], "numpy._core.fromnumeric.sum": ["<builtin>.isinstance", "warnings.warn", "numpy._core.fromnumeric._wrapreduction", "numpy._core.fromnumeric.sum"], "numpy._core.fromnumeric.amin": ["numpy._core.fromnumeric._wrapreduction"], "numpy._core.fromnumeric.amax": ["numpy._core.fromnumeric._wrapreduction"], "easyocr.craft_utils.getPoly_core": ["append", "<builtin>.range", "numpy._core.multiarray.where", "<builtin>.int", "<builtin>.enumerate", "<builtin>.len", "numpy._core.fromnumeric.max", "<builtin>.reversed", "numpy.linalg._linalg.norm", "numpy.linalg._linalg.inv", "numpy.lib._function_base_impl.median", "numpy._core.fromnumeric.sum"], "numpy.linalg._linalg.inv": ["numpy.linalg._linalg._assert_stacked_2d", "numpy.linalg._linalg._makearray", "numpy.linalg._linalg.isComplexType", "numpy._core._ufunc_config.errstate.__init__", "numpy.linalg._linalg._assert_stacked_square", "numpy.linalg._linalg._commonType"], "numpy.lib._function_base_impl.median": ["numpy.lib._function_base_impl._ureduce"], "numpy.lib._function_base_impl._ureduce": ["<builtin>.range", "<builtin>.sorted", "<builtin>.slice", "<builtin>.enumerate", "<builtin>.len", "<builtin>.set", "numpy.lib._function_base_impl._median", "numpy._core.numeric.normalize_axis_tuple", "<builtin>.tuple"], "numpy.lib._function_base_impl._median": ["numpy._core.fromnumeric.partition", "append", "<builtin>.slice", "numpy._core.fromnumeric.mean", "numpy._core.numerictypes.issubdtype", "numpy.lib._utils_impl._median_nancheck", "<builtin>.tuple"], "numpy._core.fromnumeric.partition": [], "numpy._core.fromnumeric.mean": ["numpy._core._methods._mean", "<builtin>.type"], "numpy._core._methods._mean": ["numpy._core._ufunc_config._no_nep50_warning", "numpy._core._methods._count_reduce_items", "<builtin>.isinstance", "<builtin>.hasattr", "warnings.warn", "<builtin>.issubclass"], "numpy._core._methods._count_reduce_items": ["numpy.lib._stride_tricks_impl.broadcast_to", "<builtin>.isinstance", "<builtin>.range", "<builtin>.tuple"], "numpy.lib._stride_tricks_impl.broadcast_to": ["numpy.lib._stride_tricks_impl._broadcast_to"], "numpy.lib._stride_tricks_impl._broadcast_to": ["<builtin>.ValueError", "<builtin>.any", "numpy.lib._function_base_impl.iterable", "numpy.lib._stride_tricks_impl._maybe_view_as_subclass", "<builtin>.tuple"], "numpy.lib._stride_tricks_impl._maybe_view_as_subclass": ["<builtin>.type"], "numpy._core._ufunc_config._no_nep50_warning": [], "numpy.lib._utils_impl._median_nancheck": ["<builtin>.isinstance", "numpy._core.multiarray.copyto"], "numpy._core.multiarray.copyto": [], "easyocr.craft_utils.adjustResultCoordinates": ["<builtin>.range", "<builtin>.len"], "easyocr.detection_db.get_textbox": ["<builtin>.RuntimeError", "easyocr.detection_db.test_net"], "easyocr.detection_db.test_net": ["<builtin>.isinstance", "<builtin>.len", "easyocr.DBNet.DBNet.DBNet.resize_image", "<builtin>.zip", "easyocr.DBNet.DBNet.DBNet.normalize_image", "torch.autograd.grad_mode.no_grad.__init__", "numpy._core.fromnumeric.transpose"], "easyocr.DBNet.DBNet.DBNet.resize_image": ["<builtin>.int", "<builtin>.min", "<builtin>.max"], "easyocr.DBNet.DBNet.DBNet.normalize_image": [], "easyocr.utils.group_text_box": ["append", "<builtin>.sorted", "<builtin>.int", "<builtin>.min", "<builtin>.len", "numpy._core.fromnumeric.mean", "numpy.linalg._linalg.norm", "<builtin>.abs", "<builtin>.max"], "easyocr.utils.diff": ["<builtin>.min", "<builtin>.max"], "easyocr.easyocr.Reader.recognize": ["<builtin>.range", "<builtin>.int", "<builtin>.len", "<builtin>.set", "easyocr.utils.merge_to_free", "easyocr.utils.reformat_input", "json.dumps", "easyocr.recognition.get_text", "<builtin>.list", "easyocr.utils.set_result_with_confidence", "bidi.wrapper.get_display", "<builtin>.max", "<builtin>.map", "easyocr.utils.get_image_list", "easyocr.utils.make_rotated_img_list", "easyocr.utils.get_paragraph"], "easyocr.utils.get_image_list": ["easyocr.utils.calculate_ratio", "append", "<builtin>.sorted", "easyocr.utils.compute_ratio_and_resize", "<builtin>.int", "<builtin>.min", "easyocr.utils.four_point_transform", "<builtin>.max"], "easyocr.utils.four_point_transform": ["<builtin>.int", "<builtin>.max"], "easyocr.utils.calculate_ratio": [], "easyocr.utils.compute_ratio_and_resize": ["easyocr.utils.calculate_ratio", "<builtin>.int"], "easyocr.utils.make_rotated_img_list": ["easyocr.utils.calculate_ratio", "<builtin>.max", "scipy.ndimage._interpolation.rotate"], "scipy.ndimage._interpolation.rotate": ["scipy.ndimage._ni_support._get_output", "<builtin>.range", "<builtin>.slice", "<builtin>.ValueError", "<builtin>.len", "<builtin>.float", "<builtin>.all", "numpy.lib._type_check_impl.iscomplexobj", "<builtin>.list", "numpy._core.fromnumeric.ptp", "scipy.ndimage._interpolation.affine_transform", "<builtin>.tuple"], "numpy._core.fromnumeric.ptp": ["numpy._core._methods._ptp"], "numpy._core._methods._ptp": [], "scipy.ndimage._ni_support._get_output": ["<builtin>.RuntimeError", "<builtin>.isinstance", "warnings.warn", "<builtin>.issubclass"], "scipy.ndimage._interpolation.affine_transform": ["scipy.ndimage._ni_support._get_output", "<builtin>.RuntimeError", "<builtin>.dict", "<builtin>.isinstance", "scipy.ndimage._interpolation._prepad_for_spline_filter", "scipy.ndimage._interpolation.spline_filter", "scipy.ndimage._ni_support._extend_mode_to_code", "<builtin>.len", "<builtin>.ValueError", "numpy._core.fromnumeric.all", "numpy.lib._type_check_impl.imag", "numpy.lib._type_check_impl.iscomplexobj", "numpy.lib._type_check_impl.real", "warnings.warn", "scipy.ndimage._interpolation.affine_transform", "scipy.ndimage._ni_support._normalize_sequence"], "numpy.lib._type_check_impl.real": [], "numpy.lib._type_check_impl.imag": [], "scipy.ndimage._interpolation._prepad_for_spline_filter": ["numpy.lib._arraypad_impl.pad"], "numpy.lib._arraypad_impl.pad": ["<builtin>.range", "numpy.lib._index_tricks_impl.ndindex.__init__", "<builtin>.ValueError", "numpy._core.numeric.moveaxis", "<builtin>.any", "<builtin>.set", "numpy.lib._arraypad_impl._as_pairs", "numpy.lib._arraypad_impl._get_edges", "<builtin>.zip", "numpy.lib._arraypad_impl._view_roi", "<builtin>.callable", "numpy.lib._arraypad_impl._set_pad_area", "numpy.lib._arraypad_impl._get_stats", "<builtin>.TypeError", "numpy.lib._arraypad_impl._get_linear_ramps", "numpy.lib._arraypad_impl._pad_simple", "numpy.lib._arraypad_impl._set_wrap_both", "numpy.lib._arraypad_impl._set_reflect_both"], "numpy.lib._arraypad_impl._as_pairs": ["numpy.lib._stride_tricks_impl.broadcast_to", "numpy._core.fromnumeric.round", "<builtin>.ValueError"], "numpy._core.fromnumeric.round": ["numpy._core.fromnumeric._wrapfunc"], "numpy.lib._arraypad_impl._pad_simple": ["<builtin>.slice", "<builtin>.zip", "<builtin>.tuple"], "numpy.lib._index_tricks_impl.ndindex.__init__": ["numpy._core.numeric.zeros_like", "<builtin>.isinstance", "numpy.lib._stride_tricks_impl.as_strided", "<builtin>.len"], "numpy._core.numeric.zeros_like": ["numpy._core.multiarray.copyto", "numpy._core.multiarray.empty_like"], "numpy.lib._stride_tricks_impl.as_strided": ["<builtin>.dict", "numpy.lib._stride_tricks_impl.DummyArray.__init__", "numpy.lib._stride_tricks_impl._maybe_view_as_subclass", "<builtin>.tuple"], "numpy.lib._stride_tricks_impl.DummyArray.__init__": [], "numpy.lib._arraypad_impl._view_roi": ["<builtin>.slice"], "numpy.lib._arraypad_impl._set_wrap_both": ["<builtin>.min", "<builtin>.slice", "numpy.lib._arraypad_impl._slice_at_axis"], "numpy.lib._arraypad_impl._slice_at_axis": ["<builtin>.slice"], "numpy.lib._arraypad_impl._get_edges": ["<builtin>.slice", "numpy.lib._arraypad_impl._slice_at_axis"], "numpy.lib._arraypad_impl._set_pad_area": ["<builtin>.slice", "numpy.lib._arraypad_impl._slice_at_axis"], "numpy.lib._arraypad_impl._set_reflect_both": ["<builtin>.min", "<builtin>.slice", "numpy.lib._arraypad_impl._slice_at_axis"], "numpy.lib._arraypad_impl._get_stats": ["numpy.lib._arraypad_impl._slice_at_axis", "<builtin>.slice", "<builtin>.ValueError", "numpy._core.fromnumeric.amax", "numpy._core.fromnumeric.mean", "numpy.lib._function_base_impl.median", "numpy._core.fromnumeric.amin", "numpy.lib._arraypad_impl._round_if_needed"], "numpy.lib._arraypad_impl._round_if_needed": ["numpy._core.numerictypes.issubdtype"], "numpy.lib._arraypad_impl._get_linear_ramps": ["numpy.lib._arraypad_impl._slice_at_axis", "<builtin>.slice", "numpy.lib._arraypad_impl._get_edges", "<builtin>.zip", "numpy._core.function_base.linspace"], "numpy._core.function_base.linspace": ["numpy._core.fromnumeric.ndim", "<builtin>.ValueError", "numpy._core.numeric.moveaxis", "numpy._core.numeric.isscalar", "numpy._core.numerictypes.issubdtype", "operator.index", "<builtin>.type"], "numpy._core.fromnumeric.ndim": [], "numpy._core.numeric.isscalar": ["<builtin>.isinstance", "<builtin>.type"], "scipy.ndimage._interpolation.spline_filter": ["scipy.ndimage._ni_support._get_output", "<builtin>.RuntimeError", "<builtin>.range", "scipy.ndimage._interpolation.spline_filter", "numpy.lib._type_check_impl.iscomplexobj", "scipy.ndimage._interpolation.spline_filter1d"], "scipy.ndimage._interpolation.spline_filter1d": ["scipy.ndimage._ni_support._get_output", "<builtin>.RuntimeError", "scipy.ndimage._ni_support._extend_mode_to_code", "scipy._lib._util.normalize_axis_index", "numpy.lib._type_check_impl.iscomplexobj", "scipy.ndimage._interpolation.spline_filter1d"], "scipy.ndimage._ni_support._extend_mode_to_code": ["<builtin>.RuntimeError"], "scipy._lib._util.normalize_axis_index": ["numpy.exceptions.AxisError.__init__"], "numpy.exceptions.AxisError.__init__": [], "scipy.ndimage._ni_support._normalize_sequence": ["<builtin>.RuntimeError", "<builtin>.list", "<builtin>.isinstance", "<builtin>.len"], "easyocr.recognition.get_text": ["append", "<builtin>.int", "<builtin>.enumerate", "easyocr.recognition.ListDataset.__init__", "<builtin>.len", "easyocr.recognition.recognizer_predict", "<builtin>.zip", "torch.utils.data.dataloader.DataLoader.__init__", "easyocr.recognition.AlignCollate.__init__"], "easyocr.recognition.AlignCollate.__init__": [], "easyocr.recognition.ListDataset.__init__": ["<builtin>.len"], "torch.utils.data.dataloader.DataLoader.__init__": ["<builtin>.isinstance", "torch.utils.data.dataloader.DataLoader.check_worker_number_rationality", "<builtin>.ValueError", "torch.utils.data.sampler.RandomSampler.__init__", "torch.utils.data.sampler.SequentialSampler.__init__", "torch.utils.data.sampler.BatchSampler.__init__", "torch.utils.data.datapipes.datapipe._IterDataPipeSerializationWrapper.__init__", "<builtin>.bool", "torch.utils.data.graph_settings.apply_shuffle_settings"], "torch.utils.data.datapipes.datapipe._IterDataPipeSerializationWrapper.__init__": ["<builtin>.super"], "torch.utils.data.graph_settings.apply_shuffle_settings": ["warnings.warn", "torch.utils.data.graph.traverse_dps", "torch.utils.data.graph_settings.get_all_graph_pipes", "torch.utils.data.graph_settings._is_shuffle_datapipe"], "torch.utils.data.graph.traverse_dps": ["<builtin>.set", "torch.utils.data.graph._traverse_helper"], "torch.utils.data.graph._traverse_helper": ["<builtin>.RuntimeError", "<builtin>.isinstance", "torch.utils.data.graph._traverse_helper", "torch.utils.data.graph._list_connected_datapipes", "<builtin>.id", "<builtin>.type"], "torch.utils.data.graph._list_connected_datapipes": ["torch.utils._import_utils.dill_available", "pickle._Pickler.dump", "pickle._Pickler.__init__"], "pickle._Pickler.__init__": ["pickle._Framer.__init__", "<builtin>.TypeError", "<builtin>.int", "<builtin>.ValueError"], "pickle._Framer.__init__": [], "pickle._Pickler.dump": ["pickle._Framer.write", "pickle._Framer.end_framing", "<builtin>.hasattr", "pickle._Pickler.save", "pickle._Framer.start_framing"], "pickle._Framer.write": [], "pickle._Framer.start_framing": [], "pickle._Pickler.save": ["<builtin>.type", "pickle._Framer.commit_frame", "pickle._Framer.write", "<builtin>.isinstance", "<map>", "<builtin>.len", "pickle._Pickler.persistent_id", "pickle._Pickler.save_reduce", "pickle._Pickler.save_pers", "pickle._Pickler.save_global", "pickle._Pickler.get", "<builtin>.issubclass", "<map>.get", "<builtin>.getattr"], "pickle._Framer.commit_frame": ["pickle._Framer.write", "<builtin>.len"], "pickle._Pickler.persistent_id": [], "pickle._Pickler.save_pers": ["pickle._Framer.write", "pickle._Pickler.save", "<builtin>.str"], "pickle._Pickler.get": ["<builtin>.repr"], "pickle._Pickler.save_global": ["pickle._Framer.write", "pickle.whichmodule", "pickle._getattribute", "pickle._Pickler.save_reduce", "pickle._Pickler.save", "pickle._Pickler.memoize", "<builtin>.bytes", "<builtin>.__import__", "<builtin>.getattr"], "pickle.whichmodule": ["pickle._getattribute", "<builtin>.getattr"], "pickle._getattribute": ["<builtin>.AttributeError", "<builtin>.getattr"], "pickle._Pickler.save_reduce": ["pickle._Framer.write", "<builtin>.isinstance", "<builtin>.hasattr", "pickle._Pickler._batch_appends", "pickle._Pickler.save", "<builtin>.id", "pickle._Pickler.memoize", "<builtin>.callable", "pickle._Pickler.get", "pickle._Pickler._batch_setitems", "<builtin>.getattr"], "pickle._Pickler.memoize": ["pickle._Framer.write", "pickle._Pickler.put", "<builtin>.id", "<builtin>.len"], "pickle._Pickler.put": ["<builtin>.repr"], "pickle._Pickler._batch_appends": ["pickle._Framer.write", "<builtin>.iter", "<builtin>.len", "pickle._Pickler.save", "<builtin>.list"], "pickle._Pickler._batch_setitems": ["pickle._Framer.write", "<builtin>.iter", "<builtin>.len", "pickle._Pickler.save", "<builtin>.list"], "pickle._Framer.end_framing": ["pickle._Framer.commit_frame"], "torch.utils.data.graph_settings.get_all_graph_pipes": ["<builtin>.set", "torch.utils.data.graph_settings._get_all_graph_pipes_helper"], "torch.utils.data.graph_settings._get_all_graph_pipes_helper": ["torch.utils.data.graph_settings._get_all_graph_pipes_helper"], "torch.utils.data.graph_settings._is_shuffle_datapipe": ["inspect.ismethod", "<builtin>.hasattr"], "torch.utils.data.sampler.SequentialSampler.__init__": [], "torch.utils.data.sampler.RandomSampler.__init__": ["<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.TypeError"], "torch.utils.data.sampler.BatchSampler.__init__": ["<builtin>.isinstance", "<builtin>.ValueError"], "torch.utils.data.dataloader.DataLoader.check_worker_number_rationality": ["<builtin>.len", "warnings.warn", "torch.utils.data.dataloader.DataLoader.check_worker_number_rationality._create_warning_msg", "<builtin>.hasattr"], "torch.utils.data.dataloader.DataLoader.check_worker_number_rationality._create_warning_msg": [], "easyocr.recognition.recognizer_predict": ["torch.autograd.grad_mode.no_grad.__init__"], "easyocr.utils.set_result_with_confidence": ["append", "<builtin>.range", "<builtin>.max", "<builtin>.len"], "bidi.wrapper.get_display": ["<builtin>.isinstance"], "easyocr.utils.get_paragraph": ["append", "<builtin>.int", "<builtin>.min", "<builtin>.len", "<builtin>.set", "numpy._core.fromnumeric.mean", "<builtin>.max"], "easyocr.utils.merge_to_free": ["append", "<builtin>.enumerate", "extend", "<builtin>.len"], "json.dumps": []}