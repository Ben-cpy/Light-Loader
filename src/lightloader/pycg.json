{
    "handler": [
        "handler.handler",
        "<builtin>.print",
        "time.time"
    ],
    "time.time": [],
    "handler.handler": [
        "lxml.html.fromstring",
        "requests.request",
        "time.time",
        "<builtin>.print"
    ],
    "requests.request": [],
    "lxml.html.fromstring": [
        "lxml.html.document_fromstring",
        "<builtin>.isinstance",
        "re.compile.match",
        "<builtin>.len",
        "lxml.html._contains_block_level_tag"
    ],
    "<builtin>.print": [],
    "lxml": [],
    "lxml.get_include": [
        "os.path.isdir",
        "os.listdir",
        "os.path.join"
    ],
    "os.path.join": [],
    "os.listdir": [],
    "os.path.isdir": [],
    "requests": [
        "logging.getLogger.addHandler",
        "logging.getLogger",
        "urllib3.contrib.pyopenssl.inject_into_urllib3",
        "requests._check_cryptography",
        "requests.check_compatibility",
        "logging.NullHandler",
        "warnings.warn",
        "<builtin>.getattr",
        "warnings.simplefilter"
    ],
    "requests.check_compatibility": [
        "<builtin>.int",
        "<builtin>.Exception",
        "<builtin>.len",
        "chardet.__version__.split"
    ],
    "<builtin>.len": [],
    "<builtin>.int": [],
    "chardet.__version__.split": [],
    "<builtin>.Exception": [],
    "requests._check_cryptography": [
        "<builtin>.list",
        "cryptography.__version__.split",
        "warnings.warn",
        "<builtin>.map"
    ],
    "cryptography.__version__.split": [],
    "<builtin>.map": [],
    "<builtin>.list": [],
    "warnings.warn": [],
    "<builtin>.getattr": [],
    "urllib3.contrib.pyopenssl.inject_into_urllib3": [
        "urllib3.contrib.pyopenssl._validate_dependencies_met"
    ],
    "warnings.simplefilter": [],
    "logging.NullHandler": [],
    "logging.getLogger": [],
    "logging.getLogger.addHandler": [],
    "requests.utils": [
        "urllib3.util.request.make_headers",
        "requests.certs.where",
        "re.split",
        "<builtin>.frozenset",
        "contextlib.contextmanager"
    ],
    "requests.certs.where": [],
    "urllib3.util.request.make_headers": [
        "base64.b64encode.decode",
        "urllib3.packages.six.b",
        "base64.b64encode",
        "<builtin>.isinstance"
    ],
    "re.split": [],
    "requests.utils.proxy_bypass_registry": [
        "<builtin>.int",
        "winreg.QueryValueEx",
        "re.match",
        "winreg.OpenKey"
    ],
    "winreg.OpenKey": [],
    "winreg.QueryValueEx": [],
    "re.match": [],
    "requests.utils.proxy_bypass": [
        "urllib.request.proxy_bypass_environment",
        "urllib.request.getproxies_environment",
        "requests.utils.proxy_bypass_registry"
    ],
    "urllib.request.getproxies_environment": [],
    "urllib.request.proxy_bypass_environment": [],
    "requests.utils.dict_to_sequence": [
        "<builtin>.hasattr"
    ],
    "<builtin>.hasattr": [],
    "requests.utils.super_len": [
        "urllib.parse.urljoin.decode.encode.tell",
        "urllib.parse.urlparse._replace.geturl.decode.encode.fileno",
        "urllib.parse.urljoin.upper.decode.tell",
        "urllib.parse.urlparse._replace.geturl.decode.encode.tell",
        "json.dumps.fileno",
        "urllib.parse.quote.encode.tell",
        "urllib.parse.quote.lstrip.decode.upper.encode.fileno",
        "urllib.parse.urlparse._replace.geturl.decode.tell",
        "collections.abc.MutableMapping.upper.fileno",
        "collections.abc.MutableMapping.upper.encode.fileno",
        "re.compile.finditer.group.decode.encode.fileno",
        "urllib.parse.quote.lstrip.decode.upper.seek",
        "urllib.parse.urljoin.seek",
        "urllib.parse.quote.lstrip.decode.encode.fileno",
        "collections.abc.MutableMapping.upper.encode.tell",
        "urllib.parse.quote.decode.lstrip.encode.seek",
        "urlparse.urljoin.decode.upper.seek",
        "urllib.parse.urlunparse.decode.encode.fileno",
        "urllib.parse.quote.lstrip.decode.seek",
        "urllib.parse.urlparse.geturl.upper.decode.seek",
        "urllib.parse.urlparse._replace.geturl.upper.decode.encode.tell",
        "urllib.parse.quote.lstrip.upper.decode.tell",
        "urllib.parse.urljoin.upper.seek",
        "urllib.parse.quote.decode.lstrip.tell",
        "json.dumps.encode.tell",
        "urllib.parse.urljoin.decode.encode.seek",
        "urllib.parse.quote.tell",
        "urllib.parse.quote.upper.encode.fileno",
        "urllib.parse.urlunparse.decode.encode.seek",
        "re.compile.finditer.group.encode.tell",
        "collections.abc.MutableMapping.upper.decode.seek",
        "collections.abc.MutableMapping.decode.upper.encode.fileno",
        "json.dumps.tell",
        "base64.b64encode.strip.decode.tell",
        "urllib.parse.urlparse._replace.geturl.tell",
        "base64.b64encode.strip.upper.fileno",
        "urllib.parse.quote.lstrip.seek",
        "base64.b64encode.strip.upper.decode.seek",
        "collections.abc.MutableMapping.upper.encode.seek",
        "urllib.parse.quote.decode.lstrip.upper.encode.tell",
        "urlparse.urljoin.decode.tell",
        "urllib.parse.urlparse.geturl.decode.encode.tell",
        "urlparse.urljoin.encode.tell",
        "urllib.parse.urlparse.geturl.decode.upper.encode.fileno",
        "urllib.parse.urlunparse.upper.decode.tell",
        "collections.abc.MutableMapping.upper.decode.tell",
        "re.compile.finditer.group.decode.upper.seek",
        "collections.abc.MutableMapping.encode.fileno",
        "base64.b64encode.strip.decode.upper.fileno",
        "urllib.parse.urlparse._replace.geturl.decode.upper.tell",
        "collections.abc.MutableMapping.decode.upper.fileno",
        "urllib.parse.urljoin.upper.decode.encode.tell",
        "urllib.parse.urlunparse.upper.seek",
        "urllib.parse.quote.lstrip.upper.decode.encode.fileno",
        "re.compile.finditer.group.decode.encode.tell",
        "urllib.parse.urljoin.upper.encode.tell",
        "collections.abc.MutableMapping.decode.encode.seek",
        "urllib.parse.quote.lstrip.decode.encode.seek",
        "urllib.parse.quote.decode.lstrip.upper.tell",
        "urllib.parse.urlparse._replace.geturl.decode.seek",
        "urllib.parse.urljoin.decode.encode.fileno",
        "urllib.parse.urljoin.upper.decode.seek",
        "urllib.parse.urlunparse.encode.tell",
        "urllib.parse.quote.decode.upper.seek",
        "urlparse.urljoin.upper.encode.seek",
        "urllib.parse.urljoin.upper.encode.fileno",
        "base64.b64encode.strip.seek",
        "urllib.parse.quote.lstrip.encode.fileno",
        "re.compile.finditer.group.upper.decode.seek",
        "urllib.parse.urlparse._replace.geturl.upper.fileno",
        "urllib.parse.urlparse._replace.geturl.upper.encode.fileno",
        "urlparse.urljoin.fileno",
        "urllib.parse.quote.lstrip.upper.decode.encode.tell",
        "collections.abc.MutableMapping.decode.seek",
        "urllib.parse.urlparse._replace.geturl.upper.tell",
        "urllib.parse.urlunparse.seek",
        "re.compile.finditer.group.upper.decode.encode.tell",
        "simplejson.dumps.seek",
        "json.dumps.encode.seek",
        "urlparse.urljoin.encode.seek",
        "urlparse.urljoin.decode.upper.encode.seek",
        "re.compile.finditer.group.upper.decode.encode.seek",
        "urllib.parse.urlunparse.decode.fileno",
        "urllib.parse.urlparse.geturl.upper.tell",
        "urllib.parse.urlparse._replace.geturl.upper.decode.fileno",
        "urlparse.urljoin.upper.decode.tell",
        "collections.abc.MutableMapping.encode.tell",
        "urllib.parse.urlparse._replace.geturl.decode.upper.fileno",
        "urllib.parse.urlparse.geturl.decode.fileno",
        "re.compile.finditer.group.decode.upper.encode.seek",
        "simplejson.dumps.tell",
        "urllib.parse.urlunparse.tell",
        "collections.abc.MutableMapping.upper.tell",
        "urllib.parse.urlencode.fileno",
        "urllib.parse.quote.decode.lstrip.encode.fileno",
        "urllib.parse.urlencode.tell",
        "simplejson.dumps.encode.tell",
        "urllib.parse.urlparse.geturl.decode.tell",
        "urlparse.urljoin.decode.upper.encode.fileno",
        "urllib.parse.urlunparse.decode.upper.encode.seek",
        "urllib.parse.quote.lstrip.encode.seek",
        "urlparse.urljoin.decode.seek",
        "urllib.parse.urlparse.geturl.upper.seek",
        "re.compile.finditer.group.seek",
        "urlparse.urljoin.upper.decode.encode.tell",
        "collections.abc.MutableMapping.decode.fileno",
        "urllib.parse.quote.decode.upper.encode.seek",
        "urllib.parse.quote.decode.seek",
        "urllib.parse.quote.upper.decode.encode.seek",
        "urllib.parse.urljoin.tell",
        "re.compile.finditer.group.upper.encode.fileno",
        "urllib.parse.quote.lstrip.decode.upper.encode.tell",
        "urllib.parse.urlparse.geturl.decode.upper.tell",
        "urllib.parse.urlparse._replace.geturl.fileno",
        "urllib.parse.urljoin.decode.upper.fileno",
        "re.compile.finditer.group.upper.decode.tell",
        "urllib.parse.urlparse._replace.geturl.seek",
        "urllib.parse.urlparse.geturl.encode.fileno",
        "urllib.parse.quote.decode.lstrip.upper.encode.fileno",
        "urllib.parse.urlparse.geturl.upper.decode.encode.seek",
        "urllib.parse.urlunparse.upper.fileno",
        "urllib.parse.quote.lstrip.decode.encode.tell",
        "urllib.parse.quote.lstrip.decode.upper.encode.seek",
        "urllib.parse.quote.upper.fileno",
        "urllib.parse.urljoin.encode.fileno",
        "re.compile.finditer.group.tell",
        "re.compile.finditer.group.decode.seek",
        "urllib.parse.urlunparse.decode.tell",
        "urllib.parse.urlparse.geturl.upper.encode.seek",
        "re.compile.finditer.group.upper.seek",
        "urllib.parse.urlparse.geturl.decode.upper.fileno",
        "base64.b64encode.strip.upper.decode.fileno",
        "collections.abc.MutableMapping.decode.upper.encode.seek",
        "urlparse.urljoin.upper.fileno",
        "urllib.parse.quote.upper.decode.encode.tell",
        "urllib.parse.quote.upper.decode.fileno",
        "urllib.parse.urlunparse.decode.upper.fileno",
        "collections.abc.MutableMapping.encode.seek",
        "urllib.parse.urlunparse.encode.seek",
        "urllib.parse.urlparse.geturl.tell",
        "base64.b64encode.strip.fileno",
        "urllib.parse.urlparse.geturl.upper.decode.encode.tell",
        "urllib.parse.urlparse._replace.geturl.encode.tell",
        "urllib.parse.urlparse.geturl.seek",
        "urllib.parse.urlunparse.decode.upper.encode.fileno",
        "<builtin>.max",
        "urllib.parse.quote.lstrip.upper.decode.encode.seek",
        "urllib.parse.urlparse.geturl.decode.seek",
        "urllib.parse.quote.upper.decode.seek",
        "urllib.parse.urlparse._replace.geturl.upper.encode.tell",
        "simplejson.dumps.encode.fileno",
        "urllib.parse.urlparse._replace.geturl.upper.decode.encode.fileno",
        "collections.abc.MutableMapping.upper.decode.fileno",
        "urllib.parse.urlparse.geturl.upper.decode.encode.fileno",
        "base64.b64encode.strip.upper.tell",
        "urllib.parse.urlparse._replace.geturl.upper.decode.seek",
        "urllib.parse.quote.decode.lstrip.upper.seek",
        "urllib.parse.urlunparse.fileno",
        "urllib.parse.urlunparse.upper.decode.seek",
        "urlparse.urljoin.decode.encode.seek",
        "urllib.parse.quote.lstrip.upper.decode.fileno",
        "urllib.parse.urlunparse.upper.decode.encode.seek",
        "urllib.parse.quote.decode.tell",
        "urllib.parse.urlunparse.upper.tell",
        "urllib.parse.urljoin.fileno",
        "urllib.parse.quote.lstrip.upper.tell",
        "urllib.parse.quote.lstrip.fileno",
        "urllib.parse.urljoin.decode.upper.encode.fileno",
        "urllib.parse.quote.upper.tell",
        "collections.abc.MutableMapping.upper.decode.encode.tell",
        "<builtin>.hasattr",
        "urllib.parse.urlencode.seek",
        "collections.abc.MutableMapping.decode.encode.tell",
        "urllib.parse.quote.lstrip.encode.tell",
        "urllib.parse.urljoin.decode.fileno",
        "urllib.parse.urlparse._replace.geturl.encode.fileno",
        "urllib.parse.urlunparse.upper.decode.encode.tell",
        "urllib.parse.urljoin.upper.tell",
        "urllib.parse.urljoin.upper.encode.seek",
        "urllib.parse.quote.decode.lstrip.upper.fileno",
        "collections.abc.MutableMapping.upper.decode.encode.fileno",
        "urllib.parse.quote.decode.lstrip.upper.encode.seek",
        "urlparse.urljoin.upper.decode.seek",
        "re.compile.finditer.group.decode.tell",
        "urllib.parse.urlparse._replace.geturl.upper.encode.seek",
        "urllib.parse.urlunparse.upper.decode.fileno",
        "urllib.parse.urlunparse.encode.fileno",
        "re.compile.finditer.group.encode.fileno",
        "urllib.parse.urljoin.decode.upper.seek",
        "warnings.warn",
        "urllib.parse.urlunparse.decode.encode.tell",
        "urllib.parse.urlparse.geturl.upper.encode.fileno",
        "urllib.parse.urlparse.geturl.upper.decode.fileno",
        "urllib.parse.quote.decode.upper.tell",
        "re.compile.finditer.group.decode.encode.seek",
        "collections.abc.MutableMapping.tell",
        "urlparse.urljoin.upper.encode.fileno",
        "urllib.parse.quote.encode.fileno",
        "urllib.parse.urlparse.geturl.upper.fileno",
        "re.compile.finditer.group.encode.seek",
        "urllib.parse.urlparse.geturl.decode.upper.seek",
        "json.dumps.encode.fileno",
        "urlparse.urljoin.seek",
        "base64.b64encode.strip.decode.seek",
        "json.dumps.seek",
        "collections.abc.MutableMapping.seek",
        "urllib.parse.urlunparse.upper.encode.seek",
        "urllib.parse.quote.decode.upper.encode.fileno",
        "urllib.parse.quote.upper.seek",
        "urlparse.urljoin.decode.encode.tell",
        "collections.abc.MutableMapping.upper.seek",
        "urllib.parse.urljoin.upper.decode.encode.seek",
        "urllib.parse.quote.decode.encode.fileno",
        "urllib.parse.urlparse._replace.geturl.decode.fileno",
        "urllib.parse.quote.decode.encode.seek",
        "re.compile.finditer.group.fileno",
        "collections.abc.MutableMapping.decode.upper.encode.tell",
        "re.compile.finditer.group.upper.encode.seek",
        "urllib.parse.urlunparse.upper.decode.encode.fileno",
        "urllib.parse.urlparse.geturl.encode.seek",
        "urllib.parse.quote.lstrip.decode.fileno",
        "urlparse.urljoin.decode.encode.fileno",
        "urlparse.urljoin.upper.decode.fileno",
        "collections.abc.MutableMapping.decode.encode.fileno",
        "urllib.parse.urljoin.decode.upper.encode.seek",
        "urllib.parse.quote.lstrip.upper.encode.seek",
        "urllib.parse.urljoin.decode.seek",
        "urllib.parse.urlunparse.upper.encode.fileno",
        "simplejson.dumps.fileno",
        "urllib.parse.quote.decode.lstrip.fileno",
        "urllib.parse.quote.decode.upper.fileno",
        "re.compile.finditer.group.decode.upper.tell",
        "urllib.parse.quote.lstrip.tell",
        "urlparse.urljoin.upper.seek",
        "base64.b64encode.strip.decode.fileno",
        "urllib.parse.urlparse._replace.geturl.encode.seek",
        "base64.b64encode.strip.upper.seek",
        "urllib.parse.urlparse._replace.geturl.decode.upper.seek",
        "urllib.parse.urlparse._replace.geturl.upper.decode.tell",
        "urllib.parse.quote.lstrip.upper.seek",
        "collections.abc.MutableMapping.fileno",
        "base64.b64encode.strip.upper.decode.tell",
        "re.compile.finditer.group.decode.fileno",
        "urllib.parse.urlunparse.upper.encode.tell",
        "urllib.parse.urlparse.geturl.upper.decode.tell",
        "urlparse.urljoin.decode.upper.tell",
        "urllib.parse.urlunparse.decode.seek",
        "urlparse.urljoin.decode.upper.fileno",
        "urllib.parse.urlparse.geturl.decode.encode.seek",
        "collections.abc.MutableMapping.decode.tell",
        "urllib.parse.quote.lstrip.upper.encode.fileno",
        "urlparse.urljoin.upper.tell",
        "urllib.parse.quote.decode.encode.tell",
        "urlparse.urljoin.upper.encode.tell",
        "<builtin>.len",
        "urlparse.urljoin.upper.decode.encode.seek",
        "urllib.parse.quote.upper.encode.tell",
        "urllib.parse.quote.lstrip.upper.encode.tell",
        "re.compile.finditer.group.upper.decode.encode.fileno",
        "urllib.parse.quote.upper.decode.encode.fileno",
        "urllib.parse.quote.lstrip.decode.tell",
        "urlparse.urljoin.tell",
        "re.compile.finditer.group.decode.upper.encode.fileno",
        "urllib.parse.urlparse.geturl.encode.tell",
        "re.compile.finditer.group.decode.upper.encode.tell",
        "urllib.parse.quote.decode.lstrip.encode.tell",
        "re.compile.finditer.group.upper.tell",
        "collections.abc.MutableMapping.upper.decode.encode.seek",
        "urllib.parse.urljoin.encode.seek",
        "base64.b64encode.strip.tell",
        "urllib.parse.quote.decode.upper.encode.tell",
        "urllib.parse.urljoin.decode.upper.encode.tell",
        "urllib.parse.urljoin.decode.upper.tell",
        "simplejson.dumps.encode.seek",
        "urllib.parse.urlparse.geturl.decode.upper.encode.tell",
        "urllib.parse.quote.upper.encode.seek",
        "urllib.parse.quote.decode.fileno",
        "urllib.parse.urlparse._replace.geturl.upper.decode.encode.seek",
        "urllib.parse.quote.lstrip.upper.fileno",
        "urllib.parse.quote.seek",
        "urllib.parse.urljoin.upper.decode.fileno",
        "urllib.parse.urlunparse.decode.upper.seek",
        "base64.b64encode.strip.decode.upper.tell",
        "urllib.parse.urlunparse.decode.upper.tell",
        "urllib.parse.urlparse._replace.geturl.decode.upper.encode.fileno",
        "urlparse.urljoin.upper.decode.encode.fileno",
        "collections.abc.MutableMapping.decode.upper.seek",
        "urllib.parse.urlparse._replace.geturl.decode.upper.encode.tell",
        "re.compile.finditer.group.decode.upper.fileno",
        "urllib.parse.urlparse.geturl.upper.encode.tell",
        "urllib.parse.urlparse.geturl.decode.encode.fileno",
        "re.compile.finditer.group.upper.decode.fileno",
        "os.fstat",
        "urllib.parse.quote.encode.seek",
        "re.compile.finditer.group.upper.encode.tell",
        "urllib.parse.urljoin.decode.tell",
        "re.compile.finditer.group.upper.fileno",
        "urllib.parse.urlunparse.decode.upper.encode.tell",
        "urllib.parse.urlparse.geturl.fileno",
        "urllib.parse.urlparse._replace.geturl.decode.upper.encode.seek",
        "urllib.parse.quote.lstrip.decode.upper.fileno",
        "urllib.parse.urljoin.upper.decode.encode.fileno",
        "urllib.parse.quote.lstrip.upper.decode.seek",
        "urlparse.urljoin.encode.fileno",
        "urllib.parse.urljoin.upper.fileno",
        "urllib.parse.urlparse._replace.geturl.decode.encode.seek",
        "urlparse.urljoin.decode.fileno",
        "collections.abc.MutableMapping.decode.upper.tell",
        "urllib.parse.urlparse._replace.geturl.upper.seek",
        "urlparse.urljoin.decode.upper.encode.tell",
        "urllib.parse.quote.lstrip.decode.upper.tell",
        "urllib.parse.urlparse.geturl.decode.upper.encode.seek",
        "urllib.parse.urljoin.encode.tell",
        "urllib.parse.quote.upper.decode.tell",
        "urllib.parse.quote.decode.lstrip.seek",
        "base64.b64encode.strip.decode.upper.seek",
        "urllib.parse.quote.fileno"
    ],
    "urllib.parse.quote.decode.upper.fileno": [],
    "urllib.parse.urlparse.geturl.upper.decode.encode.fileno": [],
    "urllib.parse.urljoin.decode.upper.fileno": [],
    "re.compile.finditer.group.encode.fileno": [],
    "urllib.parse.urlparse._replace.geturl.decode.encode.fileno": [],
    "urllib.parse.urlunparse.decode.fileno": [],
    "collections.abc.MutableMapping.encode.fileno": [],
    "urllib.parse.urlparse._replace.geturl.upper.decode.fileno": [],
    "urllib.parse.urlparse.geturl.encode.fileno": [],
    "urllib.parse.urlparse.geturl.upper.encode.fileno": [],
    "urllib.parse.urlparse.geturl.upper.decode.fileno": [],
    "json.dumps.fileno": [],
    "base64.b64encode.strip.decode.fileno": [],
    "urllib.parse.quote.decode.lstrip.upper.encode.fileno": [],
    "urllib.parse.quote.lstrip.decode.upper.encode.fileno": [],
    "collections.abc.MutableMapping.upper.fileno": [],
    "collections.abc.MutableMapping.upper.encode.fileno": [],
    "urllib.parse.urlunparse.fileno": [],
    "urllib.parse.quote.decode.fileno": [],
    "re.compile.finditer.group.decode.encode.fileno": [],
    "urllib.parse.urlunparse.upper.fileno": [],
    "urlparse.urljoin.upper.encode.fileno": [],
    "urllib.parse.quote.encode.fileno": [],
    "urllib.parse.urlparse.geturl.upper.fileno": [],
    "base64.b64encode.strip.decode.upper.fileno": [],
    "urllib.parse.quote.lstrip.decode.encode.fileno": [],
    "collections.abc.MutableMapping.fileno": [],
    "urllib.parse.urlparse._replace.geturl.decode.upper.fileno": [],
    "urllib.parse.quote.upper.fileno": [],
    "json.dumps.encode.fileno": [],
    "urllib.parse.urlunparse.decode.encode.fileno": [],
    "urllib.parse.urlparse.geturl.decode.fileno": [],
    "collections.abc.MutableMapping.decode.upper.fileno": [],
    "urllib.parse.quote.lstrip.upper.fileno": [],
    "urllib.parse.urljoin.encode.fileno": [],
    "urllib.parse.quote.lstrip.upper.decode.fileno": [],
    "urllib.parse.quote.lstrip.upper.decode.encode.fileno": [],
    "re.compile.finditer.group.decode.fileno": [],
    "urllib.parse.urljoin.upper.decode.fileno": [],
    "urllib.parse.urlparse.geturl.decode.upper.fileno": [],
    "urllib.parse.quote.decode.upper.encode.fileno": [],
    "base64.b64encode.strip.upper.decode.fileno": [],
    "urllib.parse.urlparse._replace.geturl.decode.upper.encode.fileno": [],
    "urlparse.urljoin.upper.decode.encode.fileno": [],
    "urllib.parse.urljoin.fileno": [],
    "urllib.parse.urlencode.fileno": [],
    "urllib.parse.urljoin.decode.encode.fileno": [],
    "urlparse.urljoin.decode.upper.fileno": [],
    "urllib.parse.quote.decode.lstrip.encode.fileno": [],
    "urllib.parse.quote.lstrip.fileno": [],
    "urllib.parse.urljoin.decode.upper.encode.fileno": [],
    "re.compile.finditer.group.decode.upper.fileno": [],
    "urllib.parse.quote.decode.encode.fileno": [],
    "urllib.parse.urlparse._replace.geturl.decode.fileno": [],
    "urllib.parse.quote.upper.encode.fileno": [],
    "urlparse.urljoin.decode.upper.encode.fileno": [],
    "re.compile.finditer.group.fileno": [],
    "urllib.parse.urlparse.geturl.decode.encode.fileno": [],
    "urlparse.urljoin.upper.fileno": [],
    "urllib.parse.urljoin.upper.encode.fileno": [],
    "urllib.parse.urlunparse.upper.decode.encode.fileno": [],
    "urllib.parse.quote.lstrip.encode.fileno": [],
    "re.compile.finditer.group.upper.decode.fileno": [],
    "urllib.parse.quote.lstrip.upper.encode.fileno": [],
    "urllib.parse.quote.upper.decode.fileno": [],
    "urllib.parse.urlunparse.decode.upper.fileno": [],
    "urllib.parse.quote.lstrip.decode.fileno": [],
    "collections.abc.MutableMapping.decode.upper.encode.fileno": [],
    "urlparse.urljoin.decode.encode.fileno": [],
    "urllib.parse.urljoin.decode.fileno": [],
    "urllib.parse.urlparse._replace.geturl.encode.fileno": [],
    "urllib.parse.urlparse._replace.geturl.upper.fileno": [],
    "urllib.parse.urlparse._replace.geturl.upper.encode.fileno": [],
    "urlparse.urljoin.upper.decode.fileno": [],
    "urlparse.urljoin.fileno": [],
    "re.compile.finditer.group.upper.fileno": [],
    "collections.abc.MutableMapping.decode.encode.fileno": [],
    "urllib.parse.urlparse.geturl.fileno": [],
    "urllib.parse.quote.lstrip.decode.upper.fileno": [],
    "base64.b64encode.strip.fileno": [],
    "collections.abc.MutableMapping.decode.fileno": [],
    "urllib.parse.quote.decode.lstrip.upper.fileno": [],
    "urllib.parse.urljoin.upper.decode.encode.fileno": [],
    "re.compile.finditer.group.upper.decode.encode.fileno": [],
    "urllib.parse.quote.upper.decode.encode.fileno": [],
    "urllib.parse.urljoin.upper.fileno": [],
    "base64.b64encode.strip.upper.fileno": [],
    "urlparse.urljoin.encode.fileno": [],
    "urlparse.urljoin.decode.fileno": [],
    "re.compile.finditer.group.upper.encode.fileno": [],
    "collections.abc.MutableMapping.upper.decode.encode.fileno": [],
    "urllib.parse.urlunparse.upper.encode.fileno": [],
    "re.compile.finditer.group.decode.upper.encode.fileno": [],
    "simplejson.dumps.fileno": [],
    "urllib.parse.urlunparse.decode.upper.encode.fileno": [],
    "urllib.parse.quote.decode.lstrip.fileno": [],
    "simplejson.dumps.encode.fileno": [],
    "urllib.parse.urlparse._replace.geturl.upper.decode.encode.fileno": [],
    "urllib.parse.urlparse.geturl.decode.upper.encode.fileno": [],
    "urllib.parse.urlunparse.upper.decode.fileno": [],
    "urllib.parse.urlunparse.encode.fileno": [],
    "urllib.parse.urlparse._replace.geturl.fileno": [],
    "collections.abc.MutableMapping.upper.decode.fileno": [],
    "urllib.parse.quote.fileno": [],
    "os.fstat": [],
    "urllib.parse.urljoin.decode.upper.tell": [],
    "re.compile.finditer.group.decode.upper.tell": [],
    "urllib.parse.quote.lstrip.tell": [],
    "urllib.parse.urljoin.decode.encode.tell": [],
    "re.compile.finditer.group.upper.decode.tell": [],
    "base64.b64encode.strip.upper.tell": [],
    "urllib.parse.urljoin.upper.decode.tell": [],
    "urllib.parse.urlparse.geturl.upper.tell": [],
    "urllib.parse.urlunparse.decode.encode.tell": [],
    "urllib.parse.urlparse._replace.geturl.decode.encode.tell": [],
    "urllib.parse.quote.encode.tell": [],
    "urllib.parse.urlparse._replace.geturl.decode.tell": [],
    "urllib.parse.urlparse.geturl.decode.upper.encode.tell": [],
    "urllib.parse.quote.decode.upper.tell": [],
    "urlparse.urljoin.upper.decode.tell": [],
    "collections.abc.MutableMapping.tell": [],
    "collections.abc.MutableMapping.encode.tell": [],
    "urllib.parse.urlparse._replace.geturl.upper.decode.tell": [],
    "urllib.parse.quote.lstrip.decode.encode.tell": [],
    "collections.abc.MutableMapping.upper.encode.tell": [],
    "re.compile.finditer.group.tell": [],
    "urllib.parse.urlparse._replace.geturl.decode.upper.tell": [],
    "urllib.parse.urljoin.upper.decode.encode.tell": [],
    "urllib.parse.urlunparse.decode.tell": [],
    "simplejson.dumps.tell": [],
    "urllib.parse.urlunparse.tell": [],
    "base64.b64encode.strip.upper.decode.tell": [],
    "re.compile.finditer.group.decode.encode.tell": [],
    "urllib.parse.quote.lstrip.upper.decode.tell": [],
    "urllib.parse.urljoin.upper.encode.tell": [],
    "urllib.parse.urlparse._replace.geturl.upper.decode.encode.tell": [],
    "urllib.parse.quote.decode.tell": [],
    "base64.b64encode.strip.decode.upper.tell": [],
    "urllib.parse.urlunparse.upper.encode.tell": [],
    "urllib.parse.urlunparse.decode.upper.tell": [],
    "urllib.parse.urlparse.geturl.upper.decode.tell": [],
    "urllib.parse.urlunparse.upper.tell": [],
    "urlparse.urljoin.decode.encode.tell": [],
    "collections.abc.MutableMapping.upper.tell": [],
    "urllib.parse.quote.decode.lstrip.upper.tell": [],
    "urllib.parse.quote.lstrip.upper.tell": [],
    "urlparse.urljoin.decode.upper.tell": [],
    "urllib.parse.quote.decode.lstrip.tell": [],
    "urllib.parse.urlparse._replace.geturl.decode.upper.encode.tell": [],
    "json.dumps.encode.tell": [],
    "urllib.parse.quote.upper.tell": [],
    "collections.abc.MutableMapping.upper.decode.encode.tell": [],
    "urllib.parse.urlencode.tell": [],
    "urllib.parse.quote.tell": [],
    "simplejson.dumps.encode.tell": [],
    "urllib.parse.urlparse.geturl.decode.tell": [],
    "urllib.parse.urlparse.geturl.upper.encode.tell": [],
    "urllib.parse.urlunparse.encode.tell": [],
    "collections.abc.MutableMapping.decode.tell": [],
    "urllib.parse.quote.upper.decode.encode.tell": [],
    "collections.abc.MutableMapping.decode.upper.encode.tell": [],
    "urllib.parse.quote.decode.upper.encode.tell": [],
    "urlparse.urljoin.upper.tell": [],
    "collections.abc.MutableMapping.decode.encode.tell": [],
    "urllib.parse.quote.decode.encode.tell": [],
    "re.compile.finditer.group.encode.tell": [],
    "urllib.parse.quote.lstrip.encode.tell": [],
    "urlparse.urljoin.upper.encode.tell": [],
    "re.compile.finditer.group.upper.encode.tell": [],
    "json.dumps.tell": [],
    "urllib.parse.urljoin.decode.tell": [],
    "base64.b64encode.strip.decode.tell": [],
    "urllib.parse.urljoin.upper.tell": [],
    "urllib.parse.urlunparse.upper.decode.encode.tell": [],
    "urllib.parse.urlunparse.decode.upper.encode.tell": [],
    "urllib.parse.quote.upper.encode.tell": [],
    "urllib.parse.quote.lstrip.upper.encode.tell": [],
    "urllib.parse.urlparse.geturl.tell": [],
    "urlparse.urljoin.upper.decode.encode.tell": [],
    "urllib.parse.quote.lstrip.upper.decode.encode.tell": [],
    "urllib.parse.urlparse._replace.geturl.tell": [],
    "urllib.parse.urlparse._replace.geturl.upper.tell": [],
    "urllib.parse.quote.lstrip.decode.tell": [],
    "urlparse.urljoin.tell": [],
    "urllib.parse.urljoin.tell": [],
    "collections.abc.MutableMapping.decode.upper.tell": [],
    "urllib.parse.urlparse.geturl.upper.decode.encode.tell": [],
    "urllib.parse.urlparse._replace.geturl.encode.tell": [],
    "urllib.parse.quote.lstrip.decode.upper.encode.tell": [],
    "re.compile.finditer.group.decode.tell": [],
    "urlparse.urljoin.decode.upper.encode.tell": [],
    "urllib.parse.urlparse._replace.geturl.upper.encode.tell": [],
    "urllib.parse.quote.lstrip.decode.upper.tell": [],
    "re.compile.finditer.group.upper.decode.encode.tell": [],
    "urllib.parse.quote.decode.lstrip.upper.encode.tell": [],
    "urlparse.urljoin.decode.tell": [],
    "re.compile.finditer.group.decode.upper.encode.tell": [],
    "urlparse.urljoin.encode.tell": [],
    "urllib.parse.urlparse.geturl.encode.tell": [],
    "urllib.parse.quote.decode.lstrip.encode.tell": [],
    "re.compile.finditer.group.upper.tell": [],
    "urllib.parse.urlparse.geturl.decode.encode.tell": [],
    "base64.b64encode.strip.tell": [],
    "urllib.parse.urljoin.encode.tell": [],
    "urllib.parse.quote.upper.decode.tell": [],
    "urllib.parse.urlparse.geturl.decode.upper.tell": [],
    "urllib.parse.urlunparse.upper.decode.tell": [],
    "urllib.parse.urljoin.decode.upper.encode.tell": [],
    "collections.abc.MutableMapping.upper.decode.tell": [],
    "re.compile.finditer.group.upper.decode.encode.seek": [],
    "re.compile.finditer.group.decode.upper.seek": [],
    "urllib.parse.urlparse._replace.geturl.seek": [],
    "urllib.parse.urljoin.decode.upper.seek": [],
    "simplejson.dumps.encode.seek": [],
    "urllib.parse.urlparse._replace.geturl.upper.decode.seek": [],
    "urlparse.urljoin.upper.seek": [],
    "urllib.parse.urlparse.geturl.upper.decode.encode.seek": [],
    "urllib.parse.quote.decode.lstrip.upper.seek": [],
    "urllib.parse.quote.upper.encode.seek": [],
    "urllib.parse.urlparse._replace.geturl.encode.seek": [],
    "re.compile.finditer.group.decode.encode.seek": [],
    "base64.b64encode.strip.upper.seek": [],
    "urllib.parse.urlparse._replace.geturl.decode.upper.seek": [],
    "urllib.parse.quote.lstrip.decode.upper.seek": [],
    "urllib.parse.urljoin.seek": [],
    "urllib.parse.urlunparse.upper.decode.seek": [],
    "urllib.parse.quote.lstrip.upper.seek": [],
    "re.compile.finditer.group.encode.seek": [],
    "urllib.parse.quote.decode.lstrip.encode.seek": [],
    "urlparse.urljoin.seek": [],
    "urllib.parse.urlparse.geturl.decode.upper.seek": [],
    "base64.b64encode.strip.decode.seek": [],
    "re.compile.finditer.group.decode.seek": [],
    "urllib.parse.quote.lstrip.decode.seek": [],
    "urllib.parse.urlparse.geturl.upper.decode.seek": [],
    "urlparse.urljoin.decode.upper.seek": [],
    "re.compile.finditer.group.decode.upper.encode.seek": [],
    "urlparse.urljoin.decode.encode.seek": [],
    "urllib.parse.quote.lstrip.decode.upper.encode.seek": [],
    "urllib.parse.urlparse._replace.geturl.upper.decode.encode.seek": [],
    "urllib.parse.urlunparse.upper.seek": [],
    "urllib.parse.urlparse.geturl.upper.encode.seek": [],
    "urllib.parse.quote.seek": [],
    "json.dumps.seek": [],
    "re.compile.finditer.group.upper.seek": [],
    "collections.abc.MutableMapping.seek": [],
    "urllib.parse.urlunparse.upper.decode.encode.seek": [],
    "urllib.parse.urlunparse.decode.upper.seek": [],
    "urllib.parse.urlunparse.upper.encode.seek": [],
    "collections.abc.MutableMapping.decode.encode.seek": [],
    "urllib.parse.urljoin.upper.seek": [],
    "urllib.parse.quote.upper.seek": [],
    "urllib.parse.quote.lstrip.decode.encode.seek": [],
    "urllib.parse.urlparse._replace.geturl.decode.seek": [],
    "urlparse.urljoin.decode.upper.encode.seek": [],
    "collections.abc.MutableMapping.decode.upper.seek": [],
    "urllib.parse.urlunparse.decode.seek": [],
    "urllib.parse.urljoin.decode.encode.seek": [],
    "urllib.parse.urljoin.upper.decode.seek": [],
    "collections.abc.MutableMapping.upper.seek": [],
    "urllib.parse.urljoin.upper.decode.encode.seek": [],
    "urllib.parse.urlparse.geturl.decode.encode.seek": [],
    "urllib.parse.quote.decode.encode.seek": [],
    "urllib.parse.urlunparse.decode.encode.seek": [],
    "urllib.parse.quote.decode.upper.seek": [],
    "urllib.parse.urlencode.seek": [],
    "collections.abc.MutableMapping.decode.upper.encode.seek": [],
    "urlparse.urljoin.upper.encode.seek": [],
    "urllib.parse.urlunparse.decode.upper.encode.seek": [],
    "base64.b64encode.strip.seek": [],
    "re.compile.finditer.group.upper.encode.seek": [],
    "urllib.parse.quote.lstrip.encode.seek": [],
    "urllib.parse.urlparse.geturl.encode.seek": [],
    "urlparse.urljoin.decode.seek": [],
    "re.compile.finditer.group.upper.decode.seek": [],
    "collections.abc.MutableMapping.upper.decode.seek": [],
    "urllib.parse.urlparse.geturl.upper.seek": [],
    "urllib.parse.quote.encode.seek": [],
    "collections.abc.MutableMapping.encode.seek": [],
    "re.compile.finditer.group.seek": [],
    "urllib.parse.urljoin.upper.encode.seek": [],
    "urlparse.urljoin.upper.decode.encode.seek": [],
    "urllib.parse.urlparse._replace.geturl.decode.upper.encode.seek": [],
    "urllib.parse.urlunparse.encode.seek": [],
    "urllib.parse.urljoin.decode.upper.encode.seek": [],
    "urllib.parse.quote.decode.upper.encode.seek": [],
    "collections.abc.MutableMapping.decode.seek": [],
    "urllib.parse.quote.decode.seek": [],
    "urllib.parse.quote.lstrip.upper.decode.seek": [],
    "urllib.parse.quote.upper.decode.encode.seek": [],
    "urllib.parse.urlparse._replace.geturl.decode.encode.seek": [],
    "urllib.parse.quote.lstrip.seek": [],
    "base64.b64encode.strip.upper.decode.seek": [],
    "urllib.parse.urlparse._replace.geturl.upper.seek": [],
    "urllib.parse.urlparse.geturl.seek": [],
    "urllib.parse.urljoin.decode.seek": [],
    "urllib.parse.quote.decode.lstrip.upper.encode.seek": [],
    "collections.abc.MutableMapping.upper.encode.seek": [],
    "urllib.parse.quote.lstrip.upper.encode.seek": [],
    "urllib.parse.quote.lstrip.upper.decode.encode.seek": [],
    "urllib.parse.urlparse.geturl.decode.seek": [],
    "urlparse.urljoin.upper.decode.seek": [],
    "urllib.parse.quote.upper.decode.seek": [],
    "urllib.parse.urlunparse.seek": [],
    "urllib.parse.urlparse._replace.geturl.upper.encode.seek": [],
    "urllib.parse.urlparse.geturl.decode.upper.encode.seek": [],
    "simplejson.dumps.seek": [],
    "collections.abc.MutableMapping.upper.decode.encode.seek": [],
    "urllib.parse.urljoin.encode.seek": [],
    "json.dumps.encode.seek": [],
    "urllib.parse.quote.decode.lstrip.seek": [],
    "urlparse.urljoin.encode.seek": [],
    "base64.b64encode.strip.decode.upper.seek": [],
    "<builtin>.max": [],
    "requests.utils.get_netrc_auth": [
        "os.environ.get",
        "netrc.netrc.authenticators",
        "urllib.parse.urlparse.netloc.split",
        "urllib.parse.urlparse",
        "<builtin>.isinstance",
        "os.path.exists",
        "os.path.expanduser",
        "netrc.netrc"
    ],
    "os.environ.get": [],
    "os.path.expanduser": [],
    "os.path.exists": [],
    "urllib.parse.urlparse": [],
    "<builtin>.isinstance": [],
    "urllib.parse.urlparse.netloc.split": [],
    "netrc.netrc": [],
    "netrc.netrc.authenticators": [],
    "requests.utils.guess_filename": [
        "os.path.basename",
        "<builtin>.getattr",
        "<builtin>.isinstance"
    ],
    "os.path.basename": [],
    "requests.utils.extract_zipped_paths": [
        "os.path.split",
        "requests.utils.atomic_open",
        "tempfile.gettempdir",
        "os.path.exists",
        "zipfile.is_zipfile",
        "zipfile.ZipFile.read",
        "os.path.join",
        "zipfile.ZipFile.namelist",
        "zipfile.ZipFile"
    ],
    "os.path.split": [],
    "zipfile.is_zipfile": [],
    "zipfile.ZipFile": [],
    "zipfile.ZipFile.namelist": [],
    "tempfile.gettempdir": [],
    "requests.utils.atomic_open": [
        "os.fdopen",
        "os.replace",
        "tempfile.mkstemp",
        "os.path.dirname",
        "os.remove"
    ],
    "zipfile.ZipFile.read": [],
    "contextlib.contextmanager": [],
    "os.path.dirname": [],
    "tempfile.mkstemp": [],
    "os.fdopen": [],
    "os.replace": [],
    "os.remove": [],
    "requests.utils.from_key_val_list": [
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "collections.OrderedDict"
    ],
    "<builtin>.ValueError": [],
    "collections.OrderedDict": [],
    "requests.utils.to_key_val_list": [
        "<builtin>.ValueError",
        "<builtin>.list",
        "collections.abc.MutableMapping.items",
        "<builtin>.isinstance"
    ],
    "collections.abc.MutableMapping.items": [],
    "requests.utils.parse_list_header": [
        "requests.utils.unquote_header_value",
        "urllib.request.parse_http_list"
    ],
    "urllib.request.parse_http_list": [],
    "requests.utils.unquote_header_value": [],
    "requests.utils.parse_dict_header": [
        "requests.utils.unquote_header_value",
        "urllib.request.parse_http_list.split",
        "urllib.request.parse_http_list"
    ],
    "urllib.request.parse_http_list.split": [],
    "requests.utils.dict_from_cookiejar": [],
    "requests.utils.add_dict_to_cookiejar": [
        "requests.cookies.cookiejar_from_dict"
    ],
    "requests.cookies.cookiejar_from_dict": [
        "requests.cookies.create_cookie",
        "http.cookiejar.CookieJar.__init__",
        "requests.cookies.RequestsCookieJar.set_cookie"
    ],
    "requests.utils.get_encodings_from_content": [
        "re.compile",
        "warnings.warn",
        "re.compile.findall"
    ],
    "re.compile": [],
    "re.compile.findall": [],
    "requests.utils._parse_content_type_header": [
        "collections.abc.MutableMapping.get.split"
    ],
    "collections.abc.MutableMapping.get.split": [],
    "requests.utils.get_encoding_from_headers": [
        "requests.utils._parse_content_type_header",
        "collections.abc.MutableMapping.get"
    ],
    "collections.abc.MutableMapping.get": [],
    "requests.utils.stream_decode_response_unicode": [
        "codecs.getincrementaldecoder.decode",
        "codecs.getincrementaldecoder"
    ],
    "codecs.getincrementaldecoder": [],
    "codecs.getincrementaldecoder.decode": [],
    "requests.utils.iter_slices": [
        "<builtin>.len"
    ],
    "requests.utils.get_unicode_from_response": [
        "warnings.warn",
        "requests.utils.get_encoding_from_headers"
    ],
    "<builtin>.frozenset": [],
    "requests.utils.unquote_unreserved": [
        "collections.abc.MutableMapping.decode.upper.split",
        "urllib.parse.quote.decode.upper.split",
        "urllib.parse.urljoin.decode.upper.split",
        "urllib.parse.urljoin.decode.split",
        "re.compile.finditer.group.upper.decode.split",
        "urllib.parse.quote.lstrip.decode.upper.split",
        "urllib.parse.urlunparse.decode.split",
        "urlparse.urljoin.split",
        "urlparse.urljoin.upper.split",
        "urllib.parse.quote.lstrip.decode.split",
        "urllib.parse.urljoin.upper.decode.split",
        "urlparse.urljoin.upper.decode.split",
        "<builtin>.chr",
        "re.compile.finditer.group.split",
        "base64.b64encode.strip.split",
        "urllib.parse.quote.decode.split",
        "base64.b64encode.strip.decode.upper.split",
        "<builtin>.range",
        "urllib.parse.quote.lstrip.split",
        "collections.abc.MutableMapping.upper.decode.split",
        "urllib.parse.quote.upper.decode.split",
        "urllib.parse.urljoin.split",
        "urllib.parse.urlparse.geturl.upper.decode.split",
        "base64.b64encode.strip.upper.decode.split",
        "collections.abc.MutableMapping.split",
        "<builtin>.len",
        "base64.b64encode.strip.decode.split",
        "urllib.parse.urlparse._replace.geturl.upper.decode.split",
        "<builtin>.int",
        "collections.abc.MutableMapping.decode.split",
        "requests.exceptions.RequestException.__init__",
        "urllib.parse.urlparse.geturl.upper.split",
        "urllib.parse.urlparse.geturl.decode.split",
        "urlparse.urljoin.decode.split",
        "collections.abc.MutableMapping.upper.split",
        "re.compile.finditer.group.decode.upper.split",
        "urllib.parse.quote.lstrip.upper.decode.split",
        "urllib.parse.urlunparse.upper.decode.split",
        "urllib.parse.quote.decode.lstrip.split",
        "urllib.parse.urlunparse.decode.upper.split",
        "urllib.parse.quote.lstrip.upper.split",
        "urllib.parse.urlparse.geturl.decode.upper.split",
        "urllib.parse.urlparse._replace.geturl.split",
        "urllib.parse.urlparse._replace.geturl.upper.split",
        "base64.b64encode.strip.upper.split",
        "urllib.parse.quote.upper.split",
        "urllib.parse.urlparse._replace.geturl.decode.split",
        "re.compile.finditer.group.decode.split",
        "urllib.parse.urlparse.geturl.split",
        "urllib.parse.urljoin.upper.split",
        "urllib.parse.quote.decode.lstrip.upper.split",
        "urllib.parse.quote.split",
        "re.compile.finditer.group.upper.split",
        "urllib.parse.urlunparse.upper.split",
        "urlparse.urljoin.decode.upper.split",
        "urllib.parse.urlparse._replace.geturl.decode.upper.split",
        "urllib.parse.urlunparse.split"
    ],
    "collections.abc.MutableMapping.decode.upper.split": [],
    "urllib.parse.quote.decode.upper.split": [],
    "urllib.parse.urljoin.decode.upper.split": [],
    "urllib.parse.urljoin.decode.split": [],
    "re.compile.finditer.group.upper.decode.split": [],
    "urllib.parse.quote.lstrip.decode.upper.split": [],
    "urllib.parse.urlunparse.decode.split": [],
    "urlparse.urljoin.split": [],
    "urlparse.urljoin.upper.split": [],
    "urllib.parse.quote.lstrip.decode.split": [],
    "urllib.parse.urljoin.upper.decode.split": [],
    "urlparse.urljoin.upper.decode.split": [],
    "re.compile.finditer.group.split": [],
    "base64.b64encode.strip.split": [],
    "urllib.parse.quote.decode.split": [],
    "base64.b64encode.strip.decode.upper.split": [],
    "urllib.parse.quote.lstrip.split": [],
    "collections.abc.MutableMapping.upper.decode.split": [],
    "urllib.parse.quote.upper.decode.split": [],
    "urllib.parse.urljoin.split": [],
    "urllib.parse.urlparse.geturl.upper.decode.split": [],
    "base64.b64encode.strip.upper.decode.split": [],
    "collections.abc.MutableMapping.split": [],
    "base64.b64encode.strip.decode.split": [],
    "urllib.parse.urlparse._replace.geturl.upper.decode.split": [],
    "collections.abc.MutableMapping.decode.split": [],
    "urllib.parse.urlparse.geturl.upper.split": [],
    "urllib.parse.urlparse.geturl.decode.split": [],
    "urlparse.urljoin.decode.split": [],
    "collections.abc.MutableMapping.upper.split": [],
    "re.compile.finditer.group.decode.upper.split": [],
    "urllib.parse.quote.lstrip.upper.decode.split": [],
    "urllib.parse.urlunparse.upper.decode.split": [],
    "urllib.parse.quote.decode.lstrip.split": [],
    "urllib.parse.urlunparse.decode.upper.split": [],
    "urllib.parse.quote.lstrip.upper.split": [],
    "urllib.parse.urlparse.geturl.decode.upper.split": [],
    "urllib.parse.urlparse._replace.geturl.split": [],
    "urllib.parse.urlparse._replace.geturl.upper.split": [],
    "base64.b64encode.strip.upper.split": [],
    "urllib.parse.quote.upper.split": [],
    "urllib.parse.urlparse._replace.geturl.decode.split": [],
    "re.compile.finditer.group.decode.split": [],
    "urllib.parse.urlparse.geturl.split": [],
    "urllib.parse.urljoin.upper.split": [],
    "urllib.parse.quote.decode.lstrip.upper.split": [],
    "urllib.parse.quote.split": [],
    "re.compile.finditer.group.upper.split": [],
    "urllib.parse.urlunparse.upper.split": [],
    "urlparse.urljoin.decode.upper.split": [],
    "urllib.parse.urlparse._replace.geturl.decode.upper.split": [],
    "urllib.parse.urlunparse.split": [],
    "<builtin>.range": [],
    "<builtin>.chr": [],
    "requests.exceptions.RequestException.__init__": [
        "<builtin>.super",
        "<builtin>.hasattr"
    ],
    "requests.utils.requote_uri": [
        "urllib.parse.quote",
        "requests.utils.unquote_unreserved"
    ],
    "urllib.parse.quote": [],
    "requests.utils.address_in_network": [
        "<builtin>.int",
        "socket.inet_aton",
        "struct.unpack",
        "requests.utils.dotted_netmask"
    ],
    "socket.inet_aton": [],
    "struct.unpack": [],
    "requests.utils.dotted_netmask": [
        "socket.inet_ntoa",
        "struct.pack"
    ],
    "struct.pack": [],
    "socket.inet_ntoa": [],
    "requests.utils.is_ipv4_address": [
        "socket.inet_aton"
    ],
    "requests.utils.is_valid_cidr": [
        "<builtin>.int",
        "socket.inet_aton"
    ],
    "requests.utils.set_environ": [
        "os.environ.get"
    ],
    "requests.utils.should_bypass_proxies": [
        "requests.utils.is_ipv4_address",
        "urllib.request.proxy_bypass",
        "requests.utils.is_valid_cidr",
        "requests.utils.address_in_network",
        "urllib.parse.urlparse",
        "requests.utils.should_bypass_proxies.get_proxy",
        "requests.utils.set_environ",
        "urllib.parse.urlparse.hostname.endswith"
    ],
    "requests.utils.should_bypass_proxies.get_proxy": [
        "os.environ.get"
    ],
    "urllib.parse.urlparse.hostname.endswith": [],
    "urllib.request.proxy_bypass": [],
    "requests.utils.get_environ_proxies": [
        "urllib.request.getproxies",
        "requests.utils.should_bypass_proxies"
    ],
    "urllib.request.getproxies": [],
    "requests.utils.select_proxy": [
        "urllib.parse.urlparse"
    ],
    "requests.utils.resolve_proxies": [
        "urllib.parse.urlparse",
        "requests.utils.get_environ_proxies",
        "requests.utils.should_bypass_proxies",
        "urllib.request.getproxies.get",
        "requests.utils.get_environ_proxies.<dict1>.get"
    ],
    "requests.utils.get_environ_proxies.<dict1>.get": [],
    "urllib.request.getproxies.get": [],
    "requests.utils.default_user_agent": [],
    "requests.utils.default_headers": [
        "requests.structures.CaseInsensitiveDict.__init__",
        "requests.utils.default_user_agent"
    ],
    "requests.structures.CaseInsensitiveDict.__init__": [
        "collections.abc.MutableMapping.update",
        "collections.OrderedDict"
    ],
    "requests.utils.parse_header_links": [
        "re.split",
        "collections.abc.MutableMapping.get.strip",
        "re.split.split"
    ],
    "collections.abc.MutableMapping.get.strip": [],
    "re.split.split": [],
    "requests.utils.guess_json_utf": [],
    "requests.utils.prepend_scheme_if_needed": [
        "urllib3.util.url.parse_url",
        "urllib.parse.urlunparse"
    ],
    "urllib3.util.url.parse_url": [
        "urllib3.util.url._remove_path_dot_segments",
        "urllib3.util.url._normalize_host",
        "urllib3.packages.six.raise_from",
        "urllib3.util.url.parse_url.ensure_type",
        "<builtin>.isinstance",
        "urllib3.util.url._encode_invalid_chars",
        "re.compile.match",
        "collections.namedtuple.__init__",
        "re.compile.search",
        "urllib3.exceptions.LocationParseError.__init__",
        "re.compile.match.groups",
        "<builtin>.int"
    ],
    "urllib.parse.urlunparse": [],
    "requests.utils.get_auth_from_url": [
        "urllib.parse.unquote",
        "urllib.parse.urlparse"
    ],
    "urllib.parse.unquote": [],
    "requests.utils.check_header_validity": [
        "requests.utils._validate_header_part",
        "requests.exceptions.RequestException.__init__",
        "<builtin>.type"
    ],
    "<builtin>.type": [],
    "requests.utils._validate_header_part": [
        "requests.exceptions.RequestException.__init__"
    ],
    "requests.utils.urldefragauth": [
        "urllib.parse.urlparse",
        "urllib.parse.urlunparse"
    ],
    "requests.utils.rewind_body": [
        "<builtin>.getattr",
        "requests.exceptions.RequestException.__init__",
        "<builtin>.isinstance"
    ],
    "requests.certs": [
        "<builtin>.print",
        "certifi.core.where"
    ],
    "certifi.core.where": [
        "importlib.resources.as_file",
        "atexit.register",
        "importlib.resources.path",
        "importlib.resources.files",
        "importlib.resources.path.__enter__",
        "importlib.resources.as_file.__enter__",
        "os.path.dirname",
        "importlib.resources.files.joinpath",
        "os.path.join",
        "<builtin>.str"
    ],
    "certifi": [],
    "certifi.core": [],
    "certifi.core.exit_cacert_ctx": [],
    "importlib.resources.files": [],
    "importlib.resources.files.joinpath": [],
    "importlib.resources.as_file": [],
    "importlib.resources.path.__enter__": [],
    "importlib.resources.as_file.__enter__": [],
    "<builtin>.str": [],
    "atexit.register": [],
    "certifi.core.contents": [
        "importlib.resources.files.joinpath",
        "importlib.resources.read_text",
        "importlib.resources.files",
        "importlib.resources.files.joinpath.read_text"
    ],
    "importlib.resources.files.joinpath.read_text": [],
    "importlib.resources.path": [],
    "importlib.resources.read_text": [],
    "certifi.core.read_text": [
        "<builtin>.open",
        "certifi.core.where"
    ],
    "<builtin>.open": [],
    "requests.cookies": [],
    "requests.cookies.MockRequest.__init__": [
        "urllib.parse.urlparse"
    ],
    "requests.cookies.MockRequest.get_type": [],
    "requests.cookies.MockRequest.get_host": [
        "urllib.parse.urlparse"
    ],
    "requests.cookies.MockRequest.get_origin_req_host": [
        "requests.cookies.MockRequest.get_host"
    ],
    "requests.cookies.MockRequest.get_full_url": [
        "urllib.parse.urlunparse",
        "requests._internal_utils.to_native_string",
        "urllib.parse.urlparse",
        "collections.abc.MutableMapping.get"
    ],
    "requests._internal_utils.to_native_string": [
        "urllib.parse.quote.lstrip.decode",
        "re.compile.finditer.group.decode",
        "base64.b64encode.strip.decode",
        "collections.abc.MutableMapping.decode",
        "urllib.parse.urlunparse.upper.decode",
        "urllib.parse.urljoin.upper.decode",
        "urllib.parse.urlparse.geturl.decode",
        "urlparse.urljoin.upper.decode",
        "urllib.parse.urlparse.geturl.upper.decode",
        "urllib.parse.urlunparse.decode",
        "urllib.parse.quote.upper.decode",
        "<builtin>.isinstance",
        "urllib.parse.quote.decode",
        "urllib.parse.quote.lstrip.upper.decode",
        "urllib.parse.urljoin.decode",
        "urlparse.urljoin.decode",
        "re.compile.finditer.group.upper.decode",
        "urllib.parse.urlparse._replace.geturl.decode",
        "urllib.parse.urlparse._replace.geturl.upper.decode",
        "collections.abc.MutableMapping.upper.decode",
        "base64.b64encode.strip.upper.decode"
    ],
    "requests.cookies.MockRequest.is_unverifiable": [],
    "requests.cookies.MockRequest.has_header": [],
    "requests.cookies.MockRequest.get_header": [
        "collections.abc.MutableMapping.get"
    ],
    "requests.cookies.MockRequest.add_header": [
        "<builtin>.NotImplementedError"
    ],
    "<builtin>.NotImplementedError": [],
    "requests.cookies.MockRequest.add_unredirected_header": [],
    "requests.cookies.MockRequest.get_new_headers": [],
    "requests.cookies.MockRequest.unverifiable": [
        "requests.cookies.MockRequest.is_unverifiable"
    ],
    "requests.cookies.MockRequest.origin_req_host": [
        "requests.cookies.MockRequest.get_origin_req_host"
    ],
    "requests.cookies.MockRequest.host": [
        "requests.cookies.MockRequest.get_host"
    ],
    "requests.cookies.MockResponse.__init__": [],
    "requests.cookies.MockResponse.info": [],
    "requests.cookies.MockResponse.getheaders": [
        "_collections.RecentlyUsedContainer.get.urlopen._original_response.msg.getheaders",
        "_collections.RecentlyUsedContainer.get.proxy_pool.urlopen._original_response.msg.getheaders"
    ],
    "_collections.RecentlyUsedContainer.get.urlopen._original_response.msg.getheaders": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool.urlopen._original_response.msg.getheaders": [],
    "requests.cookies.extract_cookies_to_jar": [
        "requests.cookies.MockRequest.__init__",
        "requests.cookies.MockResponse.__init__",
        "http.cookiejar.CookieJar.extract_cookies",
        "<builtin>.hasattr"
    ],
    "http.cookiejar.CookieJar.extract_cookies": [],
    "requests.cookies.get_cookie_header": [
        "http.cookiejar.CookieJar.add_cookie_header",
        "requests.cookies.MockRequest.get_new_headers",
        "requests.cookies.MockRequest.__init__"
    ],
    "http.cookiejar.CookieJar.add_cookie_header": [],
    "requests.cookies.remove_cookie_by_name": [
        "http.cookiejar.CookieJar.clear"
    ],
    "http.cookiejar.CookieJar.clear": [],
    "requests.cookies.RequestsCookieJar.get": [
        "requests.cookies.RequestsCookieJar._find_no_duplicates"
    ],
    "requests.cookies.RequestsCookieJar._find_no_duplicates": [
        "<builtin>.KeyError",
        "<builtin>.iter"
    ],
    "requests.cookies.RequestsCookieJar.set": [
        "requests.cookies.create_cookie",
        "requests.cookies.RequestsCookieJar.set_cookie",
        "requests.cookies.morsel_to_cookie",
        "<builtin>.isinstance",
        "requests.cookies.remove_cookie_by_name"
    ],
    "requests.cookies.morsel_to_cookie": [
        "<builtin>.TypeError",
        "calendar.timegm",
        "requests.cookies.create_cookie",
        "time.strptime",
        "<builtin>.bool",
        "time.time",
        "<builtin>.int"
    ],
    "requests.cookies.create_cookie": [
        "<builtin>.TypeError",
        "<builtin>.set",
        "<builtin>.bool",
        "<builtin>.list",
        "http.cookiejar.Cookie"
    ],
    "requests.cookies.RequestsCookieJar.set_cookie": [
        "http.cookiejar.Cookie.value.endswith",
        "http.cookiejar.Cookie.value.replace",
        "http.cookiejar.Cookie.value.replace.endswith",
        "http.cookiejar.Cookie.value.replace.startswith",
        "http.cookiejar.Cookie.value.startswith",
        "<builtin>.super",
        "<builtin>.hasattr"
    ],
    "requests.cookies.RequestsCookieJar.iterkeys": [
        "<builtin>.iter"
    ],
    "<builtin>.iter": [],
    "requests.cookies.RequestsCookieJar.keys": [
        "<builtin>.list",
        "requests.cookies.RequestsCookieJar.iterkeys"
    ],
    "requests.cookies.RequestsCookieJar.itervalues": [
        "<builtin>.iter"
    ],
    "requests.cookies.RequestsCookieJar.values": [
        "requests.cookies.RequestsCookieJar.itervalues",
        "<builtin>.list"
    ],
    "requests.cookies.RequestsCookieJar.iteritems": [
        "<builtin>.iter"
    ],
    "requests.cookies.RequestsCookieJar.items": [
        "<builtin>.list",
        "requests.cookies.RequestsCookieJar.iteritems"
    ],
    "requests.cookies.RequestsCookieJar.list_domains": [
        "<builtin>.iter"
    ],
    "requests.cookies.RequestsCookieJar.list_paths": [
        "<builtin>.iter"
    ],
    "requests.cookies.RequestsCookieJar.multiple_domains": [
        "<builtin>.iter"
    ],
    "requests.cookies.RequestsCookieJar.get_dict": [
        "<builtin>.iter"
    ],
    "requests.cookies.RequestsCookieJar.__contains__": [
        "<builtin>.super"
    ],
    "<builtin>.super": [],
    "requests.cookies.RequestsCookieJar.__getitem__": [
        "requests.cookies.RequestsCookieJar._find_no_duplicates"
    ],
    "requests.cookies.RequestsCookieJar.__setitem__": [
        "requests.cookies.RequestsCookieJar.set"
    ],
    "requests.cookies.RequestsCookieJar.__delitem__": [
        "requests.cookies.remove_cookie_by_name"
    ],
    "http.cookiejar.Cookie.value.replace.startswith": [],
    "http.cookiejar.Cookie.value.startswith": [],
    "http.cookiejar.Cookie.value.endswith": [],
    "http.cookiejar.Cookie.value.replace.endswith": [],
    "http.cookiejar.Cookie.value.replace": [],
    "requests.cookies.RequestsCookieJar.update": [
        "<builtin>.super",
        "<builtin>.isinstance",
        "requests.cookies.RequestsCookieJar.set_cookie"
    ],
    "requests.cookies.RequestsCookieJar._find": [
        "<builtin>.KeyError",
        "<builtin>.iter"
    ],
    "<builtin>.KeyError": [],
    "requests.cookies.RequestsCookieJar.__getstate__": [
        "http.cookiejar.CookieJar.__dict__.copy.pop",
        "http.cookiejar.CookieJar.__dict__.copy"
    ],
    "http.cookiejar.CookieJar.__dict__.copy": [],
    "http.cookiejar.CookieJar.__dict__.copy.pop": [],
    "requests.cookies.RequestsCookieJar.__setstate__": [
        "dummy_threading.RLock",
        "http.cookiejar.CookieJar.__dict__.update",
        "threading.RLock"
    ],
    "http.cookiejar.CookieJar.__dict__.update": [],
    "dummy_threading.RLock": [],
    "threading.RLock": [],
    "requests.cookies.RequestsCookieJar.copy": [
        "http.cookiejar.CookieJar.set_policy",
        "http.cookiejar.CookieJar.__init__",
        "requests.cookies.RequestsCookieJar.update",
        "requests.cookies.RequestsCookieJar.get_policy",
        "collections.abc.MutableMapping.__init__",
        "requests.compat.MutableMapping.__init__"
    ],
    "http.cookiejar.CookieJar.__init__": [],
    "collections.abc.MutableMapping.__init__": [],
    "requests.compat.MutableMapping.__init__": [],
    "requests.cookies.RequestsCookieJar.get_policy": [],
    "http.cookiejar.CookieJar.set_policy": [],
    "requests.cookies._copy_cookie_jar": [
        "requests.cookies.RequestsCookieJar.copy",
        "copy.copy",
        "<builtin>.hasattr"
    ],
    "copy.copy": [],
    "<builtin>.set": [],
    "<builtin>.TypeError": [],
    "<builtin>.bool": [],
    "http.cookiejar.Cookie": [],
    "time.strptime": [],
    "calendar.timegm": [],
    "requests.cookies.merge_cookies": [
        "requests.cookies.RequestsCookieJar.update",
        "requests.cookies.RequestsCookieJar.set_cookie",
        "<builtin>.isinstance",
        "requests.cookies.cookiejar_from_dict",
        "<builtin>.ValueError"
    ],
    "requests.structures": [],
    "collections.abc.MutableMapping.update": [],
    "requests.structures.CaseInsensitiveDict.__setitem__": [],
    "requests.structures.CaseInsensitiveDict.__getitem__": [],
    "requests.structures.CaseInsensitiveDict.__delitem__": [],
    "requests.structures.CaseInsensitiveDict.__iter__": [
        "collections.OrderedDict.values"
    ],
    "collections.OrderedDict.values": [],
    "requests.structures.CaseInsensitiveDict.__len__": [
        "<builtin>.len"
    ],
    "requests.structures.CaseInsensitiveDict.lower_items": [
        "collections.OrderedDict.items"
    ],
    "collections.OrderedDict.items": [],
    "requests.structures.CaseInsensitiveDict.__eq__": [
        "<builtin>.dict",
        "requests.structures.CaseInsensitiveDict.__init__",
        "requests.structures.CaseInsensitiveDict.lower_items",
        "<builtin>.isinstance"
    ],
    "<builtin>.dict": [],
    "requests.structures.CaseInsensitiveDict.copy": [
        "collections.OrderedDict.values",
        "requests.structures.CaseInsensitiveDict.__init__"
    ],
    "requests.structures.CaseInsensitiveDict.__repr__": [
        "<builtin>.dict",
        "<builtin>.str",
        "collections.abc.MutableMapping.items"
    ],
    "requests.structures.LookupDict.__init__": [
        "<builtin>.super"
    ],
    "requests.structures.LookupDict.__repr__": [],
    "requests.structures.LookupDict.__getitem__": [],
    "requests.structures.LookupDict.get": [],
    "urllib3.util": [],
    "urllib3.util.timeout": [
        "<builtin>.getattr",
        "<builtin>.object"
    ],
    "<builtin>.object": [],
    "urllib3.util.timeout.Timeout.__init__": [
        "urllib3.util.timeout.Timeout._validate_timeout"
    ],
    "urllib3.util.timeout.Timeout._validate_timeout": [
        "<builtin>.ValueError",
        "<builtin>.float",
        "<builtin>.isinstance"
    ],
    "urllib3.util.timeout.Timeout.__repr__": [
        "<builtin>.type"
    ],
    "urllib3.util.timeout.Timeout.resolve_default_timeout": [
        "socket.getdefaulttimeout"
    ],
    "socket.getdefaulttimeout": [],
    "<builtin>.float": [],
    "urllib3.util.timeout.Timeout.from_float": [
        "urllib3.util.timeout.Timeout.__init__"
    ],
    "urllib3.util.timeout.Timeout.clone": [
        "urllib3.util.timeout.Timeout.__init__"
    ],
    "urllib3.util.timeout.Timeout.start_connect": [],
    "urllib3.util.timeout.Timeout.get_connect_duration": [],
    "urllib3.util.timeout.Timeout.connect_timeout": [
        "<builtin>.min"
    ],
    "<builtin>.min": [],
    "urllib3.util.timeout.Timeout.read_timeout": [
        "urllib3.util.timeout.Timeout.get_connect_duration",
        "<builtin>.max",
        "<builtin>.min"
    ],
    "urllib3.exceptions": [],
    "urllib3.exceptions.PoolError.__init__": [],
    "urllib3.exceptions.PoolError.__reduce__": [],
    "urllib3.exceptions.RequestError.__init__": [
        "urllib3.exceptions.PoolError.__init__"
    ],
    "urllib3.exceptions.RequestError.__reduce__": [],
    "urllib3.exceptions.ProxyError.__init__": [
        "<builtin>.super"
    ],
    "urllib3.exceptions.MaxRetryError.__init__": [
        "urllib3.exceptions.RequestError.__init__"
    ],
    "urllib3.exceptions.HostChangedError.__init__": [
        "urllib3.exceptions.RequestError.__init__"
    ],
    "urllib3.exceptions.LocationParseError.__init__": [],
    "urllib3.exceptions.URLSchemeUnknown.__init__": [
        "<builtin>.super"
    ],
    "urllib3.exceptions.IncompleteRead.__init__": [
        "<builtin>.super"
    ],
    "urllib3.exceptions.IncompleteRead.__repr__": [],
    "urllib3.exceptions.InvalidChunkLength.__init__": [
        "urllib3.response.HTTPResponse.tell",
        "<builtin>.super"
    ],
    "urllib3.response.HTTPResponse.tell": [],
    "urllib3.exceptions.InvalidChunkLength.__repr__": [],
    "urllib3.exceptions.ProxySchemeUnknown.__init__": [
        "<builtin>.super"
    ],
    "urllib3.exceptions.HeaderParsingError.__init__": [
        "<builtin>.super"
    ],
    "urllib3.packages.six": [
        "operator.itemgetter",
        "sys.meta_path.append",
        "<builtin>.getattr",
        "operator.attrgetter",
        "sys.platform.startswith",
        "types.ModuleType.__init__",
        "<builtin>.enumerate",
        "urllib3.packages.six.exec_",
        "<builtin>.len",
        "<builtin>.int",
        "urllib3.packages.six._LazyModule.__init__",
        "urllib3.packages.six._SixMetaPathImporter._add_module",
        "<builtin>.isinstance",
        "urllib3.packages.six._SixMetaPathImporter.__init__",
        "<builtin>.type",
        "struct.Struct",
        "<builtin>.setattr",
        "urllib3.packages.six.MovedAttribute.__init__",
        "urllib3.packages.six.MovedModule.__init__",
        "urllib3.packages.six._add_doc",
        "operator.methodcaller",
        "functools.partial",
        "<builtin>.globals"
    ],
    "sys.platform.startswith": [],
    "urllib3.packages.six.X.__len__": [],
    "urllib3.packages.six._add_doc": [],
    "urllib3.packages.six._import_module": [
        "<builtin>.__import__"
    ],
    "<builtin>.__import__": [],
    "urllib3.packages.six._LazyDescr.__init__": [],
    "urllib3.packages.six._LazyDescr.__get__": [
        "<builtin>.setattr",
        "urllib3.packages.six.MovedAttribute._resolve",
        "urllib3.packages.six.MovedModule._resolve",
        "<builtin>.delattr"
    ],
    "urllib3.packages.six.MovedAttribute._resolve": [
        "<builtin>.getattr",
        "urllib3.packages.six._import_module"
    ],
    "urllib3.packages.six.MovedModule._resolve": [
        "urllib3.packages.six._import_module"
    ],
    "<builtin>.setattr": [],
    "<builtin>.delattr": [],
    "urllib3.packages.six.MovedModule.__init__": [
        "<builtin>.super"
    ],
    "urllib3.packages.six.MovedModule.__getattr__": [
        "<builtin>.getattr",
        "urllib3.packages.six.MovedModule._resolve",
        "<builtin>.setattr"
    ],
    "urllib3.packages.six._LazyModule.__init__": [
        "<builtin>.super"
    ],
    "urllib3.packages.six._LazyModule.__dir__": [],
    "urllib3.packages.six.MovedAttribute.__init__": [
        "<builtin>.super"
    ],
    "urllib3.packages.six._SixMetaPathImporter.__init__": [],
    "urllib3.packages.six._SixMetaPathImporter._add_module": [],
    "urllib3.packages.six._SixMetaPathImporter._get_module": [],
    "urllib3.packages.six._SixMetaPathImporter.find_module": [],
    "urllib3.packages.six._SixMetaPathImporter.find_spec": [
        "importlib.util.spec_from_loader"
    ],
    "importlib.util.spec_from_loader": [],
    "urllib3.packages.six._SixMetaPathImporter.__get_module": [
        "<builtin>.ImportError"
    ],
    "<builtin>.ImportError": [],
    "urllib3.packages.six._SixMetaPathImporter.load_module": [
        "urllib3.packages.six._SixMetaPathImporter.__get_module",
        "<builtin>.isinstance"
    ],
    "urllib3.packages.six._SixMetaPathImporter.is_package": [
        "urllib3.packages.six._SixMetaPathImporter.__get_module",
        "<builtin>.hasattr"
    ],
    "urllib3.packages.six._SixMetaPathImporter.get_code": [
        "urllib3.packages.six._SixMetaPathImporter.__get_module"
    ],
    "urllib3.packages.six._SixMetaPathImporter.create_module": [
        "urllib3.packages.six._SixMetaPathImporter.load_module"
    ],
    "urllib3.packages.six._SixMetaPathImporter.exec_module": [],
    "urllib3.packages.six.Module_six_moves_urllib": [
        "urllib3.packages.six._SixMetaPathImporter._get_module"
    ],
    "urllib3.packages.six.Module_six_moves_urllib.__dir__": [],
    "types.ModuleType.__init__": [],
    "urllib3.packages.six.add_move": [
        "<builtin>.setattr"
    ],
    "urllib3.packages.six.remove_move": [
        "<builtin>.delattr",
        "<builtin>.AttributeError"
    ],
    "<builtin>.AttributeError": [],
    "urllib3.packages.six.advance_iterator": [],
    "urllib3.packages.six.callable": [
        "<builtin>.any",
        "<builtin>.type"
    ],
    "<builtin>.any": [],
    "urllib3.packages.six.get_unbound_function": [],
    "urllib3.packages.six.create_unbound_method": [
        "types.MethodType"
    ],
    "urllib3.packages.six.create_bound_method": [
        "types.MethodType"
    ],
    "types.MethodType": [],
    "urllib3.packages.six.Iterator.next": [
        "<builtin>.type"
    ],
    "operator.attrgetter": [],
    "urllib3.packages.six.iterkeys": [
        "<builtin>.iter"
    ],
    "urllib3.packages.six.itervalues": [
        "<builtin>.iter"
    ],
    "urllib3.packages.six.iteritems": [
        "<builtin>.iter"
    ],
    "urllib3.packages.six.iterlists": [
        "<builtin>.iter"
    ],
    "operator.methodcaller": [],
    "urllib3.packages.six.b": [],
    "urllib3.packages.six.u": [],
    "struct.Struct": [],
    "operator.itemgetter": [],
    "urllib3.packages.six.byte2int": [
        "<builtin>.ord"
    ],
    "<builtin>.ord": [],
    "urllib3.packages.six.indexbytes": [
        "<builtin>.ord"
    ],
    "functools.partial": [],
    "urllib3.packages.six.assertCountEqual": [
        "<builtin>.getattr"
    ],
    "urllib3.packages.six.assertRaisesRegex": [
        "<builtin>.getattr"
    ],
    "urllib3.packages.six.assertRegex": [
        "<builtin>.getattr"
    ],
    "urllib3.packages.six.assertNotRegex": [
        "<builtin>.getattr"
    ],
    "urllib3.packages.six.reraise": [],
    "urllib3.packages.six.exec_": [
        "sys._getframe",
        "<builtin>.exec"
    ],
    "sys._getframe": [],
    "<builtin>.exec": [],
    "urllib3.packages.six.raise_from": [
        "urllib3.exceptions.LocationParseError.__init__"
    ],
    "urllib3.packages.six.print_": [
        "<builtin>.TypeError",
        "urllib3.packages.six.print_.write",
        "urllib3.packages.six.print_",
        "<builtin>.enumerate",
        "<builtin>.isinstance"
    ],
    "urllib3.packages.six.print_.write": [
        "<builtin>.getattr",
        "<builtin>.str",
        "<builtin>.isinstance"
    ],
    "<builtin>.enumerate": [],
    "urllib3.packages.six._update_wrapper": [
        "<builtin>.getattr",
        "<builtin>.setattr"
    ],
    "urllib3.packages.six.wraps": [
        "functools.partial"
    ],
    "urllib3.packages.six.with_metaclass": [],
    "urllib3.packages.six.with_metaclass.metaclass.__new__": [
        "types.resolve_bases"
    ],
    "types.resolve_bases": [],
    "urllib3.packages.six.with_metaclass.metaclass.__prepare__": [],
    "urllib3.packages.six.add_metaclass": [],
    "urllib3.packages.six.add_metaclass.wrapper": [
        "<builtin>.isinstance",
        "<builtin>.hasattr"
    ],
    "urllib3.packages.six.ensure_binary": [
        "<builtin>.TypeError",
        "<builtin>.type",
        "<builtin>.isinstance"
    ],
    "urllib3.packages.six.ensure_str": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.type"
    ],
    "urllib3.packages.six.ensure_text": [
        "<builtin>.TypeError",
        "<builtin>.type",
        "<builtin>.isinstance"
    ],
    "urllib3.packages.six.python_2_unicode_compatible": [
        "<builtin>.ValueError"
    ],
    "urllib3.packages.six.python_2_unicode_compatible.<lambda1>": [],
    "<builtin>.globals": [],
    "sys.meta_path.append": [],
    "urllib3.packages": [],
    "urllib3.util.response": [],
    "urllib3.util.response.is_fp_closed": [
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.isclosed",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.isclosed",
        "<builtin>.ValueError"
    ],
    "_collections.RecentlyUsedContainer.get._get_conn.getresponse.isclosed": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.isclosed": [],
    "urllib3.util.response.assert_header_parsing": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "urllib3.exceptions.HeaderParsingError.__init__",
        "<builtin>.type",
        "<builtin>.getattr"
    ],
    "urllib3.util.response.is_response_to_head": [
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse._method.upper",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse._method.upper",
        "<builtin>.isinstance"
    ],
    "_collections.RecentlyUsedContainer.get._get_conn.getresponse._method.upper": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse._method.upper": [],
    "urllib3.util.request": [
        "<builtin>.object",
        "<builtin>.frozenset"
    ],
    "base64.b64encode": [],
    "base64.b64encode.decode": [],
    "urllib3.util.request.set_file_position": [
        "<builtin>.getattr",
        "urllib3.util.request.rewind_body"
    ],
    "urllib3.util.request.rewind_body": [
        "<builtin>.ValueError",
        "<builtin>.getattr",
        "<builtin>.type",
        "<builtin>.isinstance"
    ],
    "urllib3.util.retry": [
        "<builtin>.object",
        "logging.getLogger",
        "collections.namedtuple",
        "urllib3.util.retry.Retry.__init__"
    ],
    "collections.namedtuple": [],
    "urllib3.util.retry._RetryMeta.DEFAULT_METHOD_WHITELIST": [
        "warnings.warn"
    ],
    "urllib3.util.retry._RetryMeta.DEFAULT_REDIRECT_HEADERS_BLACKLIST": [
        "warnings.warn"
    ],
    "urllib3.util.retry._RetryMeta.BACKOFF_MAX": [
        "warnings.warn"
    ],
    "urllib3.util.retry.Retry": [
        "<builtin>.frozenset"
    ],
    "urllib3.util.retry.Retry.__init__": [
        "<builtin>.tuple",
        "<builtin>.set",
        "warnings.warn",
        "<builtin>.ValueError",
        "<builtin>.frozenset"
    ],
    "<builtin>.tuple": [],
    "urllib3.util.retry.Retry.new": [
        "<builtin>.dict",
        "warnings.warn",
        "<builtin>.type"
    ],
    "urllib3.util.retry.Retry.from_int": [
        "urllib3.util.retry.Retry.__init__",
        "logging.getLogger.debug",
        "<builtin>.bool",
        "<builtin>.isinstance"
    ],
    "logging.getLogger.debug": [],
    "urllib3.util.retry.Retry.get_backoff_time": [
        "<builtin>.len",
        "<builtin>.list",
        "itertools.takewhile",
        "<builtin>.reversed",
        "<builtin>.min"
    ],
    "urllib3.util.retry.Retry.get_backoff_time.<lambda1>": [],
    "<builtin>.reversed": [],
    "itertools.takewhile": [],
    "urllib3.util.retry.Retry.parse_retry_after": [
        "email.utils.mktime_tz",
        "email.utils.parsedate_tz",
        "time.time",
        "<builtin>.int",
        "re.match"
    ],
    "email.utils.parsedate_tz": [],
    "email.utils.mktime_tz": [],
    "urllib3.util.retry.Retry.get_retry_after": [
        "urllib3.util.retry.Retry.parse_retry_after"
    ],
    "urllib3.util.retry.Retry.sleep_for_retry": [
        "urllib3.util.retry.Retry.get_retry_after",
        "time.sleep"
    ],
    "time.sleep": [],
    "urllib3.util.retry.Retry._sleep_backoff": [
        "time.sleep",
        "urllib3.util.retry.Retry.get_backoff_time"
    ],
    "urllib3.util.retry.Retry.sleep": [
        "urllib3.util.retry.Retry.sleep_for_retry",
        "urllib3.util.retry.Retry._sleep_backoff"
    ],
    "urllib3.util.retry.Retry._is_connection_error": [
        "<builtin>.isinstance"
    ],
    "urllib3.util.retry.Retry._is_read_error": [
        "<builtin>.isinstance"
    ],
    "urllib3.util.retry.Retry._is_method_retryable": [
        "warnings.warn"
    ],
    "urllib3.util.retry.Retry.is_retry": [
        "urllib3.util.retry.Retry._is_method_retryable"
    ],
    "urllib3.util.retry.Retry.is_exhausted": [
        "<builtin>.list",
        "<builtin>.filter",
        "<builtin>.min"
    ],
    "<builtin>.filter": [],
    "urllib3.util.retry.Retry.increment": [
        "logging.getLogger.debug",
        "urllib3.util.retry.Retry._is_read_error",
        "urllib3.exceptions.MaxRetryError.__init__",
        "collections.namedtuple",
        "urllib3.util.retry.Retry.new",
        "urllib3.util.retry.Retry._is_connection_error",
        "urllib3.util.retry.Retry._is_method_retryable",
        "urllib3.packages.six.reraise",
        "<builtin>.type"
    ],
    "urllib3.util.retry.Retry.__repr__": [
        "<builtin>.type"
    ],
    "urllib3.util.retry.Retry.__getattr__": [
        "<builtin>.getattr",
        "warnings.warn",
        "<builtin>.super"
    ],
    "urllib3.util.connection": [
        "urllib3.util.connection._has_ipv6"
    ],
    "urllib3.util.connection.is_connection_dropped": [
        "<builtin>.getattr",
        "urllib3.util.wait.wait_for_read"
    ],
    "urllib3.util.wait.wait_for_read": [
        "urllib3.util.wait.wait_for_socket"
    ],
    "urllib3.util.connection.create_connection": [
        "urllib3.packages.six.raise_from",
        "urllib3.util.connection._set_socket_options",
        "socket.socket",
        "socket.getaddrinfo",
        "socket.error",
        "urllib3.exceptions.LocationParseError.__init__",
        "urllib3.util.connection.allowed_gai_family"
    ],
    "urllib3.util.connection.allowed_gai_family": [],
    "socket.getaddrinfo": [],
    "socket.socket": [],
    "urllib3.util.connection._set_socket_options": [],
    "socket.error": [],
    "urllib3.util.connection._has_ipv6": [
        "socket.socket",
        "urllib3.contrib._appengine_environ.is_appengine_sandbox"
    ],
    "urllib3.contrib._appengine_environ.is_appengine_sandbox": [
        "urllib3.contrib._appengine_environ.is_appengine"
    ],
    "urllib3.contrib": [],
    "urllib3.util.wait": [],
    "urllib3.util.wait._retry_on_intr": [
        "time.time",
        "<builtin>.float",
        "time.monotonic",
        "functools.partial"
    ],
    "time.monotonic": [],
    "urllib3.util.wait.select_wait_for_socket": [
        "<builtin>.bool",
        "<builtin>.RuntimeError",
        "urllib3.util.wait._retry_on_intr",
        "functools.partial"
    ],
    "<builtin>.RuntimeError": [],
    "urllib3.util.wait.poll_wait_for_socket": [
        "select.poll.register",
        "urllib3.util.wait._retry_on_intr",
        "<builtin>.RuntimeError",
        "<builtin>.bool",
        "select.poll"
    ],
    "select.poll": [],
    "select.poll.register": [],
    "urllib3.util.wait.poll_wait_for_socket.do_poll": [
        "select.poll.poll"
    ],
    "select.poll.poll": [],
    "urllib3.util.wait.null_wait_for_socket": [],
    "urllib3.util.wait._have_working_poll": [
        "urllib3.util.wait._retry_on_intr",
        "select.poll"
    ],
    "urllib3.util.wait.wait_for_socket": [
        "urllib3.util.wait.select_wait_for_socket",
        "urllib3.util.wait._have_working_poll",
        "urllib3.util.wait.null_wait_for_socket",
        "<builtin>.hasattr",
        "urllib3.util.wait.poll_wait_for_socket"
    ],
    "urllib3.util.wait.wait_for_write": [
        "urllib3.util.wait.wait_for_socket"
    ],
    "urllib3.contrib._appengine_environ": [],
    "urllib3.contrib._appengine_environ.is_appengine": [
        "urllib3.contrib._appengine_environ.is_local_appengine",
        "urllib3.contrib._appengine_environ.is_prod_appengine"
    ],
    "urllib3.contrib._appengine_environ.is_local_appengine": [
        "os.environ.get",
        "os.environ.get.startswith"
    ],
    "urllib3.contrib._appengine_environ.is_prod_appengine": [
        "os.environ.get",
        "os.environ.get.startswith"
    ],
    "os.environ.get.startswith": [],
    "urllib3.contrib._appengine_environ.is_prod_appengine_mvms": [],
    "requests.__version__": [],
    "requests._internal_utils": [
        "re.compile"
    ],
    "urllib.parse.quote.lstrip.decode": [],
    "re.compile.finditer.group.decode": [],
    "base64.b64encode.strip.decode": [],
    "collections.abc.MutableMapping.decode": [],
    "urllib.parse.urlunparse.upper.decode": [],
    "urllib.parse.urljoin.upper.decode": [],
    "urllib.parse.quote.decode": [],
    "urllib.parse.urlparse.geturl.decode": [],
    "urllib.parse.quote.lstrip.upper.decode": [],
    "urllib.parse.urljoin.decode": [],
    "urlparse.urljoin.upper.decode": [],
    "urlparse.urljoin.decode": [],
    "re.compile.finditer.group.upper.decode": [],
    "urllib.parse.urlparse.geturl.upper.decode": [],
    "urllib.parse.urlunparse.decode": [],
    "urllib.parse.quote.upper.decode": [],
    "urllib.parse.urlparse._replace.geturl.decode": [],
    "urllib.parse.urlparse._replace.geturl.upper.decode": [],
    "collections.abc.MutableMapping.upper.decode": [],
    "base64.b64encode.strip.upper.decode": [],
    "requests._internal_utils.unicode_is_ascii": [
        "unicodedata.normalize.decode.encode",
        "<builtin>.isinstance"
    ],
    "unicodedata.normalize.decode.encode": [],
    "urllib3": [
        "logging.getLogger.addHandler",
        "logging.getLogger",
        "logging.NullHandler",
        "warnings.warn",
        "warnings.simplefilter"
    ],
    "urllib3.add_stderr_logger": [
        "logging.getLogger.addHandler",
        "logging.StreamHandler.setFormatter",
        "logging.getLogger",
        "logging.getLogger.debug",
        "logging.Formatter",
        "logging.getLogger.setLevel",
        "logging.StreamHandler"
    ],
    "logging.StreamHandler": [],
    "logging.Formatter": [],
    "logging.StreamHandler.setFormatter": [],
    "logging.getLogger.setLevel": [],
    "urllib3.disable_warnings": [
        "warnings.simplefilter"
    ],
    "urllib3.connectionpool": [
        "<builtin>.object",
        "logging.getLogger"
    ],
    "urllib3.connectionpool.ConnectionPool.__init__": [
        "urllib3.connectionpool._normalize_host"
    ],
    "urllib3.connectionpool._normalize_host": [
        "urllib3.util.url._normalize_host"
    ],
    "urllib3.connectionpool.ConnectionPool.__str__": [
        "<builtin>.type"
    ],
    "urllib3.connectionpool.ConnectionPool.__enter__": [],
    "urllib3.connectionpool.ConnectionPool.__exit__": [
        "urllib3.connectionpool.HTTPConnectionPool.close",
        "urllib3.connectionpool.ConnectionPool.close"
    ],
    "urllib3.connectionpool.HTTPConnectionPool.close": [
        "urllib3.connectionpool._close_pool_connections"
    ],
    "urllib3.connectionpool.ConnectionPool.close": [],
    "urllib3.connectionpool.HTTPConnectionPool.__init__": [
        "urllib3.packages.backports.weakref_finalize.weakref_finalize.__init__",
        "urllib3.request.RequestMethods.__init__",
        "weakref.finalize",
        "packages.six.moves.queue.Queue.__init__",
        "<builtin>.isinstance",
        "packages.six.moves.queue.Queue.put",
        "urllib3.util.timeout.Timeout.from_float",
        "urllib3.connectionpool.ConnectionPool.__init__",
        "types.ModuleType.xrange"
    ],
    "urllib3.request.RequestMethods.__init__": [],
    "packages.six.moves.queue.Queue.__init__": [],
    "types.ModuleType.xrange": [],
    "packages.six.moves.queue.Queue.put": [],
    "urllib3.packages.backports.weakref_finalize.weakref_finalize.__init__": [
        "weakref.ref",
        "atexit.register",
        "<builtin>.next"
    ],
    "weakref.finalize": [],
    "urllib3.connectionpool.HTTPConnectionPool._new_conn": [
        "logging.getLogger.debug",
        "urllib3.connection.HTTPConnection.__init__"
    ],
    "urllib3.connection.HTTPConnection.__init__": [
        "packages.six.moves.http_client.HTTPConnection.__init__"
    ],
    "urllib3.connectionpool.HTTPConnectionPool._get_conn": [
        "urllib3.util.connection.is_connection_dropped",
        "logging.getLogger.debug",
        "urllib3.connectionpool.HTTPSConnectionPool._new_conn",
        "urllib3.exceptions.PoolError.__init__",
        "packages.six.moves.queue.Queue.get",
        "urllib3.connectionpool.HTTPConnectionPool._new_conn",
        "<builtin>.getattr",
        "packages.six.moves.queue.Queue.get.close"
    ],
    "packages.six.moves.queue.Queue.get": [],
    "packages.six.moves.queue.Queue.get.close": [],
    "urllib3.connectionpool.HTTPSConnectionPool._new_conn": [
        "logging.getLogger.debug",
        "urllib3.connectionpool.HTTPSConnectionPool._prepare_conn"
    ],
    "urllib3.connectionpool.HTTPConnectionPool._put_conn": [
        "packages.six.moves.queue.Queue.put",
        "logging.getLogger.warning",
        "packages.six.moves.queue.Queue.qsize"
    ],
    "packages.six.moves.queue.Queue.qsize": [],
    "logging.getLogger.warning": [],
    "urllib3.connectionpool.HTTPConnectionPool._validate_conn": [],
    "urllib3.connectionpool.HTTPConnectionPool._prepare_proxy": [],
    "urllib3.connectionpool.HTTPConnectionPool._get_timeout": [
        "urllib3.util.timeout.Timeout.from_float",
        "urllib3.util.timeout.Timeout.clone",
        "<builtin>.isinstance"
    ],
    "urllib3.connectionpool.HTTPConnectionPool._raise_timeout": [
        "urllib3.exceptions.RequestError.__init__",
        "<builtin>.str",
        "<builtin>.isinstance",
        "<builtin>.hasattr"
    ],
    "urllib3.connectionpool.HTTPConnectionPool._make_request": [
        "urllib3.connectionpool.HTTPConnectionPool._absolute_url",
        "logging.getLogger.debug",
        "urllib3.util.response.assert_header_parsing",
        "urllib3.packages.six.raise_from",
        "urllib3.connectionpool.HTTPConnectionPool._raise_timeout",
        "urllib3.connectionpool.HTTPSConnectionPool._validate_conn",
        "urllib3.exceptions.RequestError.__init__",
        "logging.getLogger.warning",
        "socket.getdefaulttimeout",
        "<builtin>.getattr",
        "urllib3.util.timeout.Timeout.resolve_default_timeout",
        "urllib3.connectionpool.HTTPConnectionPool._validate_conn",
        "urllib3.util.timeout.Timeout.start_connect",
        "urllib3.connectionpool.HTTPConnectionPool._get_timeout"
    ],
    "urllib3.connectionpool.HTTPSConnectionPool._validate_conn": [
        "<builtin>.getattr",
        "warnings.warn",
        "<builtin>.super"
    ],
    "urllib3.connectionpool.HTTPConnectionPool._absolute_url": [
        "collections.namedtuple.__init__"
    ],
    "collections.namedtuple.__init__": [],
    "urllib3.connectionpool._close_pool_connections": [
        "packages.six.moves.queue.Queue.get.close",
        "packages.six.moves.queue.Queue.get"
    ],
    "urllib3.connectionpool.HTTPConnectionPool.is_same_host": [
        "urllib3.connectionpool._normalize_host",
        "urllib3.util.url.get_host"
    ],
    "urllib3.util.url.get_host": [
        "urllib3.util.url.parse_url"
    ],
    "urllib3.connectionpool.HTTPConnectionPool.urlopen": [
        "urllib3.util.url.parse_url",
        "logging.getLogger.debug",
        "urllib3.util.url._encode_target",
        "urllib3.util.proxy.connection_requires_http_tunnel",
        "_collections.HTTPHeaderDict.copy",
        "urllib3.connectionpool.HTTPConnectionPool._make_request",
        "urllib3.util.retry.Retry.from_int",
        "urllib3.connectionpool.HTTPConnectionPool._put_conn",
        "_collections.HTTPHeaderDict.from_httplib.copy.update",
        "<builtin>.getattr",
        "_collections.HTTPHeaderDict.copy.update",
        "_collections.HTTPHeaderDict.from_httplib.update",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.msg.update",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.msg.copy.update",
        "urllib3.exceptions.ProxyError.__init__",
        "urllib3.connectionpool.HTTPConnectionPool.urlopen._is_ssl_error_message_from_http_proxy",
        "_collections.HTTPHeaderDict.update",
        "logging.getLogger.warning",
        "_collections.HTTPHeaderDict._prepare_for_method_change.copy.update",
        "_collections.HTTPHeaderDict.from_httplib.copy",
        "urllib3.packages.six.ensure_str",
        "urllib3.connectionpool.HTTPConnectionPool._get_conn",
        "urllib3.response.HTTPResponse.from_httplib",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.msg.copy.update",
        "sys.exc_info",
        "urllib3.util.request.set_file_position",
        "urllib3.connectionpool.HTTPConnectionPool.urlopen",
        "urllib3.connectionpool.HTTPConnectionPool.is_same_host",
        "<builtin>.isinstance",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.msg.copy",
        "urllib3.connectionpool.HTTPConnectionPool._prepare_proxy",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.msg.update",
        "_collections.HTTPHeaderDict._prepare_for_method_change.copy",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.msg.copy",
        "urllib3.connectionpool.HTTPSConnectionPool._prepare_proxy",
        "_collections.HTTPHeaderDict",
        "_collections.HTTPHeaderDict._prepare_for_method_change",
        "<builtin>.bool",
        "urllib3.exceptions.HostChangedError.__init__",
        "_collections.HTTPHeaderDict._prepare_for_method_change.update",
        "urllib3.connectionpool.HTTPConnectionPool._get_timeout"
    ],
    "urllib3.util.url._encode_target": [
        "re.compile.match.groups",
        "urllib3.util.url._encode_invalid_chars",
        "re.compile.match"
    ],
    "urllib3.util.proxy.connection_requires_http_tunnel": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.msg.copy": [],
    "_collections.HTTPHeaderDict.copy": [],
    "_collections.HTTPHeaderDict.from_httplib.copy": [],
    "_collections.HTTPHeaderDict._prepare_for_method_change.copy": [],
    "_collections.RecentlyUsedContainer.get._get_conn.getresponse.msg.copy": [],
    "_collections.RecentlyUsedContainer.get._get_conn.getresponse.msg.update": [],
    "_collections.RecentlyUsedContainer.get._get_conn.getresponse.msg.copy.update": [],
    "_collections.HTTPHeaderDict.update": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.msg.update": [],
    "_collections.HTTPHeaderDict._prepare_for_method_change.copy.update": [],
    "_collections.HTTPHeaderDict.from_httplib.copy.update": [],
    "_collections.HTTPHeaderDict.copy.update": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.msg.copy.update": [],
    "_collections.HTTPHeaderDict._prepare_for_method_change.update": [],
    "_collections.HTTPHeaderDict.from_httplib.update": [],
    "urllib3.connectionpool.HTTPSConnectionPool._prepare_proxy": [],
    "urllib3.response.HTTPResponse.from_httplib": [
        "_collections.HTTPHeaderDict.items",
        "_collections.HTTPHeaderDict.from_httplib",
        "_collections.HTTPHeaderDict",
        "<builtin>.isinstance",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.msg.items",
        "<builtin>.getattr",
        "urllib3.response.HTTPResponse.__init__",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.msg.items",
        "_collections.HTTPHeaderDict.from_httplib.items"
    ],
    "urllib3.connectionpool.HTTPConnectionPool.urlopen._is_ssl_error_message_from_http_proxy": [
        "re.split",
        "<builtin>.str"
    ],
    "sys.exc_info": [],
    "_collections.HTTPHeaderDict": [],
    "_collections.HTTPHeaderDict._prepare_for_method_change": [],
    "urllib3.connectionpool.HTTPSConnectionPool.__init__": [
        "urllib3.connectionpool.HTTPConnectionPool.__init__"
    ],
    "urllib3.connectionpool.HTTPSConnectionPool._prepare_conn": [
        "<builtin>.isinstance"
    ],
    "urllib3.connectionpool.connection_from_url": [
        "urllib3.connectionpool.HTTPConnectionPool.__init__",
        "urllib3.util.url.get_host",
        "urllib3.connectionpool.HTTPSConnectionPool.__init__"
    ],
    "urllib3.util.url._normalize_host": [
        "urllib3.util.url._idna_encode",
        "re.compile.search.span",
        "<builtin>.isinstance",
        "re.compile.match",
        "urllib3.util.url._encode_invalid_chars",
        "re.compile.search",
        "urllib3.packages.six.ensure_str"
    ],
    "urllib3.connection": [
        "re.compile",
        "logging.getLogger",
        "datetime.date"
    ],
    "datetime.date": [],
    "packages.six.moves.http_client.HTTPConnection.__init__": [],
    "urllib3.connection.HTTPConnection.host": [],
    "urllib3.connection.HTTPConnection._new_conn": [
        "urllib3.exceptions.PoolError.__init__",
        "urllib3.util.connection.create_connection"
    ],
    "urllib3.connection.HTTPConnection._is_using_tunnel": [
        "<builtin>.getattr"
    ],
    "urllib3.connection.HTTPConnection._prepare_conn": [
        "packages.six.moves.http_client.HTTPConnection._tunnel",
        "urllib3.connection.HTTPConnection._is_using_tunnel"
    ],
    "packages.six.moves.http_client.HTTPConnection._tunnel": [],
    "urllib3.connection.HTTPConnection.connect": [
        "urllib3.connection.HTTPConnection._prepare_conn",
        "urllib3.connection.HTTPConnection._new_conn"
    ],
    "urllib3.connection.HTTPConnection.putrequest": [
        "<builtin>.ValueError",
        "packages.six.moves.http_client.HTTPConnection.putrequest",
        "re.compile.search.group",
        "re.compile.search"
    ],
    "re.compile.search": [],
    "re.compile.search.group": [],
    "packages.six.moves.http_client.HTTPConnection.putrequest": [],
    "urllib3.connection.HTTPConnection.putheader": [
        "<builtin>.any",
        "<builtin>.sorted",
        "<builtin>.map",
        "<builtin>.isinstance",
        "packages.six.moves.http_client.HTTPConnection.putheader",
        "<builtin>.ValueError",
        "urllib3.packages.six.ensure_str"
    ],
    "packages.six.moves.http_client.HTTPConnection.putheader": [],
    "<builtin>.sorted": [],
    "urllib3.connection.HTTPConnection.request": [
        "<builtin>.getattr",
        "<builtin>.super",
        "urllib3.connection._get_default_user_agent",
        "urllib3.packages.six.ensure_str"
    ],
    "urllib3.connection._get_default_user_agent": [],
    "urllib3.connection.HTTPConnection.request_chunked": [
        "<builtin>.bytearray",
        "urllib3.connection.HTTPConnection.putheader",
        "packages.six.moves.http_client.HTTPConnection.send",
        "<builtin>.set",
        "packages.six.moves.http_client.HTTPConnection.endheaders",
        "<builtin>.isinstance",
        "<builtin>.len",
        "urllib3.packages.six.ensure_str",
        "<builtin>.hex",
        "urllib3.connection._get_default_user_agent",
        "urllib3.connection.HTTPConnection.putrequest"
    ],
    "packages.six.moves.http_client.HTTPConnection.endheaders": [],
    "<builtin>.hex": [],
    "<builtin>.bytearray": [],
    "packages.six.moves.http_client.HTTPConnection.send": [],
    "urllib3.connection.HTTPSConnection.__init__": [
        "urllib3.connection.HTTPConnection.__init__"
    ],
    "urllib3.connection.HTTPSConnection.set_cert": [
        "urllib3.util.ssl_.resolve_cert_reqs",
        "os.path.expanduser"
    ],
    "urllib3.util.ssl_.resolve_cert_reqs": [
        "<builtin>.getattr",
        "<builtin>.isinstance"
    ],
    "urllib3.connection.HTTPSConnection.connect": [
        "ssl.SSLContext.wrap_socket.getpeercert.get",
        "urllib3.connection._match_hostname",
        "ssl.SSLContext.load_default_certs",
        "urllib3.util.ssl_.resolve_cert_reqs",
        "urllib3.util.ssl_.ssl_wrap_socket",
        "ssl.SSLContext.wrap_socket.getpeercert",
        "datetime.date.today",
        "warnings.warn",
        "urllib3.util.ssl_.create_urllib3_context",
        "<builtin>.hasattr",
        "urllib3.util.ssl_.resolve_ssl_version",
        "<builtin>.getattr",
        "ssl.SSLContext.wrap_socket.version"
    ],
    "datetime.date.today": [],
    "urllib3.util.ssl_.resolve_ssl_version": [
        "<builtin>.getattr",
        "<builtin>.isinstance"
    ],
    "urllib3.util.ssl_.create_urllib3_context": [
        "os.environ.get",
        "ssl.SSLContext.set_ciphers",
        "ssl.SSLContext",
        "urllib3.util.ssl_.create_urllib3_context.disable_check_hostname",
        "<builtin>.hasattr",
        "<builtin>.getattr"
    ],
    "ssl.SSLContext.load_default_certs": [],
    "urllib3.util.ssl_.ssl_wrap_socket": [
        "urllib3.util.ssl_._is_key_file_encrypted",
        "urllib3.util.ssl_.is_ipaddress",
        "ssl.SSLContext.load_verify_locations",
        "ssl.SSLContext.set_alpn_protocols",
        "ssl.SSLContext.load_cert_chain",
        "ssl.SSLContext.load_default_certs",
        "urllib3.util.ssl_._ssl_wrap_socket_impl",
        "warnings.warn",
        "urllib3.util.ssl_.create_urllib3_context",
        "<builtin>.hasattr"
    ],
    "ssl.SSLContext.wrap_socket.version": [],
    "ssl.SSLContext.wrap_socket.getpeercert": [],
    "ssl.SSLContext.wrap_socket.getpeercert.get": [],
    "urllib3.connection._match_hostname": [
        "urllib3.util.ssl_match_hostname.match_hostname",
        "logging.getLogger.warning",
        "urllib3.util.ssl_.is_ipaddress"
    ],
    "urllib3.connection.HTTPSConnection._connect_tls_proxy": [
        "urllib3.util.proxy.create_proxy_ssl_context",
        "ssl.SSLContext.wrap_socket.getpeercert.get",
        "urllib3.connection._match_hostname",
        "urllib3.util.ssl_.ssl_wrap_socket",
        "ssl.SSLContext.wrap_socket.getpeercert",
        "warnings.warn",
        "<builtin>.getattr"
    ],
    "urllib3.util.proxy.create_proxy_ssl_context": [
        "ssl.SSLContext.load_default_certs",
        "urllib3.util.ssl_.resolve_cert_reqs",
        "urllib3.util.ssl_.create_urllib3_context",
        "<builtin>.hasattr",
        "urllib3.util.ssl_.resolve_ssl_version"
    ],
    "urllib3.util.ssl_.is_ipaddress": [
        "<builtin>.bool",
        "<builtin>.isinstance",
        "re.compile.match"
    ],
    "urllib3.util.ssl_match_hostname.match_hostname": [
        "urllib3.util.ssl_match_hostname._to_unicode",
        "ssl.SSLContext.wrap_socket.getpeercert.get",
        "urllib3.util.ssl_match_hostname._ipaddress_match",
        "<builtin>.map",
        "urllib3.util.ssl_match_hostname._dnsname_match",
        "<builtin>.len",
        "<builtin>.ValueError",
        "ipaddress.ip_address"
    ],
    "urllib3.util.ssl_match_hostname": [],
    "urllib3.util.ssl_match_hostname._dnsname_match": [
        "re.compile",
        "re.compile.match",
        "re.escape",
        "<builtin>.repr"
    ],
    "<builtin>.repr": [],
    "re.escape": [],
    "re.compile.match": [],
    "urllib3.util.ssl_match_hostname._to_unicode": [
        "<builtin>.isinstance"
    ],
    "urllib3.util.ssl_match_hostname._ipaddress_match": [
        "urllib3.util.ssl_match_hostname._to_unicode",
        "ipaddress.ip_address"
    ],
    "ipaddress.ip_address": [],
    "urllib3.util.proxy": [],
    "urllib3.util.ssl_": [
        "<builtin>.getattr"
    ],
    "urllib3.util.ssl_._const_compare_digest_backport": [
        "<builtin>.abs",
        "<builtin>.bytearray",
        "<builtin>.len",
        "<builtin>.zip"
    ],
    "<builtin>.abs": [],
    "<builtin>.zip": [],
    "urllib3.util.ssl_.SSLContext.__init__": [],
    "urllib3.util.ssl_.SSLContext.load_cert_chain": [],
    "urllib3.util.ssl_.SSLContext.load_verify_locations": [],
    "urllib3.util.ssl_.SSLContext.set_ciphers": [],
    "urllib3.util.ssl_.SSLContext.wrap_socket": [
        "warnings.warn",
        "urllib3.util.ssl_.SSLContext.wrap_socket"
    ],
    "urllib3.util.ssl_.assert_fingerprint": [
        "binascii.hexlify",
        "binascii.unhexlify",
        "<builtin>.len"
    ],
    "binascii.unhexlify": [],
    "binascii.hexlify": [],
    "ssl.SSLContext": [],
    "ssl.SSLContext.set_ciphers": [],
    "urllib3.util.ssl_.create_urllib3_context.disable_check_hostname": [
        "<builtin>.getattr"
    ],
    "ssl.SSLContext.load_verify_locations": [],
    "urllib3.util.ssl_._is_key_file_encrypted": [
        "<builtin>.open"
    ],
    "ssl.SSLContext.load_cert_chain": [],
    "ssl.SSLContext.set_alpn_protocols": [],
    "urllib3.util.ssl_._ssl_wrap_socket_impl": [
        "urllib3.util.ssltransport.SSLTransport.__init__",
        "urllib3.util.ssltransport.SSLTransport._validate_ssl_context_for_tls_in_tls",
        "ssl.SSLContext.wrap_socket"
    ],
    "urllib3.util.ssltransport.SSLTransport._validate_ssl_context_for_tls_in_tls": [
        "<builtin>.hasattr"
    ],
    "urllib3.util.ssltransport.SSLTransport.__init__": [
        "ssl.SSLContext.wrap_bio",
        "urllib3.util.ssltransport.SSLTransport._ssl_io_loop",
        "ssl.MemoryBIO"
    ],
    "ssl.SSLContext.wrap_socket": [],
    "urllib3.util.ssltransport": [],
    "ssl.MemoryBIO": [],
    "ssl.SSLContext.wrap_bio": [],
    "urllib3.util.ssltransport.SSLTransport._ssl_io_loop": [
        "ssl.SSLContext.wrap_bio.do_handshake",
        "ssl.MemoryBIO.write_eof",
        "ssl.MemoryBIO.read",
        "ssl.MemoryBIO.write",
        "ssl.SSLContext.wrap_bio.unwrap",
        "ssl.SSLContext.wrap_bio.read",
        "ssl.SSLContext.wrap_bio.write"
    ],
    "urllib3.util.ssltransport.SSLTransport.__enter__": [],
    "urllib3.util.ssltransport.SSLTransport.__exit__": [
        "urllib3.util.ssltransport.SSLTransport.close"
    ],
    "urllib3.util.ssltransport.SSLTransport.close": [],
    "urllib3.util.ssltransport.SSLTransport.fileno": [],
    "urllib3.util.ssltransport.SSLTransport.read": [
        "urllib3.util.ssltransport.SSLTransport._wrap_ssl_read"
    ],
    "urllib3.util.ssltransport.SSLTransport._wrap_ssl_read": [
        "urllib3.util.ssltransport.SSLTransport._ssl_io_loop"
    ],
    "urllib3.util.ssltransport.SSLTransport.recv": [
        "urllib3.util.ssltransport.SSLTransport._wrap_ssl_read",
        "<builtin>.ValueError"
    ],
    "urllib3.util.ssltransport.SSLTransport.recv_into": [
        "urllib3.util.ssltransport.SSLTransport.read",
        "<builtin>.len",
        "<builtin>.ValueError"
    ],
    "urllib3.util.ssltransport.SSLTransport.sendall": [
        "urllib3.util.ssltransport.SSLTransport.send",
        "<builtin>.len",
        "<builtin>.ValueError",
        "<builtin>.memoryview"
    ],
    "<builtin>.memoryview": [],
    "urllib3.util.ssltransport.SSLTransport.send": [
        "urllib3.util.ssltransport.SSLTransport._ssl_io_loop",
        "<builtin>.ValueError"
    ],
    "urllib3.util.ssltransport.SSLTransport.makefile": [
        "<builtin>.set",
        "io.BufferedWriter",
        "io.BufferedRWPair",
        "io.BufferedReader",
        "<builtin>.ValueError",
        "io.TextIOWrapper"
    ],
    "io.BufferedRWPair": [],
    "io.BufferedReader": [],
    "io.BufferedWriter": [],
    "io.TextIOWrapper": [],
    "urllib3.util.ssltransport.SSLTransport.unwrap": [
        "urllib3.util.ssltransport.SSLTransport._ssl_io_loop"
    ],
    "urllib3.util.ssltransport.SSLTransport.getpeercert": [
        "ssl.SSLContext.wrap_bio.getpeercert"
    ],
    "ssl.SSLContext.wrap_bio.getpeercert": [],
    "urllib3.util.ssltransport.SSLTransport.version": [
        "ssl.SSLContext.wrap_bio.version"
    ],
    "ssl.SSLContext.wrap_bio.version": [],
    "urllib3.util.ssltransport.SSLTransport.cipher": [
        "ssl.SSLContext.wrap_bio.cipher"
    ],
    "ssl.SSLContext.wrap_bio.cipher": [],
    "urllib3.util.ssltransport.SSLTransport.selected_alpn_protocol": [
        "ssl.SSLContext.wrap_bio.selected_alpn_protocol"
    ],
    "ssl.SSLContext.wrap_bio.selected_alpn_protocol": [],
    "urllib3.util.ssltransport.SSLTransport.selected_npn_protocol": [
        "ssl.SSLContext.wrap_bio.selected_npn_protocol"
    ],
    "ssl.SSLContext.wrap_bio.selected_npn_protocol": [],
    "urllib3.util.ssltransport.SSLTransport.shared_ciphers": [
        "ssl.SSLContext.wrap_bio.shared_ciphers"
    ],
    "ssl.SSLContext.wrap_bio.shared_ciphers": [],
    "urllib3.util.ssltransport.SSLTransport.compression": [
        "ssl.SSLContext.wrap_bio.compression"
    ],
    "ssl.SSLContext.wrap_bio.compression": [],
    "urllib3.util.ssltransport.SSLTransport.settimeout": [],
    "urllib3.util.ssltransport.SSLTransport.gettimeout": [],
    "urllib3.util.ssltransport.SSLTransport._decref_socketios": [],
    "ssl.SSLContext.wrap_bio.write": [],
    "ssl.SSLContext.wrap_bio.do_handshake": [],
    "ssl.SSLContext.wrap_bio.read": [],
    "ssl.SSLContext.wrap_bio.unwrap": [],
    "ssl.MemoryBIO.read": [],
    "ssl.MemoryBIO.write": [],
    "ssl.MemoryBIO.write_eof": [],
    "urllib3.util.url": [
        "re.compile",
        "<builtin>.set"
    ],
    "urllib3.util.url.Url.__new__": [
        "<builtin>.super"
    ],
    "urllib3.util.url.Url.hostname": [],
    "urllib3.util.url.Url.request_uri": [],
    "urllib3.util.url.Url.netloc": [],
    "urllib3.util.url.Url.url": [
        "<builtin>.str"
    ],
    "urllib3.util.url.Url.__str__": [],
    "urllib3.util.url.split_first": [],
    "urllib3.util.url._encode_invalid_chars": [
        "urllib3.packages.six.ensure_text",
        "<builtin>.bytearray",
        "<builtin>.range",
        "<builtin>.ord",
        "re.compile.subn",
        "<builtin>.len",
        "<builtin>.hex"
    ],
    "urllib3.util.url._encode_invalid_chars.<lambda1>": [],
    "re.compile.subn": [],
    "urllib3.util.url._remove_path_dot_segments": [],
    "re.compile.search.span": [],
    "urllib3.util.url._idna_encode": [
        "<builtin>.any",
        "<builtin>.ord",
        "urllib3.packages.six.raise_from",
        "urllib3.exceptions.LocationParseError.__init__",
        "idna.encode"
    ],
    "idna.encode": [],
    "re.compile.match.groups": [],
    "urllib3.util.url.parse_url.ensure_type": [
        "urllib3.packages.six.ensure_text",
        "urllib3.packages.six.ensure_str"
    ],
    "idna": [],
    "idna.core": [
        "re.compile"
    ],
    "idna.core._combining_class": [
        "unicodedata.name",
        "unicodedata.combining",
        "<builtin>.chr",
        "<builtin>.ValueError"
    ],
    "unicodedata.combining": [],
    "unicodedata.name": [],
    "idna.core._is_script": [
        "<builtin>.ord",
        "idna.intranges.intranges_contain"
    ],
    "idna.intranges.intranges_contain": [
        "<builtin>.len",
        "idna.intranges._encode_range",
        "idna.intranges._decode_range",
        "bisect.bisect_left"
    ],
    "idna.core._punycode": [
        "unicodedata.normalize.decode.split.encode",
        "re.compile.split.encode",
        "unicodedata.normalize.split.encode"
    ],
    "unicodedata.normalize.decode.split.encode": [],
    "re.compile.split.encode": [],
    "unicodedata.normalize.split.encode": [],
    "idna.core._unot": [],
    "idna.core.valid_label_length": [
        "<builtin>.len"
    ],
    "idna.core.valid_string_length": [
        "<builtin>.len"
    ],
    "idna.core.check_bidi": [
        "unicodedata.bidirectional",
        "<builtin>.enumerate",
        "<builtin>.repr"
    ],
    "unicodedata.bidirectional": [],
    "idna.core.check_initial_combiner": [
        "unicodedata.category"
    ],
    "unicodedata.category": [],
    "idna.core.check_hyphen_ok": [],
    "idna.core.check_nfc": [
        "unicodedata.normalize"
    ],
    "unicodedata.normalize": [],
    "idna.core.valid_contextj": [
        "<builtin>.range",
        "<builtin>.len",
        "<builtin>.ord",
        "idna.core._combining_class"
    ],
    "idna.core.valid_contexto": [
        "<builtin>.len",
        "<builtin>.ord",
        "idna.core._is_script"
    ],
    "idna.core.check_label": [
        "idna.core.check_initial_combiner",
        "idna.core.valid_contexto",
        "idna.core.check_nfc",
        "re.compile.split.decode",
        "idna.core.valid_contextj",
        "<builtin>.enumerate",
        "idna.core.check_hyphen_ok",
        "<builtin>.len",
        "<builtin>.ord",
        "idna.intranges.intranges_contain",
        "re.compile.split.encode.lower.decode",
        "unicodedata.normalize.split.lower.decode",
        "re.compile.split.lower.decode",
        "<builtin>.isinstance",
        "idna.core._unot",
        "re.compile.split.encode.decode",
        "unicodedata.normalize.split.encode.lower.decode",
        "unicodedata.normalize.split.encode.decode",
        "<builtin>.repr",
        "idna.core.check_bidi",
        "unicodedata.normalize.split.decode"
    ],
    "re.compile.split.encode.lower.decode": [],
    "unicodedata.normalize.split.lower.decode": [],
    "re.compile.split.lower.decode": [],
    "re.compile.split.encode.decode": [],
    "re.compile.split.decode": [],
    "unicodedata.normalize.split.decode": [],
    "unicodedata.normalize.split.encode.lower.decode": [],
    "unicodedata.normalize.split.encode.decode": [],
    "idna.core.alabel": [
        "unicodedata.normalize.decode.split.encode",
        "idna.core.check_label",
        "idna.core.valid_label_length",
        "unicodedata.normalize.split.encode",
        "idna.core._punycode",
        "idna.core.ulabel",
        "re.compile.split.encode"
    ],
    "idna.core.ulabel": [
        "unicodedata.normalize.split.decode.encode",
        "re.compile.split.decode.startswith",
        "re.compile.split.decode.encode.lower",
        "re.compile.split.lower.decode.encode",
        "unicodedata.normalize.split.lower",
        "re.compile.split.lower.decode.startswith",
        "re.compile.split.encode.decode.lower",
        "unicodedata.normalize.split.startswith",
        "unicodedata.normalize.decode.split.encode.lower",
        "unicodedata.normalize.split.encode.lower.startswith",
        "unicodedata.normalize.split.decode.encode.lower",
        "re.compile.split.decode.lower.startswith",
        "re.compile.split.decode",
        "unicodedata.normalize.split.decode.encode.startswith",
        "unicodedata.normalize.split.encode.decode.lower",
        "re.compile.split.encode",
        "unicodedata.normalize.split.lower.decode.encode.startswith",
        "re.compile.split.encode.lower",
        "unicodedata.normalize.split.encode.lower",
        "re.compile.split.encode.startswith",
        "unicodedata.normalize.split.decode.lower",
        "unicodedata.normalize.split.encode.decode.lower.startswith",
        "re.compile.split.startswith",
        "<builtin>.len",
        "unicodedata.normalize.decode.split.encode.startswith",
        "re.compile.split.lower.decode.encode.startswith",
        "re.compile.split.encode.decode.startswith",
        "re.compile.split.encode.lower.startswith",
        "re.compile.split.encode.lower.decode",
        "unicodedata.normalize.split.lower.decode",
        "unicodedata.normalize.split.encode.decode.startswith",
        "<builtin>.isinstance",
        "re.compile.split.lower.startswith",
        "unicodedata.normalize.split.decode.startswith",
        "re.compile.split.decode.encode.startswith",
        "re.compile.split.lower.decode",
        "unicodedata.normalize.split.decode",
        "unicodedata.normalize.split.encode.lower.decode.startswith",
        "unicodedata.normalize.split.encode.startswith",
        "unicodedata.normalize.split.decode.lower.startswith",
        "re.compile.split.encode.decode.lower.startswith",
        "unicodedata.normalize.split.lower.decode.startswith",
        "re.compile.split.encode.decode",
        "unicodedata.normalize.split.encode.lower.decode",
        "unicodedata.normalize.split.encode.decode",
        "unicodedata.normalize.decode.split.encode.lower.startswith",
        "re.compile.split.decode.encode",
        "re.compile.split.decode.lower",
        "idna.core.check_label",
        "unicodedata.normalize.split.encode",
        "unicodedata.normalize.split.lower.startswith",
        "unicodedata.normalize.split.decode.encode.lower.startswith",
        "re.compile.split.lower",
        "re.compile.split.encode.lower.decode.startswith",
        "unicodedata.normalize.split.lower.decode.encode",
        "re.compile.split.decode.encode.lower.startswith"
    ],
    "unicodedata.normalize.split.decode.encode": [],
    "re.compile.split.lower.decode.encode": [],
    "unicodedata.normalize.split.lower.decode.encode": [],
    "re.compile.split.decode.encode": [],
    "re.compile.split.encode.lower": [],
    "re.compile.split.decode.encode.lower": [],
    "unicodedata.normalize.split.encode.lower": [],
    "unicodedata.normalize.split.lower": [],
    "re.compile.split.encode.decode.lower": [],
    "unicodedata.normalize.split.decode.lower": [],
    "re.compile.split.lower": [],
    "unicodedata.normalize.decode.split.encode.lower": [],
    "unicodedata.normalize.split.decode.encode.lower": [],
    "unicodedata.normalize.split.encode.decode.lower": [],
    "re.compile.split.decode.lower": [],
    "re.compile.split.decode.startswith": [],
    "re.compile.split.lower.decode.startswith": [],
    "unicodedata.normalize.split.startswith": [],
    "unicodedata.normalize.split.encode.lower.startswith": [],
    "re.compile.split.decode.lower.startswith": [],
    "unicodedata.normalize.split.decode.encode.startswith": [],
    "unicodedata.normalize.split.lower.decode.encode.startswith": [],
    "re.compile.split.encode.startswith": [],
    "unicodedata.normalize.split.encode.decode.lower.startswith": [],
    "re.compile.split.startswith": [],
    "unicodedata.normalize.decode.split.encode.startswith": [],
    "re.compile.split.lower.decode.encode.startswith": [],
    "re.compile.split.encode.decode.startswith": [],
    "re.compile.split.encode.lower.startswith": [],
    "unicodedata.normalize.split.encode.decode.startswith": [],
    "re.compile.split.lower.startswith": [],
    "unicodedata.normalize.split.decode.startswith": [],
    "re.compile.split.decode.encode.startswith": [],
    "unicodedata.normalize.split.encode.lower.decode.startswith": [],
    "unicodedata.normalize.split.encode.startswith": [],
    "unicodedata.normalize.split.decode.lower.startswith": [],
    "re.compile.split.encode.decode.lower.startswith": [],
    "unicodedata.normalize.split.lower.decode.startswith": [],
    "unicodedata.normalize.decode.split.encode.lower.startswith": [],
    "unicodedata.normalize.split.lower.startswith": [],
    "unicodedata.normalize.split.decode.encode.lower.startswith": [],
    "re.compile.split.encode.lower.decode.startswith": [],
    "re.compile.split.decode.encode.lower.startswith": [],
    "idna.core.uts46_remap": [
        "<builtin>.IndexError",
        "<builtin>.ord",
        "<builtin>.enumerate",
        "idna.core._unot",
        "unicodedata.normalize",
        "<builtin>.len",
        "<builtin>.repr",
        "bisect.bisect_left"
    ],
    "bisect.bisect_left": [],
    "<builtin>.IndexError": [],
    "idna.core.encode": [
        "unicodedata.normalize.split",
        "idna.core.valid_string_length",
        "re.compile.split",
        "<builtin>.isinstance",
        "idna.core.uts46_remap",
        "unicodedata.normalize.decode.split",
        "idna.core.alabel",
        "<builtin>.str"
    ],
    "unicodedata.normalize.split": [],
    "unicodedata.normalize.decode.split": [],
    "re.compile.split": [],
    "idna.core.decode": [
        "unicodedata.normalize.split",
        "re.compile.split",
        "<builtin>.isinstance",
        "idna.core.uts46_remap",
        "idna.core.ulabel",
        "<builtin>.str"
    ],
    "idna.idnadata": [],
    "idna.intranges": [],
    "idna.intranges.intranges_from_list": [
        "<builtin>.sorted",
        "<builtin>.tuple",
        "idna.intranges._encode_range",
        "<builtin>.range",
        "<builtin>.len"
    ],
    "idna.intranges._encode_range": [],
    "idna.intranges._decode_range": [],
    "idna.uts46data": [
        "idna.uts46data._seg_57",
        "idna.uts46data._seg_78",
        "idna.uts46data._seg_48",
        "idna.uts46data._seg_15",
        "idna.uts46data._seg_49",
        "idna.uts46data._seg_55",
        "idna.uts46data._seg_67",
        "idna.uts46data._seg_60",
        "idna.uts46data._seg_28",
        "idna.uts46data._seg_51",
        "idna.uts46data._seg_34",
        "idna.uts46data._seg_27",
        "idna.uts46data._seg_70",
        "idna.uts46data._seg_69",
        "idna.uts46data._seg_19",
        "idna.uts46data._seg_42",
        "idna.uts46data._seg_17",
        "idna.uts46data._seg_6",
        "idna.uts46data._seg_11",
        "idna.uts46data._seg_29",
        "idna.uts46data._seg_81",
        "idna.uts46data._seg_22",
        "idna.uts46data._seg_65",
        "idna.uts46data._seg_23",
        "idna.uts46data._seg_53",
        "idna.uts46data._seg_30",
        "idna.uts46data._seg_20",
        "idna.uts46data._seg_18",
        "idna.uts46data._seg_24",
        "idna.uts46data._seg_76",
        "idna.uts46data._seg_72",
        "idna.uts46data._seg_14",
        "idna.uts46data._seg_45",
        "idna.uts46data._seg_8",
        "idna.uts46data._seg_21",
        "idna.uts46data._seg_41",
        "idna.uts46data._seg_0",
        "<builtin>.tuple",
        "idna.uts46data._seg_56",
        "idna.uts46data._seg_36",
        "idna.uts46data._seg_10",
        "idna.uts46data._seg_2",
        "idna.uts46data._seg_7",
        "idna.uts46data._seg_9",
        "idna.uts46data._seg_62",
        "idna.uts46data._seg_59",
        "idna.uts46data._seg_33",
        "idna.uts46data._seg_64",
        "idna.uts46data._seg_5",
        "idna.uts46data._seg_77",
        "idna.uts46data._seg_46",
        "idna.uts46data._seg_37",
        "idna.uts46data._seg_3",
        "idna.uts46data._seg_66",
        "idna.uts46data._seg_40",
        "idna.uts46data._seg_71",
        "idna.uts46data._seg_35",
        "idna.uts46data._seg_4",
        "idna.uts46data._seg_63",
        "idna.uts46data._seg_54",
        "idna.uts46data._seg_79",
        "idna.uts46data._seg_39",
        "idna.uts46data._seg_80",
        "idna.uts46data._seg_31",
        "idna.uts46data._seg_32",
        "idna.uts46data._seg_38",
        "idna.uts46data._seg_13",
        "idna.uts46data._seg_12",
        "idna.uts46data._seg_52",
        "idna.uts46data._seg_75",
        "idna.uts46data._seg_74",
        "idna.uts46data._seg_61",
        "idna.uts46data._seg_68",
        "idna.uts46data._seg_73",
        "idna.uts46data._seg_26",
        "idna.uts46data._seg_1",
        "idna.uts46data._seg_50",
        "idna.uts46data._seg_47",
        "idna.uts46data._seg_58",
        "idna.uts46data._seg_43",
        "idna.uts46data._seg_44",
        "idna.uts46data._seg_25",
        "idna.uts46data._seg_16"
    ],
    "idna.uts46data._seg_0": [],
    "idna.uts46data._seg_1": [],
    "idna.uts46data._seg_2": [],
    "idna.uts46data._seg_3": [],
    "idna.uts46data._seg_4": [],
    "idna.uts46data._seg_5": [],
    "idna.uts46data._seg_6": [],
    "idna.uts46data._seg_7": [],
    "idna.uts46data._seg_8": [],
    "idna.uts46data._seg_9": [],
    "idna.uts46data._seg_10": [],
    "idna.uts46data._seg_11": [],
    "idna.uts46data._seg_12": [],
    "idna.uts46data._seg_13": [],
    "idna.uts46data._seg_14": [],
    "idna.uts46data._seg_15": [],
    "idna.uts46data._seg_16": [],
    "idna.uts46data._seg_17": [],
    "idna.uts46data._seg_18": [],
    "idna.uts46data._seg_19": [],
    "idna.uts46data._seg_20": [],
    "idna.uts46data._seg_21": [],
    "idna.uts46data._seg_22": [],
    "idna.uts46data._seg_23": [],
    "idna.uts46data._seg_24": [],
    "idna.uts46data._seg_25": [],
    "idna.uts46data._seg_26": [],
    "idna.uts46data._seg_27": [],
    "idna.uts46data._seg_28": [],
    "idna.uts46data._seg_29": [],
    "idna.uts46data._seg_30": [],
    "idna.uts46data._seg_31": [],
    "idna.uts46data._seg_32": [],
    "idna.uts46data._seg_33": [],
    "idna.uts46data._seg_34": [],
    "idna.uts46data._seg_35": [],
    "idna.uts46data._seg_36": [],
    "idna.uts46data._seg_37": [],
    "idna.uts46data._seg_38": [],
    "idna.uts46data._seg_39": [],
    "idna.uts46data._seg_40": [],
    "idna.uts46data._seg_41": [],
    "idna.uts46data._seg_42": [],
    "idna.uts46data._seg_43": [],
    "idna.uts46data._seg_44": [],
    "idna.uts46data._seg_45": [],
    "idna.uts46data._seg_46": [],
    "idna.uts46data._seg_47": [],
    "idna.uts46data._seg_48": [],
    "idna.uts46data._seg_49": [],
    "idna.uts46data._seg_50": [],
    "idna.uts46data._seg_51": [],
    "idna.uts46data._seg_52": [],
    "idna.uts46data._seg_53": [],
    "idna.uts46data._seg_54": [],
    "idna.uts46data._seg_55": [],
    "idna.uts46data._seg_56": [],
    "idna.uts46data._seg_57": [],
    "idna.uts46data._seg_58": [],
    "idna.uts46data._seg_59": [],
    "idna.uts46data._seg_60": [],
    "idna.uts46data._seg_61": [],
    "idna.uts46data._seg_62": [],
    "idna.uts46data._seg_63": [],
    "idna.uts46data._seg_64": [],
    "idna.uts46data._seg_65": [],
    "idna.uts46data._seg_66": [],
    "idna.uts46data._seg_67": [],
    "idna.uts46data._seg_68": [],
    "idna.uts46data._seg_69": [],
    "idna.uts46data._seg_70": [],
    "idna.uts46data._seg_71": [],
    "idna.uts46data._seg_72": [],
    "idna.uts46data._seg_73": [],
    "idna.uts46data._seg_74": [],
    "idna.uts46data._seg_75": [],
    "idna.uts46data._seg_76": [],
    "idna.uts46data._seg_77": [],
    "idna.uts46data._seg_78": [],
    "idna.uts46data._seg_79": [],
    "idna.uts46data._seg_80": [],
    "idna.uts46data._seg_81": [],
    "idna.package_data": [],
    "urllib3.packages.backports": [],
    "urllib3.util.queue": [],
    "urllib3.util.queue.LifoQueue._init": [
        "collections.deque"
    ],
    "collections.deque": [],
    "urllib3.util.queue.LifoQueue._qsize": [],
    "urllib3.util.queue.LifoQueue._put": [
        "collections.deque.append"
    ],
    "collections.deque.append": [],
    "urllib3.util.queue.LifoQueue._get": [
        "collections.deque.pop"
    ],
    "collections.deque.pop": [],
    "urllib3.request": [],
    "urllib3.request.RequestMethods.urlopen": [
        "<builtin>.NotImplementedError"
    ],
    "urllib3.request.RequestMethods.request": [
        "urllib3.request.RequestMethods.request_encode_url",
        "urllib3.request.RequestMethods.request_encode_body"
    ],
    "urllib3.request.RequestMethods.request_encode_url": [
        "packages.six.moves.urllib.parse.urlencode",
        "urllib3.request.RequestMethods.urlopen",
        "urllib3.connectionpool.HTTPConnectionPool.urlopen",
        "urllib3.poolmanager.ProxyManager.urlopen",
        "urllib3.poolmanager.PoolManager.urlopen"
    ],
    "urllib3.request.RequestMethods.request_encode_body": [
        "<builtin>.TypeError",
        "packages.six.moves.urllib.parse.urlencode",
        "urllib3.request.RequestMethods.urlopen",
        "urllib3.connectionpool.HTTPConnectionPool.urlopen",
        "urllib3.poolmanager.ProxyManager.urlopen",
        "urllib3.poolmanager.PoolManager.urlopen",
        "urllib3.filepost.encode_multipart_formdata"
    ],
    "packages.six.moves.urllib.parse.urlencode": [],
    "urllib3.poolmanager.PoolManager.urlopen": [
        "logging.getLogger.info",
        "urllib3.util.url.parse_url",
        "_collections.RecentlyUsedContainer.get.urlopen",
        "_collections.RecentlyUsedContainer.get.urlopen.drain_conn",
        "urllib3.util.retry.Retry.from_int",
        "urllib3.poolmanager.PoolManager.urlopen",
        "urllib3.poolmanager.PoolManager.connection_from_host",
        "urllib3.poolmanager.PoolManager._proxy_requires_url_absolute_form",
        "packages.six.moves.urllib.parse.urljoin",
        "urllib3.poolmanager.PoolManager._validate_proxy_scheme_url_selection",
        "_collections.RecentlyUsedContainer.get.urlopen.get_redirect_location",
        "urllib3.poolmanager.ProxyManager.urlopen",
        "<builtin>.isinstance",
        "_collections.RecentlyUsedContainer.get.is_same_host",
        "urllib3.poolmanager.ProxyManager.connection_from_host",
        "urllib3.packages.six.iterkeys",
        "_collections.HTTPHeaderDict",
        "_collections.HTTPHeaderDict._prepare_for_method_change",
        "<builtin>.list"
    ],
    "urllib3.poolmanager.ProxyManager.urlopen": [
        "urllib3.util.proxy.connection_requires_http_tunnel",
        "urllib3.poolmanager.ProxyManager._set_proxy_headers",
        "urllib3.util.url.parse_url",
        "<builtin>.super"
    ],
    "urllib3.filepost.encode_multipart_formdata": [
        "urllib3.filepost.iter_field_objects",
        "urllib3.packages.six.b",
        "<builtin>.isinstance",
        "urllib3.filepost.choose_boundary",
        "io.BytesIO",
        "io.BytesIO.write",
        "<builtin>.str",
        "io.BytesIO.getvalue"
    ],
    "urllib3.request.RequestModule.__call__": [
        "<builtin>.TypeError"
    ],
    "urllib3.filepost": [
        "codecs.lookup"
    ],
    "codecs.lookup": [],
    "urllib3.filepost.choose_boundary": [
        "os.urandom",
        "binascii.hexlify.decode",
        "binascii.hexlify"
    ],
    "os.urandom": [],
    "binascii.hexlify.decode": [],
    "urllib3.filepost.iter_field_objects": [
        "urllib3.fields.RequestField.from_tuples",
        "<builtin>.iter",
        "urllib3.packages.six.iteritems",
        "<builtin>.isinstance"
    ],
    "urllib3.fields.RequestField.from_tuples": [
        "urllib3.fields.RequestField.__init__",
        "urllib3.fields.guess_content_type",
        "<builtin>.len",
        "<builtin>.isinstance"
    ],
    "urllib3.filepost.iter_fields": [
        "urllib3.packages.six.iteritems",
        "<builtin>.isinstance"
    ],
    "io.BytesIO": [],
    "io.BytesIO.write": [],
    "io.BytesIO.getvalue": [],
    "urllib3.fields": [
        "<builtin>.range"
    ],
    "urllib3.fields.guess_content_type": [
        "mimetypes.guess_type"
    ],
    "mimetypes.guess_type": [],
    "urllib3.fields.format_header_param_rfc2231": [
        "<builtin>.any",
        "email.utils.encode_rfc2231.decode",
        "email.utils.encode_rfc2231",
        "<builtin>.isinstance",
        "email.utils.encode_rfc2231.decode.encode",
        "email.utils.encode_rfc2231.encode"
    ],
    "email.utils.encode_rfc2231.decode": [],
    "email.utils.encode_rfc2231.encode": [],
    "email.utils.encode_rfc2231.decode.encode": [],
    "email.utils.encode_rfc2231": [],
    "urllib3.fields._replace_multiple": [
        "re.compile",
        "re.compile.sub",
        "re.escape"
    ],
    "urllib3.fields._replace_multiple.replacer": [],
    "re.compile.sub": [],
    "urllib3.fields.format_header_param_html5": [
        "urllib3.fields._replace_multiple",
        "<builtin>.isinstance",
        "re.compile.sub.decode"
    ],
    "re.compile.sub.decode": [],
    "urllib3.fields.RequestField.__init__": [
        "<builtin>.dict"
    ],
    "urllib3.fields.RequestField._render_part": [
        "urllib3.fields.format_header_param_html5"
    ],
    "urllib3.fields.RequestField._render_parts": [
        "urllib3.fields.RequestField._render_part",
        "<builtin>.isinstance"
    ],
    "urllib3.fields.RequestField.render_headers": [],
    "urllib3.fields.RequestField.make_multipart": [],
    "urllib3.packages.backports.weakref_finalize": [],
    "itertools.count": [],
    "urllib3.packages.backports.weakref_finalize.weakref_finalize": [
        "itertools.count"
    ],
    "weakref.ref": [],
    "<builtin>.next": [],
    "urllib3.packages.backports.weakref_finalize.weakref_finalize.__call__": [],
    "urllib3.packages.backports.weakref_finalize.weakref_finalize.detach": [],
    "urllib3.packages.backports.weakref_finalize.weakref_finalize.peek": [],
    "urllib3.packages.backports.weakref_finalize.weakref_finalize.alive": [],
    "urllib3.packages.backports.weakref_finalize.weakref_finalize.atexit": [
        "<builtin>.bool"
    ],
    "urllib3.packages.backports.weakref_finalize.weakref_finalize.__repr__": [
        "<builtin>.type",
        "<builtin>.id"
    ],
    "<builtin>.id": [],
    "urllib3.packages.backports.weakref_finalize.weakref_finalize._select_for_exit": [],
    "urllib3.packages.backports.weakref_finalize.weakref_finalize._select_for_exit.<lambda1>": [],
    "urllib3.packages.backports.weakref_finalize.weakref_finalize._exitfunc": [
        "sys.exc_info",
        "sys.excepthook",
        "urllib3.packages.backports.weakref_finalize.weakref_finalize._select_for_exit",
        "gc.disable",
        "gc.enable",
        "gc.isenabled"
    ],
    "gc.isenabled": [],
    "gc.disable": [],
    "sys.excepthook": [],
    "gc.enable": [],
    "urllib3.response": [
        "logging.getLogger"
    ],
    "urllib3.response.DeflateDecoder.__init__": [
        "zlib.decompressobj"
    ],
    "zlib.decompressobj": [],
    "urllib3.response.DeflateDecoder.__getattr__": [
        "<builtin>.getattr"
    ],
    "urllib3.response.DeflateDecoder.decompress": [
        "urllib3.response.DeflateDecoder.decompress",
        "zlib.decompressobj",
        "urllib3.response.DeflateDecoder._obj.decompress"
    ],
    "urllib3.response.DeflateDecoder._obj.decompress": [],
    "urllib3.response.GzipDecoder.__init__": [
        "zlib.decompressobj"
    ],
    "urllib3.response.GzipDecoder.__getattr__": [
        "<builtin>.getattr"
    ],
    "urllib3.response.GzipDecoder.decompress": [
        "urllib3.response.GzipDecoder._obj.decompress",
        "zlib.decompressobj",
        "<builtin>.bytearray",
        "<builtin>.bytes"
    ],
    "<builtin>.bytes": [],
    "urllib3.response.GzipDecoder._obj.decompress": [],
    "urllib3.response.BrotliDecoder.__init__": [
        "brotli.Decompressor",
        "<builtin>.hasattr",
        "brotlicffi.Decompressor"
    ],
    "brotli.Decompressor": [],
    "brotlicffi.Decompressor": [],
    "urllib3.response.BrotliDecoder.flush": [
        "brotli.Decompressor.flush",
        "brotlicffi.Decompressor.flush",
        "<builtin>.hasattr"
    ],
    "brotlicffi.Decompressor.flush": [],
    "brotli.Decompressor.flush": [],
    "urllib3.response.MultiDecoder.__init__": [
        "_collections.HTTPHeaderDict.from_httplib.get.lower.split",
        "urllib3.response._get_decoder",
        "_collections.HTTPHeaderDict.get.lower.split"
    ],
    "urllib3.response._get_decoder": [
        "urllib3.response.BrotliDecoder.__init__",
        "urllib3.response.GzipDecoder.__init__",
        "urllib3.response.DeflateDecoder.__init__",
        "urllib3.response.MultiDecoder.__init__"
    ],
    "_collections.HTTPHeaderDict.from_httplib.get.lower.split": [],
    "_collections.HTTPHeaderDict.get.lower.split": [],
    "urllib3.response.MultiDecoder.flush": [],
    "urllib3.response.MultiDecoder.decompress": [
        "<builtin>.reversed"
    ],
    "urllib3.response.HTTPResponse.__init__": [
        "_collections.HTTPHeaderDict.get",
        "_collections.HTTPHeaderDict.from_httplib.get",
        "_collections.HTTPHeaderDict",
        "_collections.HTTPHeaderDict.from_httplib.get.lower",
        "<builtin>.isinstance",
        "urllib3.response.HTTPResponse._init_length",
        "urllib3.response.HTTPResponse.read",
        "_collections.HTTPHeaderDict.get.lower.split",
        "<builtin>.hasattr",
        "_collections.HTTPHeaderDict.from_httplib.get.lower.split",
        "_collections.HTTPHeaderDict.get.lower"
    ],
    "_collections.HTTPHeaderDict.from_httplib.get": [],
    "_collections.HTTPHeaderDict.get": [],
    "_collections.HTTPHeaderDict.get.lower": [],
    "_collections.HTTPHeaderDict.from_httplib.get.lower": [],
    "urllib3.response.HTTPResponse._init_length": [
        "_collections.HTTPHeaderDict.from_httplib.get",
        "_collections.HTTPHeaderDict.get",
        "<builtin>.set",
        "logging.getLogger.warning",
        "<builtin>.len",
        "<builtin>.int",
        "_collections.HTTPHeaderDict.from_httplib.get.split",
        "_collections.HTTPHeaderDict.get.split"
    ],
    "urllib3.response.HTTPResponse.read": [
        "urllib3.response.HTTPResponse._init_decoder",
        "urllib3.response.HTTPResponse._error_catcher",
        "urllib3.response.HTTPResponse._decode",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.close",
        "urllib3.exceptions.IncompleteRead.__init__",
        "urllib3.response.HTTPResponse._fp_read",
        "<builtin>.len",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.close",
        "<builtin>.getattr"
    ],
    "urllib3.response.HTTPResponse.get_redirect_location": [
        "_collections.HTTPHeaderDict.from_httplib.get",
        "_collections.HTTPHeaderDict.get"
    ],
    "urllib3.response.HTTPResponse.release_conn": [],
    "urllib3.response.HTTPResponse.drain_conn": [
        "urllib3.response.HTTPResponse.read"
    ],
    "urllib3.response.HTTPResponse.data": [
        "urllib3.response.HTTPResponse.read"
    ],
    "urllib3.response.HTTPResponse.connection": [],
    "urllib3.response.HTTPResponse.isclosed": [
        "urllib3.util.response.is_fp_closed"
    ],
    "_collections.HTTPHeaderDict.from_httplib.get.split": [],
    "_collections.HTTPHeaderDict.get.split": [],
    "urllib3.response.HTTPResponse._init_decoder": [
        "urllib3.response._get_decoder",
        "_collections.HTTPHeaderDict.from_httplib.get",
        "_collections.HTTPHeaderDict.get",
        "_collections.HTTPHeaderDict.get.lower.split",
        "<builtin>.len",
        "_collections.HTTPHeaderDict.from_httplib.get.lower.split",
        "_collections.HTTPHeaderDict.get.lower",
        "_collections.HTTPHeaderDict.from_httplib.get.lower"
    ],
    "urllib3.response.HTTPResponse._decode": [
        "brotli.Decompressor.process",
        "urllib3.response.MultiDecoder.decompress",
        "urllib3.response.HTTPResponse._flush_decoder",
        "urllib3.response.GzipDecoder.decompress",
        "_collections.HTTPHeaderDict.from_httplib.get",
        "_collections.HTTPHeaderDict.get",
        "_collections.HTTPHeaderDict.from_httplib.get.lower",
        "urllib3.response.DeflateDecoder.decompress",
        "brotlicffi.Decompressor.process",
        "brotli.Decompressor.decompress",
        "brotlicffi.Decompressor.decompress",
        "_collections.HTTPHeaderDict.get.lower"
    ],
    "brotli.Decompressor.process": [],
    "brotlicffi.Decompressor.process": [],
    "brotli.Decompressor.decompress": [],
    "brotlicffi.Decompressor.decompress": [],
    "urllib3.response.HTTPResponse._flush_decoder": [
        "brotli.Decompressor.process",
        "urllib3.response.MultiDecoder.decompress",
        "urllib3.response.MultiDecoder.flush",
        "urllib3.response.GzipDecoder.decompress",
        "urllib3.response.DeflateDecoder.decompress",
        "brotlicffi.Decompressor.process",
        "brotli.Decompressor.decompress",
        "brotlicffi.Decompressor.decompress",
        "urllib3.response.BrotliDecoder.flush"
    ],
    "urllib3.response.HTTPResponse": [
        "contextlib.contextmanager"
    ],
    "urllib3.response.HTTPResponse._error_catcher": [
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.isclosed",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.isclosed",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.close",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.close",
        "urllib3.response.HTTPResponse.release_conn",
        "<builtin>.str",
        "urllib3.exceptions.RequestError.__init__"
    ],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.close": [],
    "_collections.RecentlyUsedContainer.get._get_conn.getresponse.close": [],
    "urllib3.response.HTTPResponse._fp_read": [
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.read",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.read",
        "io.BytesIO",
        "io.BytesIO.write",
        "io.BytesIO.getvalue",
        "<builtin>.min"
    ],
    "_collections.RecentlyUsedContainer.get._get_conn.getresponse.read": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.read": [],
    "urllib3.response.HTTPResponse.stream": [
        "urllib3.response.HTTPResponse.supports_chunked_reads",
        "urllib3.response.HTTPResponse.read_chunked",
        "urllib3.util.response.is_fp_closed",
        "urllib3.response.HTTPResponse.read"
    ],
    "urllib3.response.HTTPResponse.supports_chunked_reads": [
        "<builtin>.hasattr"
    ],
    "urllib3.response.HTTPResponse.read_chunked": [
        "urllib3.response.HTTPResponse.supports_chunked_reads",
        "urllib3.response.HTTPResponse._handle_chunk",
        "urllib3.response.HTTPResponse._flush_decoder",
        "urllib3.response.HTTPResponse._init_decoder",
        "urllib3.response.HTTPResponse._error_catcher",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.fp.readline",
        "urllib3.response.HTTPResponse._decode",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.close",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.fp.readline",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.close",
        "urllib3.response.HTTPResponse._update_chunk_length",
        "urllib3.util.response.is_response_to_head"
    ],
    "_collections.HTTPHeaderDict.from_httplib": [],
    "_collections.RecentlyUsedContainer.get._get_conn.getresponse.msg.items": [],
    "_collections.HTTPHeaderDict.from_httplib.items": [],
    "_collections.HTTPHeaderDict.items": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.msg.items": [],
    "urllib3.response.HTTPResponse.getheaders": [
        "warnings.warn"
    ],
    "urllib3.response.HTTPResponse.getheader": [
        "_collections.HTTPHeaderDict.get",
        "_collections.HTTPHeaderDict.from_httplib.get",
        "warnings.warn"
    ],
    "urllib3.response.HTTPResponse.info": [],
    "urllib3.response.HTTPResponse.close": [
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.close",
        "io.IOBase.close",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.close"
    ],
    "io.IOBase.close": [],
    "urllib3.response.HTTPResponse.closed": [
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.isclosed",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.isclosed",
        "io.IOBase.closed.__get__",
        "<builtin>.hasattr"
    ],
    "io.IOBase.closed.__get__": [],
    "urllib3.response.HTTPResponse.fileno": [
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.fileno",
        "<builtin>.IOError",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.fileno",
        "<builtin>.hasattr"
    ],
    "<builtin>.IOError": [],
    "_collections.RecentlyUsedContainer.get._get_conn.getresponse.fileno": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.fileno": [],
    "urllib3.response.HTTPResponse.flush": [
        "<builtin>.getattr",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.flush",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.flush",
        "<builtin>.hasattr"
    ],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.flush": [],
    "_collections.RecentlyUsedContainer.get._get_conn.getresponse.flush": [],
    "urllib3.response.HTTPResponse.readable": [],
    "urllib3.response.HTTPResponse.readinto": [
        "urllib3.response.HTTPResponse.read",
        "<builtin>.len"
    ],
    "urllib3.response.HTTPResponse._update_chunk_length": [
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.fp.readline.split",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.fp.readline",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse.fp.readline.split",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.fp.readline",
        "<builtin>.int",
        "urllib3.exceptions.InvalidChunkLength.__init__",
        "urllib3.response.HTTPResponse.close"
    ],
    "_collections.RecentlyUsedContainer.get._get_conn.getresponse.fp.readline": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.fp.readline": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse.fp.readline.split": [],
    "_collections.RecentlyUsedContainer.get._get_conn.getresponse.fp.readline.split": [],
    "urllib3.response.HTTPResponse._handle_chunk": [
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse._safe_read",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse._safe_read"
    ],
    "_collections.RecentlyUsedContainer.get._get_conn.getresponse._safe_read": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse._safe_read": [],
    "urllib3.response.HTTPResponse.geturl": [
        "<builtin>.len"
    ],
    "urllib3.response.HTTPResponse.__iter__": [
        "brotli.Decompressor.process.split",
        "brotlicffi.Decompressor.decompress.split",
        "brotlicffi.Decompressor.process.split",
        "brotli.Decompressor.decompress.split",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse._safe_read.split",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse._safe_read.split",
        "urllib3.response.HTTPResponse.stream"
    ],
    "brotli.Decompressor.process.split": [],
    "brotlicffi.Decompressor.decompress.split": [],
    "brotlicffi.Decompressor.process.split": [],
    "brotli.Decompressor.decompress.split": [],
    "_collections.RecentlyUsedContainer.get._get_conn.getresponse._safe_read.split": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse._safe_read.split": [],
    "urllib3._version": [],
    "urllib3.poolmanager": [
        "logging.getLogger",
        "collections.namedtuple",
        "functools.partial"
    ],
    "urllib3.poolmanager._default_key_normalizer": [
        "<builtin>.list",
        "<builtin>.tuple",
        "<builtin>.frozenset"
    ],
    "urllib3.poolmanager.PoolManager.__init__": [
        "_collections.RecentlyUsedContainer",
        "urllib3.request.RequestMethods.__init__"
    ],
    "_collections.RecentlyUsedContainer": [],
    "urllib3.poolmanager.PoolManager.__enter__": [],
    "urllib3.poolmanager.PoolManager.__exit__": [
        "urllib3.poolmanager.PoolManager.clear"
    ],
    "urllib3.poolmanager.PoolManager.clear": [
        "_collections.RecentlyUsedContainer.clear"
    ],
    "urllib3.poolmanager.PoolManager._new_pool": [],
    "_collections.RecentlyUsedContainer.clear": [],
    "urllib3.poolmanager.PoolManager.connection_from_host": [
        "urllib3.poolmanager.PoolManager._merge_pool_kwargs",
        "urllib3.poolmanager.PoolManager.connection_from_context"
    ],
    "urllib3.poolmanager.PoolManager._merge_pool_kwargs": [],
    "urllib3.poolmanager.PoolManager.connection_from_context": [
        "urllib3.poolmanager.PoolManager.connection_from_pool_key",
        "urllib3.exceptions.URLSchemeUnknown.__init__"
    ],
    "urllib3.poolmanager.PoolManager.connection_from_pool_key": [
        "_collections.RecentlyUsedContainer.get",
        "urllib3.poolmanager.PoolManager._new_pool"
    ],
    "_collections.RecentlyUsedContainer.get": [],
    "urllib3.poolmanager.PoolManager.connection_from_url": [
        "urllib3.poolmanager.PoolManager.connection_from_host",
        "urllib3.poolmanager.ProxyManager.connection_from_host",
        "urllib3.util.url.parse_url"
    ],
    "urllib3.poolmanager.ProxyManager.connection_from_host": [
        "<builtin>.super"
    ],
    "urllib3.poolmanager.PoolManager._proxy_requires_url_absolute_form": [
        "urllib3.util.proxy.connection_requires_http_tunnel"
    ],
    "urllib3.poolmanager.PoolManager._validate_proxy_scheme_url_selection": [],
    "_collections.RecentlyUsedContainer.get.urlopen": [],
    "_collections.RecentlyUsedContainer.get.urlopen.get_redirect_location": [],
    "packages.six.moves.urllib.parse.urljoin": [],
    "_collections.RecentlyUsedContainer.get.is_same_host": [],
    "_collections.RecentlyUsedContainer.get.urlopen.drain_conn": [],
    "logging.getLogger.info": [],
    "urllib3.poolmanager.ProxyManager.__init__": [
        "urllib3.util.url.parse_url",
        "collections.namedtuple",
        "<builtin>.isinstance",
        "<builtin>.super",
        "urllib3.exceptions.ProxySchemeUnknown.__init__",
        "collections.namedtuple._replace"
    ],
    "collections.namedtuple._replace": [],
    "urllib3.poolmanager.ProxyManager._set_proxy_headers": [
        "urllib3.util.url.parse_url"
    ],
    "urllib3.poolmanager.proxy_from_url": [
        "urllib3.poolmanager.ProxyManager.__init__"
    ],
    "requests.exceptions": [],
    "requests.exceptions.JSONDecodeError.__init__": [
        "json.JSONDecodeError.__init__",
        "simplejson.JSONDecodeError.__init__",
        "requests.exceptions.RequestException.__init__"
    ],
    "json.JSONDecodeError.__init__": [],
    "simplejson.JSONDecodeError.__init__": [],
    "requests.compat": [],
    "charset_normalizer": [
        "logging.getLogger.addHandler",
        "logging.NullHandler",
        "logging.getLogger"
    ],
    "charset_normalizer.api": [
        "logging.StreamHandler.setFormatter",
        "logging.StreamHandler",
        "logging.getLogger",
        "logging.Formatter"
    ],
    "charset_normalizer.api.from_bytes": [
        "<builtin>.round",
        "logging.getLogger.debug",
        "charset_normalizer.utils.cut_sequence_chunks",
        "charset_normalizer.utils.should_strip_sig_or_bom",
        "charset_normalizer.cd.merge_coherence_ratios",
        "charset_normalizer.utils.is_cp_similar",
        "logging.getLogger.log",
        "charset_normalizer.utils.any_specified_encoding",
        "charset_normalizer.utils.is_multi_byte_encoding",
        "<builtin>.range",
        "charset_normalizer.cd.encoding_languages",
        "<builtin>.len",
        "logging.getLogger.setLevel",
        "<builtin>.int",
        "<builtin>.str",
        "charset_normalizer.utils.identify_sig_or_bom",
        "logging.getLogger.addHandler",
        "<builtin>.set",
        "charset_normalizer.cd.mb_encoding_languages",
        "<builtin>.isinstance",
        "<builtin>.max",
        "<builtin>.type",
        "logging.getLogger.removeHandler",
        "<builtin>.TypeError",
        "<builtin>.sum",
        "charset_normalizer.models.CharsetMatches.__init__",
        "charset_normalizer.models.CharsetMatch.__init__",
        "charset_normalizer.utils.iana_name",
        "charset_normalizer.md.mess_ratio",
        "charset_normalizer.cd.coherence_ratio"
    ],
    "logging.getLogger.removeHandler": [],
    "charset_normalizer.models.CharsetMatch.__init__": [],
    "charset_normalizer.models.CharsetMatches.__init__": [
        "<builtin>.sorted"
    ],
    "logging.getLogger.log": [],
    "charset_normalizer.utils.iana_name": [
        "encodings.aliases.aliases.items",
        "<builtin>.ValueError"
    ],
    "charset_normalizer.utils.any_specified_encoding": [
        "encodings.aliases.aliases.items",
        "<builtin>.isinstance",
        "<builtin>.len",
        "re.findall",
        "<builtin>.min"
    ],
    "charset_normalizer.utils.identify_sig_or_bom": [
        "<builtin>.isinstance"
    ],
    "charset_normalizer.utils.should_strip_sig_or_bom": [],
    "charset_normalizer.utils.is_multi_byte_encoding": [
        "importlib.import_module",
        "<builtin>.issubclass"
    ],
    "charset_normalizer.utils.is_cp_similar": [],
    "charset_normalizer.utils.cut_sequence_chunks": [
        "<builtin>.len",
        "<builtin>.range",
        "<builtin>.min"
    ],
    "charset_normalizer.md.mess_ratio": [
        "<builtin>.round",
        "<builtin>.range",
        "<builtin>.sum",
        "<builtin>.print",
        "<builtin>.len",
        "<builtin>.zip"
    ],
    "<builtin>.sum": [],
    "<builtin>.round": [],
    "charset_normalizer.cd.encoding_languages": [
        "charset_normalizer.cd.encoding_unicode_range",
        "charset_normalizer.cd.unicode_range_languages"
    ],
    "charset_normalizer.cd.mb_encoding_languages": [],
    "charset_normalizer.cd.coherence_ratio": [
        "<builtin>.sorted",
        "<builtin>.round",
        "<builtin>.sum",
        "charset_normalizer.cd.characters_popularity_compare",
        "collections.Counter",
        "charset_normalizer.cd.alphabet_languages",
        "charset_normalizer.cd.alpha_unicode_split"
    ],
    "charset_normalizer.cd.merge_coherence_ratios": [
        "<builtin>.sorted",
        "<builtin>.round",
        "<builtin>.sum",
        "<builtin>.len"
    ],
    "charset_normalizer.api.from_fp": [
        "charset_normalizer.api.from_bytes"
    ],
    "charset_normalizer.api.from_path": [
        "charset_normalizer.api.from_fp",
        "<builtin>.open"
    ],
    "charset_normalizer.api.normalize": [
        "<builtin>.IOError",
        "os.path.splitext",
        "<builtin>.open",
        "os.path.basename",
        "warnings.warn",
        "<builtin>.len",
        "charset_normalizer.api.from_path",
        "charset_normalizer.models.CharsetMatches.best",
        "<builtin>.list",
        "<builtin>.str"
    ],
    "os.path.splitext": [],
    "charset_normalizer.models.CharsetMatches.best": [],
    "charset_normalizer.cd": [
        "functools.lru_cache"
    ],
    "charset_normalizer.cd.encoding_unicode_range": [
        "<builtin>.sorted",
        "importlib.import_module",
        "charset_normalizer.utils.is_multi_byte_encoding",
        "<builtin>.IOError",
        "<builtin>.range",
        "<builtin>.bytes",
        "importlib.import_module.IncrementalDecoder",
        "charset_normalizer.utils.unicode_range",
        "charset_normalizer.utils.is_unicode_range_secondary"
    ],
    "importlib.import_module": [],
    "importlib.import_module.IncrementalDecoder": [],
    "charset_normalizer.utils.unicode_range": [
        "<builtin>.ord"
    ],
    "charset_normalizer.utils.is_unicode_range_secondary": [
        "<builtin>.any"
    ],
    "charset_normalizer.cd.unicode_range_languages": [
        "charset_normalizer.utils.unicode_range"
    ],
    "functools.lru_cache": [],
    "charset_normalizer.cd.get_target_features": [
        "charset_normalizer.utils.is_latin",
        "charset_normalizer.utils.is_accentuated"
    ],
    "charset_normalizer.utils.is_accentuated": [
        "unicodedata.name",
        "unicodedata2.name"
    ],
    "charset_normalizer.utils.is_latin": [
        "unicodedata.name",
        "unicodedata2.name"
    ],
    "charset_normalizer.cd.alphabet_languages": [
        "<builtin>.sorted",
        "<builtin>.any",
        "charset_normalizer.utils.is_accentuated",
        "<builtin>.len",
        "charset_normalizer.cd.get_target_features"
    ],
    "charset_normalizer.cd.alphabet_languages.<lambda1>": [],
    "charset_normalizer.cd.characters_popularity_compare": [
        "<builtin>.set",
        "<builtin>.len",
        "<builtin>.ValueError"
    ],
    "charset_normalizer.cd.alpha_unicode_split": [
        "charset_normalizer.md.is_suspiciously_successive_range",
        "<builtin>.list",
        "charset_normalizer.utils.unicode_range"
    ],
    "charset_normalizer.md.is_suspiciously_successive_range": [],
    "charset_normalizer.cd.merge_coherence_ratios.<lambda1>": [],
    "collections.Counter": [],
    "charset_normalizer.cd.coherence_ratio.<lambda1>": [],
    "charset_normalizer.md": [
        "functools.lru_cache"
    ],
    "charset_normalizer.md.MessDetectorPlugin.eligible": [],
    "charset_normalizer.md.MessDetectorPlugin.feed": [],
    "charset_normalizer.md.MessDetectorPlugin.reset": [],
    "charset_normalizer.md.MessDetectorPlugin.ratio": [],
    "charset_normalizer.md.TooManySymbolOrPunctuationPlugin.__init__": [],
    "charset_normalizer.md.TooManySymbolOrPunctuationPlugin.eligible": [],
    "charset_normalizer.md.TooManySymbolOrPunctuationPlugin.feed": [
        "charset_normalizer.utils.is_punctuation",
        "charset_normalizer.utils.is_emoticon",
        "charset_normalizer.utils.is_symbol"
    ],
    "charset_normalizer.utils.is_punctuation": [
        "unicodedata.category",
        "charset_normalizer.utils.unicode_range",
        "unicodedata2.category"
    ],
    "charset_normalizer.utils.is_symbol": [
        "unicodedata.category",
        "charset_normalizer.utils.unicode_range",
        "unicodedata2.category"
    ],
    "charset_normalizer.utils.is_emoticon": [
        "charset_normalizer.utils.unicode_range"
    ],
    "charset_normalizer.md.TooManySymbolOrPunctuationPlugin.reset": [],
    "charset_normalizer.md.TooManySymbolOrPunctuationPlugin.ratio": [],
    "charset_normalizer.md.TooManyAccentuatedPlugin.__init__": [],
    "charset_normalizer.md.TooManyAccentuatedPlugin.eligible": [],
    "charset_normalizer.md.TooManyAccentuatedPlugin.feed": [
        "charset_normalizer.utils.is_accentuated"
    ],
    "charset_normalizer.md.TooManyAccentuatedPlugin.reset": [],
    "charset_normalizer.md.TooManyAccentuatedPlugin.ratio": [],
    "charset_normalizer.md.UnprintablePlugin.__init__": [],
    "charset_normalizer.md.UnprintablePlugin.eligible": [],
    "charset_normalizer.md.UnprintablePlugin.feed": [
        "charset_normalizer.utils.is_unprintable"
    ],
    "charset_normalizer.utils.is_unprintable": [],
    "charset_normalizer.md.UnprintablePlugin.reset": [],
    "charset_normalizer.md.UnprintablePlugin.ratio": [],
    "charset_normalizer.md.SuspiciousDuplicateAccentPlugin.__init__": [],
    "charset_normalizer.md.SuspiciousDuplicateAccentPlugin.eligible": [
        "charset_normalizer.utils.is_latin"
    ],
    "charset_normalizer.md.SuspiciousDuplicateAccentPlugin.feed": [
        "charset_normalizer.utils.remove_accent",
        "charset_normalizer.utils.is_accentuated"
    ],
    "charset_normalizer.utils.remove_accent": [
        "unicodedata2.decomposition",
        "unicodedata.decomposition",
        "<builtin>.chr",
        "<builtin>.int"
    ],
    "charset_normalizer.md.SuspiciousDuplicateAccentPlugin.reset": [],
    "charset_normalizer.md.SuspiciousDuplicateAccentPlugin.ratio": [],
    "charset_normalizer.md.SuspiciousRange.__init__": [],
    "charset_normalizer.md.SuspiciousRange.eligible": [],
    "charset_normalizer.md.SuspiciousRange.feed": [
        "charset_normalizer.md.is_suspiciously_successive_range",
        "charset_normalizer.utils.is_punctuation",
        "charset_normalizer.utils.unicode_range"
    ],
    "charset_normalizer.md.SuspiciousRange.reset": [],
    "charset_normalizer.md.SuspiciousRange.ratio": [],
    "charset_normalizer.md.SuperWeirdWordPlugin.__init__": [],
    "charset_normalizer.md.SuperWeirdWordPlugin.eligible": [],
    "charset_normalizer.md.SuperWeirdWordPlugin.feed": [
        "charset_normalizer.utils.is_symbol",
        "charset_normalizer.utils.is_separator",
        "charset_normalizer.utils.is_hiragana",
        "charset_normalizer.utils.is_accentuated",
        "charset_normalizer.utils.is_latin",
        "charset_normalizer.utils.is_thai",
        "<builtin>.len",
        "charset_normalizer.utils.is_katakana",
        "charset_normalizer.utils.is_cjk",
        "charset_normalizer.utils.is_punctuation",
        "charset_normalizer.utils.is_hangul"
    ],
    "charset_normalizer.utils.is_cjk": [
        "unicodedata.name",
        "unicodedata2.name"
    ],
    "charset_normalizer.utils.is_hangul": [
        "unicodedata.name",
        "unicodedata2.name"
    ],
    "charset_normalizer.utils.is_katakana": [
        "unicodedata.name",
        "unicodedata2.name"
    ],
    "charset_normalizer.utils.is_hiragana": [
        "unicodedata.name",
        "unicodedata2.name"
    ],
    "charset_normalizer.utils.is_thai": [
        "unicodedata.name",
        "unicodedata2.name"
    ],
    "charset_normalizer.utils.is_separator": [
        "unicodedata.category",
        "unicodedata2.category"
    ],
    "charset_normalizer.md.SuperWeirdWordPlugin.reset": [],
    "charset_normalizer.md.SuperWeirdWordPlugin.ratio": [],
    "charset_normalizer.md.CjkInvalidStopPlugin.__init__": [],
    "charset_normalizer.md.CjkInvalidStopPlugin.eligible": [],
    "charset_normalizer.md.CjkInvalidStopPlugin.feed": [
        "charset_normalizer.utils.is_cjk"
    ],
    "charset_normalizer.md.CjkInvalidStopPlugin.reset": [],
    "charset_normalizer.md.CjkInvalidStopPlugin.ratio": [],
    "charset_normalizer.md.ArchaicUpperLowerPlugin.__init__": [],
    "charset_normalizer.md.ArchaicUpperLowerPlugin.eligible": [],
    "charset_normalizer.md.ArchaicUpperLowerPlugin.feed": [
        "charset_normalizer.utils.is_ascii",
        "charset_normalizer.utils.is_case_variable"
    ],
    "charset_normalizer.utils.is_case_variable": [],
    "charset_normalizer.utils.is_ascii": [],
    "charset_normalizer.md.ArchaicUpperLowerPlugin.reset": [],
    "charset_normalizer.md.ArchaicUpperLowerPlugin.ratio": [],
    "charset_normalizer.utils": [
        "<builtin>.len",
        "functools.lru_cache"
    ],
    "unicodedata2.name": [],
    "unicodedata2.decomposition": [],
    "unicodedata.decomposition": [],
    "unicodedata2.category": [],
    "charset_normalizer.utils.is_private_use_only": [
        "unicodedata.category",
        "unicodedata2.category"
    ],
    "re.findall": [],
    "encodings.aliases.aliases.items": [],
    "<builtin>.issubclass": [],
    "charset_normalizer.utils.range_scan": [
        "<builtin>.list",
        "<builtin>.set",
        "charset_normalizer.utils.unicode_range"
    ],
    "charset_normalizer.utils.cp_similarity": [
        "importlib.import_module",
        "charset_normalizer.utils.is_multi_byte_encoding",
        "<builtin>.range",
        "<builtin>.bytes",
        "importlib.import_module.IncrementalDecoder"
    ],
    "charset_normalizer.utils.set_logging_handler": [
        "logging.getLogger.addHandler",
        "logging.StreamHandler.setFormatter",
        "logging.getLogger",
        "logging.Formatter",
        "logging.getLogger.setLevel",
        "logging.StreamHandler"
    ],
    "charset_normalizer.constant": [
        "<builtin>.sorted",
        "<builtin>.range",
        "<builtin>.filter",
        "encodings.aliases.aliases.values",
        "<builtin>.set",
        "re.compile",
        "<builtin>.len",
        "<builtin>.int",
        "<builtin>.list"
    ],
    "charset_normalizer.constant.<lambda1>": [],
    "encodings.aliases.aliases.values": [],
    "charset_normalizer.models": [],
    "charset_normalizer.models.CharsetMatch.__eq__": [
        "<builtin>.TypeError",
        "<builtin>.str",
        "<builtin>.isinstance"
    ],
    "charset_normalizer.models.CharsetMatch.__lt__": [
        "<builtin>.abs",
        "<builtin>.isinstance"
    ],
    "charset_normalizer.models.CharsetMatch.multi_byte_usage": [
        "<builtin>.str",
        "<builtin>.len"
    ],
    "charset_normalizer.models.CharsetMatch.chaos_secondary_pass": [
        "charset_normalizer.md.mess_ratio",
        "<builtin>.str",
        "warnings.warn"
    ],
    "charset_normalizer.models.CharsetMatch.coherence_non_latin": [
        "warnings.warn"
    ],
    "charset_normalizer.models.CharsetMatch.w_counter": [
        "re.sub.split",
        "re.sub",
        "collections.Counter",
        "warnings.warn",
        "<builtin>.str"
    ],
    "re.sub": [],
    "re.sub.split": [],
    "charset_normalizer.models.CharsetMatch.__str__": [
        "<builtin>.str"
    ],
    "charset_normalizer.models.CharsetMatch.__repr__": [],
    "charset_normalizer.models.CharsetMatch.add_submatch": [
        "<builtin>.ValueError",
        "<builtin>.isinstance"
    ],
    "charset_normalizer.models.CharsetMatch.encoding": [],
    "charset_normalizer.models.CharsetMatch.encoding_aliases": [
        "encodings.aliases.aliases.items"
    ],
    "charset_normalizer.models.CharsetMatch.bom": [],
    "charset_normalizer.models.CharsetMatch.byte_order_mark": [],
    "charset_normalizer.models.CharsetMatch.languages": [],
    "charset_normalizer.models.CharsetMatch.language": [
        "charset_normalizer.cd.encoding_languages",
        "charset_normalizer.utils.is_multi_byte_encoding",
        "<builtin>.len",
        "charset_normalizer.cd.mb_encoding_languages"
    ],
    "charset_normalizer.models.CharsetMatch.chaos": [],
    "charset_normalizer.models.CharsetMatch.coherence": [],
    "charset_normalizer.models.CharsetMatch.percent_chaos": [
        "<builtin>.round"
    ],
    "charset_normalizer.models.CharsetMatch.percent_coherence": [
        "<builtin>.round"
    ],
    "charset_normalizer.models.CharsetMatch.raw": [],
    "charset_normalizer.models.CharsetMatch.submatch": [],
    "charset_normalizer.models.CharsetMatch.has_submatch": [
        "<builtin>.len"
    ],
    "charset_normalizer.models.CharsetMatch.alphabets": [
        "<builtin>.list",
        "<builtin>.str",
        "<builtin>.sorted",
        "charset_normalizer.utils.unicode_range"
    ],
    "charset_normalizer.models.CharsetMatch.could_be_from_charset": [],
    "charset_normalizer.models.CharsetMatch.first": [],
    "charset_normalizer.models.CharsetMatch.best": [],
    "charset_normalizer.models.CharsetMatch.output": [
        "<builtin>.str"
    ],
    "charset_normalizer.models.CharsetMatch.fingerprint": [
        "hashlib.sha256",
        "hashlib.sha256.hexdigest",
        "charset_normalizer.models.CharsetMatch.output"
    ],
    "hashlib.sha256": [],
    "hashlib.sha256.hexdigest": [],
    "charset_normalizer.models.CharsetMatches.__iter__": [],
    "charset_normalizer.models.CharsetMatches.__getitem__": [
        "charset_normalizer.utils.iana_name",
        "<builtin>.isinstance"
    ],
    "charset_normalizer.models.CharsetMatches.__len__": [
        "<builtin>.len"
    ],
    "charset_normalizer.models.CharsetMatches.__bool__": [
        "<builtin>.len"
    ],
    "charset_normalizer.models.CharsetMatches.append": [
        "<builtin>.sorted",
        "<builtin>.isinstance",
        "<builtin>.len",
        "<builtin>.ValueError",
        "<builtin>.str"
    ],
    "charset_normalizer.models.CharsetMatches.first": [
        "charset_normalizer.models.CharsetMatches.best"
    ],
    "charset_normalizer.models.CliDetectionResult.__init__": [],
    "charset_normalizer.models.CliDetectionResult.__dict__": [],
    "charset_normalizer.models.CliDetectionResult.to_json": [
        "json.dumps"
    ],
    "json.dumps": [],
    "charset_normalizer.assets": [],
    "charset_normalizer.legacy": [],
    "charset_normalizer.legacy.detect": [
        "<builtin>.TypeError",
        "<builtin>.bytes",
        "charset_normalizer.api.from_bytes",
        "<builtin>.isinstance",
        "<builtin>.type",
        "charset_normalizer.models.CharsetMatches.best"
    ],
    "charset_normalizer.legacy.CharsetNormalizerMatches.from_fp": [
        "charset_normalizer.legacy.CharsetNormalizerMatches.from_fp",
        "warnings.warn"
    ],
    "charset_normalizer.legacy.CharsetNormalizerMatches.from_bytes": [
        "charset_normalizer.legacy.CharsetNormalizerMatches.from_bytes",
        "warnings.warn"
    ],
    "charset_normalizer.legacy.CharsetNormalizerMatches.from_path": [
        "warnings.warn",
        "charset_normalizer.legacy.CharsetNormalizerMatches.from_path"
    ],
    "charset_normalizer.legacy.CharsetNormalizerMatches.normalize": [
        "warnings.warn",
        "charset_normalizer.legacy.CharsetNormalizerMatches.normalize"
    ],
    "charset_normalizer.version": [],
    "urllib3.contrib.pyopenssl": [
        "<builtin>.dict",
        "logging.getLogger",
        "warnings.warn",
        "<builtin>.hasattr"
    ],
    "urllib3.contrib.pyopenssl._validate_dependencies_met": [
        "OpenSSL.crypto.X509",
        "<builtin>.getattr",
        "<builtin>.ImportError"
    ],
    "urllib3.contrib.pyopenssl.extract_from_urllib3": [],
    "OpenSSL.crypto.X509": [],
    "urllib3.contrib.pyopenssl._dnsname_to_stdlib": [
        "unicodedata.normalize.decode",
        "unicodedata.normalize.split.encode.decode",
        "urllib3.contrib.pyopenssl._dnsname_to_stdlib.idna_encode",
        "re.compile.split.encode.decode"
    ],
    "urllib3.contrib.pyopenssl._dnsname_to_stdlib.idna_encode": [
        "re.compile.split.encode.startswith",
        "unicodedata.normalize.split.encode.decode.startswith",
        "unicodedata.normalize.decode.startswith",
        "unicodedata.normalize.split.encode.startswith",
        "unicodedata.normalize.decode.split.encode.startswith",
        "<builtin>.len",
        "unicodedata.normalize.startswith",
        "idna.encode",
        "re.compile.split.encode.decode.startswith"
    ],
    "unicodedata.normalize.decode.startswith": [],
    "unicodedata.normalize.startswith": [],
    "unicodedata.normalize.decode": [],
    "urllib3.contrib.pyopenssl.get_subj_alt_name": [
        "<builtin>.map",
        "cryptography.x509.load_der_x509_certificate.extensions.get_extension_for_class.value.get_values_for_type",
        "logging.getLogger.warning",
        "cryptography.x509.load_der_x509_certificate",
        "OpenSSL.crypto.dump_certificate",
        "<builtin>.hasattr",
        "<builtin>.str",
        "cryptography.x509.load_der_x509_certificate.extensions.get_extension_for_class"
    ],
    "OpenSSL.crypto.dump_certificate": [],
    "cryptography.x509.load_der_x509_certificate": [],
    "cryptography.x509.load_der_x509_certificate.extensions.get_extension_for_class": [],
    "cryptography.x509.load_der_x509_certificate.extensions.get_extension_for_class.value.get_values_for_type": [],
    "urllib3.contrib.pyopenssl.WrappedSocket.__init__": [],
    "urllib3.contrib.pyopenssl.WrappedSocket.fileno": [],
    "urllib3.contrib.pyopenssl.WrappedSocket._decref_socketios": [
        "urllib3.contrib.pyopenssl.WrappedSocket.close"
    ],
    "urllib3.contrib.pyopenssl.WrappedSocket.close": [],
    "urllib3.contrib.pyopenssl.WrappedSocket.recv": [
        "socket.timeout",
        "urllib3.contrib.pyopenssl.WrappedSocket.recv",
        "ssl.SSLError",
        "socket.error",
        "<builtin>.str"
    ],
    "socket.timeout": [],
    "ssl.SSLError": [],
    "urllib3.contrib.pyopenssl.WrappedSocket.recv_into": [
        "urllib3.contrib.pyopenssl.WrappedSocket.recv_into",
        "socket.timeout",
        "ssl.SSLError",
        "socket.error",
        "<builtin>.str"
    ],
    "urllib3.contrib.pyopenssl.WrappedSocket.settimeout": [],
    "urllib3.contrib.pyopenssl.WrappedSocket._send_until_done": [
        "socket.timeout",
        "<builtin>.str",
        "socket.error"
    ],
    "urllib3.contrib.pyopenssl.WrappedSocket.sendall": [
        "<builtin>.len",
        "urllib3.contrib.pyopenssl.WrappedSocket._send_until_done"
    ],
    "urllib3.contrib.pyopenssl.WrappedSocket.shutdown": [],
    "urllib3.contrib.pyopenssl.WrappedSocket.getpeercert": [
        "urllib3.contrib.pyopenssl.get_subj_alt_name",
        "OpenSSL.crypto.dump_certificate"
    ],
    "urllib3.contrib.pyopenssl.WrappedSocket.version": [],
    "urllib3.contrib.pyopenssl.WrappedSocket._reuse": [],
    "urllib3.contrib.pyopenssl.WrappedSocket._drop": [
        "urllib3.contrib.pyopenssl.WrappedSocket.close"
    ],
    "urllib3.contrib.pyopenssl.makefile": [
        "socket._fileobject"
    ],
    "socket._fileobject": [],
    "urllib3.contrib.pyopenssl.PyOpenSSLContext.__init__": [
        "OpenSSL.SSL.Context"
    ],
    "OpenSSL.SSL.Context": [],
    "urllib3.contrib.pyopenssl.PyOpenSSLContext.options": [],
    "urllib3.contrib.pyopenssl.PyOpenSSLContext.verify_mode": [],
    "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_default_verify_paths": [],
    "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_ciphers": [
        "<builtin>.isinstance"
    ],
    "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_verify_locations": [
        "ssl.SSLError",
        "io.BytesIO"
    ],
    "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_cert_chain": [
        "<builtin>.isinstance"
    ],
    "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_cert_chain.<lambda1>": [],
    "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_alpn_protocols": [
        "urllib3.packages.six.ensure_binary"
    ],
    "urllib3.contrib.pyopenssl.PyOpenSSLContext.wrap_socket": [
        "OpenSSL.SSL.Connection",
        "socket.timeout",
        "<builtin>.isinstance",
        "ssl.SSLError",
        "urllib3.contrib.pyopenssl.WrappedSocket.__init__"
    ],
    "OpenSSL.SSL.Connection": [],
    "urllib3.contrib.pyopenssl._verify_callback": [],
    "urllib3.packages.backports.makefile": [],
    "urllib3.packages.backports.makefile.backport_makefile": [
        "socket.SocketIO",
        "<builtin>.set",
        "io.BufferedWriter",
        "io.BufferedRWPair",
        "io.BufferedReader",
        "<builtin>.ValueError",
        "io.TextIOWrapper"
    ],
    "socket.SocketIO": [],
    "requests.sessions": [],
    "requests.sessions.merge_setting": [
        "requests.structures.CaseInsensitiveDict.__init__",
        "collections.OrderedDict",
        "<builtin>.isinstance",
        "requests.utils.to_key_val_list"
    ],
    "requests.sessions.merge_hooks": [
        "requests.sessions.merge_setting"
    ],
    "requests.sessions.SessionRedirectMixin.get_redirect_target": [
        "requests._internal_utils.to_native_string"
    ],
    "requests.sessions.SessionRedirectMixin.should_strip_auth": [
        "urllib.parse.urlparse"
    ],
    "requests.sessions.SessionRedirectMixin.resolve_redirects": [
        "requests.sessions.SessionRedirectMixin.rebuild_method",
        "collections.abc.MutableMapping.upper.decode.startswith",
        "urllib.parse.urlunparse.decode.startswith",
        "urllib.parse.urlparse.geturl",
        "urllib.parse.urlparse._replace.geturl",
        "urllib.parse.urlparse.geturl.decode.startswith",
        "requests.cookies.extract_cookies_to_jar",
        "urllib.parse.urlunparse.decode.upper.startswith",
        "collections.abc.MutableMapping.upper.startswith",
        "urllib.parse.urlparse.geturl.decode.upper.startswith",
        "collections.abc.MutableMapping.decode.upper.startswith",
        "collections.abc.MutableMapping.decode.startswith",
        "requests.cookies.merge_cookies",
        "requests.sessions.SessionRedirectMixin.rebuild_auth",
        "urllib.parse.urlparse._replace.geturl.upper.startswith",
        "requests.models.PreparedRequest.prepare_cookies",
        "requests.sessions.Session.send",
        "urllib.parse.quote.lstrip.upper.decode.startswith",
        "base64.b64encode.strip.decode.startswith",
        "urlparse.urljoin.decode.startswith",
        "collections.abc.MutableMapping.startswith",
        "urllib.parse.urlparse._replace.geturl.decode.startswith",
        "collections.abc.MutableMapping.pop",
        "urllib.parse.urljoin.upper.startswith",
        "urllib.parse.urljoin.decode.upper.startswith",
        "urllib.parse.urlparse.geturl.upper.startswith",
        "requests.utils.rewind_body",
        "<builtin>.len",
        "re.compile.finditer.group.startswith",
        "requests._internal_utils.to_native_string",
        "re.compile.finditer.group.upper.startswith",
        "urllib.parse.quote.lstrip.startswith",
        "urllib.parse.quote.decode.startswith",
        "urllib.parse.quote.decode.upper.startswith",
        "re.compile.finditer.group.decode.startswith",
        "urllib.parse.urlparse.geturl.upper.decode.startswith",
        "urllib.parse.quote.upper.decode.startswith",
        "requests.exceptions.RequestException.__init__",
        "urllib.parse.quote.lstrip.decode.upper.startswith",
        "urllib.parse.urljoin",
        "urllib.parse.urlparse._replace.geturl.decode.upper.startswith",
        "base64.b64encode.strip.decode.upper.startswith",
        "base64.b64encode.strip.upper.startswith",
        "urllib.parse.quote.decode.lstrip.upper.startswith",
        "urlparse.urljoin.upper.startswith",
        "urllib.parse.quote.lstrip.decode.startswith",
        "requests.sessions.SessionRedirectMixin.get_redirect_target",
        "urllib.parse.quote.decode.lstrip.startswith",
        "urllib.parse.urlunparse.upper.startswith",
        "re.compile.finditer.group.decode.upper.startswith",
        "re.compile.finditer.group.upper.decode.startswith",
        "urllib.parse.urlparse._replace",
        "urllib.parse.quote.startswith",
        "urllib.parse.urlparse._replace.geturl.startswith",
        "urlparse.urljoin.upper.decode.startswith",
        "urllib.parse.quote.lstrip.upper.startswith",
        "base64.b64encode.strip.startswith",
        "base64.b64encode.strip.upper.decode.startswith",
        "urllib.parse.urlparse._replace.geturl.upper.decode.startswith",
        "requests.utils.requote_uri",
        "requests.sessions.SessionRedirectMixin.rebuild_proxies",
        "urllib.parse.urlunparse.startswith",
        "urllib.parse.urlparse",
        "urlparse.urljoin.decode.upper.startswith",
        "urllib.parse.urlparse.geturl.startswith",
        "urllib.parse.urljoin.startswith",
        "urllib.parse.urljoin.decode.startswith",
        "requests.models.PreparedRequest.copy",
        "urllib.parse.urljoin.upper.decode.startswith",
        "urlparse.urljoin.startswith",
        "urllib.parse.urlunparse.upper.decode.startswith",
        "urllib.parse.quote.upper.startswith"
    ],
    "requests.models.PreparedRequest.copy": [
        "requests.models.PreparedRequest.__init__",
        "requests.cookies._copy_cookie_jar",
        "requests.structures.CaseInsensitiveDict.copy"
    ],
    "collections.abc.MutableMapping.upper.decode.startswith": [],
    "urllib.parse.urlunparse.decode.startswith": [],
    "urllib.parse.urlparse.geturl.decode.startswith": [],
    "urllib.parse.urlunparse.decode.upper.startswith": [],
    "collections.abc.MutableMapping.upper.startswith": [],
    "collections.abc.MutableMapping.decode.upper.startswith": [],
    "collections.abc.MutableMapping.decode.startswith": [],
    "urllib.parse.urlparse._replace.geturl.upper.startswith": [],
    "urllib.parse.quote.lstrip.upper.decode.startswith": [],
    "base64.b64encode.strip.decode.startswith": [],
    "urlparse.urljoin.decode.startswith": [],
    "collections.abc.MutableMapping.startswith": [],
    "urllib.parse.urlparse._replace.geturl.decode.startswith": [],
    "urllib.parse.urljoin.upper.startswith": [],
    "urllib.parse.urljoin.decode.upper.startswith": [],
    "urllib.parse.urlparse.geturl.upper.startswith": [],
    "re.compile.finditer.group.startswith": [],
    "re.compile.finditer.group.upper.startswith": [],
    "urllib.parse.quote.lstrip.startswith": [],
    "urllib.parse.quote.decode.startswith": [],
    "urllib.parse.quote.decode.upper.startswith": [],
    "re.compile.finditer.group.decode.startswith": [],
    "urllib.parse.urlparse.geturl.upper.decode.startswith": [],
    "urllib.parse.quote.upper.decode.startswith": [],
    "urllib.parse.quote.lstrip.decode.upper.startswith": [],
    "urllib.parse.urlparse._replace.geturl.decode.upper.startswith": [],
    "base64.b64encode.strip.decode.upper.startswith": [],
    "base64.b64encode.strip.upper.startswith": [],
    "urllib.parse.quote.decode.lstrip.upper.startswith": [],
    "urlparse.urljoin.upper.startswith": [],
    "urllib.parse.quote.lstrip.decode.startswith": [],
    "urllib.parse.quote.decode.lstrip.startswith": [],
    "urllib.parse.urlunparse.upper.startswith": [],
    "re.compile.finditer.group.decode.upper.startswith": [],
    "re.compile.finditer.group.upper.decode.startswith": [],
    "urllib.parse.quote.startswith": [],
    "urllib.parse.urlparse._replace.geturl.startswith": [],
    "urlparse.urljoin.upper.decode.startswith": [],
    "urllib.parse.quote.lstrip.upper.startswith": [],
    "base64.b64encode.strip.startswith": [],
    "base64.b64encode.strip.upper.decode.startswith": [],
    "urllib.parse.urlparse._replace.geturl.upper.decode.startswith": [],
    "urllib.parse.urlunparse.startswith": [],
    "urlparse.urljoin.decode.upper.startswith": [],
    "urllib.parse.urlparse.geturl.startswith": [],
    "urllib.parse.urljoin.startswith": [],
    "urllib.parse.urljoin.decode.startswith": [],
    "urllib.parse.urlparse.geturl.decode.upper.startswith": [],
    "urllib.parse.urljoin.upper.decode.startswith": [],
    "urlparse.urljoin.startswith": [],
    "urllib.parse.urlunparse.upper.decode.startswith": [],
    "urllib.parse.quote.upper.startswith": [],
    "urllib.parse.urlparse._replace": [],
    "urllib.parse.urlparse.geturl": [],
    "urllib.parse.urlparse._replace.geturl": [],
    "urllib.parse.urljoin": [],
    "requests.sessions.SessionRedirectMixin.rebuild_method": [],
    "collections.abc.MutableMapping.pop": [],
    "requests.models.PreparedRequest.prepare_cookies": [
        "requests.cookies.get_cookie_header",
        "<builtin>.isinstance",
        "requests.cookies.cookiejar_from_dict"
    ],
    "requests.sessions.SessionRedirectMixin.rebuild_proxies": [
        "requests.auth._basic_auth_str",
        "requests.utils.get_auth_from_url",
        "urllib.parse.urlparse",
        "requests.utils.resolve_proxies"
    ],
    "requests.sessions.SessionRedirectMixin.rebuild_auth": [
        "requests.utils.get_netrc_auth",
        "requests.models.PreparedRequest.prepare_auth",
        "requests.sessions.SessionRedirectMixin.should_strip_auth"
    ],
    "requests.sessions.Session.send": [
        "requests.sessions.Session.get_adapter",
        "requests.hooks.dispatch_hook",
        "<builtin>.next",
        "requests.utils.resolve_proxies",
        "<builtin>.isinstance",
        "<builtin>.ValueError",
        "datetime.timedelta",
        "requests.sessions.SessionRedirectMixin.resolve_redirects",
        "requests.cookies.extract_cookies_to_jar",
        "time.perf_counter"
    ],
    "requests.models.PreparedRequest.prepare_auth": [
        "requests.models.PreparedRequest.prepare_content_length",
        "<builtin>.any",
        "requests.utils.get_auth_from_url",
        "requests.auth.HTTPBasicAuth.__init__",
        "<builtin>.isinstance",
        "requests.structures.CaseInsensitiveDict.__init__",
        "<builtin>.len"
    ],
    "requests.auth._basic_auth_str": [
        "base64.b64encode",
        "<builtin>.isinstance",
        "base64.b64encode.strip",
        "warnings.warn",
        "requests._internal_utils.to_native_string",
        "<builtin>.type"
    ],
    "requests.sessions.Session.__init__": [
        "requests.hooks.default_hooks",
        "requests.adapters.HTTPAdapter.__init__",
        "requests.cookies.cookiejar_from_dict",
        "requests.sessions.Session.mount",
        "collections.OrderedDict",
        "requests.utils.default_headers"
    ],
    "requests.hooks.default_hooks": [],
    "requests.adapters.HTTPAdapter.__init__": [
        "requests.adapters.HTTPAdapter.init_poolmanager",
        "urllib3.util.retry.Retry.__init__",
        "urllib3.util.retry.Retry.from_int",
        "<builtin>.super"
    ],
    "requests.sessions.Session.mount": [
        "collections.OrderedDict.pop",
        "<builtin>.len"
    ],
    "requests.sessions.Session.__enter__": [],
    "requests.sessions.Session.__exit__": [
        "requests.sessions.Session.close"
    ],
    "requests.sessions.Session.close": [
        "collections.OrderedDict.values.close",
        "collections.OrderedDict.values"
    ],
    "requests.sessions.Session.prepare_request": [
        "requests.models.PreparedRequest.__init__",
        "http.cookiejar.CookieJar.__init__",
        "<builtin>.isinstance",
        "requests.cookies.cookiejar_from_dict",
        "requests.sessions.merge_setting",
        "requests.cookies.merge_cookies",
        "requests.utils.get_netrc_auth",
        "requests.sessions.merge_hooks",
        "requests.models.PreparedRequest.prepare"
    ],
    "requests.models.PreparedRequest.__init__": [
        "requests.hooks.default_hooks"
    ],
    "requests.models.PreparedRequest.prepare": [
        "requests.models.PreparedRequest.prepare_hooks",
        "requests.models.PreparedRequest.prepare_url",
        "requests.models.PreparedRequest.prepare_auth",
        "requests.models.PreparedRequest.prepare_method",
        "requests.models.PreparedRequest.prepare_headers",
        "requests.models.PreparedRequest.prepare_body",
        "requests.models.PreparedRequest.prepare_cookies"
    ],
    "requests.sessions.Session.request": [
        "requests.sessions.Session.merge_environment_settings",
        "requests.sessions.Session.prepare_request",
        "requests.sessions.Session.send",
        "requests.models.Request.__init__"
    ],
    "requests.models.Request.__init__": [
        "requests.hooks.default_hooks",
        "<builtin>.list",
        "requests.models.RequestHooksMixin.register_hook"
    ],
    "requests.sessions.Session.merge_environment_settings": [
        "collections.abc.MutableMapping.setdefault",
        "os.environ.get",
        "requests.sessions.merge_setting",
        "requests.utils.get_environ_proxies",
        "urllib.request.getproxies.items",
        "collections.abc.MutableMapping.get"
    ],
    "requests.sessions.Session.get": [
        "requests.sessions.Session.request"
    ],
    "requests.sessions.Session.options": [
        "requests.sessions.Session.request"
    ],
    "requests.sessions.Session.head": [
        "requests.sessions.Session.request"
    ],
    "requests.sessions.Session.post": [
        "requests.sessions.Session.request"
    ],
    "requests.sessions.Session.put": [
        "requests.sessions.Session.request"
    ],
    "requests.sessions.Session.patch": [
        "requests.sessions.Session.request"
    ],
    "requests.sessions.Session.delete": [
        "requests.sessions.Session.request"
    ],
    "requests.sessions.Session.get_adapter": [
        "collections.abc.MutableMapping.lower",
        "urllib.parse.quote.upper.lower.startswith",
        "urllib.parse.quote.upper.lower",
        "urllib.parse.quote.lstrip.upper.lower.startswith",
        "urllib.parse.quote.lstrip.upper.decode.lower",
        "urllib.parse.urljoin.lower",
        "urllib.parse.quote.lower.startswith",
        "urlparse.urljoin.upper.lower.startswith",
        "base64.b64encode.strip.upper.lower.startswith",
        "urllib.parse.urlparse._replace.geturl.decode.upper.lower.startswith",
        "urllib.parse.quote.lstrip.decode.upper.lower.startswith",
        "urllib.parse.quote.decode.lstrip.lower.startswith",
        "urllib.parse.quote.decode.upper.lower.startswith",
        "collections.abc.MutableMapping.upper.decode.lower",
        "urllib.parse.urlparse._replace.geturl.upper.decode.lower",
        "urllib.parse.urlparse.geturl.lower",
        "urllib.parse.urlunparse.decode.upper.lower",
        "urlparse.urljoin.lower.startswith",
        "urllib.parse.quote.upper.decode.lower.startswith",
        "urlparse.urljoin.decode.lower.startswith",
        "urllib.parse.urlparse._replace.geturl.upper.lower",
        "urllib.parse.urlunparse.upper.lower",
        "urllib.parse.urlunparse.upper.decode.lower.startswith",
        "base64.b64encode.strip.lower.startswith",
        "re.compile.finditer.group.upper.lower.startswith",
        "collections.abc.MutableMapping.upper.lower.startswith",
        "urllib.parse.urlparse._replace.geturl.lower",
        "urllib.parse.urljoin.decode.lower",
        "urllib.parse.quote.decode.lower",
        "urllib.parse.urljoin.lower.startswith",
        "urllib.parse.urlparse._replace.geturl.upper.lower.startswith",
        "urllib.parse.urlunparse.upper.decode.lower",
        "urlparse.urljoin.upper.decode.lower.startswith",
        "urlparse.urljoin.upper.lower",
        "base64.b64encode.strip.upper.decode.lower.startswith",
        "re.compile.finditer.group.decode.upper.lower.startswith",
        "urllib.parse.quote.lstrip.upper.decode.lower.startswith",
        "urllib.parse.quote.lstrip.decode.lower.startswith",
        "collections.abc.MutableMapping.lower.startswith",
        "urllib.parse.urlunparse.lower.startswith",
        "urlparse.urljoin.upper.decode.lower",
        "urllib.parse.urlunparse.decode.lower.startswith",
        "re.compile.finditer.group.decode.upper.lower",
        "base64.b64encode.strip.decode.lower.startswith",
        "urllib.parse.urljoin.upper.lower.startswith",
        "urllib.parse.urlparse.geturl.lower.startswith",
        "urllib.parse.quote.lstrip.lower.startswith",
        "base64.b64encode.strip.lower",
        "urlparse.urljoin.lower",
        "urllib.parse.urlparse.geturl.upper.decode.lower.startswith",
        "collections.abc.MutableMapping.decode.lower.startswith",
        "urlparse.urljoin.decode.lower",
        "re.compile.finditer.group.decode.lower.startswith",
        "re.compile.finditer.group.lower.startswith",
        "collections.abc.MutableMapping.decode.lower",
        "urllib.parse.urlunparse.lower",
        "urllib.parse.urljoin.decode.upper.lower",
        "re.compile.finditer.group.lower",
        "base64.b64encode.strip.upper.decode.lower",
        "urllib.parse.quote.lower",
        "urllib.parse.quote.decode.lstrip.lower",
        "urlparse.urljoin.decode.upper.lower",
        "urllib.parse.urlparse.geturl.upper.lower.startswith",
        "collections.abc.MutableMapping.decode.upper.lower",
        "urllib.parse.quote.lstrip.decode.lower",
        "collections.abc.MutableMapping.upper.lower",
        "base64.b64encode.strip.upper.lower",
        "collections.abc.MutableMapping.decode.upper.lower.startswith",
        "urllib.parse.quote.decode.lower.startswith",
        "urlparse.urljoin.decode.upper.lower.startswith",
        "urllib.parse.urlparse.geturl.decode.lower.startswith",
        "urllib.parse.urlunparse.upper.lower.startswith",
        "base64.b64encode.strip.decode.upper.lower",
        "base64.b64encode.strip.decode.lower",
        "urllib.parse.urlunparse.decode.lower",
        "urllib.parse.urlparse.geturl.upper.decode.lower",
        "urllib.parse.urlparse.geturl.decode.lower",
        "re.compile.finditer.group.upper.decode.lower",
        "urllib.parse.quote.decode.lstrip.upper.lower",
        "urllib.parse.quote.decode.upper.lower",
        "urllib.parse.urlparse._replace.geturl.decode.upper.lower",
        "collections.OrderedDict.items",
        "urllib.parse.urlparse._replace.geturl.decode.lower.startswith",
        "urllib.parse.quote.lstrip.upper.lower",
        "urllib.parse.urljoin.decode.lower.startswith",
        "re.compile.finditer.group.upper.lower",
        "collections.abc.MutableMapping.upper.decode.lower.startswith",
        "urllib.parse.urlunparse.decode.upper.lower.startswith",
        "urllib.parse.urljoin.decode.upper.lower.startswith",
        "urllib.parse.quote.lstrip.lower",
        "urllib.parse.urlparse.geturl.decode.upper.lower",
        "base64.b64encode.strip.decode.upper.lower.startswith",
        "urllib.parse.urlparse._replace.geturl.lower.startswith",
        "urllib.parse.quote.lstrip.decode.upper.lower",
        "requests.exceptions.RequestException.__init__",
        "re.compile.finditer.group.decode.lower",
        "urllib.parse.urlparse._replace.geturl.decode.lower",
        "urllib.parse.urljoin.upper.decode.lower",
        "urllib.parse.urljoin.upper.lower",
        "urllib.parse.quote.decode.lstrip.upper.lower.startswith",
        "re.compile.finditer.group.upper.decode.lower.startswith",
        "urllib.parse.urlparse._replace.geturl.upper.decode.lower.startswith",
        "urllib.parse.urljoin.upper.decode.lower.startswith",
        "urllib.parse.quote.upper.decode.lower",
        "urllib.parse.urlparse.geturl.upper.lower",
        "urllib.parse.urlparse.geturl.decode.upper.lower.startswith"
    ],
    "time.perf_counter": [],
    "datetime.timedelta": [],
    "requests.hooks.dispatch_hook": [
        "<builtin>.hasattr"
    ],
    "urllib.request.getproxies.items": [],
    "collections.abc.MutableMapping.setdefault": [],
    "urllib.parse.quote.decode.lstrip.lower": [],
    "urlparse.urljoin.decode.upper.lower": [],
    "urllib.parse.quote.decode.lower": [],
    "collections.abc.MutableMapping.lower": [],
    "collections.abc.MutableMapping.decode.upper.lower": [],
    "urllib.parse.quote.upper.lower": [],
    "urllib.parse.urlunparse.upper.decode.lower": [],
    "re.compile.finditer.group.upper.lower": [],
    "urlparse.urljoin.upper.lower": [],
    "urllib.parse.quote.lstrip.decode.lower": [],
    "urllib.parse.quote.lstrip.upper.decode.lower": [],
    "collections.abc.MutableMapping.upper.lower": [],
    "base64.b64encode.strip.upper.lower": [],
    "urllib.parse.urljoin.lower": [],
    "urllib.parse.quote.lstrip.lower": [],
    "urllib.parse.urlparse.geturl.decode.upper.lower": [],
    "urlparse.urljoin.upper.decode.lower": [],
    "re.compile.finditer.group.decode.upper.lower": [],
    "urllib.parse.quote.lstrip.decode.upper.lower": [],
    "urllib.parse.urljoin.decode.lower": [],
    "base64.b64encode.strip.lower": [],
    "urlparse.urljoin.lower": [],
    "re.compile.finditer.group.decode.lower": [],
    "urllib.parse.urlparse._replace.geturl.decode.lower": [],
    "collections.abc.MutableMapping.upper.decode.lower": [],
    "urllib.parse.urlparse._replace.geturl.upper.decode.lower": [],
    "urllib.parse.urlparse.geturl.lower": [],
    "urllib.parse.urlunparse.decode.upper.lower": [],
    "urlparse.urljoin.decode.lower": [],
    "base64.b64encode.strip.decode.lower": [],
    "urllib.parse.urlunparse.decode.lower": [],
    "urllib.parse.urlparse.geturl.upper.decode.lower": [],
    "base64.b64encode.strip.decode.upper.lower": [],
    "urllib.parse.urlparse.geturl.decode.lower": [],
    "urllib.parse.urljoin.upper.decode.lower": [],
    "urllib.parse.urlparse._replace.geturl.upper.lower": [],
    "collections.abc.MutableMapping.decode.lower": [],
    "urllib.parse.urlunparse.upper.lower": [],
    "urllib.parse.urljoin.upper.lower": [],
    "urllib.parse.urlparse._replace.geturl.lower": [],
    "urllib.parse.quote.decode.lstrip.upper.lower": [],
    "re.compile.finditer.group.upper.decode.lower": [],
    "urllib.parse.urlunparse.lower": [],
    "urllib.parse.urljoin.decode.upper.lower": [],
    "re.compile.finditer.group.lower": [],
    "urllib.parse.quote.decode.upper.lower": [],
    "urllib.parse.urlparse._replace.geturl.decode.upper.lower": [],
    "urllib.parse.quote.upper.decode.lower": [],
    "base64.b64encode.strip.upper.decode.lower": [],
    "urllib.parse.quote.lower": [],
    "urllib.parse.urlparse.geturl.upper.lower": [],
    "urllib.parse.quote.lstrip.upper.lower": [],
    "urllib.parse.urljoin.decode.lower.startswith": [],
    "urllib.parse.urlparse.geturl.upper.lower.startswith": [],
    "urllib.parse.quote.upper.lower.startswith": [],
    "collections.abc.MutableMapping.upper.decode.lower.startswith": [],
    "urllib.parse.urljoin.lower.startswith": [],
    "urllib.parse.urlparse._replace.geturl.upper.lower.startswith": [],
    "urlparse.urljoin.upper.decode.lower.startswith": [],
    "base64.b64encode.strip.upper.decode.lower.startswith": [],
    "re.compile.finditer.group.decode.upper.lower.startswith": [],
    "urllib.parse.quote.lstrip.upper.lower.startswith": [],
    "urllib.parse.urlunparse.decode.upper.lower.startswith": [],
    "urllib.parse.quote.lstrip.upper.decode.lower.startswith": [],
    "urllib.parse.quote.lstrip.decode.lower.startswith": [],
    "urllib.parse.quote.lower.startswith": [],
    "collections.abc.MutableMapping.lower.startswith": [],
    "urllib.parse.urlunparse.lower.startswith": [],
    "urllib.parse.urljoin.decode.upper.lower.startswith": [],
    "base64.b64encode.strip.decode.upper.lower.startswith": [],
    "collections.abc.MutableMapping.decode.upper.lower.startswith": [],
    "urlparse.urljoin.upper.lower.startswith": [],
    "urllib.parse.urlunparse.decode.lower.startswith": [],
    "base64.b64encode.strip.decode.lower.startswith": [],
    "urllib.parse.urlparse._replace.geturl.lower.startswith": [],
    "base64.b64encode.strip.upper.lower.startswith": [],
    "urllib.parse.urljoin.upper.lower.startswith": [],
    "urllib.parse.urlparse.geturl.lower.startswith": [],
    "urllib.parse.quote.decode.lower.startswith": [],
    "urllib.parse.quote.lstrip.lower.startswith": [],
    "urlparse.urljoin.decode.upper.lower.startswith": [],
    "urllib.parse.quote.lstrip.decode.upper.lower.startswith": [],
    "urllib.parse.quote.decode.lstrip.lower.startswith": [],
    "urllib.parse.urlparse.geturl.decode.lower.startswith": [],
    "urllib.parse.quote.decode.upper.lower.startswith": [],
    "urllib.parse.urlparse._replace.geturl.decode.upper.lower.startswith": [],
    "urllib.parse.urlparse.geturl.upper.decode.lower.startswith": [],
    "urllib.parse.urlunparse.upper.lower.startswith": [],
    "collections.abc.MutableMapping.decode.lower.startswith": [],
    "re.compile.finditer.group.decode.lower.startswith": [],
    "urlparse.urljoin.lower.startswith": [],
    "re.compile.finditer.group.lower.startswith": [],
    "urllib.parse.quote.upper.decode.lower.startswith": [],
    "urlparse.urljoin.decode.lower.startswith": [],
    "urllib.parse.quote.decode.lstrip.upper.lower.startswith": [],
    "urllib.parse.urlunparse.upper.decode.lower.startswith": [],
    "re.compile.finditer.group.upper.decode.lower.startswith": [],
    "base64.b64encode.strip.lower.startswith": [],
    "urllib.parse.urlparse._replace.geturl.upper.decode.lower.startswith": [],
    "re.compile.finditer.group.upper.lower.startswith": [],
    "urllib.parse.urljoin.upper.decode.lower.startswith": [],
    "collections.abc.MutableMapping.upper.lower.startswith": [],
    "urllib.parse.urlparse._replace.geturl.decode.lower.startswith": [],
    "urllib.parse.urlparse.geturl.decode.upper.lower.startswith": [],
    "collections.OrderedDict.values.close": [],
    "collections.OrderedDict.pop": [],
    "requests.sessions.Session.__getstate__": [
        "<builtin>.getattr"
    ],
    "requests.sessions.Session.__setstate__": [
        "<builtin>.setattr"
    ],
    "requests.sessions.session": [
        "requests.sessions.Session.__init__"
    ],
    "requests.adapters": [],
    "requests.adapters.SOCKSProxyManager": [
        "requests.exceptions.RequestException.__init__"
    ],
    "requests.adapters.BaseAdapter.__init__": [
        "<builtin>.super"
    ],
    "requests.adapters.BaseAdapter.send": [],
    "requests.adapters.BaseAdapter.close": [],
    "requests.adapters.HTTPAdapter.init_poolmanager": [
        "urllib3.poolmanager.PoolManager.__init__"
    ],
    "requests.adapters.HTTPAdapter.__getstate__": [
        "<builtin>.getattr"
    ],
    "requests.adapters.HTTPAdapter.__setstate__": [
        "requests.adapters.HTTPAdapter.init_poolmanager",
        "<builtin>.setattr"
    ],
    "requests.adapters.HTTPAdapter.proxy_manager_for": [
        "urllib.parse.urlunparse.lower",
        "requests.utils.get_auth_from_url",
        "urllib.parse.urlunparse.lower.startswith",
        "urllib3.poolmanager.proxy_from_url",
        "urllib3.contrib.socks.SOCKSProxyManager.__init__",
        "requests.adapters.HTTPAdapter.proxy_headers"
    ],
    "urllib3.contrib.socks.SOCKSProxyManager.__init__": [
        "urllib3.util.url.parse_url",
        "<builtin>.len",
        "<builtin>.super",
        "<builtin>.ValueError",
        "collections.namedtuple.auth.split"
    ],
    "requests.adapters.HTTPAdapter.proxy_headers": [
        "requests.auth._basic_auth_str",
        "requests.utils.get_auth_from_url"
    ],
    "requests.adapters.HTTPAdapter.cert_verify": [
        "requests.utils.extract_zipped_paths",
        "<builtin>.isinstance",
        "os.path.exists",
        "<builtin>.OSError",
        "os.path.isdir"
    ],
    "<builtin>.OSError": [],
    "requests.adapters.HTTPAdapter.build_response": [
        "requests.utils.get_encoding_from_headers",
        "requests.structures.CaseInsensitiveDict.__init__",
        "<builtin>.isinstance",
        "<builtin>.getattr",
        "requests.cookies.extract_cookies_to_jar",
        "requests.models.Response.__init__"
    ],
    "requests.models.Response.__init__": [
        "datetime.timedelta",
        "requests.structures.CaseInsensitiveDict.__init__",
        "requests.cookies.cookiejar_from_dict"
    ],
    "requests.adapters.HTTPAdapter.get_connection": [
        "urllib.parse.urlparse.geturl",
        "requests.adapters.HTTPAdapter.proxy_manager_for",
        "urllib3.util.url.parse_url",
        "requests.utils.select_proxy",
        "urllib3.poolmanager.PoolManager.connection_from_url",
        "requests.utils.prepend_scheme_if_needed",
        "urllib.parse.urlparse",
        "requests.exceptions.RequestException.__init__"
    ],
    "requests.adapters.HTTPAdapter.close": [
        "urllib3.poolmanager.PoolManager.clear"
    ],
    "requests.adapters.HTTPAdapter.request_url": [
        "requests.utils.urldefragauth",
        "requests.utils.select_proxy",
        "urllib.parse.urlparse",
        "urllib.parse.urlparse.scheme.lower",
        "urllib.parse.urlparse.scheme.lower.startswith"
    ],
    "urllib.parse.urlparse.scheme.lower": [],
    "urllib.parse.urlparse.scheme.lower.startswith": [],
    "requests.adapters.HTTPAdapter.add_headers": [],
    "requests.adapters.HTTPAdapter.send": [
        "_collections.RecentlyUsedContainer.get._get_conn.putrequest",
        "_collections.RecentlyUsedContainer.get.urlopen",
        "requests.adapters.HTTPAdapter.get_connection",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.send",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.putrequest",
        "requests.adapters.HTTPAdapter.cert_verify",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn",
        "_collections.RecentlyUsedContainer.get._get_conn.send",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.endheaders",
        "<builtin>.len",
        "<builtin>.ValueError",
        "_collections.RecentlyUsedContainer.get.proxy_pool.urlopen",
        "urllib3.response.HTTPResponse.from_httplib",
        "urllib3.util.timeout.Timeout.__init__",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.putheader",
        "requests.exceptions.RequestException.__init__",
        "_collections.RecentlyUsedContainer.get._get_conn",
        "_collections.RecentlyUsedContainer.get._get_conn.getresponse",
        "<builtin>.isinstance",
        "requests.adapters.HTTPAdapter.add_headers",
        "<builtin>.hex",
        "_collections.RecentlyUsedContainer.get._get_conn.close",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.close",
        "_collections.RecentlyUsedContainer.get._get_conn.endheaders",
        "_collections.RecentlyUsedContainer.get._get_conn.putheader",
        "requests.adapters.HTTPAdapter.request_url",
        "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse",
        "<builtin>.hasattr",
        "requests.adapters.HTTPAdapter.build_response"
    ],
    "_collections.RecentlyUsedContainer.get.proxy_pool.urlopen": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn": [],
    "_collections.RecentlyUsedContainer.get._get_conn": [],
    "_collections.RecentlyUsedContainer.get._get_conn.putrequest": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.putrequest": [],
    "_collections.RecentlyUsedContainer.get._get_conn.putheader": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.putheader": [],
    "_collections.RecentlyUsedContainer.get._get_conn.endheaders": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.endheaders": [],
    "_collections.RecentlyUsedContainer.get._get_conn.send": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.send": [],
    "_collections.RecentlyUsedContainer.get._get_conn.getresponse": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.getresponse": [],
    "_collections.RecentlyUsedContainer.get._get_conn.close": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool._get_conn.close": [],
    "urllib3.contrib.socks": [
        "warnings.warn"
    ],
    "urllib3.contrib.socks.SOCKSConnection.__init__": [
        "<builtin>.super"
    ],
    "urllib3.contrib.socks.SOCKSConnection._new_conn": [
        "socks.create_connection",
        "urllib3.exceptions.PoolError.__init__",
        "<builtin>.isinstance"
    ],
    "socks.create_connection": [],
    "collections.namedtuple.auth.split": [],
    "requests.models": [],
    "requests.models.RequestEncodingMixin.path_url": [
        "urllib.parse.urlsplit"
    ],
    "urllib.parse.urlsplit": [],
    "requests.models.RequestEncodingMixin._encode_params": [
        "requests.utils.to_key_val_list",
        "urllib.parse.urlencode",
        "<builtin>.isinstance",
        "<builtin>.hasattr"
    ],
    "urllib.parse.urlencode": [],
    "requests.models.RequestEncodingMixin._encode_files": [
        "urllib3.fields.RequestField.make_multipart",
        "requests.utils.to_key_val_list",
        "urllib3.fields.RequestField.__init__",
        "urllib3.filepost.encode_multipart_formdata",
        "<builtin>.isinstance",
        "<builtin>.len",
        "<builtin>.ValueError",
        "<builtin>.hasattr",
        "<builtin>.str",
        "requests.utils.guess_filename"
    ],
    "requests.models.RequestHooksMixin.register_hook": [
        "<builtin>.isinstance",
        "<builtin>.ValueError",
        "<builtin>.hasattr"
    ],
    "requests.models.RequestHooksMixin.deregister_hook": [],
    "requests.models.Request.__repr__": [],
    "requests.models.Request.prepare": [
        "requests.models.PreparedRequest.__init__",
        "requests.models.PreparedRequest.prepare"
    ],
    "requests.models.PreparedRequest.prepare_method": [
        "urllib.parse.urljoin.decode.upper",
        "base64.b64encode.strip.upper",
        "urllib.parse.urljoin.upper",
        "urllib.parse.quote.lstrip.upper",
        "urllib.parse.urlunparse.decode.upper",
        "collections.abc.MutableMapping.upper",
        "urllib.parse.urlparse.geturl.upper",
        "urllib.parse.urlparse._replace.geturl.upper",
        "urllib.parse.urlparse._replace.geturl.decode.upper",
        "re.compile.finditer.group.upper",
        "requests._internal_utils.to_native_string",
        "re.compile.finditer.group.decode.upper",
        "urlparse.urljoin.decode.upper",
        "base64.b64encode.strip.decode.upper",
        "urllib.parse.quote.decode.lstrip.upper",
        "urllib.parse.quote.lstrip.decode.upper",
        "urlparse.urljoin.upper",
        "urllib.parse.quote.upper",
        "urllib.parse.urlunparse.upper",
        "collections.abc.MutableMapping.decode.upper",
        "urllib.parse.quote.decode.upper",
        "urllib.parse.urlparse.geturl.decode.upper"
    ],
    "requests.models.PreparedRequest.prepare_url": [
        "urllib.parse.quote.lstrip.decode",
        "urllib.parse.quote.decode.lstrip.lower",
        "urllib.parse.quote.decode.lower",
        "urllib3.util.url.parse_url",
        "unicodedata.normalize.decode.startswith",
        "urllib.parse.quote.lstrip",
        "urllib.parse.quote.decode.lstrip",
        "urllib.parse.quote.lstrip.decode.lower",
        "urllib.parse.quote.lower.startswith",
        "urllib.parse.quote.lstrip.decode.lower.startswith",
        "urllib.parse.quote.lstrip.lower",
        "requests._internal_utils.to_native_string",
        "<builtin>.str",
        "requests.models.RequestEncodingMixin._encode_params",
        "requests.exceptions.RequestException.__init__",
        "re.compile.split.encode.decode.startswith",
        "urllib.parse.quote.decode.lower.startswith",
        "requests.models.PreparedRequest._get_idna_encoded_host",
        "urllib.parse.quote.lstrip.lower.startswith",
        "unicodedata.normalize.split.encode.decode.startswith",
        "urllib.parse.quote.decode.lstrip.lower.startswith",
        "<builtin>.isinstance",
        "urllib.parse.quote.decode",
        "urllib.parse.urlunparse",
        "requests._internal_utils.unicode_is_ascii",
        "requests.utils.requote_uri",
        "urllib.parse.quote.lower"
    ],
    "requests.models.PreparedRequest.prepare_headers": [
        "collections.abc.MutableMapping.items",
        "requests._internal_utils.to_native_string",
        "requests.structures.CaseInsensitiveDict.__init__",
        "requests.utils.check_header_validity"
    ],
    "requests.models.PreparedRequest.prepare_body": [
        "re.compile.finditer.group.decode.upper.tell",
        "urllib.parse.quote.lstrip.tell",
        "urllib.parse.urljoin.decode.encode.tell",
        "base64.b64encode.strip.upper.tell",
        "urllib.parse.urljoin.upper.decode.tell",
        "urllib.parse.urlparse.geturl.upper.tell",
        "urllib.parse.urlparse._replace.geturl.decode.encode.tell",
        "urllib.parse.quote.encode.tell",
        "urllib.parse.urlparse._replace.geturl.decode.tell",
        "requests.models.PreparedRequest.prepare_content_length",
        "urlparse.urljoin.upper.decode.tell",
        "urllib.parse.quote.upper.decode.encode",
        "collections.abc.MutableMapping.encode.tell",
        "urllib.parse.quote.decode.lstrip.encode",
        "urllib.parse.quote.lstrip.upper.decode.encode",
        "urllib.parse.urlparse._replace.geturl.decode.upper.encode",
        "urllib.parse.urlparse._replace.geturl.upper.decode.tell",
        "urllib.parse.urljoin.decode.encode",
        "collections.abc.MutableMapping.upper.encode.tell",
        "requests.models.RequestEncodingMixin._encode_params",
        "collections.abc.MutableMapping.decode.encode",
        "urllib.parse.urlunparse.decode.encode",
        "urlparse.urljoin.upper.decode.encode",
        "simplejson.dumps.tell",
        "urllib.parse.urlunparse.tell",
        "base64.b64encode.strip.upper.decode.tell",
        "urllib.parse.quote.lstrip.upper.decode.tell",
        "urllib.parse.urlparse._replace.geturl.upper.decode.encode.tell",
        "urllib.parse.quote.decode.tell",
        "urllib.parse.urlunparse.upper.encode.tell",
        "collections.abc.MutableMapping.encode",
        "urllib.parse.urljoin.decode.upper.encode",
        "urllib.parse.urlparse.geturl.upper.decode.tell",
        "urllib.parse.urlunparse.upper.encode",
        "urllib.parse.quote.lstrip.decode.encode",
        "urllib.parse.urlunparse.upper.tell",
        "collections.abc.MutableMapping.upper.tell",
        "urllib.parse.quote.lstrip.upper.tell",
        "urlparse.urljoin.decode.upper.tell",
        "urllib.parse.quote.decode.lstrip.tell",
        "json.dumps.encode.tell",
        "urllib.parse.quote.upper.tell",
        "collections.abc.MutableMapping.upper.decode.encode.tell",
        "urllib.parse.urlencode.tell",
        "urllib.parse.quote.tell",
        "<builtin>.hasattr",
        "simplejson.dumps.encode.tell",
        "urllib.parse.urlparse.geturl.decode.tell",
        "urlparse.urljoin.decode.encode",
        "urllib.parse.urlparse._replace.geturl.decode.encode",
        "collections.abc.MutableMapping.decode.tell",
        "urllib.parse.urlparse.geturl.upper.encode",
        "json.dumps",
        "urlparse.urljoin.upper.tell",
        "urllib.parse.quote.decode.encode",
        "collections.abc.MutableMapping.decode.encode.tell",
        "<builtin>.getattr",
        "urllib.parse.quote.decode.encode.tell",
        "re.compile.finditer.group.encode.tell",
        "urllib.parse.quote.lstrip.encode.tell",
        "urlparse.urljoin.upper.encode.tell",
        "urllib.parse.urlparse.geturl.upper.decode.encode",
        "re.compile.finditer.group.upper.decode.encode",
        "urllib.parse.quote.upper.encode",
        "json.dumps.tell",
        "base64.b64encode.strip.decode.tell",
        "urllib.parse.urlunparse.upper.decode.encode.tell",
        "urllib.parse.urljoin.upper.tell",
        "urllib.parse.quote.upper.encode.tell",
        "<builtin>.all",
        "urllib.parse.quote.lstrip.upper.encode.tell",
        "urlparse.urljoin.upper.decode.encode.tell",
        "urllib.parse.urlparse._replace.geturl.upper.encode",
        "urllib.parse.urlparse._replace.geturl.tell",
        "urllib.parse.quote.lstrip.decode.tell",
        "urlparse.urljoin.tell",
        "urllib.parse.urljoin.tell",
        "<builtin>.isinstance",
        "re.compile.finditer.group.decode.upper.encode",
        "urllib.parse.quote.lstrip.decode.upper.encode.tell",
        "re.compile.finditer.group.decode.tell",
        "urllib.parse.quote.decode.lstrip.upper.encode",
        "urllib.parse.urlparse.geturl.encode.tell",
        "urllib.parse.urlparse.geturl.decode.encode.tell",
        "urlparse.urljoin.decode.tell",
        "re.compile.finditer.group.decode.upper.encode.tell",
        "urlparse.urljoin.encode.tell",
        "urllib.parse.quote.decode.lstrip.upper.encode.tell",
        "urllib.parse.quote.decode.lstrip.encode.tell",
        "re.compile.finditer.group.upper.tell",
        "base64.b64encode.strip.tell",
        "urllib.parse.urlparse.geturl.decode.upper.tell",
        "urllib.parse.urljoin.upper.decode.encode",
        "urllib.parse.quote.decode.upper.encode.tell",
        "collections.abc.MutableMapping.decode.upper.encode",
        "urllib.parse.urlunparse.upper.decode.tell",
        "urllib.parse.quote.lstrip.decode.upper.encode",
        "urllib.parse.urljoin.decode.upper.encode.tell",
        "collections.abc.MutableMapping.upper.decode.tell",
        "urllib.parse.urljoin.decode.upper.tell",
        "urllib.parse.urlparse._replace.geturl.encode",
        "urlparse.urljoin.upper.encode",
        "urlparse.urljoin.encode",
        "re.compile.finditer.group.upper.decode.tell",
        "urllib.parse.urlunparse.decode.encode.tell",
        "json.dumps.encode",
        "urllib.parse.urlparse.geturl.decode.upper.encode.tell",
        "urllib.parse.quote.decode.upper.tell",
        "collections.abc.MutableMapping.tell",
        "urllib.parse.quote.encode",
        "<builtin>.object",
        "urllib.parse.quote.lstrip.decode.encode.tell",
        "simplejson.dumps",
        "re.compile.finditer.group.tell",
        "urllib.parse.urlparse._replace.geturl.decode.upper.tell",
        "urllib.parse.urljoin.upper.decode.encode.tell",
        "collections.abc.MutableMapping.upper.encode",
        "urllib.parse.urlunparse.decode.tell",
        "urllib.parse.urljoin.upper.encode.tell",
        "re.compile.finditer.group.decode.encode.tell",
        "base64.b64encode.strip.decode.upper.tell",
        "urllib.parse.urlunparse.decode.upper.tell",
        "urllib.parse.urlunparse.upper.decode.encode",
        "urlparse.urljoin.decode.encode.tell",
        "urllib.parse.quote.decode.lstrip.upper.tell",
        "urllib.parse.urlparse._replace.geturl.decode.upper.encode.tell",
        "re.compile.finditer.group.upper.encode",
        "urllib.parse.urlunparse.encode.tell",
        "urllib.parse.urljoin.encode",
        "urllib.parse.urlparse.geturl.upper.encode.tell",
        "urllib.parse.quote.lstrip.upper.encode",
        "requests.utils.super_len",
        "urllib.parse.quote.lstrip.encode",
        "urllib.parse.quote.decode.upper.encode",
        "urllib.parse.quote.upper.decode.encode.tell",
        "collections.abc.MutableMapping.decode.upper.encode.tell",
        "collections.abc.MutableMapping.upper.decode.encode",
        "urllib.parse.urlunparse.decode.upper.encode",
        "re.compile.finditer.group.decode.encode",
        "re.compile.finditer.group.upper.encode.tell",
        "urllib.parse.urljoin.decode.tell",
        "<builtin>.NotImplementedError",
        "urllib.parse.urlunparse.decode.upper.encode.tell",
        "requests.exceptions.RequestException.__init__",
        "urllib.parse.urljoin.upper.encode",
        "urllib.parse.urlparse._replace.geturl.upper.decode.encode",
        "urllib.parse.urlparse.geturl.tell",
        "urllib.parse.quote.lstrip.upper.decode.encode.tell",
        "simplejson.dumps.encode",
        "urllib.parse.urlparse._replace.geturl.upper.tell",
        "urllib.parse.urlparse.geturl.encode",
        "re.compile.finditer.group.encode",
        "collections.abc.MutableMapping.decode.upper.tell",
        "urllib.parse.urlparse.geturl.upper.decode.encode.tell",
        "urllib.parse.urlparse.geturl.decode.encode",
        "urllib.parse.urlparse._replace.geturl.encode.tell",
        "requests.models.RequestEncodingMixin._encode_files",
        "urlparse.urljoin.decode.upper.encode.tell",
        "urllib.parse.urlunparse.encode",
        "urllib.parse.urlparse._replace.geturl.upper.encode.tell",
        "urllib.parse.quote.lstrip.decode.upper.tell",
        "re.compile.finditer.group.upper.decode.encode.tell",
        "urlparse.urljoin.decode.upper.encode",
        "urllib.parse.urljoin.encode.tell",
        "urllib.parse.quote.upper.decode.tell",
        "urllib.parse.urlparse.geturl.decode.upper.encode"
    ],
    "requests.models.PreparedRequest.prepare_hooks": [
        "requests.models.RequestHooksMixin.register_hook",
        "requests.structures.CaseInsensitiveDict.__iter__"
    ],
    "requests.models.PreparedRequest.__repr__": [],
    "urlparse.urljoin.decode.upper": [],
    "urllib.parse.urljoin.decode.upper": [],
    "base64.b64encode.strip.decode.upper": [],
    "base64.b64encode.strip.upper": [],
    "urllib.parse.quote.decode.lstrip.upper": [],
    "urllib.parse.quote.lstrip.decode.upper": [],
    "urllib.parse.urljoin.upper": [],
    "urlparse.urljoin.upper": [],
    "urllib.parse.quote.upper": [],
    "urllib.parse.urlunparse.upper": [],
    "urllib.parse.quote.lstrip.upper": [],
    "urllib.parse.urlunparse.decode.upper": [],
    "collections.abc.MutableMapping.upper": [],
    "urllib.parse.urlparse.geturl.upper": [],
    "urllib.parse.urlparse._replace.geturl.upper": [],
    "urllib.parse.urlparse._replace.geturl.decode.upper": [],
    "collections.abc.MutableMapping.decode.upper": [],
    "urllib.parse.quote.decode.upper": [],
    "urllib.parse.urlparse.geturl.decode.upper": [],
    "re.compile.finditer.group.upper": [],
    "re.compile.finditer.group.decode.upper": [],
    "requests.models.PreparedRequest._get_idna_encoded_host": [
        "idna.encode",
        "unicodedata.normalize.decode",
        "unicodedata.normalize.split.encode.decode",
        "re.compile.split.encode.decode"
    ],
    "urllib.parse.quote.decode.lstrip": [],
    "urllib.parse.quote.lstrip": [],
    "simplejson.dumps": [],
    "urlparse.urljoin.decode.encode": [],
    "urllib.parse.urlparse._replace.geturl.decode.encode": [],
    "urllib.parse.quote.lstrip.upper.encode": [],
    "urllib.parse.urlparse._replace.geturl.encode": [],
    "urllib.parse.quote.lstrip.encode": [],
    "urllib.parse.quote.decode.upper.encode": [],
    "urlparse.urljoin.upper.encode": [],
    "urlparse.urljoin.encode": [],
    "urllib.parse.urlparse.geturl.upper.encode": [],
    "urllib.parse.quote.decode.encode": [],
    "collections.abc.MutableMapping.upper.decode.encode": [],
    "urllib.parse.urlunparse.decode.upper.encode": [],
    "re.compile.finditer.group.decode.encode": [],
    "json.dumps.encode": [],
    "urllib.parse.quote.lstrip.decode.upper.encode": [],
    "urllib.parse.quote.upper.decode.encode": [],
    "urllib.parse.quote.encode": [],
    "urllib.parse.urlparse.geturl.upper.decode.encode": [],
    "urllib.parse.quote.decode.lstrip.encode": [],
    "urllib.parse.quote.upper.encode": [],
    "urllib.parse.quote.lstrip.upper.decode.encode": [],
    "re.compile.finditer.group.upper.decode.encode": [],
    "urllib.parse.urlparse._replace.geturl.decode.upper.encode": [],
    "urllib.parse.urljoin.decode.encode": [],
    "urllib.parse.urljoin.upper.encode": [],
    "urllib.parse.urlparse._replace.geturl.upper.decode.encode": [],
    "collections.abc.MutableMapping.decode.encode": [],
    "urllib.parse.urlunparse.decode.encode": [],
    "collections.abc.MutableMapping.upper.encode": [],
    "simplejson.dumps.encode": [],
    "urllib.parse.urlparse._replace.geturl.upper.encode": [],
    "urllib.parse.urlparse.geturl.encode": [],
    "urlparse.urljoin.upper.decode.encode": [],
    "re.compile.finditer.group.encode": [],
    "re.compile.finditer.group.decode.upper.encode": [],
    "urllib.parse.urlparse.geturl.decode.encode": [],
    "urllib.parse.quote.decode.lstrip.upper.encode": [],
    "urllib.parse.urlunparse.encode": [],
    "collections.abc.MutableMapping.encode": [],
    "urllib.parse.urljoin.decode.upper.encode": [],
    "urllib.parse.urlunparse.upper.encode": [],
    "urllib.parse.quote.lstrip.decode.encode": [],
    "urllib.parse.urlunparse.upper.decode.encode": [],
    "urlparse.urljoin.decode.upper.encode": [],
    "urllib.parse.urljoin.upper.decode.encode": [],
    "urllib.parse.urlparse.geturl.decode.upper.encode": [],
    "collections.abc.MutableMapping.decode.upper.encode": [],
    "re.compile.finditer.group.upper.encode": [],
    "urllib.parse.urljoin.encode": [],
    "<builtin>.all": [],
    "requests.models.PreparedRequest.prepare_content_length": [
        "requests.utils.super_len",
        "collections.abc.MutableMapping.get"
    ],
    "requests.auth.HTTPBasicAuth.__init__": [],
    "requests.models.Response.__enter__": [],
    "requests.models.Response.__exit__": [
        "requests.models.Response.close"
    ],
    "requests.models.Response.close": [
        "_collections.RecentlyUsedContainer.get.proxy_pool.urlopen.close",
        "<builtin>.getattr",
        "_collections.RecentlyUsedContainer.get.urlopen.close"
    ],
    "requests.models.Response.__getstate__": [
        "<builtin>.getattr"
    ],
    "requests.models.Response.__setstate__": [
        "<builtin>.setattr"
    ],
    "requests.models.Response.__repr__": [],
    "requests.models.Response.__bool__": [],
    "requests.models.Response.__nonzero__": [],
    "requests.models.Response.__iter__": [
        "requests.models.Response.iter_content"
    ],
    "requests.models.Response.iter_content": [
        "<builtin>.TypeError",
        "requests.utils.stream_decode_response_unicode",
        "requests.utils.iter_slices",
        "<builtin>.isinstance",
        "requests.models.Response.iter_content.generate",
        "<builtin>.type",
        "requests.exceptions.RequestException.__init__"
    ],
    "requests.models.Response.ok": [
        "requests.models.Response.raise_for_status"
    ],
    "requests.models.Response.raise_for_status": [
        "_collections.RecentlyUsedContainer.get.proxy_pool.urlopen.reason.decode",
        "_collections.RecentlyUsedContainer.get.urlopen.reason.decode",
        "requests.exceptions.RequestException.__init__",
        "<builtin>.isinstance"
    ],
    "requests.models.Response.is_redirect": [],
    "requests.models.Response.is_permanent_redirect": [],
    "requests.models.Response.next": [],
    "requests.models.Response.apparent_encoding": [
        "charset_normalizer.detect",
        "chardet.detect"
    ],
    "charset_normalizer.detect": [],
    "chardet.detect": [],
    "requests.models.Response.iter_content.generate": [
        "_collections.RecentlyUsedContainer.get.proxy_pool.urlopen.read",
        "_collections.RecentlyUsedContainer.get.proxy_pool.urlopen.stream",
        "_collections.RecentlyUsedContainer.get.urlopen.read",
        "<builtin>.hasattr",
        "requests.exceptions.RequestException.__init__",
        "_collections.RecentlyUsedContainer.get.urlopen.stream"
    ],
    "_collections.RecentlyUsedContainer.get.proxy_pool.urlopen.stream": [],
    "_collections.RecentlyUsedContainer.get.urlopen.stream": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool.urlopen.read": [],
    "_collections.RecentlyUsedContainer.get.urlopen.read": [],
    "requests.models.Response.iter_lines": [
        "requests.models.Response.iter_content"
    ],
    "requests.models.Response.content": [
        "<builtin>.RuntimeError",
        "requests.models.Response.iter_content"
    ],
    "requests.models.Response.text": [
        "<builtin>.str"
    ],
    "requests.models.Response.json": [
        "requests.exceptions.JSONDecodeError.__init__",
        "json.loads",
        "simplejson.loads",
        "<builtin>.len",
        "requests.utils.guess_json_utf"
    ],
    "simplejson.loads": [],
    "json.loads": [],
    "requests.models.Response.links": [
        "requests.utils.parse_header_links",
        "collections.abc.MutableMapping.get"
    ],
    "_collections.RecentlyUsedContainer.get.proxy_pool.urlopen.reason.decode": [],
    "_collections.RecentlyUsedContainer.get.urlopen.reason.decode": [],
    "_collections.RecentlyUsedContainer.get.proxy_pool.urlopen.close": [],
    "_collections.RecentlyUsedContainer.get.urlopen.close": [],
    "requests.hooks": [],
    "requests.status_codes": [
        "requests.status_codes._init",
        "requests.structures.LookupDict.__init__"
    ],
    "requests.status_codes._init": [
        "<builtin>.setattr",
        "<builtin>.sorted",
        "requests.status_codes._init.doc"
    ],
    "requests.status_codes._init.doc": [],
    "requests.auth": [],
    "base64.b64encode.strip": [],
    "requests.auth.AuthBase.__call__": [
        "<builtin>.NotImplementedError"
    ],
    "requests.auth.HTTPBasicAuth.__eq__": [
        "<builtin>.all"
    ],
    "requests.auth.HTTPBasicAuth.__ne__": [],
    "requests.auth.HTTPBasicAuth.__call__": [
        "requests.auth._basic_auth_str"
    ],
    "requests.auth.HTTPProxyAuth.__call__": [
        "requests.auth._basic_auth_str"
    ],
    "requests.auth.HTTPDigestAuth.__init__": [
        "threading.local"
    ],
    "threading.local": [],
    "requests.auth.HTTPDigestAuth.init_per_thread_state": [
        "<builtin>.hasattr"
    ],
    "requests.auth.HTTPDigestAuth.build_digest_header": [
        "requests.auth.HTTPDigestAuth.build_digest_header.md5_utf8",
        "requests.auth.HTTPDigestAuth.build_digest_header.sha512_utf8",
        "hashlib.sha1",
        "os.urandom",
        "urllib.parse.urlparse",
        "time.ctime",
        "hashlib.sha1.hexdigest",
        "threading.local.chal.get.upper",
        "threading.local.chal.get.split",
        "time.ctime.encode",
        "threading.local.chal.get",
        "requests.auth.HTTPDigestAuth.build_digest_header.<lambda1>",
        "requests.auth.HTTPDigestAuth.build_digest_header.sha_utf8",
        "requests.auth.HTTPDigestAuth.build_digest_header.sha256_utf8"
    ],
    "threading.local.chal.get": [],
    "threading.local.chal.get.upper": [],
    "requests.auth.HTTPDigestAuth.build_digest_header.md5_utf8": [
        "hashlib.md5",
        "hashlib.md5.hexdigest",
        "<builtin>.isinstance"
    ],
    "hashlib.md5": [],
    "hashlib.md5.hexdigest": [],
    "requests.auth.HTTPDigestAuth.build_digest_header.sha_utf8": [
        "hashlib.sha1",
        "<builtin>.isinstance",
        "hashlib.sha1.hexdigest"
    ],
    "hashlib.sha1": [],
    "hashlib.sha1.hexdigest": [],
    "requests.auth.HTTPDigestAuth.build_digest_header.sha256_utf8": [
        "hashlib.sha256.hexdigest",
        "hashlib.sha256",
        "<builtin>.isinstance"
    ],
    "requests.auth.HTTPDigestAuth.build_digest_header.sha512_utf8": [
        "hashlib.sha512",
        "hashlib.sha512.hexdigest",
        "<builtin>.isinstance"
    ],
    "hashlib.sha512": [],
    "hashlib.sha512.hexdigest": [],
    "requests.auth.HTTPDigestAuth.build_digest_header.<lambda1>": [
        "requests.auth.HTTPDigestAuth.build_digest_header.md5_utf8",
        "requests.auth.HTTPDigestAuth.build_digest_header.sha512_utf8",
        "requests.auth.HTTPDigestAuth.build_digest_header.sha_utf8",
        "requests.auth.HTTPDigestAuth.build_digest_header.sha256_utf8"
    ],
    "time.ctime": [],
    "time.ctime.encode": [],
    "threading.local.chal.get.split": [],
    "requests.auth.HTTPDigestAuth.handle_redirect": [],
    "requests.auth.HTTPDigestAuth.handle_401": [
        "re.compile.sub",
        "requests.auth.HTTPDigestAuth.build_digest_header",
        "re.compile",
        "requests.utils.parse_dict_header",
        "requests.cookies.extract_cookies_to_jar"
    ],
    "requests.auth.HTTPDigestAuth.__call__": [
        "requests.auth.HTTPDigestAuth.build_digest_header",
        "requests.auth.HTTPDigestAuth.init_per_thread_state"
    ],
    "requests.auth.HTTPDigestAuth.__eq__": [
        "<builtin>.all"
    ],
    "requests.auth.HTTPDigestAuth.__ne__": [],
    "requests.packages": [
        "<builtin>.__import__",
        "chardet.__name__.replace",
        "<builtin>.locals",
        "warnings.filterwarnings",
        "<builtin>.list"
    ],
    "warnings.filterwarnings": [],
    "<builtin>.locals": [],
    "chardet.__name__.replace": [],
    "requests.api": [],
    "requests.api.request": [
        "requests.sessions.Session.__init__"
    ],
    "requests.api.get": [
        "requests.api.request"
    ],
    "requests.api.options": [
        "requests.api.request"
    ],
    "requests.api.head": [
        "requests.api.request"
    ],
    "requests.api.post": [
        "requests.api.request"
    ],
    "requests.api.put": [
        "requests.api.request"
    ],
    "requests.api.patch": [
        "requests.api.request"
    ],
    "requests.api.delete": [
        "requests.api.request"
    ],
    "lxml.html": [
        "lxml.html.__fix_docstring",
        "lxml.html._MethodFunc.__init__",
        "lxml.html.HTMLParser.__init__",
        "re.compile",
        "lxml.html.XHTMLParser.__init__"
    ],
    "lxml.html.__fix_docstring": [
        "re.compile",
        "re.compile.sub"
    ],
    "lxml.html._unquote_match": [],
    "lxml.html._transform_result": [
        "<builtin>.issubclass",
        "lxml.html.tostring"
    ],
    "lxml.html.tostring": [
        "<builtin>.bytes",
        "re.compile.sub",
        "<builtin>.isinstance"
    ],
    "lxml.html._nons": [
        "<builtin>.len",
        "<builtin>.isinstance"
    ],
    "lxml.html.Classes.__init__": [
        "functools.partial"
    ],
    "lxml.html.Classes.add": [
        "functools.partial.split.append",
        "functools.partial.split",
        "re.search",
        "<builtin>.ValueError",
        "functools.partial"
    ],
    "re.search": [],
    "functools.partial.split": [],
    "functools.partial.split.append": [],
    "lxml.html.Classes.discard": [
        "functools.partial.split",
        "re.search",
        "<builtin>.ValueError",
        "functools.partial"
    ],
    "lxml.html.Classes.remove": [
        "re.search",
        "<builtin>.super",
        "<builtin>.ValueError"
    ],
    "lxml.html.Classes.__contains__": [
        "functools.partial.split",
        "functools.partial"
    ],
    "lxml.html.Classes.__iter__": [
        "functools.partial.split",
        "<builtin>.iter",
        "functools.partial"
    ],
    "lxml.html.Classes.__len__": [
        "functools.partial.split",
        "<builtin>.len",
        "functools.partial"
    ],
    "lxml.html.Classes.update": [
        "functools.partial.split",
        "functools.partial.split.append",
        "functools.partial"
    ],
    "lxml.html.Classes.toggle": [
        "functools.partial.split.append",
        "functools.partial.split.remove",
        "functools.partial.split",
        "re.search",
        "<builtin>.ValueError",
        "functools.partial"
    ],
    "functools.partial.split.remove": [],
    "lxml.html.HtmlMixin.set": [
        "<builtin>.super"
    ],
    "lxml.html.HtmlMixin.classes": [
        "lxml.html.HtmlMixin.set",
        "lxml.html.Classes.__init__",
        "<builtin>.isinstance"
    ],
    "lxml.html.HtmlMixin.base_url": [],
    "lxml.html.HtmlMixin.forms": [],
    "lxml.html.HtmlMixin.body": [],
    "lxml.html.HtmlMixin.head": [],
    "lxml.html.HtmlMixin.label": [
        "<builtin>.TypeError",
        "lxml.html._nons"
    ],
    "lxml.html.HtmlMixin.drop_tree": [],
    "lxml.html.HtmlMixin.drop_tag": [
        "<builtin>.len",
        "<builtin>.isinstance"
    ],
    "lxml.html.HtmlMixin.find_rel_links": [],
    "lxml.html.HtmlMixin.find_class": [],
    "lxml.html.HtmlMixin.get_element_by_id": [
        "<builtin>.KeyError"
    ],
    "lxml.html.HtmlMixin.text_content": [],
    "lxml.html.HtmlMixin.cssselect": [
        "lxml.cssselect.CSSSelector.__init__"
    ],
    "lxml.cssselect.CSSSelector.__init__": [
        "etree.XPath.__init__",
        "cssselect.GenericTranslator.css_to_xpath",
        "cssselect.GenericTranslator.__init__"
    ],
    "lxml.html.HtmlMixin.make_links_absolute": [
        "<builtin>.TypeError",
        "lxml.html.HtmlMixin.resolve_base_href",
        "lxml.html.HtmlMixin.rewrite_links",
        "<builtin>.ValueError"
    ],
    "lxml.html.HtmlMixin.resolve_base_href": [
        "lxml.html.HtmlMixin.make_links_absolute"
    ],
    "lxml.html.HtmlMixin.make_links_absolute.link_repl": [
        "urllib.parse.urljoin",
        "urlparse.urljoin"
    ],
    "urlparse.urljoin": [],
    "lxml.html.HtmlMixin.rewrite_links": [
        "lxml.html.HtmlMixin.resolve_base_href",
        "lxml.html.HtmlMixin.make_links_absolute.link_repl",
        "lxml.html.HtmlMixin.make_links_absolute",
        "lxml.html.HtmlMixin.iterlinks",
        "<builtin>.len"
    ],
    "lxml.html.HtmlMixin.iterlinks": [
        "re.compile.finditer.start",
        "re.compile.finditer.group",
        "lxml.html._nons",
        "urlparse.urljoin",
        "lxml.html._unquote_match",
        "re.compile.search",
        "re.compile.finditer",
        "<builtin>.list",
        "urllib.parse.urljoin"
    ],
    "re.compile.finditer": [],
    "re.compile.finditer.group": [],
    "re.compile.finditer.start": [],
    "lxml.html._MethodFunc.__init__": [
        "<builtin>.getattr"
    ],
    "lxml.html._MethodFunc.__call__": [
        "<builtin>.TypeError",
        "lxml.html.fromstring",
        "<builtin>.isinstance",
        "<builtin>.type",
        "<builtin>.getattr",
        "lxml.html._transform_result"
    ],
    "lxml.html.HtmlElementClassLookup.__init__": [
        "<builtin>.tuple",
        "<builtin>.type"
    ],
    "lxml.html.HtmlElementClassLookup.lookup": [],
    "lxml.html.document_fromstring": [
        "lxml.html.Element"
    ],
    "lxml.html.Element": [],
    "lxml.html.fragments_fromstring": [
        "lxml.html.document_fromstring",
        "lxml.html._nons",
        "<builtin>.isinstance",
        "re.compile.match",
        "<builtin>.len"
    ],
    "lxml.html.fragment_fromstring": [
        "lxml.html.fragments_fromstring",
        "<builtin>.isinstance",
        "lxml.html.Element",
        "lxml.html._element_name",
        "<builtin>.len",
        "<builtin>.bool"
    ],
    "lxml.html._element_name": [
        "lxml.html._nons",
        "<builtin>.isinstance"
    ],
    "lxml.html._contains_block_level_tag": [
        "lxml.html._nons"
    ],
    "lxml.html.parse": [],
    "lxml.html.FormElement.inputs": [
        "lxml.html.InputGetter.__init__"
    ],
    "lxml.html.InputGetter.__init__": [],
    "lxml.html.FormElement.fields": [
        "lxml.html.FieldsDict.__init__"
    ],
    "lxml.html.FieldsDict.__init__": [],
    "lxml.html.FormElement._name": [
        "<builtin>.list",
        "<builtin>.str"
    ],
    "lxml.html.FormElement.form_values": [
        "lxml.html._nons"
    ],
    "lxml.html.FormElement.action": [
        "urllib.parse.urljoin",
        "urlparse.urljoin",
        "lxml.html.HtmlMixin.set"
    ],
    "lxml.html.FormElement.method": [
        "lxml.html.HtmlMixin.set"
    ],
    "lxml.html.submit_form": [
        "lxml.html.open_http_urllib",
        "<builtin>.hasattr"
    ],
    "lxml.html.open_http_urllib": [
        "urllib.urlencode",
        "urllib.parse.urlencode.encode",
        "<builtin>.isinstance",
        "urllib.parse.urlencode",
        "<builtin>.ValueError",
        "urllib.urlencode.encode",
        "urllib.request.urlopen",
        "urllib.urlopen"
    ],
    "urllib.urlencode": [],
    "urllib.urlencode.encode": [],
    "urllib.parse.urlencode.encode": [],
    "urllib.request.urlopen": [],
    "urllib.urlopen": [],
    "lxml.html.FieldsDict.__getitem__": [],
    "lxml.html.FieldsDict.__setitem__": [],
    "lxml.html.FieldsDict.__delitem__": [
        "<builtin>.KeyError"
    ],
    "lxml.html.FieldsDict.keys": [],
    "lxml.html.FieldsDict.__contains__": [],
    "lxml.html.FieldsDict.__iter__": [
        "<builtin>.iter"
    ],
    "lxml.html.FieldsDict.__len__": [
        "<builtin>.len"
    ],
    "lxml.html.FieldsDict.__repr__": [],
    "lxml.html.InputGetter.__repr__": [
        "lxml.html.FormElement._name"
    ],
    "lxml.html.InputGetter.__getitem__": [
        "<builtin>.KeyError",
        "<builtin>.len"
    ],
    "lxml.html.InputGetter.__contains__": [
        "lxml.html.InputGetter.__iter__"
    ],
    "lxml.html.InputGetter.__iter__": [],
    "lxml.html.InputGetter.keys": [
        "lxml.html.InputGetter.__iter__"
    ],
    "lxml.html.InputGetter.items": [
        "<builtin>.set",
        "lxml.html.InputGetter.__iter__"
    ],
    "lxml.html.InputGetter.__len__": [
        "<builtin>.sum"
    ],
    "lxml.html.InputMixin.name": [],
    "lxml.html.InputMixin.__repr__": [
        "<builtin>.getattr",
        "<builtin>.id"
    ],
    "lxml.html.TextareaElement.value": [],
    "lxml.html.SelectElement.value": [
        "<builtin>.TypeError",
        "<builtin>.next",
        "lxml.html.MultipleSelectOptions.__init__",
        "<builtin>.isinstance",
        "<builtin>.reversed"
    ],
    "lxml.html.MultipleSelectOptions.__init__": [],
    "lxml.html.SelectElement.value_options": [],
    "lxml.html.SelectElement.multiple": [
        "lxml.html.HtmlMixin.set"
    ],
    "lxml.html.MultipleSelectOptions.options": [
        "<builtin>.iter"
    ],
    "lxml.html.MultipleSelectOptions.__iter__": [],
    "lxml.html.MultipleSelectOptions.add": [],
    "lxml.html.MultipleSelectOptions.remove": [
        "<builtin>.ValueError"
    ],
    "lxml.html.MultipleSelectOptions.__repr__": [
        "<builtin>.repr"
    ],
    "lxml.html.RadioGroup.value": [],
    "lxml.html.RadioGroup.value_options": [],
    "lxml.html.RadioGroup.__repr__": [],
    "lxml.html.CheckboxGroup.value": [
        "lxml.html.CheckboxValues.__init__",
        "<builtin>.ValueError",
        "<builtin>.hasattr"
    ],
    "lxml.html.CheckboxValues.__init__": [],
    "lxml.html.CheckboxGroup.value_options": [],
    "lxml.html.CheckboxGroup.__repr__": [],
    "lxml.html.CheckboxValues.__iter__": [
        "<builtin>.iter"
    ],
    "lxml.html.CheckboxValues.add": [],
    "lxml.html.CheckboxValues.remove": [
        "<builtin>.KeyError"
    ],
    "lxml.html.CheckboxValues.__repr__": [
        "<builtin>.repr"
    ],
    "lxml.html.InputElement.value": [
        "lxml.html.HtmlMixin.set",
        "<builtin>.isinstance"
    ],
    "lxml.html.InputElement.type": [
        "lxml.html.HtmlMixin.set"
    ],
    "lxml.html.InputElement.checkable": [],
    "lxml.html.InputElement.checked": [
        "lxml.html.HtmlMixin.set",
        "<builtin>.AttributeError"
    ],
    "lxml.html.LabelElement.for_element": [
        "<builtin>.TypeError",
        "lxml.html.HtmlMixin.set"
    ],
    "lxml.html.html_to_xhtml": [],
    "lxml.html.xhtml_to_html": [
        "<builtin>.len"
    ],
    "lxml.html.open_in_browser": [
        "os.fdopen",
        "webbrowser.open",
        "<builtin>.print",
        "<builtin>.isinstance",
        "tempfile.mkstemp",
        "os.fdopen.close"
    ],
    "os.fdopen.close": [],
    "webbrowser.open": [],
    "lxml.html.HTMLParser.__init__": [
        "lxml.html.HtmlElementClassLookup.__init__",
        "<builtin>.super"
    ],
    "lxml.html.XHTMLParser.__init__": [
        "lxml.html.HtmlElementClassLookup.__init__",
        "<builtin>.super"
    ],
    "lxml.html._setmixin": [],
    "lxml.html._setmixin.SetMixin.__len__": [
        "lxml.html._setmixin.SetMixin.__iter__"
    ],
    "lxml.html._setmixin.SetMixin.__iter__": [],
    "lxml.html._setmixin.SetMixin.__contains__": [
        "lxml.html._setmixin.SetMixin.__iter__"
    ],
    "lxml.html._setmixin.SetMixin.copy": [
        "<builtin>.set"
    ],
    "lxml.html._setmixin.SetMixin.update": [],
    "lxml.html._setmixin.SetMixin.intersection_update": [],
    "lxml.html._setmixin.SetMixin.difference_update": [],
    "lxml.html._setmixin.SetMixin.symmetric_difference_update": [],
    "lxml.html._setmixin.SetMixin.discard": [
        "lxml.html.CheckboxValues.remove",
        "collections.abc.MutableSet.remove",
        "lxml.html.MultipleSelectOptions.remove"
    ],
    "collections.abc.MutableSet.remove": [],
    "lxml.html._setmixin.SetMixin._from_iterable": [
        "<builtin>.set"
    ],
    "lxml.cssselect": [
        "<builtin>.ImportError",
        "etree.FunctionNamespace"
    ],
    "lxml.cssselect.LxmlTranslator.xpath_contains_function": [
        "cssselect.GenericTranslator.xpath_literal",
        "cssselect.ExpressionError"
    ],
    "cssselect.ExpressionError": [],
    "cssselect.GenericTranslator.xpath_literal": [],
    "lxml.cssselect._make_lower_case": [],
    "etree.FunctionNamespace": [],
    "cssselect.GenericTranslator.__init__": [],
    "cssselect.GenericTranslator.css_to_xpath": [],
    "etree.XPath.__init__": [],
    "lxml.cssselect.CSSSelector.__repr__": [
        "<builtin>.abs",
        "<builtin>.hex",
        "<builtin>.id"
    ],
    "lxml.html.defs": [
        "<builtin>.frozenset"
    ]
}