{
    "handler": [
        "numpy",
        "sklearn",
        "pandas",
        "handler.load_model"
    ],
    "pandas": [
        "pandas._version_meson",
        "pandas.core.config_init",
        "pandas.tseries.api",
        "pandas.errors",
        "pandas.arrays",
        "pandas.api",
        "pandas.io",
        "pandas.core.api",
        "append",
        "<map>.get",
        "pandas.core.dtypes.dtypes",
        "pandas.testing",
        "pandas.util._tester",
        "pandas.core.reshape.api",
        "pandas.core.computation.api",
        "pandas.tseries.offsets",
        "pandas._version",
        "<str>.join",
        "pandas.tseries",
        "pandas.plotting",
        "<builtin>.__import__",
        "pandas._version.get_versions",
        "pandas.io.json._normalize",
        "pandas._config",
        "pandas.io.api",
        "pandas.compat",
        "<builtin>.ImportError",
        "pandas.util._print_versions"
    ],
    "<builtin>.__import__": [],
    "append": [],
    "<str>.join": [],
    "<builtin>.ImportError": [],
    "pandas.compat": [
        "pandas._typing",
        "pandas.compat.pyarrow",
        "pandas.compat._constants",
        "pandas.compat.numpy",
        "pandas.compat.compressors"
    ],
    "pandas.compat._constants": [],
    "pandas.compat.compressors": [
        "pandas.compat.compressors.LZMAFile",
        "pandas.compat.compressors.BZ2File",
        "pandas.compat._constants"
    ],
    "pandas.compat.compressors.BZ2File": [],
    "pandas.compat.compressors.LZMAFile": [],
    "pandas.compat.numpy": [
        "numpy",
        "pandas.util.version.Version.__init__",
        "<builtin>.ImportError",
        "pandas.util.version"
    ],
    "numpy": [
        "numpy.core.getlimits._register_known_types",
        "_multiarray_umath._set_madvise_hugepage",
        "numpy._pytesttester",
        "numpy.polynomial",
        "numpy.__config__",
        "numpy.lib",
        "numpy._sanity_check",
        "numpy.random",
        "numpy._mac_os_check",
        "<map>.update",
        "<builtin>.int",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.compat",
        "numpy.ma",
        "numpy._globals",
        "<builtin>.getattr",
        "<builtin>.len",
        "remove",
        "numpy.ctypeslib",
        "<builtin>.RuntimeError",
        "<builtin>.str",
        "numpy.core",
        "numpy.matrixlib",
        "numpy.fft",
        "<builtin>.tuple",
        "numpy.version",
        "numpy.linalg",
        "extend",
        "numpy._distributor_init",
        "<builtin>.ImportError"
    ],
    "numpy._globals": [
        "numpy._globals.VisibleDeprecationWarning",
        "<builtin>.globals",
        "numpy._globals.ModuleDeprecationWarning",
        "numpy._globals._CopyMode",
        "<builtin>.RuntimeError",
        "numpy._globals._NoValueType"
    ],
    "<builtin>.globals": [],
    "<builtin>.RuntimeError": [],
    "numpy._globals.ModuleDeprecationWarning": [],
    "numpy._globals.VisibleDeprecationWarning": [],
    "numpy._globals._NoValueType": [],
    "numpy._globals._CopyMode": [],
    "numpy.__config__": [],
    "numpy._distributor_init": [],
    "numpy.core": [
        "numpy.core.fromnumeric",
        "numpy.core._methods",
        "numpy.core._machar",
        "numpy._pytesttester",
        "numpy.core.getlimits",
        "numpy.core._add_newdocs",
        "append",
        "numpy.core.numeric",
        "numpy.core.einsumfunc",
        "<str>.format",
        "numpy.core.shape_base",
        "numpy.core._dtype_ctypes",
        "<builtin>.hasattr",
        "numpy.core._internal",
        "numpy.core.multiarray",
        "numpy.core.defchararray",
        "numpy._pytesttester.PytestTester.__init__",
        "<builtin>.type",
        "numpy.version",
        "numpy.core._dtype",
        "numpy.core.numerictypes",
        "numpy.core.umath",
        "numpy.core.memmap",
        "numpy.core.records",
        "numpy.core.function_base",
        "numpy.core._add_newdocs_scalars",
        "<builtin>.ImportError"
    ],
    "numpy.version": [
        "numpy._version.get_versions",
        "numpy._version"
    ],
    "numpy._version": [],
    "numpy._version.get_versions": [],
    "numpy.core.multiarray": [
        "numpy.core.overrides"
    ],
    "numpy.core.overrides": [
        "numpy.compat._inspect",
        "numpy.core._multiarray_umath.add_docstring",
        "<builtin>.int",
        "<builtin>.bool"
    ],
    "numpy.compat._inspect": [],
    "<builtin>.int": [],
    "<builtin>.bool": [],
    "numpy.core._multiarray_umath.add_docstring": [],
    "numpy.core.umath": [],
    "<builtin>.hasattr": [],
    "<str>.format": [],
    "numpy.core.numerictypes": [
        "numpy.core.multiarray",
        "numpy.core._dtype",
        "numpy.core.overrides",
        "numpy.core.numerictypes._construct_lookups",
        "<builtin>.tuple",
        "append",
        "numpy.core._type_aliases",
        "numpy.core.numerictypes._typedict",
        "numpy.core._string_helpers",
        "numpy.core.overrides.set_module",
        "numpy.compat",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.numerictypes._register_types",
        "<builtin>.len",
        "<builtin>.sorted",
        "<builtin>.globals"
    ],
    "numpy.core._string_helpers": [
        "<builtin>.range",
        "<builtin>.chr"
    ],
    "<builtin>.chr": [],
    "<builtin>.range": [],
    "numpy.core._type_aliases": [
        "<builtin>.isinstance",
        "numpy.core._type_aliases._set_up_aliases",
        "numpy.core._type_aliases._set_array_types",
        "numpy.core.multiarray",
        "numpy.core._dtype",
        "numpy.core._type_aliases._add_aliases",
        "numpy.core._string_helpers.english_lower",
        "numpy.core._string_helpers",
        "<map>.items",
        "numpy.compat",
        "numpy.core._type_aliases._add_integer_aliases",
        "<builtin>.list",
        "numpy.core._type_aliases._add_types"
    ],
    "numpy.compat": [
        "numpy.compat._inspect",
        "numpy.compat._pep440",
        "numpy.compat.py3k",
        "extend"
    ],
    "numpy.compat._pep440": [
        "numpy.compat._pep440._BaseVersion",
        "numpy.compat._pep440.LegacyVersion",
        "numpy.compat._pep440.InvalidVersion",
        "numpy.compat._pep440.NegativeInfinity",
        "numpy.compat._pep440.Version",
        "numpy.compat._pep440.Infinity"
    ],
    "numpy.compat._pep440.Infinity": [],
    "numpy.compat._pep440.NegativeInfinity": [],
    "numpy.compat._pep440.InvalidVersion": [],
    "numpy.compat._pep440._BaseVersion": [],
    "numpy.compat._pep440.LegacyVersion": [
        "<builtin>.property"
    ],
    "<builtin>.property": [],
    "numpy.compat._pep440.Version": [
        "<builtin>.property"
    ],
    "numpy.compat.py3k": [
        "numpy.compat.py3k.contextlib_nullcontext"
    ],
    "numpy.compat.py3k.contextlib_nullcontext": [],
    "extend": [],
    "numpy.core._dtype": [
        "numpy"
    ],
    "numpy.core._string_helpers.english_lower": [],
    "<builtin>.isinstance": [],
    "<map>.items": [],
    "numpy.core._type_aliases._add_types": [
        "<map>.items"
    ],
    "<builtin>.list": [],
    "numpy.core._type_aliases._add_aliases": [
        "<map>.items",
        "numpy.core._type_aliases.bitname"
    ],
    "numpy.core._type_aliases.bitname": [
        "numpy.core._type_aliases._bits_of",
        "numpy.core._dtype._kind_name"
    ],
    "numpy.core._type_aliases._bits_of": [
        "<builtin>.next",
        "<map>.values",
        "<builtin>.ValueError"
    ],
    "<map>.values": [],
    "<builtin>.next": [],
    "<builtin>.ValueError": [],
    "numpy.core._dtype._kind_name": [
        "<str>.format",
        "<builtin>.RuntimeError"
    ],
    "numpy.core._type_aliases._add_integer_aliases": [
        "<builtin>.set",
        "<builtin>.zip"
    ],
    "<builtin>.set": [],
    "<builtin>.zip": [],
    "numpy.core._type_aliases._set_up_aliases": [],
    "numpy.core._type_aliases._set_array_types": [
        "<builtin>.len",
        "numpy.core._type_aliases._add_array_type"
    ],
    "numpy.core._type_aliases._add_array_type": [],
    "<builtin>.len": [],
    "numpy.core.overrides.set_module": [],
    "numpy.core.overrides.set_module.decorator": [],
    "numpy.core.numerictypes._typedict": [],
    "numpy.core.numerictypes._construct_lookups": [
        "<builtin>.len"
    ],
    "<builtin>.sorted": [],
    "<builtin>.tuple": [],
    "numpy.core.numerictypes._register_types": [],
    "numpy.core.numeric": [
        "numpy.core.shape_base",
        "numpy.core.fromnumeric",
        "numpy.core.numeric.ComplexWarning",
        "numpy.core.multiarray",
        "numpy.core.overrides",
        "numpy.core.numerictypes",
        "numpy.core._asarray",
        "numpy.core._exceptions",
        "numpy.core.overrides.set_module",
        "numpy.core.numeric.extend_all",
        "numpy.core.umath",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.overrides.set_array_function_like_doc",
        "numpy",
        "<builtin>.type",
        "numpy.core.arrayprint",
        "numpy.core._ufunc_config"
    ],
    "numpy.core.shape_base": [
        "numpy.core.fromnumeric",
        "numpy.core.multiarray",
        "numpy.core.overrides",
        "numpy.core.numeric",
        "<builtin>.getattr"
    ],
    "numpy.core.fromnumeric": [
        "numpy.core._methods",
        "numpy.core.multiarray",
        "numpy.core.overrides",
        "numpy.core.numerictypes",
        "numpy.core.umath",
        "numpy"
    ],
    "numpy.core._methods": [
        "numpy.core.multiarray",
        "numpy.core.numerictypes",
        "numpy.core._exceptions",
        "numpy.compat",
        "numpy.core.umath",
        "<map>.update",
        "numpy._globals"
    ],
    "numpy.core._exceptions": [
        "numpy.core._exceptions.TooHardError",
        "numpy.core.overrides",
        "numpy.core._exceptions._UFuncCastingError",
        "numpy.core._exceptions.AxisError",
        "numpy.core._exceptions.UFuncTypeError",
        "numpy.core._exceptions._UFuncOutputCastingError",
        "numpy.core._exceptions._UFuncBinaryResolutionError",
        "numpy.core._exceptions._UFuncInputCastingError",
        "numpy.core._exceptions._ArrayMemoryError",
        "numpy.core._exceptions._UFuncNoLoopError"
    ],
    "numpy.core._exceptions.UFuncTypeError": [],
    "numpy.core._exceptions._UFuncBinaryResolutionError": [],
    "numpy.core._exceptions._UFuncNoLoopError": [],
    "numpy.core._exceptions._UFuncCastingError": [],
    "numpy.core._exceptions._UFuncInputCastingError": [],
    "numpy.core._exceptions._UFuncOutputCastingError": [],
    "numpy.core._exceptions.TooHardError": [],
    "numpy.core._exceptions.AxisError": [],
    "numpy.core._exceptions._ArrayMemoryError": [
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "<builtin>.staticmethod": [],
    "<map>.update": [],
    "<builtin>.getattr": [],
    "numpy.core._ufunc_config": [
        "numpy.core.overrides",
        "numpy.core._ufunc_config._setdef",
        "<map>.items",
        "numpy.core.overrides.set_module",
        "numpy.core._ufunc_config._unspecified",
        "numpy.core.umath",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core._ufunc_config.errstate"
    ],
    "numpy.core._ufunc_config._unspecified": [],
    "numpy.core._ufunc_config.errstate": [],
    "numpy.core._ufunc_config._setdef": [],
    "<builtin>.type": [],
    "numpy.core.numeric.ComplexWarning": [],
    "numpy.core.overrides.set_array_function_like_doc": [],
    "numpy.core.arrayprint": [
        "numpy.core.fromnumeric",
        "numpy.core.arrayprint.DatetimeFormat",
        "numpy.core.arrayprint.SubArrayFormat",
        "numpy.core.overrides.set_module",
        "<builtin>.issubclass",
        "numpy.core.arrayprint.ComplexFloatingFormat",
        "numpy.core.arrayprint.StructuredVoidFormat",
        "numpy.core.arrayprint._recursive_guard",
        "numpy",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.arrayprint.FloatingFormat",
        "append",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy.core.arrayprint.IntegerFormat",
        "numpy.core.numeric",
        "numpy.core.arrayprint.TimedeltaFormat",
        "numpy.core.multiarray",
        "numpy.core.arrayprint.BoolFormat",
        "numpy.core.overrides",
        "<builtin>.getattr",
        "numpy.core.arrayprint._recursive_guard.decorating_function",
        "numpy.core.arrayprint._TimelikeFormat",
        "numpy.core.numerictypes",
        "numpy.core.umath",
        "numpy.core.overrides.set_module.decorator"
    ],
    "numpy.core.arrayprint._recursive_guard": [],
    "numpy.core.arrayprint._recursive_guard.decorating_function": [
        "<builtin>.set"
    ],
    "numpy.core.overrides.array_function_dispatch": [],
    "numpy.core.overrides.array_function_dispatch.decorator": [
        "numpy.core._multiarray_umath.add_docstring"
    ],
    "numpy.core.arrayprint.FloatingFormat": [],
    "numpy.core.arrayprint.IntegerFormat": [],
    "numpy.core.arrayprint.BoolFormat": [],
    "numpy.core.arrayprint.ComplexFloatingFormat": [],
    "numpy.core.arrayprint._TimelikeFormat": [],
    "numpy.core.arrayprint.DatetimeFormat": [],
    "numpy.core.arrayprint.TimedeltaFormat": [],
    "numpy.core.arrayprint.SubArrayFormat": [],
    "numpy.core.arrayprint.StructuredVoidFormat": [
        "<builtin>.classmethod"
    ],
    "<builtin>.classmethod": [],
    "<builtin>.issubclass": [],
    "numpy.core._asarray": [
        "numpy.core.multiarray",
        "numpy.core.overrides",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.overrides.set_array_function_like_doc",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.core.numeric.extend_all": [
        "<builtin>.set",
        "append",
        "<builtin>.getattr"
    ],
    "numpy.core.defchararray": [
        "numpy.core.multiarray",
        "numpy.core.overrides",
        "numpy.core.numerictypes",
        "numpy.core.overrides.set_module",
        "numpy.compat",
        "numpy.core.defchararray.chararray",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.numeric",
        "numpy"
    ],
    "numpy.core.defchararray.chararray": [],
    "numpy.core.records": [
        "numpy.core.records.format_parser",
        "numpy.core.overrides",
        "numpy.core.numerictypes",
        "numpy.core.records.recarray",
        "numpy.core.overrides.set_module",
        "numpy.compat",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.numeric",
        "numpy.core.records.record",
        "numpy.core.arrayprint"
    ],
    "numpy.core.records.format_parser": [],
    "numpy.core.records.record": [],
    "numpy.core.records.recarray": [],
    "numpy.core.memmap": [
        "numpy.core.memmap.memmap",
        "numpy.core.overrides",
        "numpy.compat",
        "numpy.core.numeric",
        "numpy"
    ],
    "numpy.core.memmap.memmap": [],
    "numpy.core.function_base": [
        "numpy.core.overrides",
        "numpy.core.numeric",
        "numpy.core.multiarray"
    ],
    "numpy.core._machar": [
        "numpy.core.fromnumeric",
        "numpy.core._machar.MachAr",
        "numpy.core.overrides",
        "numpy.core._ufunc_config"
    ],
    "numpy.core._machar.MachAr": [],
    "numpy.core.getlimits": [
        "numpy.core.overrides",
        "numpy.core._machar",
        "numpy.core.numerictypes",
        "numpy.core.getlimits.finfo",
        "numpy.core.umath",
        "<builtin>.dict",
        "numpy.core.numeric",
        "numpy.core.getlimits.MachArLike",
        "numpy.core.getlimits.iinfo"
    ],
    "numpy.core.getlimits.MachArLike": [
        "<builtin>.property"
    ],
    "<builtin>.dict": [],
    "numpy.core.getlimits.finfo": [
        "<builtin>.property"
    ],
    "numpy.core.getlimits.iinfo": [
        "<builtin>.property"
    ],
    "numpy.core.einsumfunc": [
        "numpy.core.multiarray",
        "numpy.core.overrides",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "<builtin>.set",
        "numpy.core.numeric",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.core._add_newdocs": [
        "numpy.core.overrides",
        "numpy.core._add_newdocs.refer_to_array_attribute",
        "numpy.core.function_base.add_newdoc",
        "numpy.core.function_base",
        "<str>.replace"
    ],
    "numpy.core.function_base.add_newdoc": [
        "numpy.core.function_base._add_docstring",
        "<builtin>.isinstance",
        "<builtin>.__import__",
        "<builtin>.getattr",
        "<str>.strip",
        "<builtin>.globals"
    ],
    "numpy.core.function_base._add_docstring": [
        "numpy.core.function_base._needs_add_docstring"
    ],
    "numpy.core.function_base._needs_add_docstring": [
        "<builtin>.isinstance"
    ],
    "<str>.strip": [],
    "<str>.replace": [],
    "numpy.core._add_newdocs.refer_to_array_attribute": [],
    "numpy.core._add_newdocs_scalars": [
        "numpy.core",
        "numpy.core.numerictypes",
        "numpy.core.function_base.add_newdoc",
        "numpy.core.function_base",
        "numpy.core._add_newdocs_scalars.numeric_type_aliases",
        "numpy.core._add_newdocs_scalars.add_newdoc_for_scalar_type"
    ],
    "numpy.core._add_newdocs_scalars.numeric_type_aliases": [
        "numpy.core._add_newdocs_scalars.numeric_type_aliases.type_aliases_gen",
        "<builtin>.list"
    ],
    "numpy.core._add_newdocs_scalars.numeric_type_aliases.type_aliases_gen": [
        "<builtin>.getattr"
    ],
    "numpy.core._add_newdocs_scalars.add_newdoc_for_scalar_type": [
        "numpy.core.function_base.add_newdoc",
        "<builtin>.getattr",
        "<str>.strip"
    ],
    "numpy.core._dtype_ctypes": [
        "numpy"
    ],
    "numpy.core._internal": [
        "numpy.core._internal._ctypes",
        "numpy.core.multiarray",
        "numpy.core._internal._missing_ctypes",
        "<map>.keys",
        "numpy.core._internal.dummy_ctype",
        "numpy.core._internal._Stream"
    ],
    "numpy.core._internal.dummy_ctype": [],
    "numpy.core._internal._missing_ctypes": [
        "numpy.core._internal._missing_ctypes.c_void_p"
    ],
    "numpy.core._internal._missing_ctypes.c_void_p": [],
    "numpy.core._internal._ctypes": [
        "<builtin>.property"
    ],
    "<map>.keys": [],
    "numpy.core._internal._Stream": [
        "<builtin>.property"
    ],
    "numpy._pytesttester": [
        "numpy._pytesttester.PytestTester"
    ],
    "numpy._pytesttester.PytestTester": [],
    "numpy._pytesttester.PytestTester.__init__": [],
    "numpy.lib": [
        "numpy.lib.utils",
        "numpy.lib.histograms",
        "numpy._pytesttester",
        "numpy.lib.stride_tricks",
        "numpy.lib.nanfunctions",
        "numpy.lib.ufunclike",
        "numpy.lib.npyio",
        "numpy.lib._version",
        "numpy.lib.arraysetops",
        "numpy.lib.arraypad",
        "numpy.lib.index_tricks",
        "numpy.lib.twodim_base",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.lib.arrayterator",
        "numpy.version",
        "numpy.lib.shape_base",
        "numpy.lib.scimath",
        "numpy.lib.mixins",
        "numpy.lib.function_base",
        "numpy.lib.type_check",
        "numpy.lib.polynomial"
    ],
    "numpy.lib.mixins": [
        "numpy.core.umath",
        "numpy.lib.mixins.NDArrayOperatorsMixin"
    ],
    "numpy.lib.mixins.NDArrayOperatorsMixin": [
        "numpy.lib.mixins._reflected_binary_method",
        "numpy.lib.mixins._binary_method",
        "numpy.lib.mixins._unary_method",
        "numpy.lib.mixins._numeric_methods"
    ],
    "numpy.lib.mixins._binary_method": [],
    "numpy.lib.mixins._numeric_methods": [
        "numpy.lib.mixins._reflected_binary_method",
        "numpy.lib.mixins._binary_method",
        "numpy.lib.mixins._inplace_binary_method"
    ],
    "numpy.lib.mixins._reflected_binary_method": [],
    "numpy.lib.mixins._inplace_binary_method": [],
    "numpy.lib.mixins._unary_method": [],
    "numpy.lib.scimath": [
        "numpy.core.overrides",
        "numpy.core.numerictypes",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy.core.numeric",
        "numpy.lib.type_check",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.lib.type_check": [
        "numpy.core.overrides",
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.numeric",
        "numpy.lib.ufunclike"
    ],
    "numpy.lib.ufunclike": [
        "numpy.core.overrides",
        "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy.core.numeric",
        "numpy.lib.ufunclike._deprecate_out_named_y",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.lib.ufunclike._deprecate_out_named_y": [],
    "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y": [
        "numpy.lib.ufunclike._fix_out_named_y",
        "numpy.lib.ufunclike._deprecate_out_named_y"
    ],
    "numpy.lib.ufunclike._fix_out_named_y": [],
    "numpy.lib.index_tricks": [
        "numpy.lib.index_tricks.AxisConcatenator",
        "numpy.core.overrides.set_module",
        "numpy.lib.index_tricks.RClass.__init__",
        "numpy.lib.stride_tricks",
        "numpy.lib.index_tricks.MGridClass",
        "numpy.core.numeric",
        "numpy.lib.index_tricks.nd_grid",
        "numpy.lib.index_tricks.CClass.__init__",
        "numpy.lib.index_tricks.RClass",
        "numpy.lib.index_tricks.CClass",
        "numpy.core.multiarray",
        "numpy.core.overrides",
        "numpy.lib.index_tricks.ndenumerate",
        "numpy.lib.index_tricks.OGridClass",
        "numpy.lib.index_tricks.IndexExpression.__init__",
        "numpy.core",
        "numpy.matrixlib",
        "numpy.lib.index_tricks.OGridClass.__init__",
        "numpy.lib.index_tricks.IndexExpression",
        "numpy.core.numerictypes",
        "numpy.lib.index_tricks.MGridClass.__init__",
        "numpy.core.overrides.set_module.decorator",
        "numpy.lib.function_base",
        "numpy.lib.index_tricks.ndindex"
    ],
    "numpy.matrixlib": [
        "numpy._pytesttester.PytestTester.__init__",
        "numpy._pytesttester",
        "numpy.matrixlib.defmatrix"
    ],
    "numpy.matrixlib.defmatrix": [
        "numpy.matrixlib.defmatrix.matrix",
        "numpy.core.overrides",
        "numpy.linalg",
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.numeric"
    ],
    "numpy.linalg": [
        "numpy.linalg.linalg",
        "numpy._pytesttester",
        "numpy._pytesttester.PytestTester.__init__"
    ],
    "numpy.linalg.linalg": [
        "numpy.core",
        "numpy.linalg.linalg.LinAlgError",
        "numpy.core.multiarray",
        "numpy.lib.twodim_base",
        "numpy.core.overrides",
        "numpy.linalg.linalg._determine_error_states"
    ],
    "numpy.lib.twodim_base": [
        "numpy.core",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.numeric",
        "numpy.core.overrides.set_array_function_like_doc",
        "numpy.lib.stride_tricks",
        "numpy.core.getlimits.iinfo.__init__"
    ],
    "numpy.lib.stride_tricks": [
        "numpy.core.overrides",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy.lib.stride_tricks.DummyArray",
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.numeric",
        "numpy",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.lib.stride_tricks.DummyArray": [],
    "numpy.core.getlimits.iinfo.__init__": [
        "<builtin>.type",
        "<builtin>.ValueError"
    ],
    "numpy.linalg.linalg.LinAlgError": [],
    "numpy.linalg.linalg._determine_error_states": [
        "numpy.core.arrayprint.errstate",
        "numpy.core._ufunc_config.errstate.__init__"
    ],
    "numpy.core.arrayprint.errstate": [],
    "numpy.core._ufunc_config.errstate.__init__": [],
    "numpy.matrixlib.defmatrix.matrix": [
        "<builtin>.property"
    ],
    "numpy.lib.function_base": [
        "numpy.core.fromnumeric",
        "numpy.core",
        "numpy.core.multiarray",
        "numpy.lib.twodim_base",
        "numpy.core.overrides",
        "numpy.core.numerictypes",
        "numpy.lib.histograms",
        "numpy.lib.function_base.vectorize",
        "numpy.core.overrides.set_module",
        "numpy.core.umath",
        "<builtin>.dict",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.numeric",
        "numpy",
        "numpy.core.function_base"
    ],
    "numpy.lib.histograms": [
        "numpy",
        "numpy.core.overrides"
    ],
    "numpy.lib.function_base.vectorize": [],
    "numpy.lib.index_tricks.nd_grid": [],
    "numpy.lib.index_tricks.MGridClass": [],
    "numpy.lib.index_tricks.MGridClass.__init__": [
        "<builtin>.super"
    ],
    "<builtin>.super": [],
    "numpy.lib.index_tricks.OGridClass": [],
    "numpy.lib.index_tricks.OGridClass.__init__": [
        "<builtin>.super"
    ],
    "numpy.lib.index_tricks.AxisConcatenator": [
        "<builtin>.staticmethod"
    ],
    "numpy.lib.index_tricks.RClass": [],
    "numpy.lib.index_tricks.RClass.__init__": [
        "numpy.lib.index_tricks.AxisConcatenator.__init__"
    ],
    "numpy.lib.index_tricks.AxisConcatenator.__init__": [],
    "numpy.lib.index_tricks.CClass": [],
    "numpy.lib.index_tricks.CClass.__init__": [
        "numpy.lib.index_tricks.AxisConcatenator.__init__"
    ],
    "numpy.lib.index_tricks.ndenumerate": [],
    "numpy.lib.index_tricks.ndindex": [],
    "numpy.lib.index_tricks.IndexExpression": [],
    "numpy.lib.index_tricks.IndexExpression.__init__": [],
    "numpy.lib.nanfunctions": [
        "numpy",
        "numpy.lib.function_base",
        "numpy.core.overrides"
    ],
    "numpy.lib.shape_base": [
        "numpy.core.fromnumeric",
        "numpy.core.shape_base",
        "numpy.core",
        "numpy.lib.index_tricks",
        "numpy.core.multiarray",
        "numpy.core.overrides",
        "numpy.matrixlib.defmatrix",
        "numpy.core.numeric"
    ],
    "numpy.lib.polynomial": [
        "numpy.core",
        "numpy.lib.twodim_base",
        "numpy.core.overrides",
        "numpy.linalg",
        "numpy.lib.polynomial.RankWarning",
        "numpy.lib.function_base",
        "numpy.core.numeric",
        "numpy.lib.polynomial.poly1d",
        "numpy.lib.type_check"
    ],
    "numpy.lib.polynomial.RankWarning": [],
    "numpy.lib.polynomial.poly1d": [
        "<builtin>.property"
    ],
    "numpy.lib.utils": [
        "numpy.core",
        "numpy.core.overrides",
        "numpy.lib.utils._Deprecate",
        "numpy.core.numerictypes",
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.set_module.decorator",
        "numpy"
    ],
    "numpy.lib.utils._Deprecate": [],
    "numpy.lib.arraysetops": [
        "numpy",
        "numpy.core.overrides"
    ],
    "numpy.lib.npyio": [
        "numpy.lib._datasource",
        "numpy.core.multiarray",
        "numpy.core.overrides",
        "numpy.lib.npyio.BagObj",
        "numpy.lib._iotools",
        "numpy.core.overrides.set_module",
        "numpy.compat",
        "numpy.core.overrides.set_module.decorator",
        "numpy.lib.npyio.NpzFile",
        "numpy.core.overrides.set_array_function_like_doc",
        "numpy.lib.format",
        "numpy",
        "<builtin>.sorted"
    ],
    "numpy.lib.format": [
        "numpy",
        "<builtin>.len",
        "numpy.lib.utils",
        "numpy.compat"
    ],
    "numpy.lib._datasource": [
        "numpy.lib._datasource._FileOpeners.__init__",
        "numpy.lib._datasource.Repository",
        "numpy.core.overrides",
        "numpy.lib._datasource._FileOpeners",
        "numpy.lib._datasource.DataSource"
    ],
    "numpy.lib._datasource._FileOpeners": [],
    "numpy.lib._datasource._FileOpeners.__init__": [],
    "numpy.lib._datasource.DataSource": [],
    "numpy.lib._datasource.Repository": [],
    "numpy.lib._iotools": [
        "numpy.lib._iotools.StringConverter",
        "numpy.lib._iotools.LineSplitter",
        "numpy.lib._iotools.NameValidator",
        "numpy.lib._iotools.ConverterLockError",
        "numpy.lib._iotools.ConversionWarning",
        "numpy.compat",
        "numpy.core.numeric",
        "numpy",
        "numpy.lib._iotools.ConverterError"
    ],
    "numpy.lib._iotools.LineSplitter": [],
    "numpy.lib._iotools.NameValidator": [
        "<builtin>.set"
    ],
    "numpy.lib._iotools.ConverterError": [],
    "numpy.lib._iotools.ConverterLockError": [],
    "numpy.lib._iotools.ConversionWarning": [],
    "numpy.lib._iotools.StringConverter": [
        "append",
        "extend",
        "<builtin>.classmethod"
    ],
    "numpy.lib.npyio.BagObj": [],
    "numpy.lib.npyio.NpzFile": [],
    "numpy.lib.arrayterator": [
        "numpy.lib.arrayterator.Arrayterator"
    ],
    "numpy.lib.arrayterator.Arrayterator": [
        "<builtin>.property"
    ],
    "numpy.lib.arraypad": [
        "numpy.lib.index_tricks",
        "numpy.core.overrides",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.lib._version": [
        "numpy.lib._version.NumpyVersion"
    ],
    "numpy.lib._version.NumpyVersion": [],
    "numpy.fft": [
        "numpy.fft._pocketfft",
        "numpy.fft.helper",
        "numpy._pytesttester",
        "numpy._pytesttester.PytestTester.__init__",
        "copy"
    ],
    "numpy.fft._pocketfft": [
        "numpy.core.overrides",
        "numpy.core",
        "numpy.core.multiarray"
    ],
    "numpy.fft.helper": [
        "numpy.core",
        "numpy.core.overrides",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "copy": [],
    "numpy.polynomial": [
        "numpy.polynomial.polynomial",
        "numpy.polynomial.legendre",
        "numpy.polynomial.hermite_e",
        "numpy.polynomial.hermite",
        "numpy.polynomial.chebyshev",
        "numpy._pytesttester",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.polynomial.laguerre"
    ],
    "numpy.polynomial.polynomial": [
        "numpy.polynomial.polynomial.Polynomial",
        "numpy.polynomial.polyutils",
        "numpy.core.multiarray",
        "numpy.linalg",
        "numpy.polynomial._polybase",
        "numpy"
    ],
    "numpy.polynomial.polyutils": [
        "numpy",
        "numpy.polynomial.polyutils.RankWarning"
    ],
    "numpy.polynomial.polyutils.RankWarning": [],
    "numpy.polynomial._polybase": [
        "numpy",
        "numpy.polynomial._polybase.ABCPolyBase",
        "numpy.polynomial.polyutils"
    ],
    "numpy.polynomial._polybase.ABCPolyBase": [
        "<builtin>.classmethod",
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "numpy.polynomial.polynomial.Polynomial": [
        "<builtin>.staticmethod",
        "<builtin>.classmethod"
    ],
    "numpy.polynomial.chebyshev": [
        "numpy.polynomial.polyutils",
        "numpy.core.multiarray",
        "numpy.polynomial.chebyshev.Chebyshev",
        "numpy.linalg",
        "numpy.polynomial._polybase",
        "numpy"
    ],
    "numpy.polynomial.chebyshev.Chebyshev": [
        "<builtin>.staticmethod",
        "<builtin>.classmethod"
    ],
    "numpy.polynomial.legendre": [
        "numpy.polynomial.polyutils",
        "numpy.core.multiarray",
        "numpy.linalg",
        "numpy.polynomial._polybase",
        "numpy",
        "numpy.polynomial.legendre.Legendre"
    ],
    "numpy.polynomial.legendre.Legendre": [
        "<builtin>.staticmethod"
    ],
    "numpy.polynomial.hermite": [
        "numpy.polynomial.polyutils",
        "numpy.polynomial.hermite.Hermite",
        "numpy.core.multiarray",
        "numpy.linalg",
        "numpy.polynomial._polybase",
        "numpy"
    ],
    "numpy.polynomial.hermite.Hermite": [
        "<builtin>.staticmethod"
    ],
    "numpy.polynomial.hermite_e": [
        "numpy.polynomial.polyutils",
        "numpy.core.multiarray",
        "numpy.linalg",
        "numpy.polynomial._polybase",
        "numpy.polynomial.hermite_e.HermiteE",
        "numpy"
    ],
    "numpy.polynomial.hermite_e.HermiteE": [
        "<builtin>.staticmethod"
    ],
    "numpy.polynomial.laguerre": [
        "numpy.polynomial.polyutils",
        "numpy.core.multiarray",
        "numpy.linalg",
        "numpy.polynomial.laguerre.Laguerre",
        "numpy.polynomial._polybase",
        "numpy"
    ],
    "numpy.polynomial.laguerre.Laguerre": [
        "<builtin>.staticmethod"
    ],
    "numpy.random": [
        "numpy.random._pickle",
        "numpy._pytesttester",
        "numpy._pytesttester.PytestTester.__init__"
    ],
    "numpy.random._pickle": [],
    "numpy.ctypeslib": [
        "numpy.core._internal",
        "numpy.core.multiarray",
        "numpy.core._internal._getintp_ctype",
        "numpy.ctypeslib._get_scalar_type_map",
        "numpy",
        "numpy.ctypeslib._ndptr",
        "numpy.ctypeslib._concrete_ndptr"
    ],
    "numpy.core._internal._getintp_ctype": [
        "numpy",
        "numpy.core._internal.dummy_ctype.__init__"
    ],
    "numpy.core._internal.dummy_ctype.__init__": [],
    "numpy.ctypeslib._ndptr": [
        "<builtin>.classmethod"
    ],
    "numpy.ctypeslib._concrete_ndptr": [
        "<builtin>.property"
    ],
    "numpy.ctypeslib._get_scalar_type_map": [],
    "numpy.ma": [
        "numpy.ma.extras",
        "numpy._pytesttester",
        "numpy.ma.core",
        "numpy._pytesttester.PytestTester.__init__"
    ],
    "numpy.ma.core": [
        "numpy.ma.core._MaskedPrintOption.__init__",
        "numpy.ma.core.mvoid",
        "numpy.ma.core.MaskedArrayFutureWarning",
        "numpy.ma.core._DomainSafeDivide",
        "numpy.ma.core.MaskedIterator",
        "numpy.ma.core._MaskedUnaryOperation.__init__",
        "numpy",
        "numpy.ma.core._MaskedUFunc",
        "numpy.ma.core._convert2ma.__init__",
        "numpy.ma.core._MaskedPrintOption",
        "numpy.ma.core._MaskedBinaryOperation.__init__",
        "numpy.ma.core.doc_note",
        "numpy.ma.core.MAError",
        "numpy.ma.core.MaskedArray",
        "numpy.ma.core._DomainedBinaryOperation.__init__",
        "numpy.ma.core._DomainCheckInterval.__init__",
        "numpy.ma.core._convert2ma",
        "numpy.core.numeric",
        "numpy.ma.core._frommethod",
        "<builtin>.complex",
        "numpy.ma.core._DomainGreater",
        "numpy.ma.core._DomainTan.__init__",
        "numpy.ma.core.MaskedConstant",
        "numpy.ma.core._DomainCheckInterval",
        "numpy.ma.core._DomainGreaterEqual.__init__",
        "numpy.compat",
        "<builtin>.dict",
        "numpy.ma.core._MaskedBinaryOperation",
        "numpy.ma.core._frommethod.__init__",
        "numpy.ma.core.MaskError",
        "numpy.ma.core._DomainGreaterEqual",
        "numpy.ma.core._extrema_operation",
        "numpy.ma.core._DomainGreater.__init__",
        "numpy.ma.core._DomainedBinaryOperation",
        "numpy.core.numerictypes",
        "numpy.ma.core._DomainTan",
        "numpy.ma.core._extrema_operation.__init__",
        "numpy.core.umath",
        "numpy.lib.function_base",
        "numpy.ma.core._DomainSafeDivide.__init__",
        "numpy.ma.core._MaskedUnaryOperation"
    ],
    "numpy.ma.core.MaskedArrayFutureWarning": [],
    "numpy.ma.core.MAError": [],
    "numpy.ma.core.MaskError": [],
    "<builtin>.complex": [],
    "numpy.ma.core._DomainCheckInterval": [],
    "numpy.ma.core._DomainTan": [],
    "numpy.ma.core._DomainSafeDivide": [],
    "numpy.ma.core._DomainGreater": [],
    "numpy.ma.core._DomainGreaterEqual": [],
    "numpy.ma.core._MaskedUFunc": [],
    "numpy.ma.core._MaskedUnaryOperation": [],
    "numpy.ma.core._MaskedBinaryOperation": [],
    "numpy.ma.core._DomainedBinaryOperation": [],
    "numpy.ma.core._MaskedUnaryOperation.__init__": [
        "<builtin>.super"
    ],
    "numpy.ma.core._DomainGreaterEqual.__init__": [],
    "numpy.ma.core._DomainGreater.__init__": [],
    "numpy.ma.core._DomainTan.__init__": [],
    "numpy.ma.core._DomainCheckInterval.__init__": [],
    "numpy.ma.core._MaskedBinaryOperation.__init__": [
        "<builtin>.super"
    ],
    "numpy.ma.core._DomainSafeDivide.__init__": [],
    "numpy.ma.core._DomainedBinaryOperation.__init__": [
        "<builtin>.super"
    ],
    "numpy.ma.core._MaskedPrintOption": [],
    "numpy.ma.core._MaskedPrintOption.__init__": [],
    "numpy.ma.core.MaskedIterator": [],
    "numpy.ma.core.MaskedArray": [
        "numpy.ma.core._arraymethod",
        "<builtin>.property"
    ],
    "numpy.ma.core._arraymethod": [
        "<builtin>.getattr"
    ],
    "numpy.ma.core.mvoid": [
        "<builtin>.property"
    ],
    "numpy.ma.core.MaskedConstant": [
        "<builtin>.classmethod"
    ],
    "numpy.ma.core._extrema_operation": [],
    "numpy.ma.core._frommethod": [],
    "numpy.ma.core._frommethod.__init__": [
        "numpy.ma.core._frommethod.getdoc"
    ],
    "numpy.ma.core._frommethod.getdoc": [
        "numpy.ma.core.get_object_signature",
        "<builtin>.getattr"
    ],
    "numpy.ma.core.get_object_signature": [
        "numpy.compat._inspect.formatargspec",
        "numpy.compat._inspect.getargspec"
    ],
    "numpy.compat._inspect.getargspec": [
        "numpy.compat._inspect.ismethod",
        "<builtin>.TypeError",
        "numpy.compat._inspect.getargs",
        "numpy.compat._inspect.isfunction"
    ],
    "numpy.compat._inspect.ismethod": [
        "<builtin>.isinstance"
    ],
    "numpy.compat._inspect.isfunction": [
        "<builtin>.isinstance"
    ],
    "<builtin>.TypeError": [],
    "numpy.compat._inspect.getargs": [
        "<builtin>.TypeError",
        "<builtin>.list",
        "numpy.compat._inspect.iscode",
        "<builtin>.range"
    ],
    "numpy.compat._inspect.iscode": [
        "<builtin>.isinstance"
    ],
    "numpy.compat._inspect.formatargspec": [
        "numpy.compat._inspect.<lambda3>",
        "append",
        "<builtin>.range",
        "<builtin>.len",
        "numpy.compat._inspect.strseq"
    ],
    "numpy.compat._inspect.strseq": [
        "<builtin>.type",
        "numpy.compat._inspect.joinseq",
        "numpy.compat._inspect.strseq"
    ],
    "numpy.compat._inspect.joinseq": [
        "<builtin>.len"
    ],
    "numpy.compat._inspect.<lambda3>": [
        "<builtin>.repr"
    ],
    "<builtin>.repr": [],
    "numpy.ma.core._extrema_operation.__init__": [
        "<builtin>.super"
    ],
    "numpy.ma.core.doc_note": [],
    "numpy.ma.core._convert2ma": [],
    "numpy.ma.core._convert2ma.__init__": [
        "numpy.ma.core._convert2ma.getdoc",
        "<builtin>.getattr"
    ],
    "numpy.ma.core._convert2ma.getdoc": [
        "numpy.ma.core.get_object_signature",
        "numpy.ma.core._convert2ma._replace_return_type",
        "<builtin>.getattr"
    ],
    "numpy.ma.core._convert2ma._replace_return_type": [
        "<builtin>.RuntimeError"
    ],
    "numpy.ma.extras": [
        "numpy.ma.extras._fromnxfunction_seq",
        "numpy.lib.index_tricks",
        "numpy.ma.core.doc_note",
        "numpy.core.multiarray",
        "numpy.ma.core",
        "numpy.ma.extras._fromnxfunction_args",
        "numpy.ma.extras._fromnxfunction_allargs",
        "numpy.ma.extras._fromnxfunction",
        "numpy.lib.function_base",
        "numpy.core.numeric",
        "numpy.ma.extras.MAxisConcatenator",
        "numpy.ma.extras.mr_class",
        "numpy",
        "numpy.ma.extras._fromnxfunction_single",
        "numpy.ma.extras.mr_class.__init__"
    ],
    "numpy.ma.extras._fromnxfunction": [],
    "numpy.ma.extras._fromnxfunction_single": [],
    "numpy.ma.extras._fromnxfunction_seq": [],
    "numpy.ma.extras._fromnxfunction_args": [],
    "numpy.ma.extras._fromnxfunction_allargs": [],
    "numpy.ma.extras.MAxisConcatenator": [
        "<builtin>.staticmethod",
        "<builtin>.classmethod"
    ],
    "numpy.ma.extras.mr_class": [],
    "numpy.ma.extras.mr_class.__init__": [
        "numpy.lib.index_tricks.AxisConcatenator.__init__"
    ],
    "numpy.core.getlimits._register_known_types": [
        "numpy.core.arrayprint.errstate",
        "numpy.core._ufunc_config.errstate.__init__",
        "numpy.core.getlimits.MachArLike.__init__",
        "numpy.core.getlimits._register_type"
    ],
    "numpy.core.getlimits.MachArLike.__init__": [
        "numpy.core.getlimits.MachArLike._float_to_float",
        "<builtin>.int",
        "numpy.core.getlimits.MachArLike._float_to_str",
        "numpy.core.getlimits.MachArLike._float_conv"
    ],
    "numpy.core.getlimits.MachArLike._float_to_float": [
        "numpy.core.getlimits.MachArLike._float_conv",
        "numpy.core.getlimits._fr1"
    ],
    "numpy.core.getlimits.MachArLike._float_conv": [],
    "numpy.core.getlimits._fr1": [],
    "numpy.core.getlimits.MachArLike._float_to_str": [
        "numpy.core.getlimits._fr0"
    ],
    "numpy.core.getlimits._fr0": [],
    "numpy.core.getlimits._register_type": [],
    "remove": [],
    "numpy._sanity_check": [
        "<builtin>.abs",
        "<builtin>.AssertionError",
        "<builtin>.RuntimeError"
    ],
    "<builtin>.abs": [],
    "<builtin>.AssertionError": [],
    "numpy._mac_os_check": [],
    "<builtin>.str": [],
    "_multiarray_umath._set_madvise_hugepage": [],
    "pandas.util.version": [
        "pandas.util.version.InvalidVersion",
        "pandas.util.version.NegativeInfinityType",
        "pandas.util.version.LegacyVersion",
        "pandas.util.version.InfinityType",
        "pandas.util.version._BaseVersion",
        "pandas.util.version.Version"
    ],
    "pandas.util.version.InfinityType": [],
    "pandas.util.version.NegativeInfinityType": [],
    "pandas.util.version.InvalidVersion": [],
    "pandas.util.version._BaseVersion": [],
    "pandas.util.version.LegacyVersion": [
        "<builtin>.property"
    ],
    "pandas.util.version.Version": [
        "<builtin>.property"
    ],
    "pandas.util.version.Version.__init__": [
        "<builtin>.int",
        "<builtin>.tuple",
        "pandas.util.version._parse_letter_version",
        "pandas.util.version._cmpkey",
        "pandas.util.version._parse_local_version"
    ],
    "pandas.util.version._parse_letter_version": [
        "<builtin>.int",
        "<str>.lower"
    ],
    "<str>.lower": [],
    "pandas.util.version._parse_local_version": [
        "<builtin>.int",
        "<builtin>.tuple"
    ],
    "pandas.util.version._cmpkey": [
        "<builtin>.isinstance",
        "<builtin>.list",
        "<builtin>.tuple",
        "<builtin>.reversed"
    ],
    "<builtin>.reversed": [],
    "pandas.compat.pyarrow": [
        "pandas.util.version.Version.__init__",
        "pandas.util.version"
    ],
    "pandas._typing": [
        "pandas._typing.WriteExcelBuffer",
        "pandas.tseries.holiday",
        "pandas.core.groupby.generic",
        "pandas._libs.tslibs",
        "pandas.core.frame",
        "pandas.arrays",
        "pandas.core.arrays.base",
        "numpy",
        "pandas.core.window.rolling",
        "pandas.core.internals",
        "pandas.core.dtypes.dtypes",
        "pandas.core.series",
        "pandas.core.generic",
        "pandas.io.formats.format",
        "numpy.typing",
        "pandas.core.resample",
        "pandas._libs",
        "pandas._typing.ReadPickleBuffer",
        "typing.TypeVar",
        "pandas._typing.SequenceNotStr",
        "pandas",
        "pandas._typing.ReadBuffer",
        "pandas._typing.WriteBuffer",
        "pandas._typing.ReadCsvBuffer",
        "pandas.core.indexes.base",
        "pandas._typing.BaseBuffer"
    ],
    "numpy.typing": [
        "numpy._pytesttester",
        "numpy._typing._add_docstring",
        "numpy._typing",
        "numpy._pytesttester.PytestTester.__init__"
    ],
    "numpy._typing": [
        "numpy._typing._array_like",
        "numpy._typing._scalars",
        "numpy._typing._nbit",
        "numpy._typing._96Bit",
        "numpy",
        "numpy._typing._nested_sequence",
        "numpy._typing.NBitBase",
        "numpy._typing._80Bit",
        "numpy._typing._64Bit",
        "numpy.core.overrides",
        "numpy._typing._shape",
        "numpy._typing._8Bit",
        "numpy._typing._char_codes",
        "numpy._typing._dtype_like",
        "numpy._typing._16Bit",
        "numpy._typing._generic_alias",
        "numpy._typing._128Bit",
        "numpy._typing._256Bit",
        "numpy._typing._32Bit"
    ],
    "numpy._typing.NBitBase": [],
    "numpy._typing._256Bit": [],
    "numpy._typing._128Bit": [],
    "numpy._typing._96Bit": [],
    "numpy._typing._80Bit": [],
    "numpy._typing._64Bit": [],
    "numpy._typing._32Bit": [],
    "numpy._typing._16Bit": [],
    "numpy._typing._8Bit": [],
    "numpy._typing._nested_sequence": [
        "numpy._typing._nested_sequence._NestedSequence",
        "typing.TypeVar"
    ],
    "typing.TypeVar": [],
    "numpy._typing._nested_sequence._NestedSequence": [
        "typing.overload"
    ],
    "typing.overload": [],
    "numpy._typing._nbit": [],
    "numpy._typing._char_codes": [],
    "numpy._typing._scalars": [
        "numpy"
    ],
    "numpy._typing._shape": [],
    "numpy._typing._dtype_like": [
        "numpy._typing._char_codes",
        "numpy._typing._dtype_like._SupportsDType",
        "numpy._typing._dtype_like._DTypeDict",
        "numpy._typing._dtype_like._DTypeDictBase",
        "numpy._typing._generic_alias",
        "typing.TypeVar",
        "numpy",
        "numpy._typing._shape"
    ],
    "numpy._typing._generic_alias": [
        "numpy",
        "numpy._typing._generic_alias._GenericAlias.__init__",
        "numpy._typing._generic_alias._GenericAlias",
        "typing.TypeVar"
    ],
    "numpy._typing._generic_alias._GenericAlias": [
        "<builtin>.frozenset",
        "<builtin>.property"
    ],
    "<builtin>.frozenset": [],
    "numpy._typing._generic_alias._GenericAlias.__init__": [
        "<builtin>.isinstance",
        "numpy._typing._generic_alias._parse_parameters",
        "<builtin>.tuple"
    ],
    "numpy._typing._generic_alias._parse_parameters": [
        "<builtin>.isinstance",
        "<builtin>.hasattr"
    ],
    "numpy._typing._dtype_like._DTypeDictBase": [],
    "numpy._typing._dtype_like._DTypeDict": [],
    "numpy._typing._dtype_like._SupportsDType": [
        "<builtin>.property"
    ],
    "numpy._typing._array_like": [
        "numpy._typing._array_like._UnknownType",
        "numpy._typing._array_like._SupportsArrayFunc",
        "numpy._typing._array_like._SupportsArray",
        "numpy._typing._nested_sequence",
        "typing.TypeVar",
        "numpy"
    ],
    "numpy._typing._array_like._SupportsArray": [],
    "numpy._typing._array_like._SupportsArrayFunc": [],
    "numpy._typing._array_like._UnknownType": [],
    "numpy._typing._add_docstring": [
        "numpy._typing._add_docstring.add_newdoc",
        "numpy._typing._generic_alias",
        "numpy._typing._add_docstring._parse_docstrings",
        "<builtin>.repr"
    ],
    "numpy._typing._add_docstring.add_newdoc": [
        "append"
    ],
    "numpy._typing._add_docstring._parse_docstrings": [
        "append",
        "pop"
    ],
    "pop": [],
    "pandas._libs": [
        "pandas._libs.tslibs"
    ],
    "pandas._libs.tslibs": [],
    "pandas.core.dtypes.dtypes": [
        "pandas.core.dtypes.dtypes.PandasExtensionDtype",
        "pandas.core.dtypes.dtypes.CategoricalDtypeType",
        "pandas.core.dtypes.dtypes.NumpyEADtype",
        "pandas.core.dtypes.dtypes.SparseDtype",
        "pandas.util._exceptions",
        "pandas.core.arrays",
        "pandas.errors",
        "pytz",
        "pandas._libs.tslibs",
        "pandas.core.dtypes.dtypes.PeriodDtype",
        "pandas.core.dtypes.dtypes.BaseMaskedDtype",
        "numpy",
        "pandas.core.dtypes.inference",
        "pandas.core.arrays.arrow",
        "pandas.core.dtypes.dtypes.CategoricalDtype",
        "pandas.core.dtypes.generic",
        "pandas.core.dtypes.dtypes.IntervalDtype",
        "pandas._typing",
        "pandas.core.dtypes.dtypes.ArrowDtype",
        "pandas.core.dtypes.base",
        "pandas",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype",
        "pandas.util",
        "pandas.compat"
    ],
    "pytz": [
        "pytz.tzinfo",
        "pytz._CountryTimezoneDict",
        "pytz.tzfile",
        "pytz.resource_exists",
        "pytz.exceptions",
        "pytz._CountryNameDict",
        "pytz.UTC",
        "pytz.lazy",
        "pytz._FixedOffset"
    ],
    "pytz.exceptions": [
        "pytz.exceptions.InvalidTimeError",
        "pytz.exceptions.AmbiguousTimeError",
        "pytz.exceptions.UnknownTimeZoneError",
        "pytz.exceptions.Error",
        "pytz.exceptions.NonExistentTimeError"
    ],
    "pytz.exceptions.Error": [],
    "pytz.exceptions.UnknownTimeZoneError": [],
    "pytz.exceptions.InvalidTimeError": [],
    "pytz.exceptions.AmbiguousTimeError": [],
    "pytz.exceptions.NonExistentTimeError": [],
    "pytz.lazy": [
        "pytz.lazy.LazyDict",
        "pytz.lazy.LazyList",
        "<builtin>.hasattr",
        "pytz.lazy.LazySet",
        "threading.RLock"
    ],
    "threading.RLock": [],
    "pytz.lazy.LazyDict": [],
    "pytz.lazy.LazyList": [],
    "pytz.lazy.LazySet": [],
    "pytz.tzinfo": [
        "pytz.tzinfo.DstTzInfo",
        "pytz.tzinfo.StaticTzInfo",
        "pytz.exceptions",
        "pytz",
        "pytz.tzinfo.memorized_timedelta",
        "pytz.tzinfo.BaseTzInfo",
        "datetime.datetime"
    ],
    "datetime.datetime": [],
    "pytz.tzinfo.memorized_timedelta": [
        "datetime.timedelta"
    ],
    "datetime.timedelta": [],
    "pytz.tzinfo.BaseTzInfo": [],
    "pytz.tzinfo.StaticTzInfo": [],
    "pytz.tzinfo.DstTzInfo": [],
    "pytz.tzfile": [
        "pytz.tzinfo",
        "pytz.tzfile._byte_string"
    ],
    "pytz.tzfile._byte_string": [
        "<str>.encode"
    ],
    "<str>.encode": [],
    "pytz.UTC": [],
    "pytz._CountryTimezoneDict": [],
    "pytz._CountryNameDict": [],
    "pytz._FixedOffset": [],
    "pytz.resource_exists": [
        "pytz.open_resource"
    ],
    "pytz.open_resource": [
        "<builtin>.open",
        "pkg_resources.resource_stream",
        "<builtin>.ValueError"
    ],
    "pkg_resources.resource_stream": [],
    "<builtin>.open": [],
    "pandas.errors": [
        "pandas.errors.InvalidComparison",
        "pandas.errors.PyperclipWindowsException",
        "pandas.errors.IndexingError",
        "pandas.errors.IncompatibilityWarning",
        "pandas.errors.SettingWithCopyError",
        "pandas.errors.ParserError",
        "pandas.errors.NumExprClobberingError",
        "pandas.errors.ValueLabelTypeMismatch",
        "pandas._libs.tslibs",
        "pandas.errors.DuplicateLabelError",
        "pandas.errors.ChainedAssignmentError",
        "pandas.errors.MergeError",
        "pandas.errors.CategoricalConversionWarning",
        "pandas.errors.CSSWarning",
        "pandas.errors.SpecificationError",
        "pandas.errors.ParserWarning",
        "pandas.errors.PossibleDataLossError",
        "pandas.errors.EmptyDataError",
        "pandas.errors.PyperclipException",
        "pandas.errors.AttributeConflictWarning",
        "pandas.errors.IntCastingNaNError",
        "pandas.errors.UnsortedIndexError",
        "pandas.errors.NullFrequencyError",
        "pandas.errors.DataError",
        "pandas.errors.NumbaUtilError",
        "pandas.errors.DtypeWarning",
        "pandas.errors.LossySetitemError",
        "pandas.errors.SettingWithCopyWarning",
        "pandas.errors.DatabaseError",
        "pandas.errors.PossiblePrecisionLoss",
        "pandas.errors.AbstractMethodError",
        "pandas.errors.UndefinedVariableError",
        "pandas.errors.UnsupportedFunctionCall",
        "pandas.errors.NoBufferPresent",
        "pandas.errors.InvalidColumnName",
        "pandas.util.version",
        "pandas.errors.PerformanceWarning",
        "pandas.errors.InvalidIndexError",
        "pandas.errors.ClosedFileError",
        "pandas._config.config"
    ],
    "pandas._config.config": [
        "pandas._config.config.DictWrapper",
        "pandas._config.config.is_instance_factory",
        "pandas._config.config.CallableDynamicDoc",
        "pandas._config.config.option_context",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas._config.config.RegisteredOption",
        "pandas._config.config.is_type_factory",
        "pandas._config.config.DeprecatedOption",
        "pandas._config.config.OptionError",
        "pandas._config.config.DictWrapper.__init__",
        "pandas._config.config.CallableDynamicDoc.__init__",
        "contextlib.contextmanager"
    ],
    "pandas.util._exceptions": [],
    "pandas._config.config.DeprecatedOption": [],
    "pandas._config.config.RegisteredOption": [],
    "pandas._config.config.OptionError": [],
    "pandas._config.config.DictWrapper": [],
    "pandas._config.config.CallableDynamicDoc": [
        "<builtin>.property"
    ],
    "pandas._config.config.CallableDynamicDoc.__init__": [],
    "pandas._config.config.DictWrapper.__init__": [],
    "pandas._config.config.option_context": [],
    "contextlib.contextmanager": [],
    "pandas._config.config.is_type_factory": [],
    "pandas._config.config.is_instance_factory": [
        "<builtin>.map",
        "<builtin>.isinstance",
        "<builtin>.tuple"
    ],
    "<builtin>.map": [],
    "pandas.errors.IntCastingNaNError": [],
    "pandas.errors.NullFrequencyError": [],
    "pandas.errors.PerformanceWarning": [],
    "pandas.errors.UnsupportedFunctionCall": [],
    "pandas.errors.UnsortedIndexError": [],
    "pandas.errors.ParserError": [],
    "pandas.errors.DtypeWarning": [],
    "pandas.errors.EmptyDataError": [],
    "pandas.errors.ParserWarning": [],
    "pandas.errors.MergeError": [],
    "pandas.errors.AbstractMethodError": [],
    "pandas.errors.NumbaUtilError": [],
    "pandas.errors.DuplicateLabelError": [],
    "pandas.errors.InvalidIndexError": [],
    "pandas.errors.DataError": [],
    "pandas.errors.SpecificationError": [],
    "pandas.errors.SettingWithCopyError": [],
    "pandas.errors.SettingWithCopyWarning": [],
    "pandas.errors.ChainedAssignmentError": [],
    "pandas.errors.NumExprClobberingError": [],
    "pandas.errors.UndefinedVariableError": [],
    "pandas.errors.IndexingError": [],
    "pandas.errors.PyperclipException": [],
    "pandas.errors.PyperclipWindowsException": [],
    "pandas.errors.CSSWarning": [],
    "pandas.errors.PossibleDataLossError": [],
    "pandas.errors.ClosedFileError": [],
    "pandas.errors.IncompatibilityWarning": [],
    "pandas.errors.AttributeConflictWarning": [],
    "pandas.errors.DatabaseError": [],
    "pandas.errors.PossiblePrecisionLoss": [],
    "pandas.errors.ValueLabelTypeMismatch": [],
    "pandas.errors.InvalidColumnName": [],
    "pandas.errors.CategoricalConversionWarning": [],
    "pandas.errors.LossySetitemError": [],
    "pandas.errors.NoBufferPresent": [],
    "pandas.errors.InvalidComparison": [],
    "pandas.core.dtypes.base": [
        "pandas.core.dtypes.base.StorageExtensionDtype",
        "pandas.core.dtypes.generic",
        "pandas",
        "pandas.core.dtypes.base.ExtensionDtype",
        "pandas._typing",
        "pandas.core.dtypes.base.Registry",
        "pandas.core.arrays",
        "pandas.errors",
        "typing.TypeVar",
        "numpy",
        "pandas.core.dtypes.base.Registry.__init__"
    ],
    "pandas.core.dtypes.generic": [
        "pandas",
        "pandas.core.arrays",
        "typing.cast",
        "pandas.core.generic",
        "pandas.core.dtypes.generic.create_pandas_abc_type"
    ],
    "pandas.core.arrays": [
        "pandas.core.arrays.arrow",
        "pandas.core.arrays.sparse",
        "pandas.core.arrays.string_",
        "pandas.core.arrays.masked",
        "pandas.core.arrays.string_arrow",
        "pandas.core.arrays.boolean",
        "pandas.core.arrays.interval",
        "pandas.core.arrays.period",
        "pandas.core.arrays.base",
        "pandas.core.arrays.datetimes",
        "pandas.core.arrays.categorical",
        "pandas.core.arrays.numpy_",
        "pandas.core.arrays.integer",
        "pandas.core.arrays.timedeltas",
        "pandas.core.arrays.floating"
    ],
    "pandas.core.arrays.arrow": [
        "pandas.core.arrays.arrow.accessors",
        "pandas.core.arrays.arrow.array"
    ],
    "pandas.core.arrays.arrow.accessors": [
        "pandas",
        "pandas.core.arrays.arrow.accessors.ArrowAccessor",
        "pandas.core.dtypes.common",
        "pandas.core.arrays.arrow.accessors.ListAccessor",
        "pandas.core.dtypes.dtypes",
        "pandas.compat",
        "pandas.core.arrays.arrow.accessors.StructAccessor"
    ],
    "pandas.core.dtypes.common": [
        "pandas.core.dtypes.generic",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas._libs",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.base",
        "numpy",
        "pandas.core.dtypes.inference"
    ],
    "pandas.core.dtypes.inference": [
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.arrays.arrow.accessors.ArrowAccessor": [
        "abc.abstractmethod",
        "<builtin>.property"
    ],
    "abc.abstractmethod": [],
    "pandas.core.arrays.arrow.accessors.ListAccessor": [],
    "pandas.core.arrays.arrow.accessors.StructAccessor": [
        "<builtin>.property"
    ],
    "pandas.core.arrays.arrow.array": [
        "pandas.core.arrays.arrow.array.ArrowExtensionArray",
        "pandas.core.ops",
        "pandas.core.dtypes.common",
        "pandas.core.arrays._utils",
        "pandas._libs.tslibs",
        "pandas.core.arrays.base",
        "numpy",
        "pandas.core.roperator",
        "pandas.core.indexers",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.arrays.masked",
        "pandas.tseries.frequencies",
        "pandas.core.arraylike",
        "pandas.core.dtypes.dtypes",
        "pandas.util._validators",
        "pandas.io._util",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.dtypes.cast",
        "pandas",
        "pandas.core.arrays.string_",
        "pandas.core.algorithms",
        "pandas.core.strings.base",
        "pandas.core.missing",
        "pandas.core.arrays.datetimes",
        "pandas.core.arrays.timedeltas",
        "pandas.compat",
        "pandas.core.arrays._arrow_string_mixins"
    ],
    "pandas.util._decorators": [
        "pandas._typing",
        "pandas.util._decorators.Appender",
        "pandas.util._decorators.Substitution",
        "pandas.util._exceptions"
    ],
    "pandas.util._decorators.Substitution": [],
    "pandas.util._decorators.Appender": [],
    "pandas.util._validators": [
        "numpy",
        "typing.overload",
        "pandas.core.dtypes.common",
        "typing.TypeVar"
    ],
    "pandas.core.dtypes.cast": [
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas._libs.tslibs",
        "numpy",
        "pandas.core.dtypes.inference",
        "typing.overload",
        "pandas.core.dtypes.generic",
        "numpy.core.iinfo",
        "pandas._typing",
        "pandas.core.dtypes.dtypes",
        "pandas.io._util",
        "pandas._libs",
        "typing.TypeVar",
        "pandas.core.dtypes.missing",
        "<builtin>.type",
        "pandas",
        "pandas._config",
        "numpy.core.getlimits.iinfo.__init__"
    ],
    "pandas._config": [
        "pandas._config.display",
        "pandas._config.dates",
        "pandas._config.config"
    ],
    "pandas._config.dates": [
        "pandas._config.config.config_prefix",
        "pandas._config.config"
    ],
    "pandas._config.config.config_prefix": [
        "pandas._config.config.config_prefix.wrap"
    ],
    "pandas._config.config.config_prefix.wrap": [
        "typing.cast"
    ],
    "typing.cast": [],
    "pandas._config.display": [
        "pandas._config.config.config_prefix",
        "pandas._config.config"
    ],
    "pandas.core.dtypes.missing": [
        "typing.overload",
        "pandas.core.dtypes.generic",
        "pandas",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas._config",
        "pandas._libs.tslibs",
        "pandas.core.dtypes.dtypes",
        "pandas.core.indexes.base",
        "numpy",
        "pandas.core.dtypes.inference"
    ],
    "pandas.core.indexes.base": [
        "pandas.core.indexes.frozen",
        "pandas.util._exceptions",
        "pandas.core.ops",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas._libs.tslibs",
        "pandas.core.base",
        "pandas.core.sorting",
        "numpy",
        "pandas.core.dtypes.inference",
        "pandas.core.strings.accessor",
        "pandas.core.construction",
        "pandas.core.dtypes.generic",
        "pandas.core.indexers",
        "pandas.util._decorators",
        "pandas._typing",
        "<builtin>.frozenset",
        "pandas.core.arraylike",
        "pandas.core.nanops",
        "pandas.core.dtypes.dtypes",
        "pandas.core.ops.invalid",
        "pandas.core.dtypes.concat",
        "pandas.core.array_algos.putmask",
        "pandas._libs",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.dtypes.cast",
        "pandas",
        "pandas.core.accessor",
        "pandas.io.formats.printing",
        "pandas.core.dtypes.astype",
        "pandas.compat.numpy.function",
        "pandas.core.indexes.base.Index",
        "pandas.core.arrays.string_",
        "pandas._config",
        "pandas.core.algorithms",
        "pandas.core.missing"
    ],
    "pandas.compat.numpy.function": [
        "typing.overload",
        "pandas.util._validators",
        "pandas._typing",
        "pandas.errors",
        "pandas.compat.numpy.function.CompatValidator.__init__",
        "typing.TypeVar",
        "pandas.compat.numpy.function.CompatValidator",
        "numpy"
    ],
    "pandas.compat.numpy.function.CompatValidator": [],
    "pandas.compat.numpy.function.CompatValidator.__init__": [],
    "pandas.core.dtypes.astype": [
        "typing.overload",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas.core.dtypes.dtypes",
        "numpy"
    ],
    "pandas.core.dtypes.concat": [
        "pandas.core.dtypes.cast",
        "pandas.core.dtypes.generic",
        "pandas.core.dtypes.astype",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.arrays",
        "pandas.core.dtypes.dtypes",
        "numpy"
    ],
    "pandas.core.arraylike": [
        "pandas.core.dtypes.generic",
        "pandas.core.arraylike.OpsMixin",
        "pandas.core.ops.common",
        "numpy",
        "pandas.core.roperator",
        "pandas.core.construction"
    ],
    "pandas.core.roperator": [],
    "pandas.core.construction": [
        "pandas.core.dtypes.cast",
        "typing.overload",
        "pandas.core.dtypes.generic",
        "pandas",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas._config",
        "<builtin>.frozenset",
        "numpy.ma",
        "pandas._libs.tslibs",
        "pandas.core.dtypes.base",
        "pandas.core.dtypes.dtypes",
        "pandas.core.arrays.base",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.common"
    ],
    "pandas.core.common": [
        "pandas.core.dtypes.cast",
        "typing.overload",
        "pandas.core.dtypes.generic",
        "pandas",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.compat.numpy",
        "numpy",
        "pandas.core.dtypes.inference"
    ],
    "pandas.core.arrays.base": [
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.errors",
        "pandas.core.sorting",
        "numpy",
        "pandas.core.roperator",
        "pandas.core.dtypes.generic",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.arraylike",
        "pandas.core.arrays.base.ExtensionScalarOpsMixin",
        "pandas.core.dtypes.dtypes",
        "pandas.util._validators",
        "pandas.core.arrays.base.ExtensionArraySupportsAnyAll",
        "pandas.core.arrays.base.ExtensionOpsMixin",
        "pandas.core.dtypes.missing",
        "pandas.core.arrays.base.ExtensionArray",
        "pandas.core.dtypes.cast",
        "pandas.core.array_algos.quantile",
        "pandas",
        "pandas.compat.numpy.function",
        "pandas.core.algorithms",
        "pandas.core.missing",
        "pandas.compat"
    ],
    "pandas.core.missing": [
        "pandas.core.dtypes.cast",
        "typing.overload",
        "pandas",
        "pandas.compat._optional",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas._libs",
        "pandas.core.dtypes.dtypes",
        "pandas.core.missing._datetimelike_compat",
        "numpy",
        "pandas.core.dtypes.missing"
    ],
    "pandas.compat._optional": [
        "pandas.util.version",
        "pandas.util._exceptions"
    ],
    "pandas.core.missing._datetimelike_compat": [
        "functools.wraps",
        "typing.cast"
    ],
    "functools.wraps": [],
    "pandas.core.algorithms": [
        "pandas.util._decorators.doc",
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "numpy",
        "pandas.core.construction",
        "pandas.util._decorators.doc.decorator",
        "pandas.core.dtypes.generic",
        "pandas.core.indexers",
        "pandas.core.array_algos.take",
        "pandas.util._decorators",
        "textwrap.dedent",
        "pandas._typing",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.concat",
        "pandas._libs",
        "pandas.core.dtypes.missing",
        "pandas.core.dtypes.cast",
        "pandas"
    ],
    "pandas.core.array_algos.take": [
        "pandas.core.dtypes.cast",
        "typing.overload",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.array_algos.take._view_wrapper",
        "pandas.core.arrays.base",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.arrays._mixins",
        "pandas.core.construction"
    ],
    "pandas.core.arrays._mixins": [
        "pandas.core.dtypes.common",
        "pandas.errors",
        "pandas._libs.tslibs",
        "pandas.core.arrays.base",
        "pandas.core.sorting",
        "numpy",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.dtypes.dtypes",
        "pandas.util._validators",
        "pandas.core.dtypes.missing",
        "pandas.core.array_algos.transforms",
        "pandas.core.array_algos.quantile",
        "pandas",
        "pandas.core.algorithms",
        "pandas.core.missing",
        "pandas.core.arrays._mixins.NDArrayBackedExtensionArray"
    ],
    "pandas.core.array_algos.quantile": [
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas._typing"
    ],
    "pandas.core.array_algos.transforms": [
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.indexers": [
        "pandas.core.indexers.utils"
    ],
    "pandas.core.indexers.utils": [
        "pandas.core.dtypes.generic",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.frame",
        "pandas.core.dtypes.dtypes",
        "pandas.core.indexes.base",
        "numpy"
    ],
    "pandas.core.frame": [
        "pandas.compat._optional",
        "pandas.util._exceptions",
        "pandas.core.indexing",
        "pandas.core.ops",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.io.formats.style",
        "pandas.errors",
        "pandas.core.groupby.generic",
        "pandas.core.interchange.dataframe_protocol",
        "pandas.core.sorting",
        "pandas.core.frame.DataFrame",
        "numpy",
        "pandas.core.roperator",
        "pandas.core.construction",
        "pandas.core.methods.selectn",
        "pandas.core.internals",
        "pandas.core.indexes.api",
        "pandas.core.indexers",
        "pandas.core.array_algos.take",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.compat._constants",
        "pandas.core.arraylike",
        "pandas.core.internals.construction",
        "pandas.core.nanops",
        "pandas.core.dtypes.dtypes",
        "pandas.core.series",
        "pandas.core.generic",
        "pandas.core.reshape.melt",
        "pandas.io.formats.format",
        "pandas.io.common",
        "pandas.io.formats.info",
        "pandas.util._validators",
        "pandas.core.dtypes.concat",
        "pandas.core.arrays.sparse",
        "numpy.ma",
        "pandas.core.apply",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.dtypes.cast",
        "pandas.io.formats.console",
        "pandas.plotting",
        "pandas.core.accessor",
        "pandas.compat.numpy.function",
        "pandas._config",
        "pandas.core.indexes.multi",
        "pandas.core.shared_docs",
        "pandas.core.algorithms",
        "pandas.compat",
        "pandas._config.config"
    ],
    "pandas.core.nanops": [
        "pandas.compat._optional",
        "pandas.util._exceptions",
        "pandas.core.nanops.disallow.__init__",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.nanops.set_use_bottleneck",
        "pandas.core.nanops.bottleneck_switch.__init__",
        "pandas.core.nanops._nanminmax",
        "pandas._config",
        "pandas._libs",
        "pandas.core.nanops.bottleneck_switch",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.compat._optional.import_optional_dependency",
        "pandas.core.nanops.disallow",
        "pandas.core.nanops.maybe_operate_rowwise",
        "pandas._config.config.CallableDynamicDoc.__init__",
        "pandas.core.nanops._datetimelike_compat"
    ],
    "pandas.compat._optional.import_optional_dependency": [
        "pandas.util.version.Version.__init__",
        "<map>.get",
        "pandas.util._exceptions.find_stack_level",
        "<builtin>.ImportError",
        "<str>.split",
        "pandas.compat._optional.get_version"
    ],
    "<map>.get": [],
    "<str>.split": [],
    "pandas.compat._optional.get_version": [
        "<builtin>.ImportError",
        "<builtin>.getattr"
    ],
    "pandas.util._exceptions.find_stack_level": [
        "pandas"
    ],
    "pandas.core.nanops.set_use_bottleneck": [],
    "pandas.core.nanops.disallow": [],
    "pandas.core.nanops.bottleneck_switch": [],
    "pandas.core.nanops.maybe_operate_rowwise": [
        "typing.cast"
    ],
    "pandas.core.nanops._datetimelike_compat": [
        "typing.cast"
    ],
    "pandas.core.nanops.disallow.__init__": [
        "pandas.core.dtypes.common.pandas_dtype",
        "<builtin>.tuple",
        "<builtin>.super"
    ],
    "pandas.core.dtypes.common.pandas_dtype": [
        "<builtin>.TypeError",
        "pandas.util._exceptions.find_stack_level",
        "<builtin>.isinstance",
        "pandas.core.dtypes.inference.is_hashable"
    ],
    "pandas.core.dtypes.inference.is_hashable": [
        "<builtin>.hash"
    ],
    "<builtin>.hash": [],
    "pandas.core.nanops.bottleneck_switch.__init__": [],
    "pandas.core.nanops._nanminmax": [
        "pandas.core.nanops.bottleneck_switch.__init__",
        "pandas.core.nanops._datetimelike_compat"
    ],
    "pandas.core.ops": [
        "pandas.core.ops.array_ops",
        "pandas.core.ops.invalid",
        "pandas.core.ops.common",
        "pandas.core.ops.mask_ops",
        "pandas.core.ops.docstrings",
        "pandas.core.roperator"
    ],
    "pandas.core.ops.array_ops": [
        "pandas.core.dtypes.cast",
        "pandas.core.ops.missing",
        "pandas.core.dtypes.generic",
        "pandas.core.ops.invalid",
        "pandas.util._exceptions",
        "pandas.core.ops.dispatch",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.computation.expressions",
        "pandas._libs.tslibs",
        "pandas._libs",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.roperator",
        "pandas.core.construction"
    ],
    "pandas.core.computation.expressions": [
        "pandas.core.computation.check",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas._config",
        "numpy",
        "pandas.core.roperator",
        "pandas.core.computation.expressions.set_use_numexpr",
        "pandas._config.config.CallableDynamicDoc.__init__"
    ],
    "pandas.core.computation.check": [
        "pandas.compat._optional.import_optional_dependency",
        "pandas.compat._optional"
    ],
    "pandas.core.computation.expressions.set_use_numexpr": [],
    "pandas.core.ops.missing": [
        "numpy",
        "pandas.core.roperator"
    ],
    "pandas.core.ops.dispatch": [
        "pandas._typing",
        "pandas.core.dtypes.generic"
    ],
    "pandas.core.ops.invalid": [
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.ops.common": [
        "pandas._typing",
        "pandas.core.dtypes.generic"
    ],
    "pandas.core.ops.docstrings": [
        "<builtin>.list"
    ],
    "pandas.core.ops.mask_ops": [
        "numpy"
    ],
    "pandas.core.accessor": [
        "pandas.core.accessor.CachedAccessor",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "pandas.util._exceptions",
        "pandas.util._decorators",
        "pandas.core.accessor.DirNamesMixin",
        "pandas.core.accessor.PandasDelegate",
        "pandas.core.accessor.delegate_names"
    ],
    "pandas.core.accessor.DirNamesMixin": [
        "<builtin>.set",
        "typing.final",
        "<builtin>.frozenset"
    ],
    "typing.final": [],
    "pandas.core.accessor.PandasDelegate": [
        "<builtin>.classmethod"
    ],
    "pandas.core.accessor.CachedAccessor": [],
    "pandas.util._decorators.doc": [],
    "pandas.util._decorators.doc.decorator": [
        "<builtin>.len",
        "<builtin>.isinstance",
        "<builtin>.hasattr",
        "textwrap.dedent"
    ],
    "textwrap.dedent": [],
    "pandas.core.apply": [
        "pandas.compat._optional",
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.errors",
        "pandas.core.apply.GroupByApply",
        "numpy",
        "pandas.core.window.rolling",
        "pandas.core.construction",
        "pandas.core.dtypes.generic",
        "pandas.util._decorators",
        "pandas.core.apply.SeriesApply",
        "pandas._typing",
        "pandas.core._numba.executor",
        "pandas.core.dtypes.dtypes",
        "pandas.core.apply.NDFrameApply",
        "pandas.core.resample",
        "pandas.core.apply.FrameApply",
        "pandas.core.apply.FrameRowApply",
        "pandas.core.common",
        "pandas.core.apply.ResamplerWindowApply",
        "pandas.core.dtypes.cast",
        "pandas",
        "pandas.core.apply.Apply",
        "pandas.core.groupby",
        "pandas._config",
        "pandas.core.apply.FrameColumnApply"
    ],
    "pandas.core._numba.executor": [
        "numpy",
        "pandas._typing",
        "pandas.compat._optional"
    ],
    "pandas.core.groupby": [
        "pandas.core.groupby.grouper",
        "pandas.core.groupby.groupby",
        "pandas.core.groupby.generic"
    ],
    "pandas.core.groupby.generic": [
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.errors",
        "pandas.core.groupby.generic.DataFrameGroupBy",
        "pandas.core.frame",
        "pandas.core.groupby.groupby",
        "pandas.core.sorting",
        "numpy",
        "pandas.core.dtypes.inference",
        "pandas.core.util.numba_",
        "pandas.core.indexes.api",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.dtypes.dtypes",
        "pandas.core.series",
        "pandas.core.generic",
        "pandas.core.groupby.generic.SeriesGroupBy",
        "pandas.core.groupby.ops",
        "pandas._libs",
        "pandas.core.groupby.base",
        "typing.TypeVar",
        "pandas.core.apply",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.plotting",
        "pandas",
        "pandas.core.algorithms",
        "pandas.core.groupby.generic.NamedAgg"
    ],
    "pandas.core.groupby.base": [
        "pandas.core.groupby.base.OutputKey",
        "<builtin>.frozenset"
    ],
    "pandas.core.groupby.base.OutputKey": [],
    "pandas.core.groupby.ops": [
        "pandas.core.groupby.ops.DataSplitter",
        "pandas.core.dtypes.common",
        "pandas.core.groupby.ops.BaseGrouper",
        "pandas.errors",
        "pandas.core.frame",
        "pandas.core.sorting",
        "numpy",
        "pandas.core.indexes.api",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.groupby.ops.SeriesSplitter",
        "pandas.core.series",
        "pandas.core.generic",
        "pandas.core.groupby.ops.WrappedCythonOp",
        "pandas.core.groupby.ops.FrameSplitter",
        "pandas._libs",
        "pandas.core.dtypes.missing",
        "pandas.core.dtypes.cast",
        "pandas.core.groupby.ops.BinGrouper",
        "pandas.core.groupby.grouper"
    ],
    "pandas.core.groupby.grouper": [
        "pandas.core.groupby.categorical",
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas._libs.tslibs",
        "pandas.core.frame",
        "numpy",
        "pandas.core.groupby.grouper.Grouping",
        "pandas.core.groupby.grouper.Grouper",
        "pandas.core.indexes.api",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.dtypes.dtypes",
        "pandas.core.series",
        "pandas.core.generic",
        "pandas.core.groupby.ops",
        "pandas.core.common",
        "pandas.io.formats.printing",
        "pandas._config",
        "pandas.core.algorithms"
    ],
    "pandas.core.groupby.categorical": [
        "numpy",
        "pandas.core.algorithms",
        "pandas.core.arrays.categorical"
    ],
    "pandas.core.arrays.categorical": [
        "pandas.util._exceptions",
        "pandas.core.ops",
        "pandas.core.dtypes.common",
        "pandas.core.base",
        "pandas.core.sorting",
        "numpy",
        "pandas.core.arrays._mixins",
        "pandas.core.construction",
        "pandas.core.dtypes.generic",
        "pandas._typing",
        "pandas.core.arrays.categorical.Categorical",
        "pandas.core.arraylike",
        "pandas.core.dtypes.dtypes",
        "pandas.core.arrays.categorical.CategoricalAccessor",
        "pandas.util._validators",
        "pandas._libs",
        "pandas.core.ops.common",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.dtypes.cast",
        "pandas.io.formats.console",
        "pandas.core.strings.object_array",
        "pandas.core.accessor",
        "pandas",
        "pandas.compat.numpy.function",
        "pandas._config",
        "pandas.core.algorithms"
    ],
    "pandas.core.base": [
        "pandas.core.base.PandasObject",
        "pandas.util._exceptions",
        "pandas.core.ops",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "numpy",
        "pandas.core.base.IndexOpsMixin",
        "pandas.core.construction",
        "pandas.core.dtypes.generic",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.arraylike",
        "pandas.core.nanops",
        "pandas.core.dtypes.dtypes",
        "pandas.core.base.NoNewAttributesMixin",
        "pandas.core.base.SelectionMixin",
        "pandas.core.dtypes.missing",
        "pandas.core.dtypes.cast",
        "pandas",
        "pandas.core.accessor",
        "pandas.compat.numpy.function",
        "pandas._config",
        "pandas.core.algorithms",
        "pandas.compat"
    ],
    "pandas.core.base.PandasObject": [
        "<builtin>.property"
    ],
    "pandas.core.base.NoNewAttributesMixin": [],
    "pandas.core.base.SelectionMixin": [
        "<builtin>.set",
        "pandas._libs.properties.cache_readonly",
        "typing.final",
        "<builtin>.property"
    ],
    "pandas._libs.properties.cache_readonly": [],
    "pandas.core.base.IndexOpsMixin": [
        "typing.overload",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "pandas._libs.properties.cache_readonly",
        "typing.final",
        "<builtin>.frozenset",
        "<builtin>.property"
    ],
    "pandas.core.sorting": [
        "pandas.core.dtypes.generic",
        "pandas",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.core.indexes.base",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.construction"
    ],
    "pandas.core.strings.object_array": [
        "pandas",
        "pandas._typing",
        "pandas.core.strings.base",
        "pandas.core.strings.object_array.ObjectStringArrayMixin",
        "numpy",
        "pandas.core.dtypes.missing"
    ],
    "pandas.core.strings.base": [
        "numpy",
        "pandas._typing",
        "pandas",
        "pandas.core.strings.base.BaseStringArrayMethods"
    ],
    "pandas.core.strings.base.BaseStringArrayMethods": [],
    "pandas.core.strings.object_array.ObjectStringArrayMixin": [],
    "pandas.io.formats.console": [],
    "pandas.core.arrays.categorical.Categorical": [
        "typing.overload",
        "<builtin>.classmethod",
        "<builtin>.frozenset",
        "pandas.core.arrays.categorical._cat_compare_op",
        "<builtin>.property",
        "pandas.core.arrays._mixins.ravel_compat"
    ],
    "pandas.core.arrays.categorical._cat_compare_op": [
        "pandas.core.ops.common.unpack_zerodim_and_defer",
        "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper"
    ],
    "pandas.core.ops.common.unpack_zerodim_and_defer": [],
    "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper": [
        "pandas.core.ops.common._unpack_zerodim_and_defer"
    ],
    "pandas.core.ops.common._unpack_zerodim_and_defer": [
        "functools.wraps",
        "<str>.removesuffix",
        "<str>.removeprefix"
    ],
    "<str>.removeprefix": [],
    "<str>.removesuffix": [],
    "pandas.core.arrays._mixins.ravel_compat": [],
    "pandas.core.arrays.categorical.CategoricalAccessor": [
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "pandas.core.indexes.api": [
        "pandas.core.dtypes.cast",
        "pandas.core.indexes.range",
        "pandas.core.indexes.datetimes",
        "pandas._typing",
        "pandas.errors",
        "pandas.core.indexes.interval",
        "pandas.core.indexes.multi",
        "pandas.core.indexes.period",
        "pandas.core.algorithms",
        "pandas.core.indexes.timedeltas",
        "pandas._libs",
        "pandas.core.indexes.base",
        "numpy",
        "pandas.core.indexes.category"
    ],
    "pandas.core.indexes.category": [
        "pandas.core.dtypes.concat",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.indexes.extension",
        "pandas.core.dtypes.dtypes",
        "pandas.core.indexes.category.CategoricalIndex",
        "pandas.core.arrays.categorical",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.construction",
        "pandas.core.indexes.base"
    ],
    "pandas.core.indexes.extension": [
        "pandas.core.indexes.extension.NDArrayBackedExtensionIndex",
        "pandas.core.dtypes.generic",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.arrays",
        "typing.TypeVar",
        "pandas.core.indexes.base",
        "numpy",
        "pandas.core.indexes.extension.ExtensionIndex",
        "pandas.core.arrays._mixins",
        "pandas.core.indexes.extension.inherit_names",
        "pandas.core.indexes.extension._inherit_from_data"
    ],
    "pandas.core.indexes.extension.ExtensionIndex": [
        "pandas._libs.properties.cache_readonly"
    ],
    "pandas.core.indexes.extension.NDArrayBackedExtensionIndex": [],
    "pandas.core.indexes.category.CategoricalIndex": [
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.property"
    ],
    "pandas.core.indexes.datetimes": [
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pytz",
        "pandas._libs.tslibs",
        "numpy",
        "pandas.core.api",
        "pandas.core.indexes.datetimes.DatetimeIndex",
        "pandas.core.dtypes.generic",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.indexes.extension",
        "pandas.core.dtypes.dtypes",
        "pandas.core.tools.times",
        "pandas._libs",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.arrays.datetimes",
        "pandas.core.indexes.base",
        "pandas.core.indexes.datetimelike"
    ],
    "pandas.core.arrays.datetimes": [
        "typing.overload",
        "pandas.core.arrays._ranges",
        "pandas.tseries.offsets",
        "pandas",
        "pandas.util._validators",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas.core.arrays.datetimelike",
        "pandas.tseries.frequencies",
        "pandas._libs.tslibs",
        "pandas.core.arrays.datetimes.DatetimeArray",
        "pandas.core.dtypes.dtypes",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.common"
    ],
    "pandas.core.arrays.datetimelike": [
        "pandas.core.arrays.datetimelike.DatelikeOps",
        "pandas.util._exceptions",
        "pandas.core.ops",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas._libs.tslibs",
        "pandas.core.arrays.base",
        "numpy",
        "pandas.core.arrays.integer",
        "pandas.core.arrays._mixins",
        "pandas.core.construction",
        "typing.overload",
        "pandas.core.dtypes.generic",
        "pandas.core.indexers",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.tseries.frequencies",
        "pandas.core.arraylike",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin",
        "pandas.core.nanops",
        "pandas.core.dtypes.dtypes",
        "pandas.core.array_algos.datetimelike_accumulations",
        "pandas.core.ops.invalid",
        "pandas.core.ops.common",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.dtypes.cast",
        "pandas",
        "pandas.compat.numpy.function",
        "pandas.core.arrays.datetimelike.TimelikeOps",
        "pandas.core.algorithms",
        "pandas.core.missing",
        "pandas.core.arrays.arrow.array"
    ],
    "pandas.core.array_algos.datetimelike_accumulations": [
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas._libs"
    ],
    "pandas.core.arrays.integer": [
        "pandas.core.arrays.integer.IntegerArray",
        "pandas.core.arrays.integer.UInt8Dtype",
        "pandas.core.arrays.integer.Int32Dtype",
        "pandas.core.arrays.integer.Int64Dtype",
        "pandas.core.arrays.integer.UInt32Dtype",
        "pandas.core.dtypes.common",
        "pandas.core.arrays.integer.UInt64Dtype",
        "pandas.core.arrays.integer.IntegerDtype",
        "pandas.core.arrays.integer.Int16Dtype",
        "pandas.core.arrays.numeric",
        "pandas.core.dtypes.base",
        "pandas.core.arrays.integer.Int8Dtype",
        "numpy",
        "pandas.core.arrays.integer.UInt16Dtype"
    ],
    "pandas.core.arrays.numeric": [
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.arrays.masked",
        "pandas.errors",
        "pandas.core.arrays.numeric.NumericDtype",
        "numpy",
        "pandas.core.arrays.numeric.NumericArray"
    ],
    "pandas.core.arrays.masked": [
        "pandas.core.ops",
        "pandas.core.dtypes.common",
        "pandas.core.arrays._utils",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas._libs.tslibs",
        "pandas.core.arrays.masked.BaseMaskedArray",
        "pandas.core.arrays.base",
        "pandas.core.util.hashing",
        "numpy",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.arraylike",
        "pandas.core.nanops",
        "pandas.core.dtypes.dtypes",
        "pandas.util._validators",
        "pandas.core.array_algos.masked_accumulations",
        "pandas.core.array_algos.masked_reductions",
        "pandas.core.dtypes.base",
        "pandas.core.dtypes.missing",
        "pandas.core.array_algos.quantile",
        "pandas",
        "pandas.compat.numpy.function",
        "pandas.core.algorithms",
        "pandas.core.missing",
        "pandas.compat"
    ],
    "pandas.core.array_algos.masked_accumulations": [
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.array_algos.masked_reductions": [
        "numpy",
        "pandas._typing",
        "pandas.core.nanops"
    ],
    "pandas.core.arrays._utils": [
        "pandas.core.dtypes.cast",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.errors",
        "numpy"
    ],
    "pandas.core.util.hashing": [
        "pandas.core.dtypes.generic",
        "pandas",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.dtypes.dtypes",
        "numpy"
    ],
    "pandas.core.arrays.masked.BaseMaskedArray": [
        "typing.overload",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "pandas.core.arrays.numeric.NumericDtype": [
        "<builtin>.classmethod",
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.core.arrays.numeric.NumericArray": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.integer.IntegerDtype": [
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.integer.IntegerArray": [],
    "pandas.core.arrays.integer.Int8Dtype": [],
    "pandas.core.arrays.integer.Int16Dtype": [],
    "pandas.core.arrays.integer.Int32Dtype": [],
    "pandas.core.arrays.integer.Int64Dtype": [],
    "pandas.core.arrays.integer.UInt8Dtype": [],
    "pandas.core.arrays.integer.UInt16Dtype": [],
    "pandas.core.arrays.integer.UInt32Dtype": [],
    "pandas.core.arrays.integer.UInt64Dtype": [],
    "pandas.tseries.frequencies": [
        "pandas.core.dtypes.generic",
        "pandas",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.arrays.datetimelike",
        "pandas._libs.tslibs",
        "pandas.core.algorithms",
        "pandas.core.dtypes.dtypes",
        "pandas.tseries.frequencies._TimedeltaFrequencyInferer",
        "numpy",
        "pandas.tseries.frequencies._FrequencyInferer"
    ],
    "pandas.tseries.frequencies._FrequencyInferer": [
        "pandas._libs.properties.cache_readonly"
    ],
    "pandas.tseries.frequencies._TimedeltaFrequencyInferer": [],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin": [
        "typing.overload",
        "pandas.core.arrays.datetimelike._make_unpacked_invalid_op",
        "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper",
        "pandas._libs.properties.cache_readonly",
        "typing.final",
        "pandas.core.arrays.datetimelike._period_dispatch",
        "pandas.core.ops.common.unpack_zerodim_and_defer",
        "<builtin>.property",
        "pandas.core.arrays._mixins.ravel_compat"
    ],
    "pandas.core.arrays.datetimelike._make_unpacked_invalid_op": [
        "pandas.core.ops.common.unpack_zerodim_and_defer",
        "pandas.core.ops.invalid.make_invalid_op",
        "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper"
    ],
    "pandas.core.ops.invalid.make_invalid_op": [],
    "pandas.core.arrays.datetimelike._period_dispatch": [
        "functools.wraps",
        "typing.cast"
    ],
    "pandas.core.arrays.datetimelike.DatelikeOps": [
        "pandas.util._decorators.Substitution.__init__"
    ],
    "pandas.util._decorators.Substitution.__init__": [
        "<builtin>.AssertionError"
    ],
    "pandas.core.arrays.datetimelike.TimelikeOps": [
        "<builtin>.classmethod",
        "pandas._libs.properties.cache_readonly",
        "typing.final",
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.property"
    ],
    "pandas.util._decorators.Appender.__init__": [
        "pandas.util._decorators.indent"
    ],
    "pandas.util._decorators.indent": [
        "<builtin>.isinstance",
        "<str>.split"
    ],
    "pandas.core.arrays._ranges": [
        "numpy",
        "pandas._typing",
        "pandas._libs.tslibs"
    ],
    "pandas.tseries.offsets": [],
    "pandas.core.arrays.datetimes.DatetimeArray": [
        "<builtin>.classmethod",
        "pandas.core.arrays._mixins.ravel_compat",
        "pandas.core.arrays.datetimes._field_accessor",
        "<builtin>.property"
    ],
    "pandas.core.arrays.datetimes._field_accessor": [
        "<builtin>.property"
    ],
    "pandas.core.indexes.datetimelike": [
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas._libs.tslibs",
        "numpy",
        "pandas.core.tools.timedeltas",
        "pandas.core.indexes.range",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.indexes.extension",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.concat",
        "pandas.core.arrays.datetimelike",
        "<builtin>.dict",
        "pandas._libs",
        "pandas.core.common",
        "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin",
        "pandas",
        "pandas.core.indexes.datetimelike.DatetimeTimedeltaMixin",
        "pandas.compat.numpy.function",
        "pandas._config",
        "pandas.core.indexes.base"
    ],
    "pandas.core.indexes.range": [
        "pandas.core.dtypes.generic",
        "pandas.util._decorators",
        "pandas.compat.numpy.function",
        "pandas.core.ops",
        "pandas.core.dtypes.common",
        "pandas._typing",
        "pandas.core.indexes.range.RangeIndex",
        "<builtin>.range",
        "pandas.core.ops.common",
        "pandas.core.indexes.base",
        "numpy",
        "pandas.core.common",
        "pandas.core.construction"
    ],
    "pandas.core.indexes.range.RangeIndex": [
        "typing.overload",
        "pandas.util._decorators.doc.decorator",
        "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper",
        "pandas.util._decorators.doc",
        "<builtin>.classmethod",
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.core.ops.common.unpack_zerodim_and_defer",
        "<builtin>.property"
    ],
    "pandas.util._decorators.deprecate_nonkeyword_arguments": [],
    "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate": [
        "functools.wraps",
        "<builtin>.len",
        "pandas.util._decorators.future_version_msg"
    ],
    "pandas.util._decorators.future_version_msg": [],
    "pandas.core.tools.timedeltas": [
        "typing.overload",
        "pandas.core.dtypes.generic",
        "pandas",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas._libs.tslibs",
        "pandas.core.dtypes.dtypes",
        "pandas.core.arrays.timedeltas",
        "numpy"
    ],
    "pandas.core.arrays.timedeltas": [
        "pandas.core.array_algos.datetimelike_accumulations",
        "pandas.core.arrays._ranges",
        "pandas",
        "pandas.util._validators",
        "pandas.compat.numpy.function",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.arrays.datetimelike",
        "pandas._libs.tslibs",
        "pandas.core.nanops",
        "pandas.core.dtypes.dtypes",
        "pandas.core.ops.common",
        "pandas.core.arrays.timedeltas.TimedeltaArray",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.roperator",
        "pandas.core.common"
    ],
    "pandas.core.arrays.timedeltas.TimedeltaArray": [
        "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper",
        "<builtin>.classmethod",
        "pandas.core.arrays.timedeltas._field_accessor",
        "pandas.core.ops.common.unpack_zerodim_and_defer",
        "<builtin>.property"
    ],
    "pandas.core.arrays.timedeltas._field_accessor": [
        "<builtin>.property"
    ],
    "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin": [
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "pandas._libs.properties.cache_readonly",
        "typing.final",
        "abc.abstractmethod",
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.property"
    ],
    "pandas.core.indexes.datetimelike.DatetimeTimedeltaMixin": [
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.property"
    ],
    "pandas.core.tools.times": [
        "pandas.core.dtypes.generic",
        "pandas.util._exceptions",
        "pandas._typing",
        "numpy",
        "pandas.core.dtypes.missing"
    ],
    "pandas.core.api": [
        "pandas.core.indexing",
        "pandas.core.arrays",
        "pandas.core.indexes.timedeltas",
        "pandas.core.frame",
        "pandas.core.arrays.boolean",
        "pandas.core.arrays.integer",
        "pandas.core.tools.datetimes",
        "pandas.core.tools.timedeltas",
        "pandas.core.construction",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.dtypes",
        "pandas.core.series",
        "pandas.io.formats.format",
        "pandas.tseries.offsets",
        "pandas._libs",
        "pandas.core.dtypes.missing",
        "pandas.core.arrays.floating",
        "pandas.core.flags",
        "pandas.core.tools.numeric",
        "pandas.core.indexes.datetimes",
        "pandas.core.arrays.string_",
        "pandas.core.groupby",
        "pandas.core.indexes.interval",
        "pandas.core.indexes.period",
        "pandas.core.algorithms"
    ],
    "pandas.core.arrays.boolean": [
        "pandas.core.ops",
        "pandas.core.dtypes.common",
        "pandas._typing",
        "pandas.core.arrays.masked",
        "pandas.core.arrays.boolean.BooleanArray",
        "pandas.core.array_algos.masked_accumulations",
        "pandas.core.dtypes.dtypes",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.arrays.boolean.BooleanDtype"
    ],
    "pandas.core.arrays.boolean.BooleanDtype": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "pandas.core.arrays.boolean.BooleanArray": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.floating": [
        "pandas.core.arrays.floating.Float32Dtype",
        "pandas.core.arrays.floating.Float64Dtype",
        "pandas.core.dtypes.common",
        "pandas.core.arrays.floating.FloatingArray",
        "pandas.core.arrays.floating.FloatingDtype",
        "pandas.core.arrays.numeric",
        "pandas.core.dtypes.base",
        "numpy"
    ],
    "pandas.core.arrays.floating.FloatingDtype": [
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.floating.FloatingArray": [],
    "pandas.core.arrays.floating.Float32Dtype": [],
    "pandas.core.arrays.floating.Float64Dtype": [],
    "pandas.core.arrays.string_": [
        "pandas.core.arrays.string_.StringArray",
        "pandas.core.ops",
        "pandas.core.dtypes.common",
        "pandas.core.arrays.base",
        "numpy",
        "pandas.core.arrays.integer",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.array_algos.masked_reductions",
        "pandas.core.dtypes.base",
        "pandas.core.arrays.floating",
        "pandas",
        "pandas.compat.numpy.function",
        "pandas.core.arrays.string_.StringDtype",
        "pandas.core.arrays.string_.BaseStringArray",
        "pandas._config",
        "pandas.core.arrays.numpy_",
        "pandas.core.missing",
        "pandas.compat"
    ],
    "pandas.core.arrays.numpy_": [
        "pandas.core.dtypes.cast",
        "pandas.core.strings.object_array",
        "pandas",
        "pandas.core.dtypes.astype",
        "pandas.compat.numpy.function",
        "pandas.core.ops",
        "pandas.core.dtypes.common",
        "pandas._typing",
        "pandas.core.arrays.numpy_.NumpyExtensionArray",
        "pandas.core.arraylike",
        "pandas._libs.tslibs",
        "pandas.core.nanops",
        "pandas.core.dtypes.dtypes",
        "pandas.core.missing",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.arrays._mixins",
        "pandas.core.construction"
    ],
    "pandas.core.arrays.numpy_.NumpyExtensionArray": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.string_.StringDtype": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "pandas.core.arrays.string_.BaseStringArray": [
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.string_.StringArray": [
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.classmethod"
    ],
    "pandas.core.flags": [
        "pandas.core.flags.Flags",
        "pandas.core.generic"
    ],
    "pandas.core.generic": [
        "pandas.compat._optional",
        "pandas.util._exceptions",
        "pandas.core.indexing",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas._libs.tslibs",
        "pandas.core.base",
        "pandas.core.sorting",
        "numpy",
        "pandas.core.dtypes.inference",
        "pandas.core.generic.NDFrame",
        "pandas.core.construction",
        "pandas.core.reshape.concat",
        "pandas.core.sample",
        "pandas.core.internals",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.generic",
        "pandas.core.window",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.indexers.objects",
        "pandas.compat._constants",
        "pandas.core.arraylike",
        "pandas.core.internals.construction",
        "pandas.core.nanops",
        "pandas.core.dtypes.dtypes",
        "pandas.io.formats.format",
        "pandas.util._validators",
        "pandas.core.resample",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.flags",
        "pandas",
        "pandas.core.array_algos.replace",
        "pandas.io.formats.printing",
        "pandas.core.dtypes.astype",
        "pandas.compat.numpy.function",
        "pandas.core.methods.describe",
        "pandas._config",
        "pandas.core.shared_docs",
        "pandas.core.algorithms",
        "pandas.core.missing",
        "pandas.compat",
        "pandas._config.config"
    ],
    "pandas.core.indexing": [
        "pandas.core.indexing._iAtIndexer",
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.errors",
        "numpy",
        "pandas.core.construction",
        "pandas.core.indexing._iLocIndexer",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.generic",
        "pandas.core.indexers",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.indexing._LocIndexer",
        "pandas.core.dtypes.dtypes",
        "pandas.core.indexing._AtIndexer",
        "pandas.core.dtypes.concat",
        "pandas.core.indexing._IndexSlice",
        "typing.TypeVar",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.dtypes.cast",
        "pandas",
        "pandas.core.indexing._ScalarAccessIndexer",
        "<builtin>.slice",
        "pandas._config",
        "pandas.core.algorithms",
        "pandas.core.indexing.IndexingMixin",
        "pandas.compat",
        "pandas.core.indexing._LocationIndexer"
    ],
    "<builtin>.slice": [],
    "pandas.core.indexing._IndexSlice": [],
    "pandas.core.indexing.IndexingMixin": [
        "<builtin>.property"
    ],
    "pandas.core.indexing._LocationIndexer": [
        "typing.final"
    ],
    "pandas.core.indexing._LocIndexer": [
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc"
    ],
    "pandas.core.indexing._iLocIndexer": [],
    "pandas.core.indexing._ScalarAccessIndexer": [],
    "pandas.core.indexing._AtIndexer": [
        "<builtin>.property"
    ],
    "pandas.core.indexing._iAtIndexer": [],
    "pandas.core.sample": [
        "numpy",
        "pandas._typing",
        "pandas.core.dtypes.generic",
        "pandas.core.generic"
    ],
    "pandas.core.array_algos.replace": [
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.internals": [
        "pandas.core.internals.array_manager",
        "pandas.core.internals.api",
        "pandas.core.internals.base",
        "pandas.core.internals.managers",
        "pandas.core.internals.concat"
    ],
    "pandas.core.internals.api": [
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.core.dtypes.dtypes",
        "numpy",
        "pandas.core.internals.blocks",
        "pandas.core.construction"
    ],
    "pandas.core.internals.blocks": [
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.core.computation.expressions",
        "pandas.errors",
        "pandas.core.internals.blocks.EABackedBlock",
        "pandas.core.base",
        "numpy",
        "pandas.core.arrays._mixins",
        "pandas.core.construction",
        "pandas.core.api",
        "pandas.core.dtypes.generic",
        "pandas.core.indexers",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.internals.blocks.ExtensionBlock",
        "pandas.core.dtypes.dtypes",
        "pandas.core.internals.blocks.NumericBlock",
        "pandas.util._validators",
        "pandas.core.array_algos.putmask",
        "pandas.core.internals.blocks.NDArrayBackedExtensionBlock",
        "pandas.core.internals.blocks.DatetimeTZBlock",
        "pandas._libs",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.dtypes.cast",
        "pandas.core.array_algos.transforms",
        "pandas.core.array_algos.quantile",
        "pandas.core.internals.blocks.Block",
        "pandas.core.array_algos.replace",
        "pandas.core.internals.blocks.DatetimeLikeBlock",
        "pandas.core.dtypes.astype",
        "pandas.core.internals.blocks.NumpyBlock",
        "pandas._config",
        "pandas.core.algorithms",
        "pandas.core.missing",
        "pandas.core.indexes.base",
        "pandas.core.internals.blocks.ObjectBlock"
    ],
    "pandas.core.array_algos.putmask": [
        "pandas.core.dtypes.cast",
        "pandas",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "numpy"
    ],
    "pandas.core.internals.blocks.Block": [
        "pandas._libs.properties.cache_readonly",
        "pandas.core.internals.blocks.maybe_split",
        "typing.final",
        "<builtin>.property"
    ],
    "pandas.core.internals.blocks.maybe_split": [
        "functools.wraps",
        "typing.cast"
    ],
    "pandas.core.internals.blocks.EABackedBlock": [
        "pandas._libs.properties.cache_readonly",
        "typing.final"
    ],
    "pandas.core.internals.blocks.ExtensionBlock": [
        "pandas._libs.properties.cache_readonly",
        "typing.final",
        "<builtin>.property"
    ],
    "pandas.core.internals.blocks.NumpyBlock": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.core.internals.blocks.NumericBlock": [],
    "pandas.core.internals.blocks.ObjectBlock": [],
    "pandas.core.internals.blocks.NDArrayBackedExtensionBlock": [
        "<builtin>.property"
    ],
    "pandas.core.internals.blocks.DatetimeLikeBlock": [],
    "pandas.core.internals.blocks.DatetimeTZBlock": [],
    "pandas.core.internals.array_manager": [
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.core.internals.array_manager.ArrayManager",
        "pandas.core.internals.base",
        "numpy",
        "pandas.core.internals.array_manager.BaseArrayManager",
        "pandas.core.internals.blocks",
        "pandas.core.construction",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.generic",
        "pandas.core.indexers",
        "pandas.core.array_algos.take",
        "pandas._typing",
        "pandas.core.internals.array_manager.NullArrayProxy",
        "pandas.core.dtypes.dtypes",
        "pandas.core.internals.array_manager.SingleArrayManager",
        "pandas._libs",
        "pandas.core.dtypes.missing",
        "pandas.core.indexes.base",
        "pandas.core.dtypes.cast",
        "pandas.core.array_algos.quantile",
        "pandas.core.dtypes.astype",
        "pandas.core.algorithms",
        "pandas.core.internals.managers"
    ],
    "pandas.core.internals.base": [
        "pandas.core.dtypes.cast",
        "pandas.core.indexes.api",
        "pandas.core.internals.base.DataManager",
        "pandas.util._validators",
        "pandas._typing",
        "pandas.errors",
        "pandas._config",
        "pandas.core.internals.base.SingleDataManager",
        "pandas.core.base",
        "pandas.core.dtypes.dtypes",
        "pandas.core.internals.base._AlreadyWarned",
        "numpy",
        "pandas.core.construction"
    ],
    "pandas.core.internals.base._AlreadyWarned": [],
    "pandas.core.internals.base.DataManager": [
        "typing.final",
        "<builtin>.property"
    ],
    "pandas.core.internals.base.SingleDataManager": [
        "<builtin>.classmethod",
        "typing.final",
        "<builtin>.property"
    ],
    "pandas.core.internals.managers": [
        "pandas.core.internals.managers.SingleBlockManager",
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas._libs.tslibs",
        "pandas.core.internals.base",
        "numpy",
        "pandas.core.arrays._mixins",
        "pandas.core.internals.blocks",
        "pandas.core.construction",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.generic",
        "pandas.core.indexers",
        "pandas.api.extensions",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.internals.managers.BaseBlockManager",
        "pandas.core.internals.managers.BlockManager",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.missing",
        "pandas.core.dtypes.cast",
        "pandas.core.internals.ops",
        "pandas._config",
        "pandas.core.algorithms"
    ],
    "pandas.core.internals.ops": [
        "pandas.core.internals.ops.BlockPairInfo",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.internals.managers",
        "pandas.core.internals.blocks"
    ],
    "pandas.core.internals.ops.BlockPairInfo": [],
    "pandas.api.extensions": [
        "pandas.core.algorithms",
        "pandas.core.arrays",
        "pandas.core.accessor",
        "pandas.core.dtypes.base"
    ],
    "pandas.core.internals.managers.BaseBlockManager": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "pandas.core.internals.managers.BlockManager": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.internals.managers.SingleBlockManager": [
        "<builtin>.classmethod",
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.core.internals.array_manager.BaseArrayManager": [
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "pandas.core.internals.array_manager.ArrayManager": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "pandas.core.internals.array_manager.SingleArrayManager": [
        "<builtin>.classmethod",
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "pandas.core.internals.array_manager.NullArrayProxy": [
        "<builtin>.property"
    ],
    "pandas.core.internals.concat": [
        "pandas.core.dtypes.cast",
        "pandas",
        "pandas.util._exceptions",
        "pandas.util._decorators",
        "pandas.core.dtypes.concat",
        "pandas.core.dtypes.common",
        "pandas.core.internals.array_manager",
        "pandas._typing",
        "pandas.core.internals.concat.JoinUnit",
        "pandas._libs",
        "pandas.core.dtypes.dtypes",
        "pandas.core.internals.managers",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.internals.blocks",
        "pandas.core.construction"
    ],
    "pandas.core.internals.concat.JoinUnit": [
        "pandas._libs.properties.cache_readonly"
    ],
    "pandas.core.internals.construction": [
        "pandas.core.dtypes.cast",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.generic",
        "pandas.core.dtypes.astype",
        "pandas.core.arrays.string_",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.core.internals.array_manager",
        "pandas._typing",
        "pandas._config",
        "numpy.ma",
        "pandas.core.algorithms",
        "pandas.core.dtypes.dtypes",
        "pandas.core.internals.managers",
        "numpy",
        "pandas.core.internals.blocks",
        "pandas.core.common",
        "pandas.core.construction"
    ],
    "pandas.core.methods.describe": [
        "pandas",
        "pandas.util._validators",
        "pandas.core.methods.describe.NDFrameDescriberAbstract",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.methods.describe.DataFrameDescriber",
        "pandas._libs.tslibs",
        "pandas.core.dtypes.dtypes",
        "pandas.io.formats.format",
        "pandas.core.methods.describe.SeriesDescriber",
        "numpy",
        "pandas.core.arrays.floating",
        "pandas.core.reshape.concat"
    ],
    "pandas.core.reshape.concat": [
        "pandas.core.internals",
        "typing.overload",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.generic",
        "pandas",
        "pandas.util._exceptions",
        "pandas.util._decorators",
        "pandas.core.dtypes.concat",
        "pandas.core.dtypes.common",
        "pandas._typing",
        "pandas._config",
        "pandas.core.reshape.concat._Concatenator",
        "pandas.core.arrays.categorical",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.common"
    ],
    "pandas.core.reshape.concat._Concatenator": [
        "pandas._libs.properties.cache_readonly"
    ],
    "pandas.io.formats.format": [
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas._libs.tslibs",
        "pandas.core.indexes.timedeltas",
        "pandas.core.base",
        "pandas.io.formats.format.FloatArrayFormatter",
        "numpy",
        "pandas.core.reshape.concat",
        "pandas.core.indexes.api",
        "pandas._typing",
        "pandas.io.formats.format.EngFormatter",
        "pandas.io.formats.format.DataFrameRenderer",
        "pandas.io.formats.format._GenericArrayFormatter",
        "pandas.core.dtypes.dtypes",
        "pandas.io.common",
        "pandas.io.formats.format._Timedelta64Formatter",
        "pandas.io.formats.format._Datetime64Formatter",
        "pandas.core.dtypes.missing",
        "pandas.io.formats.format.SeriesFormatter",
        "pandas.core.common",
        "pandas.io.formats.format.DataFrameFormatter",
        "pandas",
        "pandas.io.formats.printing",
        "pandas.core.indexes.datetimes",
        "pandas.core.arrays.string_",
        "pandas.io.formats.format._IntArrayFormatter",
        "pandas.io.formats.format._ExtensionArrayFormatter",
        "pandas.io.formats.format._Datetime64TZFormatter",
        "pandas._config.config",
        "contextlib.contextmanager"
    ],
    "pandas.core.indexes.timedeltas": [
        "pandas.core.dtypes.generic",
        "pandas.core.indexes.datetimelike",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.indexes.extension",
        "pandas._libs.tslibs",
        "pandas.core.indexes.timedeltas.TimedeltaIndex",
        "pandas.core.arrays.timedeltas",
        "pandas.core.indexes.base",
        "pandas.core.common"
    ],
    "pandas.core.indexes.timedeltas.TimedeltaIndex": [
        "<builtin>.property"
    ],
    "pandas.io.common": [
        "pandas.compat._optional",
        "pandas.util._exceptions",
        "pandas.util._decorators.doc",
        "pandas.core.dtypes.common",
        "pandas.io.common._IOWrapper",
        "pandas.io.common._BytesIOWrapper",
        "pandas.io.common._BytesZipFile",
        "typing.overload",
        "pandas.core.dtypes.generic",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.io.common.IOArgs",
        "pandas.io.common._BytesTarFile",
        "pandas.io.common._BufferedWriter",
        "<builtin>.set",
        "typing.TypeVar",
        "pandas",
        "pandas.io.common.IOHandles",
        "pandas.core.shared_docs",
        "<map>.values",
        "pandas.compat"
    ],
    "pandas.core.shared_docs": [],
    "pandas.io.common.IOArgs": [],
    "pandas.io.common.IOHandles": [],
    "pandas.io.common._BufferedWriter": [
        "io.BytesIO",
        "abc.abstractmethod"
    ],
    "io.BytesIO": [],
    "pandas.io.common._BytesTarFile": [],
    "pandas.io.common._BytesZipFile": [],
    "pandas.io.common._IOWrapper": [],
    "pandas.io.common._BytesIOWrapper": [],
    "pandas.io.formats.printing": [
        "pandas.io.formats.console",
        "pandas._config",
        "typing.TypeVar",
        "pandas.io.formats.printing._EastAsianTextAdjustment",
        "pandas.io.formats.printing._TextAdjustment",
        "pandas.io.formats.printing.PrettyDict",
        "pandas.core.dtypes.inference"
    ],
    "pandas.io.formats.printing.PrettyDict": [],
    "pandas.io.formats.printing._TextAdjustment": [],
    "pandas.io.formats.printing._EastAsianTextAdjustment": [],
    "pandas.io.formats.format.SeriesFormatter": [],
    "pandas.io.formats.format.DataFrameFormatter": [
        "<builtin>.property"
    ],
    "pandas.io.formats.format.DataFrameRenderer": [],
    "pandas.io.formats.format._GenericArrayFormatter": [],
    "pandas.io.formats.format.FloatArrayFormatter": [],
    "pandas.io.formats.format._IntArrayFormatter": [],
    "pandas.io.formats.format._Datetime64Formatter": [],
    "pandas.io.formats.format._ExtensionArrayFormatter": [],
    "pandas.io.formats.format._Datetime64TZFormatter": [],
    "pandas.io.formats.format._Timedelta64Formatter": [],
    "pandas.io.formats.format.EngFormatter": [],
    "pandas.core.methods.describe.NDFrameDescriberAbstract": [
        "abc.abstractmethod"
    ],
    "pandas.core.methods.describe.SeriesDescriber": [],
    "pandas.core.methods.describe.DataFrameDescriber": [],
    "pandas.core.window": [
        "pandas.core.window.rolling",
        "pandas.core.window.expanding",
        "pandas.core.window.ewm"
    ],
    "pandas.core.window.ewm": [
        "pandas.core.dtypes.common",
        "pandas._libs.tslibs",
        "pandas.core.window.ewm.ExponentialMovingWindowGroupby",
        "numpy",
        "pandas.core.window.rolling",
        "pandas.core.util.numba_",
        "pandas.core.window.common",
        "pandas.core.dtypes.generic",
        "pandas.core.window.doc",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.window.ewm.ExponentialMovingWindow",
        "pandas.core.indexers.objects",
        "pandas.core.window.numba_",
        "pandas.core.dtypes.dtypes",
        "pandas.core.generic",
        "pandas.core.arrays.datetimelike",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.window.ewm.OnlineExponentialMovingWindow",
        "pandas",
        "pandas.core.window.online"
    ],
    "pandas.core.indexers.objects": [
        "pandas.tseries.offsets",
        "pandas.core.indexers.objects.ExpandingIndexer",
        "pandas.core.indexers.objects.FixedWindowIndexer",
        "pandas.core.indexers.objects.VariableWindowIndexer",
        "pandas.core.indexes.datetimes",
        "pandas.util._decorators",
        "pandas.core.indexers.objects.BaseIndexer",
        "pandas.core.dtypes.common",
        "pandas.core.indexers.objects.VariableOffsetWindowIndexer",
        "pandas._libs.tslibs",
        "pandas.core.indexers.objects.FixedForwardWindowIndexer",
        "pandas.core.indexers.objects.GroupbyIndexer",
        "numpy",
        "pandas.core.indexers.objects.ExponentialMovingWindowIndexer"
    ],
    "pandas.core.indexers.objects.BaseIndexer": [
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.indexers.objects.FixedWindowIndexer": [
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.indexers.objects.VariableWindowIndexer": [
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.indexers.objects.VariableOffsetWindowIndexer": [
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.indexers.objects.ExpandingIndexer": [
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.indexers.objects.FixedForwardWindowIndexer": [
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.indexers.objects.GroupbyIndexer": [
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.indexers.objects.ExponentialMovingWindowIndexer": [
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.util.numba_": [
        "numpy",
        "pandas.errors",
        "pandas.compat._optional"
    ],
    "pandas.core.window.common": [
        "numpy",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.generic"
    ],
    "pandas.core.window.doc": [
        "pandas.core.shared_docs",
        "<builtin>.dict",
        "textwrap.dedent"
    ],
    "pandas.core.window.numba_": [
        "numpy",
        "pandas._typing",
        "pandas.core.util.numba_",
        "pandas.compat._optional"
    ],
    "pandas.core.window.online": [
        "numpy",
        "pandas.core.window.online.EWMMeanState",
        "pandas.compat._optional"
    ],
    "pandas.core.window.online.EWMMeanState": [],
    "pandas.core.window.rolling": [
        "pandas.compat._optional",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas._libs.tslibs",
        "pandas.core.base",
        "numpy",
        "pandas.core.reshape.concat",
        "pandas.core.util.numba_",
        "pandas.core.window.common",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.generic",
        "pandas.core.window.doc",
        "pandas.util._decorators",
        "pandas.core._numba.executor",
        "pandas._typing",
        "pandas.core.indexers.objects",
        "pandas.core.window.numba_",
        "pandas.core.window.rolling.Window",
        "pandas.core.dtypes.dtypes",
        "pandas.core.generic",
        "pandas.core.groupby.ops",
        "pandas.core.arrays.datetimelike",
        "pandas.core.window.rolling.RollingGroupby",
        "pandas.core.apply",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.window.rolling.BaseWindow",
        "pandas.core.window.rolling.BaseWindowGroupby",
        "pandas",
        "pandas.core.algorithms",
        "pandas.core.window.rolling.RollingAndExpandingMixin",
        "pandas.core.window.rolling.Rolling"
    ],
    "pandas.core.window.rolling.BaseWindow": [
        "<builtin>.frozenset",
        "<builtin>.property"
    ],
    "pandas.core.window.rolling.BaseWindowGroupby": [],
    "pandas.core.window.rolling.Window": [
        "pandas.core.window.doc.create_section_header",
        "pandas.util._decorators.doc.decorator",
        "textwrap.dedent",
        "pandas.util._decorators.doc"
    ],
    "pandas.core.window.doc.create_section_header": [
        "<builtin>.len"
    ],
    "pandas.core.window.rolling.RollingAndExpandingMixin": [],
    "pandas.core.window.rolling.Rolling": [
        "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg",
        "pandas.util._decorators.doc.decorator",
        "textwrap.dedent",
        "pandas.util._decorators.doc",
        "pandas.core.window.doc.window_agg_numba_parameters",
        "pandas.util._decorators.deprecate_kwarg",
        "pandas.core.window.doc.create_section_header"
    ],
    "pandas.core.window.doc.window_agg_numba_parameters": [
        "textwrap.dedent"
    ],
    "pandas.util._decorators.deprecate_kwarg": [
        "<builtin>.callable",
        "<builtin>.TypeError",
        "<builtin>.hasattr"
    ],
    "<builtin>.callable": [],
    "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg": [
        "functools.wraps",
        "typing.cast"
    ],
    "pandas.core.window.rolling.RollingGroupby": [],
    "pandas.core.window.ewm.ExponentialMovingWindow": [
        "pandas.util._decorators.doc.decorator",
        "textwrap.dedent",
        "pandas.util._decorators.doc",
        "pandas.core.window.doc.window_agg_numba_parameters",
        "pandas.core.window.doc.create_section_header"
    ],
    "pandas.core.window.ewm.ExponentialMovingWindowGroupby": [],
    "pandas.core.window.ewm.OnlineExponentialMovingWindow": [],
    "pandas.core.window.expanding": [
        "pandas",
        "pandas.core.window.doc",
        "pandas.core.window.expanding.ExpandingGroupby",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.indexers.objects",
        "pandas.core.window.expanding.Expanding",
        "pandas.core.generic",
        "pandas.core.window.rolling"
    ],
    "pandas.core.window.expanding.Expanding": [
        "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg",
        "pandas.util._decorators.doc.decorator",
        "textwrap.dedent",
        "pandas.util._decorators.doc",
        "pandas.core.window.doc.window_agg_numba_parameters",
        "pandas.util._decorators.deprecate_kwarg",
        "pandas.core.window.doc.create_section_header"
    ],
    "pandas.core.window.expanding.ExpandingGroupby": [],
    "pandas.core.resample": [
        "pandas.core.resample.Resampler",
        "pandas.core.resample.PeriodIndexResamplerGroupby",
        "pandas.util._exceptions",
        "pandas.core.arrays",
        "pandas.core.resample.TimedeltaIndexResampler",
        "pandas.errors",
        "pandas.core.groupby.generic",
        "pandas._libs.tslibs",
        "pandas.core.indexes.timedeltas",
        "pandas.core.base",
        "pandas.core.groupby.groupby",
        "numpy",
        "pandas.core.resample.TimedeltaIndexResamplerGroupby",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.generic",
        "pandas.core.resample.DatetimeIndexResampler",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.tseries.frequencies",
        "pandas.core.resample.TimeGrouper",
        "pandas.core.resample._GroupByMixin",
        "pandas.core.dtypes.dtypes",
        "pandas.core.generic",
        "pandas.tseries.offsets",
        "pandas.core.groupby.ops",
        "pandas.core.resample.PeriodIndexResampler",
        "pandas.core.resample.DatetimeIndexResamplerGroupby",
        "pandas.core.apply",
        "pandas.core.common",
        "pandas",
        "pandas.compat.numpy.function",
        "pandas.core.indexes.datetimes",
        "pandas.core.indexes.period",
        "pandas.core.algorithms",
        "pandas.core.indexes.base",
        "pandas.core.groupby.grouper"
    ],
    "pandas.core.groupby.groupby": [
        "pandas.util._decorators.doc",
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas.core.groupby.groupby.BaseGroupBy",
        "pandas.core.frame",
        "pandas.core.base",
        "pandas.core.sorting",
        "numpy",
        "pandas.core.internals.blocks",
        "pandas.core.sample",
        "pandas.core.util.numba_",
        "pandas.core.indexes.api",
        "pandas.core.window",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core._numba.executor",
        "pandas.core.groupby.numba_",
        "pandas.core.series",
        "pandas.core.generic",
        "pandas.core.arrays.string_arrow",
        "pandas.core.groupby.indexing",
        "pandas.core.groupby.groupby.GroupByPlot",
        "pandas.core.groupby.ops",
        "pandas.core.resample",
        "pandas._libs",
        "pandas.core.groupby.base",
        "typing.TypeVar",
        "pandas.core.apply",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.dtypes.cast",
        "pandas.compat.numpy.function",
        "pandas.core.arrays.string_",
        "pandas.core.groupby.groupby.GroupBy",
        "pandas.core.algorithms",
        "pandas.core.groupby.grouper",
        "pandas._config.config"
    ],
    "pandas.core.arrays.string_arrow": [
        "pandas.core.arrays.arrow",
        "pandas.core.arrays.integer",
        "pandas.core.strings.object_array",
        "pandas",
        "pandas.util._exceptions",
        "pandas.core.dtypes.missing",
        "pandas.core.arrays.string_",
        "pandas.core.dtypes.common",
        "pandas.core.ops",
        "pandas._typing",
        "pandas.core.arrays.string_arrow.ArrowStringArrayNumpySemantics",
        "pandas.core.arrays.numeric",
        "pandas.core.arrays.arrow._arrow_utils",
        "pandas.core.arrays.boolean",
        "numpy",
        "pandas.compat",
        "pandas.core.arrays._arrow_string_mixins",
        "pandas.core.arrays.string_arrow.ArrowStringArray"
    ],
    "pandas.core.arrays._arrow_string_mixins": [
        "numpy",
        "pandas.compat",
        "pandas.core.arrays._arrow_string_mixins.ArrowStringArrayMixin"
    ],
    "pandas.core.arrays._arrow_string_mixins.ArrowStringArrayMixin": [],
    "pandas.core.arrays.arrow._arrow_utils": [
        "numpy",
        "pandas.errors",
        "pandas.util._exceptions"
    ],
    "pandas.core.arrays.string_arrow.ArrowStringArray": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.string_arrow.ArrowStringArrayNumpySemantics": [
        "<builtin>.classmethod"
    ],
    "pandas.core.groupby.numba_": [
        "numpy",
        "pandas._typing",
        "pandas.core.util.numba_",
        "pandas.compat._optional"
    ],
    "pandas.core.groupby.indexing": [
        "pandas",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.groupby.indexing.GroupByIndexingMixin",
        "pandas.core.groupby.indexing.GroupByNthSelector",
        "pandas.core.groupby.groupby",
        "numpy",
        "pandas.core.groupby.indexing.GroupByPositionalSelector"
    ],
    "pandas.core.groupby.indexing.GroupByIndexingMixin": [
        "pandas._libs.properties.cache_readonly"
    ],
    "pandas.core.groupby.indexing.GroupByPositionalSelector": [],
    "pandas.core.groupby.indexing.GroupByNthSelector": [],
    "pandas.core.series": [
        "pandas.core.tools.datetimes",
        "pandas.core.indexes.accessors",
        "pandas.compat._optional",
        "pandas.util._exceptions",
        "pandas.core.indexing",
        "pandas.core.ops",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas.core.groupby.generic",
        "pandas.core.frame",
        "pandas.core.base",
        "pandas.core.sorting",
        "numpy",
        "pandas.core.roperator",
        "pandas.core.dtypes.inference",
        "pandas.core.strings.accessor",
        "pandas.core.construction",
        "pandas.core.methods.selectn",
        "pandas.core.internals",
        "pandas.core.arrays.arrow",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.generic",
        "pandas.core.indexers",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.compat._constants",
        "pandas.core.nanops",
        "pandas.core.dtypes.dtypes",
        "pandas.io.formats.format",
        "pandas.core.generic",
        "pandas.io.formats.info",
        "pandas.util._validators",
        "pandas.core.arrays.sparse",
        "pandas.core.series.Series",
        "pandas.core.apply",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.indexes.base",
        "pandas.core.dtypes.cast",
        "pandas.plotting",
        "pandas.core.accessor",
        "pandas.core.dtypes.astype",
        "pandas.compat.numpy.function",
        "pandas.core.arrays.string_",
        "pandas._config",
        "pandas.core.indexes.multi",
        "pandas.core.shared_docs",
        "pandas.core.algorithms",
        "pandas.core.missing",
        "pandas.core.arrays.categorical",
        "pandas.compat",
        "pandas._config.config"
    ],
    "pandas.core.arrays.sparse": [
        "pandas.core.arrays.sparse.array",
        "pandas.core.arrays.sparse.accessor"
    ],
    "pandas.core.arrays.sparse.accessor": [
        "pandas.core.dtypes.cast",
        "pandas",
        "pandas.core.accessor",
        "pandas.core.arrays.sparse.array",
        "pandas.compat._optional",
        "pandas.core.arrays.sparse.accessor.SparseAccessor",
        "pandas.core.arrays.sparse.accessor.SparseFrameAccessor",
        "pandas.core.arrays.sparse.accessor.BaseAccessor",
        "pandas.core.dtypes.dtypes",
        "numpy"
    ],
    "pandas.core.arrays.sparse.array": [
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas._libs.tslibs",
        "pandas.core.base",
        "numpy",
        "pandas.core.arrays.sparse.array.ellipsis",
        "pandas.core.construction",
        "typing.overload",
        "pandas.core.dtypes.generic",
        "pandas.core.indexers",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.arraylike",
        "scipy.sparse",
        "pandas.core.nanops",
        "pandas.core.dtypes.dtypes",
        "pandas.util._validators",
        "pandas.core.dtypes.missing",
        "<builtin>.type",
        "pandas.core.common",
        "pandas.core.dtypes.cast",
        "pandas",
        "pandas.io.formats.printing",
        "pandas.core.dtypes.astype",
        "pandas.compat.numpy.function",
        "pandas.core.algorithms",
        "pandas.core.arrays.sparse.array.SparseArray"
    ],
    "pandas.core.arrays.sparse.array.ellipsis": [],
    "scipy.sparse": [
        "scipy.sparse.construct",
        "scipy.sparse.data",
        "scipy.sparse.coo",
        "scipy.sparse._matrix_io",
        "scipy.sparse.extract",
        "scipy.sparse._csc",
        "scipy.sparse.sparsetools",
        "scipy.sparse.lil",
        "scipy.sparse.compressed",
        "scipy.sparse.csr",
        "scipy.sparse._extract",
        "scipy.sparse.dok",
        "scipy.sparse._construct",
        "scipy.sparse.csc",
        "scipy.sparse._csr",
        "scipy._lib._testutils",
        "scipy.sparse._base",
        "scipy.sparse._coo",
        "scipy.sparse._lil",
        "scipy.sparse._dok",
        "scipy.sparse._bsr",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.sparse.csgraph",
        "scipy.sparse.dia",
        "<builtin>.dir",
        "scipy.sparse._arrays",
        "scipy.sparse.base",
        "scipy.sparse.bsr",
        "scipy.sparse._dia",
        "scipy.sparse.sputils"
    ],
    "scipy.sparse._base": [
        "scipy.sparse._base.SparseWarning",
        "scipy.sparse._base.spmatrix",
        "<builtin>.frozenset",
        "scipy.sparse._base.SparseFormatWarning",
        "scipy.sparse._sputils",
        "numpy",
        "scipy.sparse._base.SparseEfficiencyWarning"
    ],
    "scipy.sparse._sputils": [
        "numpy",
        "scipy._lib._util"
    ],
    "scipy._lib._util": [
        "collections.namedtuple",
        "numpy.random",
        "scipy._lib._util._FunctionWrapper",
        "scipy._lib._util.Generator",
        "typing.TypeVar",
        "numpy",
        "scipy._lib._util.MapWrapper",
        "scipy._lib._util.DeprecatedImport",
        "contextlib.contextmanager"
    ],
    "scipy._lib._util.Generator": [],
    "scipy._lib._util.DeprecatedImport": [],
    "collections.namedtuple": [],
    "scipy._lib._util._FunctionWrapper": [],
    "scipy._lib._util.MapWrapper": [],
    "scipy.sparse._base.SparseWarning": [],
    "scipy.sparse._base.SparseFormatWarning": [],
    "scipy.sparse._base.SparseEfficiencyWarning": [],
    "scipy.sparse._base.spmatrix": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "scipy.sparse._csr": [
        "scipy.sparse._compressed",
        "scipy.sparse._sputils",
        "numpy",
        "scipy.sparse._base",
        "scipy.sparse._csr.csr_matrix"
    ],
    "scipy.sparse._compressed": [
        "scipy.sparse._sputils",
        "scipy.sparse._compressed._cs_matrix",
        "scipy.sparse._data",
        "scipy._lib._util",
        "scipy.sparse._index",
        "numpy",
        "scipy.sparse._base"
    ],
    "scipy.sparse._data": [
        "<builtin>.setattr",
        "scipy.sparse._data._create_method",
        "scipy.sparse._data._minmax_mixin",
        "scipy.sparse._sputils",
        "numpy",
        "scipy.sparse._base",
        "scipy.sparse._data._data_matrix"
    ],
    "scipy.sparse._data._data_matrix": [
        "<builtin>.property"
    ],
    "scipy.sparse._data._create_method": [],
    "<builtin>.setattr": [],
    "scipy.sparse._data._minmax_mixin": [],
    "scipy.sparse._index": [
        "numpy",
        "scipy.sparse._index.IndexMixin",
        "scipy.sparse._sputils"
    ],
    "scipy.sparse._index.IndexMixin": [],
    "scipy.sparse._compressed._cs_matrix": [
        "<builtin>.property"
    ],
    "scipy.sparse._csr.csr_matrix": [],
    "scipy.sparse._csc": [
        "scipy.sparse._compressed",
        "scipy.sparse._sputils",
        "numpy",
        "scipy.sparse._base",
        "scipy.sparse._csc.csc_matrix"
    ],
    "scipy.sparse._csc.csc_matrix": [],
    "scipy.sparse._lil": [
        "scipy.sparse._lil.lil_matrix",
        "scipy.sparse._index",
        "scipy.sparse._sputils",
        "numpy",
        "scipy.sparse._base"
    ],
    "scipy.sparse._lil.lil_matrix": [],
    "scipy.sparse._dok": [
        "scipy.sparse._dok.dok_matrix",
        "scipy.sparse._index",
        "scipy.sparse._sputils",
        "numpy",
        "scipy.sparse._base"
    ],
    "scipy.sparse._dok.dok_matrix": [
        "<builtin>.property"
    ],
    "scipy.sparse._coo": [
        "scipy.sparse._data",
        "scipy.sparse._coo.coo_matrix",
        "scipy.sparse._sputils",
        "numpy",
        "scipy.sparse._base"
    ],
    "scipy.sparse._coo.coo_matrix": [],
    "scipy.sparse._dia": [
        "scipy.sparse._dia.dia_matrix",
        "scipy.sparse._data",
        "scipy.sparse._sputils",
        "numpy",
        "scipy.sparse._base"
    ],
    "scipy.sparse._dia.dia_matrix": [],
    "scipy.sparse._bsr": [
        "scipy.sparse._data",
        "scipy.sparse._compressed",
        "scipy.sparse._sputils",
        "numpy",
        "scipy.sparse._base",
        "scipy.sparse._bsr.bsr_matrix"
    ],
    "scipy.sparse._bsr.bsr_matrix": [
        "<builtin>.property"
    ],
    "scipy.sparse._construct": [
        "scipy.sparse._base",
        "scipy.sparse._csc",
        "scipy.sparse._bsr",
        "scipy._lib._util",
        "scipy.sparse._csr",
        "scipy.sparse._sputils",
        "numpy",
        "scipy.sparse._dia",
        "scipy.sparse._coo"
    ],
    "scipy.sparse._extract": [
        "scipy.sparse._coo"
    ],
    "scipy.sparse._matrix_io": [
        "numpy",
        "<builtin>.dict",
        "scipy.sparse"
    ],
    "scipy.sparse._arrays": [
        "scipy.sparse._arrays.csr_array",
        "scipy.sparse._lil",
        "scipy.sparse._arrays.coo_array",
        "scipy.sparse._csc",
        "scipy.sparse._bsr",
        "scipy.sparse._arrays.csc_array",
        "scipy.sparse._arrays._matrix_doc_to_array",
        "scipy.sparse._csr",
        "scipy.sparse._arrays.dok_array",
        "scipy.sparse._arrays.bsr_array",
        "scipy.sparse._dia",
        "scipy.sparse._coo",
        "scipy.sparse._arrays.lil_array",
        "scipy.sparse._arrays.dia_array",
        "scipy.sparse._arrays._sparray",
        "scipy.sparse._dok"
    ],
    "scipy.sparse._arrays._sparray": [
        "<builtin>.property"
    ],
    "scipy.sparse._arrays.bsr_array": [],
    "scipy.sparse._arrays.coo_array": [],
    "scipy.sparse._arrays.csc_array": [],
    "scipy.sparse._arrays.csr_array": [],
    "scipy.sparse._arrays.dia_array": [],
    "scipy.sparse._arrays.dok_array": [],
    "scipy.sparse._arrays.lil_array": [],
    "scipy.sparse._arrays._matrix_doc_to_array": [],
    "scipy.sparse.csgraph": [
        "scipy.sparse.csgraph._laplacian",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy._lib._testutils"
    ],
    "scipy.sparse.csgraph._laplacian": [
        "numpy",
        "scipy.sparse.linalg",
        "scipy.sparse"
    ],
    "scipy.sparse.linalg": [
        "scipy.sparse.linalg.interface",
        "scipy.sparse.linalg._isolve",
        "scipy.sparse.linalg._norm",
        "scipy.sparse.linalg.isolve",
        "scipy.sparse.linalg._eigen",
        "scipy.sparse.linalg._dsolve",
        "scipy.sparse.linalg._expm_multiply",
        "scipy.sparse.linalg._interface",
        "scipy.sparse.linalg.dsolve",
        "scipy.sparse.linalg.matfuncs",
        "scipy._lib._testutils.PytestTester.__init__",
        "<builtin>.dir",
        "scipy._lib._testutils",
        "scipy.sparse.linalg._onenormest",
        "scipy.sparse.linalg._matfuncs",
        "scipy.sparse.linalg.eigen"
    ],
    "scipy.sparse.linalg._isolve": [
        "scipy.sparse.linalg._isolve.minres",
        "scipy.sparse.linalg._isolve.lsmr",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.sparse.linalg._isolve.lsqr",
        "scipy.sparse.linalg._isolve.iterative",
        "scipy.sparse.linalg._isolve._gcrotmk",
        "scipy.sparse.linalg._isolve.tfqmr",
        "scipy._lib._testutils",
        "scipy.sparse.linalg._isolve.lgmres"
    ],
    "scipy.sparse.linalg._isolve.iterative": [
        "scipy._lib._threadsafety",
        "scipy._lib._threadsafety.non_reentrant.decorator",
        "scipy.sparse.linalg._isolve.utils",
        "scipy._lib._threadsafety.non_reentrant",
        "scipy.sparse.linalg._interface",
        "scipy._lib._util",
        "scipy.sparse.linalg._isolve.iterative.set_docstring.combine",
        "numpy",
        "scipy.sparse.linalg._isolve.iterative.set_docstring"
    ],
    "scipy.sparse.linalg._interface": [
        "scipy.sparse.linalg._interface._ScaledLinearOperator",
        "scipy.sparse.linalg._interface._AdjointLinearOperator",
        "scipy.sparse.linalg._interface._CustomLinearOperator",
        "scipy.sparse.linalg._interface._SumLinearOperator",
        "scipy.sparse.linalg._interface.LinearOperator",
        "scipy.sparse",
        "scipy.sparse.linalg._interface._ProductLinearOperator",
        "scipy.sparse.linalg._interface._PowerLinearOperator",
        "scipy.sparse.linalg._interface.MatrixLinearOperator",
        "scipy.sparse.linalg._interface._AdjointMatrixOperator",
        "scipy.sparse.linalg._interface.IdentityOperator",
        "scipy.sparse._sputils",
        "numpy",
        "scipy.sparse.linalg._interface._TransposedLinearOperator"
    ],
    "scipy.sparse.linalg._interface.LinearOperator": [
        "<builtin>.property"
    ],
    "scipy.sparse.linalg._interface._CustomLinearOperator": [],
    "scipy.sparse.linalg._interface._AdjointLinearOperator": [],
    "scipy.sparse.linalg._interface._TransposedLinearOperator": [],
    "scipy.sparse.linalg._interface._SumLinearOperator": [],
    "scipy.sparse.linalg._interface._ProductLinearOperator": [],
    "scipy.sparse.linalg._interface._ScaledLinearOperator": [],
    "scipy.sparse.linalg._interface._PowerLinearOperator": [],
    "scipy.sparse.linalg._interface.MatrixLinearOperator": [],
    "scipy.sparse.linalg._interface._AdjointMatrixOperator": [
        "<builtin>.property"
    ],
    "scipy.sparse.linalg._interface.IdentityOperator": [],
    "scipy.sparse.linalg._isolve.utils": [
        "numpy",
        "scipy.sparse.linalg._interface"
    ],
    "scipy._lib._threadsafety": [
        "scipy._lib._threadsafety.ReentrancyLock",
        "scipy._lib._threadsafety.ReentrancyError",
        "scipy._lib.decorator"
    ],
    "scipy._lib.decorator": [
        "scipy._lib.decorator.decorator",
        "scipy._lib.decorator.FunctionMaker",
        "inspect.getfullargspec",
        "scipy._lib.decorator.ContextManager",
        "<builtin>.len"
    ],
    "scipy._lib.decorator.FunctionMaker": [
        "<builtin>.classmethod"
    ],
    "scipy._lib.decorator.ContextManager": [],
    "inspect.getfullargspec": [],
    "scipy._lib.decorator.decorator": [
        "scipy._lib.decorator.decorate",
        "scipy._lib.decorator.get_init",
        "scipy._lib.decorator.FunctionMaker.create"
    ],
    "scipy._lib.decorator.decorate": [
        "<builtin>.hasattr",
        "scipy._lib.decorator.FunctionMaker.create"
    ],
    "scipy._lib.decorator.FunctionMaker.create": [
        "<builtin>.isinstance",
        "<str>.splitlines",
        "scipy._lib.decorator.FunctionMaker.make",
        "<str>.split",
        "<str>.strip",
        "scipy._lib.decorator.FunctionMaker.__init__"
    ],
    "scipy._lib.decorator.FunctionMaker.__init__": [
        "<builtin>.TypeError",
        "<builtin>.setattr",
        "<builtin>.hasattr",
        "inspect.getfullargspec",
        "<builtin>.list",
        "<builtin>.getattr",
        "<builtin>.enumerate"
    ],
    "<builtin>.enumerate": [],
    "<str>.splitlines": [],
    "scipy._lib.decorator.FunctionMaker.make": [
        "<builtin>.print",
        "<builtin>.vars",
        "<builtin>.set",
        "<builtin>.SyntaxError",
        "<builtin>.compile",
        "<builtin>.next",
        "<str>.endswith",
        "<builtin>.exec",
        "<builtin>.NameError",
        "<str>.split",
        "scipy._lib.decorator.FunctionMaker.update"
    ],
    "<builtin>.vars": [],
    "<builtin>.SyntaxError": [],
    "<builtin>.NameError": [],
    "<str>.endswith": [],
    "<builtin>.compile": [],
    "<builtin>.exec": [],
    "<builtin>.print": [],
    "scipy._lib.decorator.FunctionMaker.update": [
        "<builtin>.getattr"
    ],
    "scipy._lib.decorator.get_init": [],
    "scipy._lib._threadsafety.ReentrancyError": [],
    "scipy._lib._threadsafety.ReentrancyLock": [],
    "scipy._lib._threadsafety.non_reentrant": [],
    "scipy._lib._threadsafety.non_reentrant.decorator": [
        "scipy._lib._threadsafety.ReentrancyLock.decorate",
        "scipy._lib._threadsafety.ReentrancyLock.__init__"
    ],
    "scipy._lib._threadsafety.ReentrancyLock.__init__": [],
    "scipy._lib._threadsafety.ReentrancyLock.decorate": [],
    "scipy.sparse.linalg._isolve.iterative.set_docstring": [],
    "scipy.sparse.linalg._isolve.iterative.set_docstring.combine": [
        "textwrap.dedent"
    ],
    "scipy.sparse.linalg._isolve.minres": [
        "numpy",
        "scipy.sparse.linalg._isolve.utils",
        "numpy.linalg"
    ],
    "scipy.sparse.linalg._isolve.lgmres": [
        "scipy.linalg",
        "scipy.sparse.linalg._isolve.utils",
        "numpy.linalg",
        "scipy.sparse.linalg._isolve._gcrotmk",
        "numpy"
    ],
    "scipy.linalg": [
        "scipy.linalg._decomp_lu",
        "scipy.linalg._procrustes",
        "scipy.linalg._decomp_qr",
        "scipy.linalg.decomp_svd",
        "scipy.linalg._decomp_schur",
        "scipy.linalg._solvers",
        "scipy.linalg._decomp_cossin",
        "scipy.linalg._sketches",
        "scipy.linalg.decomp_qr",
        "scipy.linalg._decomp_polar",
        "scipy.linalg.special_matrices",
        "scipy.linalg.matfuncs",
        "scipy.linalg._misc",
        "scipy.linalg._decomp",
        "scipy.linalg._decomp_svd",
        "scipy.linalg.decomp_cholesky",
        "scipy.linalg._matfuncs",
        "scipy.linalg._decomp_qz",
        "scipy.linalg._decomp_ldl",
        "scipy.linalg._special_matrices",
        "scipy.linalg.decomp",
        "scipy.linalg._basic",
        "scipy.linalg.lapack",
        "scipy._lib._testutils",
        "scipy.linalg._decomp_cholesky",
        "scipy.linalg.decomp_schur",
        "scipy.linalg.flinalg",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.linalg.basic",
        "<builtin>.dir",
        "scipy.linalg.misc",
        "scipy.linalg.blas",
        "scipy.linalg.decomp_lu"
    ],
    "scipy.linalg._misc": [
        "numpy.linalg",
        "scipy.linalg._misc.LinAlgWarning",
        "scipy.linalg.lapack",
        "numpy",
        "scipy.linalg.blas"
    ],
    "scipy.linalg.blas": [
        "numpy",
        "scipy.linalg",
        "scipy.linalg.blas._memoize_get_funcs"
    ],
    "scipy.linalg.blas._memoize_get_funcs": [],
    "scipy.linalg.lapack": [
        "scipy.linalg",
        "numpy.core.iinfo",
        "numpy.core.getlimits.iinfo.__init__",
        "re.compile",
        "scipy.linalg.blas._memoize_get_funcs",
        "scipy._lib._util",
        "scipy._lib._util.DeprecatedImport.__init__",
        "numpy",
        "scipy.linalg.blas"
    ],
    "scipy._lib._util.DeprecatedImport.__init__": [
        "<builtin>.__import__"
    ],
    "re.compile": [],
    "numpy.core.iinfo": [],
    "scipy.linalg._misc.LinAlgWarning": [],
    "scipy.linalg._basic": [
        "scipy.linalg._misc",
        "scipy.linalg._decomp",
        "scipy.linalg.lapack",
        "numpy",
        "scipy.linalg._decomp_svd",
        "scipy.linalg._flinalg_py"
    ],
    "scipy.linalg._flinalg_py": [],
    "scipy.linalg._decomp": [
        "numpy",
        "scipy._lib._util",
        "scipy.linalg._misc",
        "scipy.linalg.lapack"
    ],
    "scipy.linalg._decomp_svd": [
        "numpy",
        "scipy.linalg._misc",
        "scipy.linalg._decomp",
        "scipy.linalg.lapack"
    ],
    "scipy.linalg._decomp_lu": [
        "numpy",
        "scipy.linalg._flinalg_py",
        "scipy.linalg._misc",
        "scipy.linalg.lapack"
    ],
    "scipy.linalg._decomp_ldl": [
        "numpy",
        "scipy.linalg._decomp",
        "scipy.linalg.lapack"
    ],
    "scipy.linalg._decomp_cholesky": [
        "numpy",
        "scipy.linalg._misc",
        "scipy.linalg.lapack"
    ],
    "scipy.linalg._decomp_qr": [
        "numpy",
        "scipy.linalg._misc",
        "scipy.linalg.lapack"
    ],
    "scipy.linalg._decomp_qz": [
        "numpy",
        "scipy.linalg._misc",
        "scipy.linalg.lapack"
    ],
    "scipy.linalg._decomp_schur": [
        "numpy.linalg",
        "numpy.core.finfo",
        "scipy.linalg._misc",
        "scipy.linalg._decomp",
        "scipy.linalg.lapack",
        "numpy"
    ],
    "numpy.core.finfo": [],
    "scipy.linalg._decomp_polar": [
        "numpy",
        "scipy.linalg"
    ],
    "scipy.linalg._matfuncs": [
        "scipy.linalg._matfuncs_sqrtm",
        "scipy.linalg",
        "scipy.linalg._decomp_schur",
        "numpy.lib.scimath",
        "scipy.linalg._special_matrices",
        "numpy.core.finfo",
        "scipy.linalg._misc",
        "scipy.linalg._expm_frechet",
        "scipy.linalg._decomp_svd",
        "numpy",
        "scipy.linalg._basic"
    ],
    "scipy.linalg._special_matrices": [
        "numpy",
        "numpy.lib.stride_tricks"
    ],
    "scipy.linalg._expm_frechet": [
        "numpy",
        "scipy.linalg"
    ],
    "scipy.linalg._matfuncs_sqrtm": [
        "scipy.linalg._decomp_schur",
        "scipy.linalg._matfuncs_sqrtm.SqrtmError",
        "scipy._lib._util",
        "scipy.linalg._misc",
        "scipy.linalg.lapack",
        "numpy"
    ],
    "scipy.linalg._matfuncs_sqrtm.SqrtmError": [],
    "scipy.linalg._solvers": [
        "scipy.linalg._decomp_lu",
        "scipy.linalg._decomp_schur",
        "scipy.linalg._decomp_qr",
        "numpy.linalg",
        "scipy.linalg._special_matrices",
        "scipy.linalg._decomp",
        "scipy.linalg.lapack",
        "numpy",
        "scipy.linalg._basic",
        "scipy.linalg._decomp_qz"
    ],
    "scipy.linalg._procrustes": [
        "numpy",
        "scipy.linalg._decomp_svd"
    ],
    "scipy.linalg._sketches": [
        "numpy",
        "scipy._lib._util",
        "scipy.sparse"
    ],
    "scipy.linalg._decomp_cossin": [
        "numpy",
        "scipy._lib._util",
        "scipy.linalg",
        "scipy.linalg.lapack"
    ],
    "scipy.linalg.decomp": [
        "scipy.linalg._decomp"
    ],
    "scipy.linalg.decomp_cholesky": [
        "scipy.linalg._decomp_cholesky"
    ],
    "scipy.linalg.decomp_lu": [
        "scipy.linalg._decomp_lu"
    ],
    "scipy.linalg.decomp_qr": [
        "scipy.linalg._decomp_qr"
    ],
    "scipy.linalg.decomp_svd": [
        "scipy.linalg._decomp_svd"
    ],
    "scipy.linalg.decomp_schur": [
        "scipy.linalg._decomp_schur"
    ],
    "scipy.linalg.basic": [
        "scipy.linalg._basic"
    ],
    "scipy.linalg.misc": [
        "scipy.linalg._misc"
    ],
    "scipy.linalg.special_matrices": [
        "scipy.linalg._special_matrices"
    ],
    "scipy.linalg.flinalg": [
        "scipy.linalg._flinalg_py"
    ],
    "scipy.linalg.matfuncs": [
        "scipy.linalg._matfuncs"
    ],
    "<builtin>.dir": [],
    "scipy._lib._testutils": [
        "numpy",
        "scipy._lib._testutils._TestPythranFunc",
        "scipy._lib._testutils.PytestTester",
        "scipy._lib._testutils.FPUModeChangeWarning"
    ],
    "scipy._lib._testutils.FPUModeChangeWarning": [],
    "scipy._lib._testutils.PytestTester": [],
    "scipy._lib._testutils._TestPythranFunc": [],
    "scipy._lib._testutils.PytestTester.__init__": [],
    "scipy.sparse.linalg._isolve._gcrotmk": [
        "numpy",
        "scipy.linalg",
        "scipy.sparse.linalg._isolve.utils",
        "numpy.linalg"
    ],
    "scipy.sparse.linalg._isolve.lsqr": [
        "numpy",
        "numpy.core.finfo",
        "scipy.sparse.linalg._interface"
    ],
    "scipy.sparse.linalg._isolve.lsmr": [
        "numpy",
        "scipy.sparse.linalg._interface",
        "numpy.linalg",
        "scipy.sparse.linalg._isolve.lsqr"
    ],
    "scipy.sparse.linalg._isolve.tfqmr": [
        "numpy",
        "scipy.sparse.linalg._isolve.utils"
    ],
    "scipy.sparse.linalg._dsolve": [
        "scipy.sparse.linalg._dsolve.linsolve",
        "scipy.sparse.linalg._dsolve._add_newdocs",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy._lib._testutils"
    ],
    "scipy.sparse.linalg._dsolve.linsolve": [
        "scipy.linalg",
        "scipy.sparse",
        "scipy.sparse.linalg._dsolve.linsolve.MatrixRankWarning",
        "<builtin>.dict",
        "scipy.sparse._sputils",
        "numpy"
    ],
    "scipy.sparse.linalg._dsolve.linsolve.MatrixRankWarning": [],
    "scipy.sparse.linalg._dsolve._add_newdocs": [
        "numpy.lib",
        "numpy.core.function_base.add_newdoc"
    ],
    "scipy.sparse.linalg._eigen": [
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.sparse.linalg._eigen.arpack",
        "scipy._lib._testutils",
        "scipy.sparse.linalg._eigen._svds",
        "scipy.sparse.linalg._eigen.lobpcg"
    ],
    "scipy.sparse.linalg._eigen.arpack": [
        "scipy.sparse.linalg._eigen.arpack.arpack"
    ],
    "scipy.sparse.linalg._eigen.arpack.arpack": [
        "scipy.sparse.linalg._eigen.arpack.arpack.IterOpInv",
        "scipy.sparse.linalg._eigen.arpack.arpack.ArpackError",
        "numpy",
        "scipy.sparse.linalg._eigen.arpack.arpack.SpLuInv",
        "scipy.sparse.linalg._eigen.arpack.arpack.IterInv",
        "scipy.linalg",
        "scipy.sparse.linalg._eigen.arpack.arpack.LuInv",
        "scipy._lib._threadsafety.ReentrancyLock.__init__",
        "scipy.sparse.linalg._interface",
        "scipy.sparse",
        "scipy.sparse.linalg._eigen.arpack.arpack._UnsymmetricArpackParams",
        "scipy.sparse.linalg._eigen.arpack.arpack._SymmetricArpackParams",
        "scipy.sparse.linalg",
        "<map>.copy",
        "scipy.sparse.linalg._eigen.arpack.arpack._ArpackParams",
        "scipy.sparse._sputils",
        "scipy._lib._threadsafety",
        "scipy.sparse.linalg._eigen.arpack.arpack.ArpackNoConvergence",
        "scipy._lib._util"
    ],
    "<map>.copy": [],
    "scipy.sparse.linalg._eigen.arpack.arpack.ArpackError": [],
    "scipy.sparse.linalg._eigen.arpack.arpack.ArpackNoConvergence": [],
    "scipy.sparse.linalg._eigen.arpack.arpack._ArpackParams": [],
    "scipy.sparse.linalg._eigen.arpack.arpack._SymmetricArpackParams": [],
    "scipy.sparse.linalg._eigen.arpack.arpack._UnsymmetricArpackParams": [],
    "scipy.sparse.linalg._eigen.arpack.arpack.SpLuInv": [],
    "scipy.sparse.linalg._eigen.arpack.arpack.LuInv": [],
    "scipy.sparse.linalg._eigen.arpack.arpack.IterInv": [],
    "scipy.sparse.linalg._eigen.arpack.arpack.IterOpInv": [
        "<builtin>.property"
    ],
    "scipy.sparse.linalg._eigen.lobpcg": [
        "scipy._lib._testutils.PytestTester.__init__",
        "<builtin>.dir",
        "scipy.sparse.linalg._eigen.lobpcg.lobpcg",
        "scipy._lib._testutils"
    ],
    "scipy.sparse.linalg._eigen.lobpcg.lobpcg": [
        "numpy",
        "scipy.linalg",
        "scipy.sparse.linalg",
        "scipy.sparse"
    ],
    "scipy.sparse.linalg._eigen._svds": [
        "scipy.linalg",
        "scipy.sparse.linalg._eigen.lobpcg.lobpcg",
        "scipy.sparse.linalg._interface",
        "scipy._lib._util",
        "scipy.sparse.linalg._svdp",
        "numpy"
    ],
    "scipy.sparse.linalg._svdp": [
        "scipy.linalg",
        "scipy.sparse.linalg",
        "scipy.sparse.linalg._svdp._AProd",
        "scipy._lib._util",
        "numpy"
    ],
    "scipy.sparse.linalg._svdp._AProd": [
        "<builtin>.property"
    ],
    "scipy.sparse.linalg._matfuncs": [
        "scipy.sparse.linalg",
        "scipy.sparse.linalg._expm_multiply",
        "scipy.sparse.linalg._matfuncs.ProductOperator",
        "scipy.sparse.linalg._matfuncs.MatrixPowerOperator",
        "scipy.sparse.linalg._interface",
        "scipy.sparse",
        "scipy.sparse._sputils",
        "numpy",
        "scipy.sparse._base",
        "scipy.linalg._basic",
        "scipy.sparse.linalg._matfuncs._ExpmPadeHelper"
    ],
    "scipy.sparse.linalg._expm_multiply": [
        "scipy.linalg",
        "scipy.sparse.linalg",
        "scipy.linalg._decomp_qr",
        "scipy.sparse.linalg._interface",
        "scipy.sparse._sputils",
        "numpy",
        "scipy.sparse.linalg._expm_multiply.LazyOperatorNormInfo",
        "scipy.sparse.linalg._onenormest"
    ],
    "scipy.sparse.linalg._onenormest": [
        "numpy",
        "scipy.sparse.linalg",
        "scipy.sparse.linalg._onenormest._blocked_elementwise"
    ],
    "scipy.sparse.linalg._onenormest._blocked_elementwise": [],
    "scipy.sparse.linalg._expm_multiply.LazyOperatorNormInfo": [],
    "scipy.sparse.linalg._matfuncs.MatrixPowerOperator": [
        "<builtin>.property"
    ],
    "scipy.sparse.linalg._matfuncs.ProductOperator": [
        "<builtin>.property"
    ],
    "scipy.sparse.linalg._matfuncs._ExpmPadeHelper": [
        "<builtin>.property"
    ],
    "scipy.sparse.linalg._norm": [
        "numpy",
        "scipy.sparse"
    ],
    "scipy.sparse.linalg.isolve": [
        "scipy.sparse.linalg._isolve"
    ],
    "scipy.sparse.linalg.dsolve": [
        "scipy.sparse.linalg._dsolve"
    ],
    "scipy.sparse.linalg.interface": [
        "scipy.sparse.linalg._interface"
    ],
    "scipy.sparse.linalg.eigen": [
        "scipy.sparse.linalg._eigen"
    ],
    "scipy.sparse.linalg.matfuncs": [
        "scipy.sparse.linalg._matfuncs"
    ],
    "scipy.sparse.base": [
        "scipy.sparse._base"
    ],
    "scipy.sparse.bsr": [
        "scipy.sparse._bsr"
    ],
    "scipy.sparse.compressed": [
        "scipy.sparse._compressed"
    ],
    "scipy.sparse.construct": [
        "scipy.sparse._construct"
    ],
    "scipy.sparse.coo": [
        "scipy.sparse._coo"
    ],
    "scipy.sparse.csc": [
        "scipy.sparse._csc"
    ],
    "scipy.sparse.csr": [
        "scipy.sparse._csr"
    ],
    "scipy.sparse.data": [
        "scipy.sparse._data"
    ],
    "scipy.sparse.dia": [
        "scipy.sparse._dia"
    ],
    "scipy.sparse.dok": [
        "scipy.sparse._dok"
    ],
    "scipy.sparse.extract": [
        "scipy.sparse._extract"
    ],
    "scipy.sparse.lil": [
        "scipy.sparse._lil"
    ],
    "scipy.sparse.sparsetools": [],
    "scipy.sparse.sputils": [
        "scipy.sparse._sputils"
    ],
    "pandas.core.arrays.sparse.array.SparseArray": [
        "typing.overload",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.classmethod",
        "<builtin>.frozenset",
        "<builtin>.property"
    ],
    "pandas.core.arrays.sparse.accessor.BaseAccessor": [],
    "pandas.core.arrays.sparse.accessor.SparseAccessor": [
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.sparse.accessor.SparseFrameAccessor": [
        "<builtin>.staticmethod",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.indexes.accessors": [
        "pandas.core.dtypes.generic",
        "pandas.core.accessor",
        "pandas",
        "pandas.util._exceptions",
        "pandas.core.indexes.datetimes",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.core.indexes.accessors.TimedeltaProperties",
        "pandas.core.indexes.timedeltas",
        "pandas.core.base",
        "pandas.core.indexes.accessors.PeriodProperties",
        "pandas.core.dtypes.dtypes",
        "pandas.core.indexes.accessors.ArrowTemporalProperties",
        "pandas.core.arrays.arrow.array",
        "numpy",
        "pandas.core.indexes.accessors.DatetimeProperties",
        "pandas.core.indexes.accessors.CombinedDatetimelikeProperties",
        "pandas.core.indexes.accessors.Properties"
    ],
    "pandas.core.indexes.accessors.Properties": [],
    "pandas.core.indexes.accessors.ArrowTemporalProperties": [
        "<builtin>.property"
    ],
    "pandas.core.indexes.accessors.DatetimeProperties": [
        "<builtin>.property"
    ],
    "pandas.core.indexes.accessors.TimedeltaProperties": [
        "<builtin>.property"
    ],
    "pandas.core.indexes.accessors.PeriodProperties": [],
    "pandas.core.indexes.accessors.CombinedDatetimelikeProperties": [],
    "pandas.core.indexes.multi": [
        "pandas.core.indexes.frozen",
        "pandas.core.indexes.multi.MultiIndexUIntEngine",
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas.core.sorting",
        "numpy",
        "pandas.core.dtypes.inference",
        "pandas.core.construction",
        "pandas.core.dtypes.generic",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.dtypes.dtypes",
        "pandas.core.ops.invalid",
        "pandas.core.array_algos.putmask",
        "pandas.core.indexes.multi.MultiIndex",
        "<builtin>.dict",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.indexes.multi.MultiIndexPyIntEngine",
        "pandas.core.indexes.base",
        "pandas.core.dtypes.cast",
        "pandas",
        "pandas.io.formats.printing",
        "pandas.compat.numpy.function",
        "pandas._config",
        "pandas.core.algorithms",
        "pandas.core.arrays.categorical"
    ],
    "pandas.core.indexes.frozen": [
        "pandas._typing",
        "pandas.core.base",
        "pandas.io.formats.printing",
        "pandas.core.indexes.frozen.FrozenList"
    ],
    "pandas.core.indexes.frozen.FrozenList": [],
    "pandas.core.indexes.multi.MultiIndexUIntEngine": [],
    "pandas.core.indexes.multi.MultiIndexPyIntEngine": [],
    "pandas.core.indexes.multi.MultiIndex": [
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.classmethod",
        "pandas._libs.properties.cache_readonly",
        "<builtin>.frozenset",
        "pandas.core.indexes.multi.names_compat",
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.property",
        "pandas.core.ops.invalid.make_invalid_op"
    ],
    "pandas.core.indexes.multi.names_compat": [
        "functools.wraps",
        "typing.cast"
    ],
    "pandas.core.methods.selectn": [
        "pandas.core.methods.selectn.SelectNSeries",
        "pandas",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.dtypes.dtypes",
        "numpy",
        "pandas.core.methods.selectn.SelectNFrame",
        "pandas.core.methods.selectn.SelectN"
    ],
    "pandas.core.methods.selectn.SelectN": [
        "<builtin>.staticmethod",
        "typing.final"
    ],
    "pandas.core.methods.selectn.SelectNSeries": [],
    "pandas.core.methods.selectn.SelectNFrame": [],
    "pandas.core.strings.accessor": [
        "pandas.core.dtypes.generic",
        "pandas",
        "pandas.core.strings.accessor.StringMethods",
        "pandas.util._exceptions",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.core.base",
        "pandas.core.dtypes.dtypes",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.construction"
    ],
    "pandas.core.strings.accessor.StringMethods": [
        "pandas.core.strings.accessor.forbid_nonstring_types._forbid_nonstring_types",
        "<builtin>.staticmethod",
        "pandas.core.strings.accessor._map_and_wrap",
        "pandas.core.strings.accessor.forbid_nonstring_types",
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.strings.accessor.forbid_nonstring_types": [
        "<builtin>.set"
    ],
    "pandas.core.strings.accessor.forbid_nonstring_types._forbid_nonstring_types": [
        "functools.wraps",
        "typing.cast"
    ],
    "pandas.core.strings.accessor._map_and_wrap": [
        "pandas.core.strings.accessor.forbid_nonstring_types",
        "pandas.core.strings.accessor.forbid_nonstring_types._forbid_nonstring_types"
    ],
    "pandas.core.tools.datetimes": [
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.core.tools.datetimes.FulldatetimeDict",
        "pandas._libs.tslibs",
        "pandas.arrays",
        "pandas.core.arrays.base",
        "numpy",
        "pandas.core.construction",
        "typing.overload",
        "pandas.core.dtypes.generic",
        "pandas._typing",
        "pandas.core.dtypes.dtypes",
        "pandas",
        "pandas.core.indexes.datetimes",
        "pandas.core.tools.datetimes.YearMonthDayDict",
        "pandas.core.algorithms",
        "pandas.core.arrays.datetimes",
        "pandas.core.indexes.base"
    ],
    "pandas.arrays": [
        "pandas.core.arrays"
    ],
    "pandas.core.tools.datetimes.YearMonthDayDict": [],
    "pandas.core.tools.datetimes.FulldatetimeDict": [],
    "pandas.io.formats.info": [
        "pandas.io.formats.info._SeriesTableBuilder",
        "pandas.io.formats.info._TableBuilderVerboseMixin",
        "pandas.io.formats.info._InfoPrinterAbstract",
        "pandas.io.formats.info.SeriesInfo",
        "textwrap.dedent",
        "pandas._typing",
        "pandas.io.formats.info._SeriesTableBuilderNonVerbose",
        "pandas.io.formats.info._DataFrameTableBuilderVerbose",
        "pandas.io.formats.format",
        "pandas.io.formats.info._SeriesInfoPrinter",
        "pandas.io.formats.info._DataFrameTableBuilder",
        "pandas.io.formats.info._DataFrameTableBuilderNonVerbose",
        "pandas.io.formats.info._DataFrameInfoPrinter",
        "pandas",
        "pandas.io.formats.printing",
        "pandas.io.formats.info._SeriesTableBuilderVerbose",
        "pandas.io.formats.info.DataFrameInfo",
        "pandas._config",
        "pandas.io.formats.info._BaseInfo",
        "pandas.io.formats.info._TableBuilderAbstract"
    ],
    "pandas.io.formats.info._BaseInfo": [
        "abc.abstractmethod",
        "<builtin>.property"
    ],
    "pandas.io.formats.info.DataFrameInfo": [
        "<builtin>.property"
    ],
    "pandas.io.formats.info.SeriesInfo": [
        "<builtin>.property"
    ],
    "pandas.io.formats.info._InfoPrinterAbstract": [
        "abc.abstractmethod"
    ],
    "pandas.io.formats.info._DataFrameInfoPrinter": [
        "<builtin>.property"
    ],
    "pandas.io.formats.info._SeriesInfoPrinter": [],
    "pandas.io.formats.info._TableBuilderAbstract": [
        "abc.abstractmethod",
        "<builtin>.property"
    ],
    "pandas.io.formats.info._DataFrameTableBuilder": [
        "abc.abstractmethod",
        "<builtin>.property"
    ],
    "pandas.io.formats.info._DataFrameTableBuilderNonVerbose": [],
    "pandas.io.formats.info._TableBuilderVerboseMixin": [
        "abc.abstractmethod",
        "<builtin>.property"
    ],
    "pandas.io.formats.info._DataFrameTableBuilderVerbose": [
        "<builtin>.property"
    ],
    "pandas.io.formats.info._SeriesTableBuilder": [
        "abc.abstractmethod",
        "<builtin>.property"
    ],
    "pandas.io.formats.info._SeriesTableBuilderNonVerbose": [],
    "pandas.io.formats.info._SeriesTableBuilderVerbose": [
        "<builtin>.property"
    ],
    "pandas.plotting": [
        "pandas.plotting._misc",
        "pandas.plotting._core"
    ],
    "pandas.plotting._core": [
        "pandas.core.dtypes.generic",
        "pandas",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.util._decorators.Substitution.__init__",
        "pandas._config",
        "pandas.core.groupby.generic",
        "pandas.core.base",
        "pandas.plotting._core.PlotAccessor",
        "pandas.util._decorators.Appender.__init__",
        "numpy"
    ],
    "pandas.plotting._core.PlotAccessor": [
        "pandas.util._decorators.Substitution.__init__",
        "<builtin>.staticmethod",
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.plotting._misc": [
        "pandas",
        "pandas.plotting._misc._Options",
        "pandas.plotting._core",
        "numpy",
        "pandas.plotting._misc._Options.__init__"
    ],
    "pandas.plotting._misc._Options": [
        "contextlib.contextmanager"
    ],
    "pandas.plotting._misc._Options.__init__": [
        "<builtin>.super"
    ],
    "pandas.core.series.Series": [
        "typing.overload",
        "pandas.util._decorators.doc.decorator",
        "textwrap.dedent",
        "pandas.util._decorators.doc",
        "pandas.core.generic.make_doc",
        "pandas.util._decorators.Substitution.__init__",
        "pandas.core.ops.docstrings.make_flex_doc",
        "<builtin>.frozenset",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.util._decorators.Appender.__init__",
        "pandas.core.accessor.CachedAccessor.__init__",
        "<builtin>.property",
        "<builtin>.len",
        "pandas.core.series._coerce_method"
    ],
    "pandas.core.series._coerce_method": [],
    "pandas.core.accessor.CachedAccessor.__init__": [],
    "pandas.core.ops.docstrings.make_flex_doc": [
        "<builtin>.AssertionError",
        "<str>.startswith"
    ],
    "<str>.startswith": [],
    "pandas.core.generic.make_doc": [],
    "pandas.core.groupby.groupby.GroupByPlot": [],
    "pandas.core.groupby.groupby.BaseGroupBy": [
        "textwrap.dedent",
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.Substitution.__init__",
        "typing.final",
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.property"
    ],
    "pandas.core.groupby.groupby.GroupBy": [
        "pandas.util._decorators.doc.decorator",
        "textwrap.dedent",
        "pandas.util._decorators.doc",
        "pandas.util._decorators.Substitution.__init__",
        "typing.final",
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.property"
    ],
    "pandas.core.indexes.period": [
        "pandas.core.dtypes.generic",
        "pandas.core.indexes.datetimelike",
        "pandas.util._exceptions",
        "pandas.util._decorators",
        "pandas.core.indexes.datetimes",
        "pandas.core.dtypes.common",
        "pandas._typing",
        "pandas.core.indexes.extension",
        "pandas._libs.tslibs",
        "<builtin>.dict",
        "pandas.core.arrays.period",
        "pandas.core.dtypes.dtypes",
        "pandas.core.indexes.period.PeriodIndex",
        "pandas.core.indexes.base",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.common"
    ],
    "pandas.core.arrays.period": [
        "pandas.core.arrays.period.PeriodArray",
        "typing.overload",
        "pandas.core.dtypes.generic",
        "pandas.util._exceptions",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.core.arrays.datetimelike",
        "pandas._libs.tslibs",
        "pandas.core.dtypes.dtypes",
        "pandas.core.arrays.base",
        "typing.TypeVar",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.common"
    ],
    "pandas.core.arrays.period.PeriodArray": [
        "pandas.util._decorators.doc.decorator",
        "pandas.core.arrays.period._field_accessor",
        "pandas.util._decorators.doc",
        "<builtin>.classmethod",
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.core.arrays.period._field_accessor": [
        "<builtin>.property"
    ],
    "pandas.core.indexes.period.PeriodIndex": [
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.classmethod",
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.core.resample.Resampler": [
        "pandas.util._decorators.doc.decorator",
        "textwrap.dedent",
        "pandas.util._decorators.doc",
        "pandas.util._decorators.Substitution.__init__",
        "typing.final",
        "<builtin>.frozenset",
        "<builtin>.set",
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.property"
    ],
    "pandas.core.resample._GroupByMixin": [
        "typing.no_type_check",
        "typing.final"
    ],
    "typing.no_type_check": [],
    "pandas.core.resample.DatetimeIndexResampler": [
        "<builtin>.property"
    ],
    "pandas.core.resample.DatetimeIndexResamplerGroupby": [
        "<builtin>.property"
    ],
    "pandas.core.resample.PeriodIndexResampler": [
        "<builtin>.property"
    ],
    "pandas.core.resample.PeriodIndexResamplerGroupby": [
        "<builtin>.property"
    ],
    "pandas.core.resample.TimedeltaIndexResampler": [
        "<builtin>.property"
    ],
    "pandas.core.resample.TimedeltaIndexResamplerGroupby": [
        "<builtin>.property"
    ],
    "pandas.core.resample.TimeGrouper": [],
    "pandas.core.generic.NDFrame": [
        "typing.overload",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.classmethod",
        "typing.final",
        "<builtin>.frozenset",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "<builtin>.set",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "<builtin>.property"
    ],
    "pandas.core.flags.Flags": [
        "<builtin>.property"
    ],
    "pandas.core.indexes.interval": [
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.errors",
        "pandas._libs.tslibs",
        "pandas.core.indexes.timedeltas",
        "numpy",
        "pandas.core.indexes.interval.IntervalIndex",
        "pandas.core.indexers",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.indexes.extension",
        "pandas.core.dtypes.dtypes",
        "pandas.core.arrays.datetimelike",
        "<builtin>.dict",
        "pandas.core.arrays.interval",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.dtypes.cast",
        "pandas.core.indexes.datetimes",
        "pandas.core.indexes.multi",
        "pandas.core.algorithms",
        "pandas.core.indexes.base"
    ],
    "pandas.core.arrays.interval": [
        "pandas.core.ops",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas.core.arrays.base",
        "numpy",
        "pandas.core.construction",
        "pandas.core.dtypes.generic",
        "pandas.core.indexers",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.dtypes.cast",
        "pandas",
        "pandas.core.arrays.interval.IntervalArray",
        "pandas.compat.numpy.function",
        "pandas.core.algorithms",
        "pandas.core.arrays.datetimes",
        "pandas.core.arrays.timedeltas"
    ],
    "pandas.core.arrays.interval.IntervalArray": [
        "typing.overload",
        "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper",
        "<builtin>.classmethod",
        "pandas.core.ops.common.unpack_zerodim_and_defer",
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.property"
    ],
    "pandas.core.indexes.interval.IntervalIndex": [
        "<builtin>.property",
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.classmethod"
    ],
    "pandas.core.tools.numeric": [
        "pandas.core.dtypes.cast",
        "pandas.core.dtypes.generic",
        "pandas.util._validators",
        "pandas.util._exceptions",
        "pandas.core.arrays.string_",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas._typing",
        "pandas.core.dtypes.dtypes",
        "numpy"
    ],
    "pandas.core.indexes.datetimes.DatetimeIndex": [
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.property"
    ],
    "pandas.core.groupby.grouper.Grouper": [
        "typing.final",
        "<builtin>.property"
    ],
    "pandas.core.groupby.grouper.Grouping": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.core.groupby.ops.WrappedCythonOp": [
        "typing.final",
        "<builtin>.frozenset",
        "<builtin>.classmethod"
    ],
    "pandas.core.groupby.ops.BaseGrouper": [
        "pandas._libs.properties.cache_readonly",
        "typing.final",
        "<builtin>.property"
    ],
    "pandas.core.groupby.ops.BinGrouper": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.core.groupby.ops.DataSplitter": [
        "pandas._libs.properties.cache_readonly"
    ],
    "pandas.core.groupby.ops.SeriesSplitter": [],
    "pandas.core.groupby.ops.FrameSplitter": [],
    "pandas.core.groupby.generic.NamedAgg": [],
    "pandas.core.groupby.generic.SeriesGroupBy": [
        "pandas.util._decorators.doc.decorator",
        "textwrap.dedent",
        "pandas.util._decorators.doc",
        "pandas.util._decorators.Substitution.__init__",
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.property"
    ],
    "pandas.core.groupby.generic.DataFrameGroupBy": [
        "pandas.util._decorators.doc.decorator",
        "textwrap.dedent",
        "pandas.util._decorators.doc",
        "pandas.util._decorators.Substitution.__init__",
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.property"
    ],
    "pandas.core.apply.Apply": [],
    "pandas.core.apply.NDFrameApply": [
        "<builtin>.property"
    ],
    "pandas.core.apply.FrameApply": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "pandas.core.apply.FrameRowApply": [
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "pandas.core.apply.FrameColumnApply": [
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "pandas.core.apply.SeriesApply": [],
    "pandas.core.apply.GroupByApply": [],
    "pandas.core.apply.ResamplerWindowApply": [],
    "pandas.core.reshape.melt": [
        "pandas.core.tools.numeric",
        "pandas.core.indexes.api",
        "pandas",
        "pandas.core.dtypes.concat",
        "pandas.util._decorators",
        "pandas.core.reshape.util",
        "pandas.core.dtypes.common",
        "pandas._typing",
        "pandas.core.shared_docs",
        "pandas.core.algorithms",
        "pandas.util._decorators.Appender.__init__",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.reshape.concat"
    ],
    "pandas.core.reshape.util": [
        "numpy",
        "pandas._typing",
        "pandas.core.dtypes.common"
    ],
    "pandas.core.interchange.dataframe_protocol": [
        "pandas.core.interchange.dataframe_protocol.Buffer",
        "pandas.core.interchange.dataframe_protocol.CategoricalDescription",
        "pandas.core.interchange.dataframe_protocol.ColumnNullType",
        "pandas.core.interchange.dataframe_protocol.DtypeKind",
        "pandas.core.interchange.dataframe_protocol.Column",
        "pandas.core.interchange.dataframe_protocol.ColumnBuffers",
        "pandas.core.interchange.dataframe_protocol.DataFrame",
        "pandas.core.interchange.dataframe_protocol.DlpackDeviceType"
    ],
    "pandas.core.interchange.dataframe_protocol.DlpackDeviceType": [],
    "pandas.core.interchange.dataframe_protocol.DtypeKind": [],
    "pandas.core.interchange.dataframe_protocol.ColumnNullType": [],
    "pandas.core.interchange.dataframe_protocol.ColumnBuffers": [],
    "pandas.core.interchange.dataframe_protocol.CategoricalDescription": [],
    "pandas.core.interchange.dataframe_protocol.Buffer": [
        "abc.abstractmethod",
        "<builtin>.property"
    ],
    "pandas.core.interchange.dataframe_protocol.Column": [
        "abc.abstractmethod",
        "<builtin>.property"
    ],
    "pandas.core.interchange.dataframe_protocol.DataFrame": [
        "abc.abstractmethod",
        "<builtin>.property"
    ],
    "pandas.io.formats.style": [
        "pandas",
        "pandas.compat._optional",
        "pandas.util._exceptions",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.io.formats.style.Styler",
        "pandas._config",
        "pandas.io.formats.style_render",
        "pandas.core.shared_docs",
        "pandas.core.frame",
        "pandas.io.formats.format",
        "pandas.core.generic",
        "numpy",
        "pandas.compat._optional.import_optional_dependency",
        "pandas.core.common",
        "contextlib.contextmanager"
    ],
    "pandas.io.formats.style_render": [
        "pandas.core.dtypes.generic",
        "pandas",
        "pandas.compat._optional",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.io.formats.style_render.Tooltips",
        "pandas.io.formats.style_render.CSSDict",
        "pandas._config",
        "pandas.io.formats.style_render.StylerRenderer",
        "numpy",
        "pandas.compat._optional.import_optional_dependency",
        "pandas.api.types",
        "pandas.core.common"
    ],
    "pandas.api.types": [
        "pandas.core.dtypes.api",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.concat"
    ],
    "pandas.core.dtypes.api": [
        "pandas.core.dtypes.common"
    ],
    "pandas.io.formats.style_render.CSSDict": [],
    "pandas.io.formats.style_render.StylerRenderer": [],
    "pandas.io.formats.style_render.Tooltips": [
        "<builtin>.property"
    ],
    "pandas.io.formats.style.Styler": [
        "typing.overload",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.classmethod",
        "pandas.util._decorators.Substitution.__init__"
    ],
    "pandas.core.frame.DataFrame": [
        "typing.overload",
        "pandas.util._decorators.doc.decorator",
        "textwrap.dedent",
        "pandas.util._decorators.doc",
        "<builtin>.classmethod",
        "pandas.core.generic.make_doc",
        "pandas.util._decorators.Substitution.__init__",
        "pandas.core.ops.docstrings.make_flex_doc",
        "<builtin>.frozenset",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.util._decorators.Appender.__init__",
        "pandas.core.accessor.CachedAccessor.__init__",
        "<builtin>.property",
        "<builtin>.len"
    ],
    "pandas.core.arrays._mixins.NDArrayBackedExtensionArray": [
        "typing.overload",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.classmethod"
    ],
    "pandas.core.array_algos.take._view_wrapper": [],
    "pandas.core.arrays.base.ExtensionArray": [
        "typing.overload",
        "<builtin>.classmethod",
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.Substitution.__init__",
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.property"
    ],
    "pandas.core.arrays.base.ExtensionArraySupportsAnyAll": [],
    "pandas.core.arrays.base.ExtensionOpsMixin": [
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.base.ExtensionScalarOpsMixin": [
        "<builtin>.classmethod"
    ],
    "pandas.core.arraylike.OpsMixin": [
        "pandas.core.ops.common.unpack_zerodim_and_defer",
        "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper"
    ],
    "pandas.core.indexes.base.Index": [
        "typing.overload",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.classmethod",
        "pandas._libs.properties.cache_readonly",
        "typing.final",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.util._decorators.Appender.__init__",
        "pandas.core.accessor.CachedAccessor.__init__",
        "<builtin>.property",
        "pandas.core.indexes.base._maybe_return_indexers"
    ],
    "pandas.core.indexes.base._maybe_return_indexers": [
        "typing.cast"
    ],
    "pandas.io._util": [
        "pandas",
        "pandas.compat._optional"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray": [
        "pandas.util._decorators.doc.decorator",
        "<builtin>.property",
        "pandas.util._decorators.doc",
        "<builtin>.classmethod"
    ],
    "pandas.core.dtypes.generic.create_pandas_abc_type": [
        "<builtin>.type",
        "<builtin>.classmethod"
    ],
    "pandas.core.dtypes.base.ExtensionDtype": [
        "<builtin>.classmethod",
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.core.dtypes.base.StorageExtensionDtype": [
        "<builtin>.property"
    ],
    "pandas.core.dtypes.base.Registry": [
        "typing.overload"
    ],
    "pandas.core.dtypes.base.Registry.__init__": [],
    "pandas.util": [],
    "pandas.core.dtypes.dtypes.PandasExtensionDtype": [
        "<builtin>.classmethod"
    ],
    "pandas.core.dtypes.dtypes.CategoricalDtypeType": [],
    "pandas.core.dtypes.dtypes.CategoricalDtype": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.staticmethod",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.dtypes.dtypes.DatetimeTZDtype": [
        "<builtin>.classmethod",
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.core.dtypes.dtypes.PeriodDtype": [
        "<builtin>.classmethod",
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.core.dtypes.dtypes.IntervalDtype": [
        "<builtin>.classmethod",
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.core.dtypes.dtypes.NumpyEADtype": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "pandas.core.dtypes.dtypes.BaseMaskedDtype": [
        "<builtin>.classmethod",
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.core.dtypes.dtypes.SparseDtype": [
        "<builtin>.classmethod",
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "pandas.core.dtypes.dtypes.ArrowDtype": [
        "<builtin>.classmethod",
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.tseries.holiday": [
        "pandas.tseries.holiday.Holiday.__init__",
        "pandas.tseries.offsets",
        "pandas",
        "pandas.tseries.holiday.HolidayCalendarMetaClass",
        "pandas._libs.tslibs.offsets.Easter",
        "dateutil.relativedelta",
        "pandas.errors",
        "pandas.tseries.holiday.AbstractHolidayCalendar",
        "pandas.tseries.holiday.Holiday",
        "numpy",
        "pandas.tseries.holiday.USFederalHolidayCalendar",
        "pandas._libs.tslibs.offsets.Day",
        "datetime.datetime"
    ],
    "dateutil.relativedelta": [
        "dateutil.relativedelta.relativedelta",
        "<builtin>.tuple",
        "six",
        "<builtin>.range",
        "dateutil._common",
        "dateutil._common.weekday.__init__",
        "dateutil.tz._common._validate_fromutc_inputs"
    ],
    "six": [
        "<builtin>.setattr",
        "six._LazyDescr",
        "six._SixMetaPathImporter._add_module",
        "six._SixMetaPathImporter",
        "<builtin>.globals",
        "six.MovedModule.__init__",
        "six.X",
        "six.Module_six_moves_urllib",
        "six.Module_six_moves_urllib_request",
        "six.MovedModule",
        "six._add_doc",
        "six.Module_six_moves_urllib_robotparser",
        "<builtin>.int",
        "six._SixMetaPathImporter.__init__",
        "six.MovedAttribute.__init__",
        "six.Module_six_moves_urllib_response",
        "<builtin>.getattr",
        "six.Iterator",
        "<builtin>.len",
        "<builtin>.type",
        "six._LazyModule",
        "six.exec_",
        "<builtin>.isinstance",
        "six.Module_six_moves_urllib_error",
        "six.MovedAttribute",
        "six.Module_six_moves_urllib_parse",
        "<builtin>.enumerate",
        "six._MovedItems"
    ],
    "six.X": [],
    "six._LazyDescr": [],
    "six.MovedModule": [],
    "six._LazyModule": [],
    "six.MovedAttribute": [],
    "six._SixMetaPathImporter": [],
    "six._SixMetaPathImporter.__init__": [],
    "six._MovedItems": [],
    "six.MovedAttribute.__init__": [
        "<builtin>.super"
    ],
    "six.MovedModule.__init__": [
        "<builtin>.super"
    ],
    "six._SixMetaPathImporter._add_module": [],
    "six.Module_six_moves_urllib_parse": [],
    "six.Module_six_moves_urllib_error": [],
    "six.Module_six_moves_urllib_request": [],
    "six.Module_six_moves_urllib_response": [],
    "six.Module_six_moves_urllib_robotparser": [],
    "six.Module_six_moves_urllib": [
        "six._SixMetaPathImporter._get_module"
    ],
    "six._SixMetaPathImporter._get_module": [],
    "six.Iterator": [],
    "six._add_doc": [],
    "six.exec_": [
        "<builtin>.exec"
    ],
    "dateutil._common": [
        "dateutil._common.weekday"
    ],
    "dateutil._common.weekday": [],
    "dateutil._common.weekday.__init__": [],
    "dateutil.relativedelta.relativedelta": [
        "<builtin>.property"
    ],
    "pandas.tseries.holiday.Holiday": [],
    "pandas.tseries.holiday.HolidayCalendarMetaClass": [],
    "pandas.tseries.holiday.AbstractHolidayCalendar": [
        "<builtin>.staticmethod",
        "datetime.datetime"
    ],
    "pandas.tseries.holiday.Holiday.__init__": [
        "<builtin>.type",
        "<builtin>.NotImplementedError"
    ],
    "<builtin>.NotImplementedError": [],
    "pandas._libs.tslibs.offsets.Easter": [],
    "pandas._libs.tslibs.offsets.Day": [],
    "pandas.tseries.holiday.USFederalHolidayCalendar": [
        "pandas.tseries.holiday.Holiday.__init__"
    ],
    "pandas._typing.SequenceNotStr": [
        "typing.overload"
    ],
    "pandas._typing.BaseBuffer": [
        "<builtin>.property"
    ],
    "pandas._typing.ReadBuffer": [],
    "pandas._typing.WriteBuffer": [],
    "pandas._typing.ReadPickleBuffer": [],
    "pandas._typing.WriteExcelBuffer": [],
    "pandas._typing.ReadCsvBuffer": [
        "<builtin>.property"
    ],
    "pandas.core.config_init": [
        "pandas._config.config.config_prefix",
        "pandas._config.config.deprecate_option",
        "pandas._config.config"
    ],
    "pandas._config.config.deprecate_option": [
        "<str>.lower"
    ],
    "pandas.tseries.api": [
        "pandas.tseries.offsets",
        "pandas.tseries.frequencies"
    ],
    "pandas.core.computation.api": [
        "pandas.core.computation.eval"
    ],
    "pandas.core.computation.eval": [
        "pandas.core.computation.parsing",
        "pandas.io.formats.printing",
        "pandas.util._validators",
        "pandas.core.computation.engines",
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.core.computation.expr",
        "pandas.core.computation.ops",
        "pandas.core.computation.scope",
        "pandas.core.generic"
    ],
    "pandas.core.computation.engines": [
        "pandas.core.computation.align",
        "pandas.io.formats.printing",
        "pandas.core.computation.engines.AbstractEngine",
        "pandas.core.computation.expr",
        "pandas.errors",
        "pandas.core.computation.ops",
        "<builtin>.frozenset",
        "pandas.core.computation.engines.PythonEngine",
        "pandas.core.computation.engines.NumExprEngine"
    ],
    "pandas.core.computation.align": [
        "pandas.core.indexes.api",
        "pandas.core.dtypes.generic",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.errors",
        "pandas.core.computation.common",
        "pandas.core.base",
        "pandas.core.computation.align._filter_special_cases",
        "pandas.core.generic",
        "numpy",
        "pandas.core.common"
    ],
    "pandas.core.computation.common": [
        "numpy",
        "pandas._config"
    ],
    "pandas.core.computation.align._filter_special_cases": [
        "functools.wraps"
    ],
    "pandas.core.computation.ops": [
        "pandas.core.computation.ops.FuncNode",
        "pandas.io.formats.printing",
        "<builtin>.zip",
        "pandas.core.dtypes.common",
        "pandas.core.computation.ops.BinOp",
        "pandas.core.computation.ops.Term",
        "pandas._libs.tslibs",
        "pandas.core.computation.common",
        "<builtin>.dict",
        "<map>.update",
        "pandas.core.computation.ops.MathCall",
        "pandas.core.computation.scope",
        "numpy",
        "pandas.core.computation.ops.Constant",
        "pandas.core.computation.ops.Op",
        "pandas.core.common",
        "pandas.core.computation.ops.UnaryOp"
    ],
    "pandas.core.computation.scope": [
        "pandas.core.computation.scope.Scope",
        "pandas.errors",
        "pandas._libs.tslibs",
        "typing.TypeVar",
        "numpy",
        "pandas.core.computation.scope.DeepChainMap"
    ],
    "pandas.core.computation.scope.DeepChainMap": [],
    "pandas.core.computation.scope.Scope": [
        "<builtin>.property"
    ],
    "pandas.core.computation.ops.Term": [
        "<builtin>.property"
    ],
    "pandas.core.computation.ops.Constant": [
        "<builtin>.property"
    ],
    "pandas.core.computation.ops.Op": [
        "<builtin>.property"
    ],
    "pandas.core.computation.ops.BinOp": [],
    "pandas.core.computation.ops.UnaryOp": [
        "<builtin>.property"
    ],
    "pandas.core.computation.ops.MathCall": [],
    "pandas.core.computation.ops.FuncNode": [],
    "pandas.core.computation.expr": [
        "pandas.core.computation.expr._compose",
        "pandas.core.computation.expr._filter_nodes",
        "pandas.errors",
        "<builtin>.issubclass",
        "numpy",
        "pandas.core.computation.expr._is_type",
        "pandas.core.computation.ops",
        "<builtin>.frozenset",
        "pandas.core.computation.expr.PandasExprVisitor",
        "pandas.core.computation.expr.Expr",
        "pandas.core.computation.parsing",
        "<builtin>.getattr",
        "pandas.core.computation.scope",
        "typing.TypeVar",
        "pandas.core.common",
        "<builtin>.isinstance",
        "pandas.core.computation.expr.BaseExprVisitor",
        "pandas.io.formats.printing",
        "pandas.core.computation.expr.PythonExprVisitor",
        "<builtin>.dir"
    ],
    "pandas.core.computation.parsing": [],
    "pandas.core.computation.expr._compose": [
        "<builtin>.len",
        "functools.reduce"
    ],
    "functools.reduce": [],
    "pandas.core.computation.expr._is_type": [],
    "pandas.core.computation.expr._filter_nodes": [
        "<builtin>.issubclass",
        "<builtin>.frozenset"
    ],
    "pandas.core.computation.expr.BaseExprVisitor": [
        "<builtin>.dict",
        "<builtin>.zip"
    ],
    "pandas.core.computation.expr.PandasExprVisitor": [
        "pandas.core.computation.expr._compose",
        "functools.partial"
    ],
    "functools.partial": [],
    "pandas.core.computation.expr.PythonExprVisitor": [],
    "pandas.core.computation.expr.Expr": [
        "<builtin>.property"
    ],
    "pandas.core.computation.engines.AbstractEngine": [
        "<builtin>.property"
    ],
    "pandas.core.computation.engines.NumExprEngine": [],
    "pandas.core.computation.engines.PythonEngine": [],
    "pandas.core.reshape.api": [
        "pandas.core.reshape.encoding",
        "pandas.core.reshape.pivot",
        "pandas.core.reshape.tile",
        "pandas.core.reshape.melt",
        "pandas.core.reshape.merge",
        "pandas.core.reshape.concat"
    ],
    "pandas.core.reshape.encoding": [
        "pandas.core.indexes.api",
        "pandas.core.arrays.string_",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas._typing",
        "pandas.core.frame",
        "pandas.core.dtypes.dtypes",
        "pandas.core.series",
        "pandas.core.arrays.categorical",
        "numpy"
    ],
    "pandas.core.reshape.merge": [
        "pandas.core.reshape.merge._OrderedMerge",
        "pandas.core.indexes.frozen",
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas.core.frame",
        "pandas.core.sorting",
        "numpy",
        "pandas.core.construction",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.generic",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.util._decorators.Appender.__init__",
        "pandas.core.dtypes.dtypes",
        "pandas.core.reshape.merge._MergeOperation",
        "pandas._libs",
        "pandas.core.dtypes.base",
        "pandas.core.reshape.merge._AsOfMerge",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.core.dtypes.cast",
        "pandas",
        "pandas.core.arrays.string_",
        "pandas.util._decorators.Substitution.__init__",
        "pandas.core.groupby",
        "pandas.core.algorithms"
    ],
    "pandas.core.reshape.merge._MergeOperation": [
        "pandas._libs.properties.cache_readonly",
        "typing.final"
    ],
    "pandas.core.reshape.merge._OrderedMerge": [],
    "pandas.core.reshape.merge._AsOfMerge": [],
    "pandas.core.reshape.pivot": [
        "pandas.core.dtypes.cast",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.generic",
        "pandas",
        "pandas.util._exceptions",
        "pandas.util._decorators",
        "pandas.core.reshape.util",
        "pandas.core.dtypes.common",
        "pandas._typing",
        "pandas.core.groupby",
        "pandas.util._decorators.Substitution.__init__",
        "pandas.core.frame",
        "pandas.util._decorators.Appender.__init__",
        "pandas.core.dtypes.dtypes",
        "pandas.core.series",
        "numpy",
        "pandas.core.common",
        "pandas.core.reshape.concat"
    ],
    "pandas.core.reshape.tile": [
        "pandas.core.dtypes.generic",
        "pandas",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.arrays.datetimelike",
        "pandas.core.algorithms",
        "pandas._libs",
        "pandas.core.dtypes.dtypes",
        "numpy",
        "pandas.core.dtypes.missing"
    ],
    "pandas.api": [
        "pandas.api.interchange",
        "pandas.api.extensions",
        "pandas.api.indexers",
        "pandas.api.types",
        "pandas.api.typing"
    ],
    "pandas.api.indexers": [
        "pandas.core.indexers.objects",
        "pandas.core.indexers"
    ],
    "pandas.api.interchange": [
        "pandas.core.interchange.dataframe_protocol",
        "pandas.core.interchange.from_dataframe"
    ],
    "pandas.core.interchange.from_dataframe": [
        "pandas",
        "pandas.compat._optional",
        "pandas.errors",
        "pandas.core.interchange.utils",
        "pandas.core.interchange.dataframe_protocol",
        "numpy"
    ],
    "pandas.core.interchange.utils": [
        "pandas",
        "pandas._typing",
        "pandas.core.interchange.utils.ArrowCTypes",
        "pandas.core.dtypes.dtypes",
        "numpy",
        "pandas.core.interchange.utils.Endianness"
    ],
    "pandas.core.interchange.utils.ArrowCTypes": [],
    "pandas.core.interchange.utils.Endianness": [],
    "pandas.api.typing": [
        "pandas.core.window",
        "pandas.io.stata",
        "pandas.io.json._json",
        "pandas.core.groupby",
        "pandas.core.resample",
        "pandas._libs"
    ],
    "pandas.io.json._json": [
        "pandas.compat._optional",
        "pandas.util._exceptions",
        "pandas.io.json._json.SeriesWriter",
        "pandas.util._decorators.doc",
        "pandas.core.dtypes.common",
        "pandas.errors",
        "pandas._libs.tslibs",
        "pandas.io.json._json.Writer",
        "numpy",
        "pandas.core.reshape.concat",
        "pandas.io.json._json.FrameParser",
        "typing.overload",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.dtypes.dtypes",
        "pandas.core.generic",
        "pandas.io.json._json.SeriesParser",
        "pandas.io.json._json.JsonReader",
        "pandas.io.common",
        "pandas.util._validators",
        "pandas.io.json._json.Parser",
        "typing.TypeVar",
        "pandas.io.json._json.FrameWriter",
        "pandas",
        "pandas.io.json._normalize",
        "pandas.io.json._json.JSONTableWriter",
        "pandas.io.json._table_schema",
        "pandas.core.shared_docs",
        "pandas.io.parsers.readers"
    ],
    "pandas.io.json._normalize": [
        "numpy",
        "pandas._typing",
        "pandas"
    ],
    "pandas.io.json._table_schema": [
        "pandas",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.tseries.frequencies",
        "pandas.core.indexes.multi",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.base",
        "pandas.core.common"
    ],
    "pandas.io.parsers.readers": [
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.errors",
        "pandas.io.parsers.base_parser",
        "pandas.core.frame",
        "pandas.io.parsers.python_parser",
        "pandas.io.parsers.arrow_parser_wrapper",
        "textwrap.fill",
        "numpy",
        "<builtin>.sorted",
        "typing.overload",
        "pandas.core.indexes.api",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.io.parsers.readers._DeprecationConfig",
        "pandas.util._decorators.Appender.__init__",
        "pandas.io.common",
        "pandas.util._validators",
        "pandas.io.parsers.readers._Fwf_Defaults",
        "pandas",
        "pandas.io.parsers.readers._C_Parser_Defaults",
        "pandas.io.parsers.c_parser_wrapper",
        "pandas._config",
        "pandas.core.shared_docs",
        "pandas.io.parsers.readers.TextFileReader"
    ],
    "pandas.io.parsers.arrow_parser_wrapper": [
        "pandas",
        "pandas.compat._optional",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.errors",
        "pandas._config",
        "pandas.io.parsers.base_parser",
        "pandas.io.parsers.arrow_parser_wrapper.ArrowParserWrapper",
        "pandas.io._util",
        "pandas.core.dtypes.inference"
    ],
    "pandas.io.parsers.base_parser": [
        "pandas.core.indexes.api",
        "pandas",
        "pandas.io.common",
        "pandas.core.dtypes.astype",
        "pandas.compat._optional",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas.core.algorithms",
        "pandas.io.parsers.base_parser.ParserBase",
        "pandas.core.dtypes.dtypes",
        "pandas.core.series",
        "pandas.core.arrays.boolean",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.core.tools.datetimes"
    ],
    "pandas.io.parsers.base_parser.ParserBase": [
        "pandas.io.parsers.base_parser.ParserBase.BadLineHandleMethod",
        "typing.overload",
        "typing.final",
        "<builtin>.property"
    ],
    "pandas.io.parsers.base_parser.ParserBase.BadLineHandleMethod": [],
    "pandas.io.parsers.arrow_parser_wrapper.ArrowParserWrapper": [],
    "pandas.io.parsers.c_parser_wrapper": [
        "pandas.core.indexes.api",
        "pandas.io.common",
        "pandas",
        "pandas.compat._optional",
        "pandas.util._exceptions",
        "pandas.core.dtypes.concat",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.errors",
        "pandas.io.parsers.base_parser",
        "pandas.core.dtypes.dtypes",
        "numpy",
        "pandas.io.parsers.c_parser_wrapper.CParserWrapper"
    ],
    "pandas.io.parsers.c_parser_wrapper.CParserWrapper": [],
    "pandas.io.parsers.python_parser": [
        "pandas.io.parsers.python_parser.PythonParser",
        "pandas.io.common",
        "pandas",
        "pandas.io.parsers.python_parser.FixedWidthFieldParser",
        "pandas.util._exceptions",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.dtypes.common",
        "pandas.errors",
        "pandas.io.parsers.base_parser",
        "pandas.io.parsers.python_parser.FixedWidthReader",
        "numpy",
        "pandas.core.dtypes.inference"
    ],
    "pandas.io.parsers.python_parser.PythonParser": [
        "pandas._libs.properties.cache_readonly"
    ],
    "pandas.io.parsers.python_parser.FixedWidthReader": [],
    "pandas.io.parsers.python_parser.FixedWidthFieldParser": [],
    "textwrap.fill": [],
    "pandas.io.parsers.readers._C_Parser_Defaults": [],
    "pandas.io.parsers.readers._Fwf_Defaults": [],
    "pandas.io.parsers.readers._DeprecationConfig": [],
    "pandas.io.parsers.readers.TextFileReader": [],
    "pandas.io.json._json.Writer": [
        "abc.abstractmethod",
        "<builtin>.property"
    ],
    "pandas.io.json._json.SeriesWriter": [
        "<builtin>.property"
    ],
    "pandas.io.json._json.FrameWriter": [
        "<builtin>.property"
    ],
    "pandas.io.json._json.JSONTableWriter": [
        "<builtin>.property"
    ],
    "pandas.io.json._json.JsonReader": [
        "typing.overload"
    ],
    "pandas.io.json._json.Parser": [
        "typing.final"
    ],
    "pandas.io.json._json.SeriesParser": [],
    "pandas.io.json._json.FrameParser": [],
    "pandas.io.stata": [
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.errors",
        "pandas.core.frame",
        "numpy",
        "pandas.io.stata.StataStrLWriter",
        "pandas.io.stata.StataReader",
        "pandas.io.stata.StataParser",
        "pandas.core.indexes.range",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.util._decorators.Appender.__init__",
        "pandas.core.dtypes.dtypes",
        "pandas.core.series",
        "pandas.io.stata.StataWriterUTF8",
        "pandas.io.stata.StataValueLabel",
        "pandas.io.stata.StataMissingValue",
        "pandas.io.common",
        "pandas.io.stata.StataNonCatValueLabel",
        "pandas.io.stata.StataWriter",
        "pandas.core.dtypes.base",
        "pandas",
        "pandas.core.shared_docs",
        "pandas.core.indexes.base",
        "pandas.io.stata.StataWriter117",
        "datetime.datetime"
    ],
    "pandas.io.stata.StataValueLabel": [],
    "pandas.io.stata.StataNonCatValueLabel": [],
    "pandas.io.stata.StataMissingValue": [
        "<builtin>.classmethod",
        "<builtin>.property",
        "<builtin>.range",
        "<builtin>.chr"
    ],
    "pandas.io.stata.StataParser": [],
    "pandas.io.stata.StataReader": [
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.property"
    ],
    "pandas.io.stata.StataWriter": [
        "<builtin>.staticmethod"
    ],
    "pandas.io.stata.StataStrLWriter": [],
    "pandas.io.stata.StataWriter117": [
        "<builtin>.staticmethod"
    ],
    "pandas.io.stata.StataWriterUTF8": [],
    "pandas.io": [
        "pandas.io.formats",
        "pandas.io.json",
        "pandas.io.stata"
    ],
    "pandas.io.formats": [
        "pandas.io.formats.style"
    ],
    "pandas.io.json": [
        "pandas.io.json._json",
        "pandas.io.json._table_schema"
    ],
    "pandas.tseries": [
        "pandas.tseries.offsets",
        "pandas.tseries.frequencies"
    ],
    "pandas.testing": [
        "pandas._testing"
    ],
    "pandas._testing": [
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas._testing._warnings",
        "numpy",
        "pandas.core.arrays._mixins",
        "pandas.core.construction",
        "pandas._testing.SubclassedSeries",
        "pandas._typing",
        "<map>.items",
        "pandas._config.localization",
        "pandas._testing.SubclassedDataFrame",
        "<builtin>.float",
        "pandas.core.dtypes.dtypes.ArrowDtype.__init__",
        "decimal.Decimal",
        "pandas._testing.contexts",
        "<builtin>.str",
        "pandas",
        "pandas._testing.asserters",
        "pandas._testing._io",
        "pandas.compat",
        "pandas._testing.compat"
    ],
    "pandas._config.localization": [
        "pandas._config.config",
        "contextlib.contextmanager"
    ],
    "pandas._testing._io": [
        "pandas",
        "pandas.compat._optional",
        "pandas._typing",
        "pandas._testing.contexts",
        "pandas.compat"
    ],
    "pandas._testing.contexts": [
        "pandas.io.common",
        "pandas",
        "pandas._typing",
        "pandas.errors",
        "pandas._config",
        "pandas.compat",
        "contextlib.contextmanager"
    ],
    "pandas._testing._warnings": [
        "pandas.compat",
        "contextlib.contextmanager"
    ],
    "pandas._testing.asserters": [
        "pandas.core.indexes.api",
        "pandas",
        "pandas.io.formats.printing",
        "pandas.core.arrays.string_",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas._typing",
        "pandas.core.arrays.datetimelike",
        "pandas.core.dtypes.dtypes",
        "numpy",
        "pandas.core.dtypes.missing"
    ],
    "pandas._testing.compat": [
        "pandas._typing",
        "pandas"
    ],
    "<builtin>.float": [],
    "decimal.Decimal": [],
    "pandas.core.dtypes.dtypes.ArrowDtype.__init__": [
        "<builtin>.isinstance",
        "<builtin>.ValueError",
        "<builtin>.type",
        "<builtin>.ImportError",
        "<builtin>.super"
    ],
    "pandas._testing.SubclassedSeries": [
        "<builtin>.property"
    ],
    "pandas._testing.SubclassedDataFrame": [
        "<builtin>.property"
    ],
    "pandas.util._print_versions": [
        "pandas._typing",
        "pandas.compat._optional"
    ],
    "pandas.io.api": [
        "pandas.io.orc",
        "pandas.io.parsers",
        "pandas.io.pytables",
        "pandas.io.excel",
        "pandas.io.sql",
        "pandas.io.stata",
        "pandas.io.parquet",
        "pandas.io.xml",
        "pandas.io.gbq",
        "pandas.io.pickle",
        "pandas.io.html",
        "pandas.io.clipboards",
        "pandas.io.sas",
        "pandas.io.spss",
        "pandas.io.json",
        "pandas.io.feather_format"
    ],
    "pandas.io.clipboards": [
        "pandas.core.dtypes.generic",
        "pandas",
        "pandas.util._validators",
        "pandas.util._exceptions",
        "pandas._typing"
    ],
    "pandas.io.excel": [
        "pandas.io.excel._util",
        "pandas.io.excel._util.register_writer",
        "pandas.io.excel._base",
        "pandas.io.excel._openpyxl",
        "pandas.io.excel._odswriter",
        "pandas.io.excel._xlsxwriter"
    ],
    "pandas.io.excel._base": [
        "pandas.io.parsers",
        "pandas.io.excel._util",
        "pandas.compat._optional",
        "pandas.util._exceptions",
        "pandas.util._decorators.doc",
        "<builtin>.map",
        "pandas.core.dtypes.common",
        "pandas.errors",
        "pandas.core.frame",
        "<builtin>.max",
        "textwrap.fill",
        "<builtin>.sorted",
        "typing.overload",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.util._decorators.Appender.__init__",
        "pandas.io.excel._base.BaseExcelReader",
        "pandas.io.common",
        "pandas.util._validators",
        "typing.TypeVar",
        "pandas.io.excel._base.ExcelFile",
        "pandas.io.excel._base.ExcelWriter",
        "pandas.core.shared_docs",
        "pandas.util.version",
        "pandas.io.parsers.readers",
        "pandas._config.config"
    ],
    "pandas.io.excel._util": [
        "typing.overload",
        "pandas.compat._optional",
        "pandas.core.dtypes.common",
        "pandas.io.excel._base",
        "typing.TypeVar"
    ],
    "pandas.io.parsers": [
        "pandas.io.parsers.readers"
    ],
    "pandas.io.excel._base.BaseExcelReader": [
        "<builtin>.property"
    ],
    "pandas.io.excel._base.ExcelWriter": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "<builtin>.max": [],
    "pandas.io.excel._base.ExcelFile": [
        "pandas.io.excel._xlrd",
        "pandas.io.excel._odfreader",
        "<builtin>.property",
        "pandas.io.excel._openpyxl",
        "pandas.io.excel._pyxlsb",
        "pandas.io.excel._calamine"
    ],
    "pandas.io.excel._calamine": [
        "pandas",
        "pandas.compat._optional",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.io.excel._base",
        "pandas.core.shared_docs",
        "pandas.io.excel._calamine.CalamineReader"
    ],
    "pandas.io.excel._calamine.CalamineReader": [
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.property"
    ],
    "pandas.io.excel._odfreader": [
        "pandas",
        "pandas.compat._optional",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.io.excel._base",
        "pandas.core.shared_docs",
        "pandas.io.excel._odfreader.ODFReader",
        "numpy"
    ],
    "pandas.io.excel._odfreader.ODFReader": [
        "<builtin>.property"
    ],
    "pandas.io.excel._openpyxl": [
        "pandas.io.excel._openpyxl.OpenpyxlWriter",
        "pandas.io.excel._util",
        "pandas.compat._optional",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.io.excel._openpyxl.OpenpyxlReader",
        "pandas.io.excel._base",
        "pandas.core.shared_docs",
        "numpy"
    ],
    "pandas.io.excel._openpyxl.OpenpyxlWriter": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "pandas.io.excel._openpyxl.OpenpyxlReader": [
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.property"
    ],
    "pandas.io.excel._pyxlsb": [
        "pandas.compat._optional",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.io.excel._base",
        "pandas.core.shared_docs",
        "pandas.io.excel._pyxlsb.PyxlsbReader"
    ],
    "pandas.io.excel._pyxlsb.PyxlsbReader": [
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.property"
    ],
    "pandas.io.excel._xlrd": [
        "pandas.compat._optional",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.io.excel._base",
        "pandas.core.shared_docs",
        "numpy",
        "pandas.io.excel._xlrd.XlrdReader"
    ],
    "pandas.io.excel._xlrd.XlrdReader": [
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.property"
    ],
    "pandas.io.excel._odswriter": [
        "pandas.io.excel._util",
        "pandas._typing",
        "pandas.io.excel._base",
        "pandas.io.formats.excel",
        "pandas.io.excel._odswriter.ODSWriter"
    ],
    "pandas.io.formats.excel": [
        "pandas.io.formats.excel.ExcelCell",
        "pandas",
        "pandas.io.formats.printing",
        "pandas.io.formats.excel.CSSToExcelConverter",
        "pandas.util._exceptions",
        "pandas.util._decorators",
        "pandas.io.formats._color_data",
        "pandas.core.dtypes.common",
        "pandas._typing",
        "pandas.core.shared_docs",
        "pandas.io.formats.excel.CssExcelCell",
        "pandas.io.formats.css",
        "pandas.io.formats.format",
        "numpy",
        "pandas.core.dtypes.missing",
        "pandas.io.formats.excel.ExcelFormatter",
        "pandas.core.common"
    ],
    "pandas.io.formats._color_data": [],
    "pandas.io.formats.css": [
        "pandas.io.formats.css.CSSResolver",
        "pandas.errors",
        "pandas.util._exceptions"
    ],
    "pandas.io.formats.css.CSSResolver": [
        "pandas.io.formats.css._side_expander",
        "<map>.update",
        "pandas.io.formats.css._border_expander",
        "<map>.copy"
    ],
    "pandas.io.formats.css._border_expander": [],
    "pandas.io.formats.css._side_expander": [],
    "pandas.io.formats.excel.ExcelCell": [],
    "pandas.io.formats.excel.CssExcelCell": [],
    "pandas.io.formats.excel.CSSToExcelConverter": [],
    "pandas.io.formats.excel.ExcelFormatter": [
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "<builtin>.property"
    ],
    "pandas.io.excel._odswriter.ODSWriter": [
        "typing.overload",
        "<builtin>.property"
    ],
    "pandas.io.excel._xlsxwriter": [
        "pandas.io.excel._xlsxwriter.XlsxWriter",
        "pandas.io.excel._util",
        "pandas._typing",
        "pandas.io.excel._base",
        "pandas.io.excel._xlsxwriter._XlsxStyler"
    ],
    "pandas.io.excel._xlsxwriter._XlsxStyler": [
        "<builtin>.classmethod"
    ],
    "pandas.io.excel._xlsxwriter.XlsxWriter": [
        "<builtin>.property"
    ],
    "pandas.io.excel._util.register_writer": [
        "<builtin>.callable",
        "<builtin>.ValueError"
    ],
    "pandas.io.feather_format": [
        "pandas.core.api",
        "pandas.io.common",
        "pandas",
        "pandas.util._decorators.doc.decorator",
        "pandas.compat._optional",
        "pandas.util._validators",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.util._decorators.doc",
        "pandas._config",
        "pandas.core.shared_docs",
        "pandas.io._util"
    ],
    "pandas.io.gbq": [
        "pandas",
        "pandas.compat._optional",
        "pandas.util._exceptions"
    ],
    "pandas.io.html": [
        "pandas.io.parsers",
        "pandas.compat._optional",
        "pandas.util._exceptions",
        "pandas.io.html._HtmlFrameParser",
        "pandas.util._decorators.doc",
        "pandas.core.dtypes.common",
        "pandas.errors",
        "pandas.io.html._LxmlFrameParser",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.series",
        "pandas.io.common",
        "pandas.util._validators",
        "pandas",
        "pandas.io.formats.printing",
        "pandas.io.html._BeautifulSoupHtml5LibFrameParser",
        "pandas.core.indexes.multi",
        "pandas.core.shared_docs",
        "pandas.core.indexes.base"
    ],
    "pandas.io.html._HtmlFrameParser": [],
    "pandas.io.html._BeautifulSoupHtml5LibFrameParser": [],
    "pandas.io.html._LxmlFrameParser": [],
    "pandas.io.orc": [
        "pandas.core.indexes.api",
        "pandas",
        "pandas.io.common",
        "pandas.compat._optional",
        "pandas.util._validators",
        "pandas._typing",
        "pandas._config",
        "pandas.io._util",
        "pandas.core.frame"
    ],
    "pandas.io.parquet": [
        "pandas.io.common",
        "pandas",
        "pandas.util._decorators.doc.decorator",
        "pandas.compat._optional",
        "pandas.util._decorators",
        "pandas.util._exceptions",
        "pandas.util._validators",
        "pandas._typing",
        "pandas.io.parquet.PyArrowImpl",
        "pandas.io.parquet.FastParquetImpl",
        "pandas.errors",
        "pandas._config",
        "pandas.util._decorators.doc",
        "pandas.core.shared_docs",
        "pandas.io._util",
        "pandas.io.parquet.BaseImpl",
        "pandas._config.config"
    ],
    "pandas.io.parquet.BaseImpl": [
        "<builtin>.staticmethod"
    ],
    "pandas.io.parquet.PyArrowImpl": [],
    "pandas.io.parquet.FastParquetImpl": [],
    "pandas.io.pickle": [
        "pandas.io.common",
        "pandas",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.compat.pickle_compat",
        "pandas.core.shared_docs"
    ],
    "pandas.compat.pickle_compat": [
        "pandas.core.internals",
        "pandas",
        "pandas.core.arrays",
        "pandas._libs.tslibs",
        "numpy",
        "pandas.compat.pickle_compat.Unpickler"
    ],
    "pandas.compat.pickle_compat.Unpickler": [],
    "pandas.io.pytables": [
        "pandas.io.pytables.GenericDataIndexableCol",
        "pandas.compat._optional",
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas.io.pytables.AppendableMultiFrameTable",
        "pandas.io.pytables.FrameFixed",
        "numpy",
        "pandas.io.pytables.DataIndexableCol",
        "pandas.io.pytables.IndexCol",
        "pandas.core.construction",
        "pandas.core.internals",
        "pandas.io.pytables.Table",
        "pandas.core.indexes.api",
        "typing.overload",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.io.pytables.GenericTable",
        "pandas.io.pytables.Fixed",
        "pandas.compat.pickle_compat",
        "pandas.io.pytables.BlockManagerFixed",
        "pandas.io.pytables.TableIterator",
        "pandas.io.pytables.SeriesFixed",
        "pandas.core.dtypes.dtypes",
        "pandas.core.computation.pytables",
        "pandas.io.pytables.GenericIndexCol",
        "pandas.io.pytables.WORMTable",
        "pandas.io.common",
        "pandas.io.pytables.Selection",
        "pandas.io.pytables.HDFStore",
        "pandas.io.pytables.GenericFixed",
        "pandas.io.pytables.AppendableMultiSeriesTable",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas._config.config.config_prefix",
        "pandas",
        "pandas.io.formats.printing",
        "pandas.io.pytables.AppendableSeriesTable",
        "pandas.io.pytables.DataCol",
        "pandas._config",
        "pandas.io.pytables.AppendableFrameTable",
        "pandas._config.config",
        "pandas.io.pytables.AppendableTable"
    ],
    "pandas.core.computation.pytables": [
        "pandas.core.dtypes.common",
        "pandas.errors",
        "pandas._libs.tslibs",
        "pandas.core.computation.pytables.BinOp",
        "numpy",
        "pandas.core.computation.pytables.JointFilterBinOp",
        "pandas.core.construction",
        "pandas._typing",
        "pandas.core.computation.expr",
        "pandas.core.computation.pytables.FilterBinOp",
        "pandas.core.computation.ops",
        "pandas.core.computation.common",
        "pandas.core.computation.pytables.JointConditionBinOp",
        "pandas.core.computation.pytables.PyTablesExpr",
        "pandas.core.computation.pytables.TermValue",
        "pandas.core.computation.scope",
        "pandas.core.computation.pytables.Constant",
        "pandas.core.computation.pytables.PyTablesScope",
        "pandas.core.computation.pytables.Term",
        "pandas.core.common",
        "pandas.core.computation.pytables.UnaryOp",
        "pandas.core.computation.pytables.ConditionBinOp",
        "pandas.io.formats.printing",
        "pandas.core.computation.pytables.PyTablesExprVisitor",
        "pandas.core.indexes.base"
    ],
    "pandas.core.computation.pytables.PyTablesScope": [],
    "pandas.core.computation.pytables.Term": [
        "<builtin>.property"
    ],
    "pandas.core.computation.pytables.Constant": [],
    "pandas.core.computation.pytables.BinOp": [
        "<builtin>.property"
    ],
    "pandas.core.computation.pytables.FilterBinOp": [],
    "pandas.core.computation.pytables.JointFilterBinOp": [],
    "pandas.core.computation.pytables.ConditionBinOp": [],
    "pandas.core.computation.pytables.JointConditionBinOp": [],
    "pandas.core.computation.pytables.UnaryOp": [],
    "pandas.core.computation.pytables.PyTablesExprVisitor": [],
    "pandas.core.computation.pytables.PyTablesExpr": [],
    "pandas.core.computation.pytables.TermValue": [],
    "pandas.io.pytables.HDFStore": [
        "<builtin>.property"
    ],
    "pandas.io.pytables.TableIterator": [],
    "pandas.io.pytables.IndexCol": [
        "<builtin>.property"
    ],
    "pandas.io.pytables.GenericIndexCol": [
        "<builtin>.property"
    ],
    "pandas.io.pytables.DataCol": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "pandas.io.pytables.DataIndexableCol": [
        "<builtin>.classmethod"
    ],
    "pandas.io.pytables.GenericDataIndexableCol": [],
    "pandas.io.pytables.Fixed": [
        "<builtin>.property"
    ],
    "pandas.io.pytables.GenericFixed": [
        "<map>.items",
        "<builtin>.property"
    ],
    "pandas.io.pytables.SeriesFixed": [
        "<builtin>.property"
    ],
    "pandas.io.pytables.BlockManagerFixed": [
        "<builtin>.property"
    ],
    "pandas.io.pytables.FrameFixed": [],
    "pandas.io.pytables.Table": [
        "<builtin>.classmethod",
        "pandas._libs.properties.cache_readonly",
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "pandas.io.pytables.WORMTable": [],
    "pandas.io.pytables.AppendableTable": [],
    "pandas.io.pytables.AppendableFrameTable": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "pandas.io.pytables.AppendableSeriesTable": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "pandas.io.pytables.AppendableMultiSeriesTable": [],
    "pandas.io.pytables.GenericTable": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.io.pytables.AppendableMultiFrameTable": [
        "<builtin>.property"
    ],
    "pandas.io.pytables.Selection": [],
    "pandas.io.sas": [
        "pandas.io.sas.sasreader"
    ],
    "pandas.io.sas.sasreader": [
        "typing.overload",
        "pandas.io.common",
        "pandas",
        "pandas.io.sas.sasreader.ReaderBase",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.doc",
        "pandas.util._decorators",
        "pandas._typing",
        "pandas.core.shared_docs"
    ],
    "pandas.io.sas.sasreader.ReaderBase": [
        "abc.abstractmethod"
    ],
    "pandas.io.spss": [
        "pandas.io.common",
        "pandas",
        "pandas.compat._optional",
        "pandas.util._validators",
        "pandas._typing",
        "pandas.core.dtypes.inference"
    ],
    "pandas.io.sql": [
        "pandas.compat._optional",
        "pandas.util._exceptions",
        "pandas.core.dtypes.common",
        "pandas.core.arrays",
        "pandas.errors",
        "pandas.core.base",
        "numpy",
        "pandas.core.tools.datetimes",
        "pandas.core.api",
        "typing.overload",
        "pandas.io.sql.SQLAlchemyEngine",
        "pandas._typing",
        "pandas.core.internals.construction",
        "pandas.io.sql.SQLiteTable",
        "pandas.core.dtypes.dtypes",
        "pandas.io.sql.SQLiteDatabase",
        "pandas.util._validators",
        "pandas.io.sql.SQLDatabase",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas.io.sql.ADBCDatabase",
        "pandas",
        "pandas._config",
        "pandas.io.sql.SQLTable",
        "pandas.io.sql.BaseEngine",
        "pandas.io.sql.PandasSQL"
    ],
    "pandas.io.sql.SQLTable": [],
    "pandas.io.sql.PandasSQL": [
        "abc.abstractmethod"
    ],
    "pandas.io.sql.BaseEngine": [],
    "pandas.io.sql.SQLAlchemyEngine": [],
    "pandas.io.sql.SQLDatabase": [
        "<builtin>.staticmethod",
        "<builtin>.property",
        "contextlib.contextmanager"
    ],
    "pandas.io.sql.ADBCDatabase": [
        "contextlib.contextmanager"
    ],
    "pandas.io.sql.SQLiteTable": [],
    "pandas.io.sql.SQLiteDatabase": [
        "<builtin>.staticmethod",
        "contextlib.contextmanager"
    ],
    "pandas.io.xml": [
        "pandas.io.xml._XMLFrameParser",
        "pandas.io.parsers",
        "pandas.io.common",
        "pandas",
        "pandas.util._decorators.doc.decorator",
        "pandas.compat._optional",
        "pandas.util._validators",
        "pandas.util._exceptions",
        "pandas.util._decorators",
        "pandas.core.dtypes.common",
        "pandas._typing",
        "pandas.util._decorators.doc",
        "pandas.errors",
        "pandas.core.shared_docs",
        "pandas.io.xml._LxmlFrameParser",
        "pandas.io.xml._EtreeFrameParser"
    ],
    "pandas.io.xml._XMLFrameParser": [],
    "pandas.io.xml._EtreeFrameParser": [],
    "pandas.io.xml._LxmlFrameParser": [],
    "pandas.util._tester": [
        "pandas.compat._optional"
    ],
    "pandas._version_meson": [],
    "pandas._version": [
        "pandas._version.VersioneerConfig",
        "pandas._version.register_vcs_handler.decorate",
        "pandas._version.register_vcs_handler",
        "pandas._version.NotThisMethod"
    ],
    "pandas._version.VersioneerConfig": [],
    "pandas._version.NotThisMethod": [],
    "pandas._version.register_vcs_handler": [],
    "pandas._version.register_vcs_handler.decorate": [],
    "pandas._version.get_versions": [
        "pandas._version.render",
        "pandas._version.get_config",
        "pandas._version.versions_from_parentdir",
        "pandas._version.git_pieces_from_vcs",
        "pandas._version.get_keywords",
        "<str>.split",
        "pandas._version.git_versions_from_keywords"
    ],
    "pandas._version.get_config": [],
    "pandas._version.get_keywords": [],
    "pandas._version.git_versions_from_keywords": [
        "<builtin>.print",
        "<map>.get",
        "<str>.startswith",
        "<builtin>.len",
        "<builtin>.sorted",
        "<str>.split",
        "<str>.strip"
    ],
    "pandas._version.git_pieces_from_vcs": [
        "<builtin>.print",
        "<builtin>.len",
        "pandas._version.run_command",
        "<builtin>.int"
    ],
    "pandas._version.run_command": [
        "<builtin>.print",
        "<builtin>.str",
        "<builtin>.isinstance"
    ],
    "pandas._version.render": [
        "pandas._version.render_pep440_branch",
        "<map>.get",
        "pandas._version.render_pep440",
        "pandas._version.render_pep440_old",
        "pandas._version.render_pep440_post",
        "pandas._version.render_git_describe",
        "pandas._version.render_git_describe_long",
        "<builtin>.ValueError",
        "pandas._version.render_pep440_pre",
        "pandas._version.render_pep440_post_branch"
    ],
    "pandas._version.render_git_describe_long": [],
    "pandas._version.render_git_describe": [],
    "pandas._version.render_pep440_old": [],
    "pandas._version.render_pep440_post_branch": [
        "pandas._version.plus_or_dot"
    ],
    "pandas._version.plus_or_dot": [
        "<map>.get"
    ],
    "pandas._version.render_pep440_post": [
        "pandas._version.plus_or_dot"
    ],
    "pandas._version.render_pep440_pre": [
        "pandas._version.pep440_split_post"
    ],
    "pandas._version.pep440_split_post": [
        "<builtin>.len",
        "<builtin>.int"
    ],
    "pandas._version.render_pep440_branch": [
        "pandas._version.plus_or_dot"
    ],
    "pandas._version.render_pep440": [
        "pandas._version.plus_or_dot"
    ],
    "pandas._version.versions_from_parentdir": [
        "<builtin>.print",
        "<builtin>.str",
        "append",
        "<builtin>.range",
        "<builtin>.len"
    ],
    "sklearn": [
        "sklearn.base",
        "sklearn._distributor_init",
        "sklearn.__check_build",
        "sklearn.utils._show_versions",
        "sklearn._config",
        "sklearn.metrics._scorer.make_scorer"
    ],
    "sklearn._config": [
        "<builtin>.int",
        "<builtin>.bool",
        "contextlib.contextmanager"
    ],
    "sklearn._distributor_init": [],
    "sklearn.__check_build": [
        "sklearn.__check_build.raise_build_error"
    ],
    "sklearn.__check_build.raise_build_error": [
        "<builtin>.list",
        "<builtin>.ImportError",
        "<builtin>.enumerate"
    ],
    "sklearn.base": [
        "sklearn.base.ClusterMixin",
        "sklearn._config",
        "numpy",
        "sklearn.base.BiclusterMixin",
        "sklearn.base._UnstableArchMixin",
        "sklearn.base.TransformerMixin",
        "sklearn.base.OutlierMixin",
        "sklearn.base._OneToOneFeatureMixin",
        "sklearn.base._ClassNamePrefixFeaturesOutMixin",
        "sklearn.utils",
        "sklearn.utils._estimator_html_repr",
        "sklearn.base.MetaEstimatorMixin",
        "sklearn.base.MultiOutputMixin",
        "sklearn.utils.validation",
        "sklearn.utils._tags",
        "sklearn.base.BaseEstimator",
        "sklearn.base.RegressorMixin",
        "sklearn.base.DensityMixin",
        "sklearn.base.ClassifierMixin"
    ],
    "sklearn.utils": [
        "sklearn.utils._estimator_html_repr",
        "sklearn.utils.validation",
        "sklearn.utils._bunch",
        "sklearn",
        "sklearn.exceptions",
        "sklearn.utils.class_weight",
        "scipy.sparse",
        "sklearn.utils.deprecation",
        "sklearn.utils.fixes",
        "numpy",
        "sklearn.utils._joblib",
        "contextlib.contextmanager"
    ],
    "sklearn.utils.class_weight": [
        "numpy",
        "scipy.sparse"
    ],
    "sklearn.utils._joblib": [],
    "sklearn.exceptions": [
        "sklearn.exceptions.UndefinedMetricWarning",
        "sklearn.exceptions.PositiveSpectrumWarning",
        "sklearn.exceptions.DataDimensionalityWarning",
        "sklearn.exceptions.ConvergenceWarning",
        "sklearn.exceptions.DataConversionWarning",
        "sklearn.exceptions.NotFittedError",
        "sklearn.exceptions.EfficiencyWarning",
        "sklearn.exceptions.FitFailedWarning",
        "sklearn.exceptions.SkipTestWarning"
    ],
    "sklearn.exceptions.NotFittedError": [],
    "sklearn.exceptions.ConvergenceWarning": [],
    "sklearn.exceptions.DataConversionWarning": [],
    "sklearn.exceptions.DataDimensionalityWarning": [],
    "sklearn.exceptions.EfficiencyWarning": [],
    "sklearn.exceptions.FitFailedWarning": [],
    "sklearn.exceptions.SkipTestWarning": [],
    "sklearn.exceptions.UndefinedMetricWarning": [],
    "sklearn.exceptions.PositiveSpectrumWarning": [],
    "sklearn.utils.deprecation": [
        "sklearn.utils.deprecation.deprecated"
    ],
    "sklearn.utils.deprecation.deprecated": [],
    "sklearn.utils.fixes": [
        "sklearn.externals._packaging.version.parse",
        "scipy.sparse.linalg",
        "scipy",
        "scipy.stats",
        "sklearn",
        "scipy.optimize._linesearch",
        "sklearn.utils.fixes._FuncWrapper",
        "sklearn.externals._packaging.version",
        "sklearn.utils.fixes.loguniform",
        "sklearn._config",
        "scipy.optimize.linesearch",
        "threadpoolctl",
        "numpy",
        "sklearn.externals._lobpcg"
    ],
    "scipy": [
        "scipy.__config__",
        "scipy.version",
        "scipy._lib._pep440.parse",
        "numpy",
        "scipy._lib._ccallback",
        "<builtin>.globals",
        "scipy._lib.deprecation",
        "numpy.random",
        "scipy._lib.deprecation._deprecated",
        "<builtin>.callable",
        "scipy._lib.deprecation._deprecated.wrap",
        "scipy._lib._pep440",
        "<builtin>.getattr",
        "scipy._lib._testutils",
        "scipy._distributor_init",
        "scipy._lib._pep440.Version.__init__",
        "<builtin>.RuntimeError",
        "<builtin>.isinstance",
        "numpy.fft",
        "scipy._lib._testutils.PytestTester.__init__",
        "numpy.lib.scimath",
        "<builtin>.ImportError"
    ],
    "scipy._lib.deprecation": [
        "scipy._lib.deprecation._DeprecationHelperStr"
    ],
    "scipy._lib.deprecation._DeprecationHelperStr": [],
    "scipy._lib.deprecation._deprecated": [],
    "scipy._lib.deprecation._deprecated.wrap": [
        "<builtin>.isinstance"
    ],
    "scipy.__config__": ["scipy.__config__._cleanup"],
    "scipy.version": [],
    "scipy._distributor_init": [],
    "scipy._lib._pep440": [
        "scipy._lib._pep440._BaseVersion",
        "scipy._lib._pep440.InvalidVersion",
        "scipy._lib._pep440.NegativeInfinity",
        "scipy._lib._pep440.LegacyVersion",
        "scipy._lib._pep440.Infinity",
        "scipy._lib._pep440.Version"
    ],
    "scipy._lib._pep440.Infinity": [],
    "scipy._lib._pep440.NegativeInfinity": [],
    "scipy._lib._pep440.InvalidVersion": [],
    "scipy._lib._pep440._BaseVersion": [],
    "scipy._lib._pep440.LegacyVersion": [
        "<builtin>.property"
    ],
    "scipy._lib._pep440.Version": [
        "<builtin>.property"
    ],
    "scipy._lib._pep440.parse": [
        "scipy._lib._pep440.Version.__init__",
        "scipy._lib._pep440.LegacyVersion.__init__"
    ],
    "scipy._lib._pep440.Version.__init__": [
        "<builtin>.int",
        "scipy._lib._pep440._parse_letter_version",
        "<builtin>.tuple",
        "scipy._lib._pep440._cmpkey",
        "scipy._lib._pep440._parse_local_version"
    ],
    "scipy._lib._pep440._parse_letter_version": [
        "<builtin>.int",
        "<str>.lower"
    ],
    "scipy._lib._pep440._parse_local_version": [
        "<builtin>.int",
        "<builtin>.tuple"
    ],
    "scipy._lib._pep440._cmpkey": [
        "<builtin>.isinstance",
        "<builtin>.list",
        "<builtin>.tuple",
        "<builtin>.reversed"
    ],
    "scipy._lib._pep440.LegacyVersion.__init__": [
        "<builtin>.str",
        "scipy._lib._pep440._legacy_cmpkey"
    ],
    "scipy._lib._pep440._legacy_cmpkey": [
        "<builtin>.tuple",
        "append",
        "<str>.startswith",
        "scipy._lib._pep440._parse_version_parts",
        "pop"
    ],
    "scipy._lib._pep440._parse_version_parts": [
        "<map>.get"
    ],
    "scipy._lib._ccallback": [
        "scipy._lib._ccallback.CData",
        "scipy._lib._ccallback.LowLevelCallable"
    ],
    "scipy._lib._ccallback.CData": [],
    "scipy._lib._ccallback.LowLevelCallable": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "scipy.stats": [
        "scipy.stats._resampling",
        "scipy.stats._morestats",
        "scipy.stats.morestats",
        "scipy.stats._variation",
        "scipy.stats._fit",
        "scipy.stats._multivariate",
        "scipy.stats._page_trend_test",
        "scipy.stats._entropy",
        "scipy.stats._warnings_errors",
        "scipy.stats.mstats_basic",
        "scipy.stats.contingency",
        "scipy.stats.biasedurn",
        "scipy.stats._hypotests",
        "scipy.stats._stats_py",
        "scipy.stats.qmc",
        "scipy.stats.mstats",
        "scipy.stats.statlib",
        "scipy.stats._binned_statistic",
        "scipy.stats.distributions",
        "scipy._lib._testutils",
        "scipy.stats.kde",
        "scipy.stats._kde",
        "scipy.stats.mvn",
        "scipy.stats.mstats_extras",
        "scipy.stats.stats",
        "scipy.stats._mannwhitneyu",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.stats._binomtest",
        "<builtin>.dir",
        "scipy.stats._rvs_sampling"
    ],
    "scipy.stats._warnings_errors": [
        "scipy.stats._warnings_errors.ConstantInputWarning",
        "scipy.stats._warnings_errors.FitError",
        "scipy.stats._warnings_errors.NearConstantInputWarning",
        "scipy.stats._warnings_errors.DegenerateDataWarning"
    ],
    "scipy.stats._warnings_errors.DegenerateDataWarning": [],
    "scipy.stats._warnings_errors.ConstantInputWarning": [],
    "scipy.stats._warnings_errors.NearConstantInputWarning": [],
    "scipy.stats._warnings_errors.FitError": [],
    "scipy.stats._stats_py": [
        "collections.namedtuple",
        "numpy.testing",
        "scipy._lib._bunch",
        "scipy.stats._resampling",
        "dataclasses.make_dataclass",
        "scipy.stats._stats_mstats_common",
        "scipy._lib._util._rename_parameter.decorator",
        "numpy",
        "numpy.lib",
        "scipy.linalg",
        "scipy._lib._util._rename_parameter",
        "scipy.stats",
        "scipy.stats._hypotests",
        "scipy.spatial.distance",
        "scipy.stats._axis_nan_policy._axis_nan_policy_factory",
        "scipy.ndimage._measurements",
        "scipy.special",
        "numpy.ma",
        "scipy.stats._axis_nan_policy",
        "scipy.stats.distributions",
        "scipy.stats._stats_py._ParallelP",
        "scipy._lib._bunch._make_tuple_bunch",
        "scipy._lib._util",
        "scipy.stats._binomtest",
        "scipy.stats._stats_py.PearsonRResult",
        "scipy.stats._axis_nan_policy._axis_nan_policy_factory.axis_nan_policy_decorator",
        "scipy.stats._mstats_basic"
    ],
    "numpy.testing": [
        "numpy.testing._private.utils",
        "numpy.testing._private.decorators",
        "numpy._pytesttester",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.testing._private.nosetester",
        "numpy.testing._private.extbuild"
    ],
    "numpy.testing._private.utils": [
        "numpy.core",
        "<builtin>.hasattr",
        "numpy.testing._private.utils._Dummy",
        "numpy.testing._private.utils.IgnoreException",
        "numpy.testing._private.utils._get_glibc_version",
        "numpy.testing._private.utils.suppress_warnings",
        "<builtin>.getattr",
        "numpy.testing._private.utils.KnownFailureException",
        "numpy",
        "numpy.testing._private.utils.clear_and_catch_warnings"
    ],
    "numpy.testing._private.utils.KnownFailureException": [],
    "numpy.testing._private.utils._Dummy": [],
    "numpy.testing._private.utils.IgnoreException": [],
    "numpy.testing._private.utils.clear_and_catch_warnings": [],
    "numpy.testing._private.utils.suppress_warnings": [],
    "numpy.testing._private.utils._get_glibc_version": [],
    "numpy.testing._private.extbuild": [],
    "numpy.testing._private.decorators": [
        "numpy.testing._private.decorators.skipif",
        "numpy.testing._private.utils"
    ],
    "numpy.testing._private.decorators.skipif": [],
    "numpy.testing._private.nosetester": [
        "numpy",
        "numpy.testing._private.nosetester.NoseTester",
        "numpy.testing._private.utils"
    ],
    "numpy.testing._private.nosetester.NoseTester": [],
    "scipy.spatial.distance": [
        "scipy.spatial.distance.CDistWeightedMetricWrapper",
        "scipy.linalg",
        "scipy._lib.deprecation",
        "scipy.spatial.distance.PDistWeightedMetricWrapper",
        "scipy.spatial.distance.CDistMetricWrapper",
        "scipy.special",
        "scipy._lib._util",
        "scipy._lib.deprecation._deprecated",
        "scipy._lib.deprecation._deprecated.wrap",
        "<builtin>.dict",
        "<builtin>.list",
        "scipy.spatial.distance.MetricInfo",
        "numpy",
        "scipy.spatial.distance.PDistMetricWrapper",
        "functools.partial"
    ],
    "scipy.special": [
        "scipy._lib._testutils",
        "scipy.special.basic",
        "scipy.special.spfun_stats",
        "scipy.special._lambertw",
        "scipy.special._ellip_harm",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.special._orthogonal",
        "scipy.special.add_newdocs",
        "scipy.special._logsumexp",
        "scipy.special._basic",
        "scipy.special._spfun_stats",
        "scipy.special._sf_error",
        "scipy.special.specfun",
        "scipy.special.sf_error",
        "scipy.special._spherical_bessel",
        "scipy.special.orthogonal"
    ],
    "scipy.special._sf_error": [
        "scipy.special._sf_error.SpecialFunctionError",
        "scipy.special._sf_error.SpecialFunctionWarning"
    ],
    "scipy.special._sf_error.SpecialFunctionWarning": [],
    "scipy.special._sf_error.SpecialFunctionError": [],
    "scipy.special._basic": [
        "numpy"
    ],
    "scipy.special._logsumexp": [
        "numpy",
        "scipy._lib._util"
    ],
    "scipy.special._orthogonal": [
        "scipy.linalg",
        "append",
        "scipy.special",
        "<map>.items",
        "<builtin>.list",
        "<map>.keys",
        "numpy",
        "scipy.special._orthogonal.orthopoly1d",
        "<builtin>.globals"
    ],
    "scipy.special._orthogonal.orthopoly1d": [],
    "scipy.special._spfun_stats": [
        "numpy",
        "scipy.special"
    ],
    "scipy.special._ellip_harm": [
        "numpy",
        "numpy.lib.function_base.vectorize.__init__"
    ],
    "numpy.lib.function_base.vectorize.__init__": [
        "<builtin>.isinstance",
        "<builtin>.set",
        "<builtin>.ValueError",
        "numpy.lib.function_base.iterable",
        "numpy.lib.function_base._parse_gufunc_signature"
    ],
    "numpy.lib.function_base.iterable": [
        "<builtin>.iter"
    ],
    "<builtin>.iter": [],
    "numpy.lib.function_base._parse_gufunc_signature": [
        "<builtin>.tuple",
        "<builtin>.ValueError"
    ],
    "scipy.special._lambertw": [],
    "scipy.special._spherical_bessel": [],
    "scipy.special.add_newdocs": [
        "scipy.special._add_newdocs"
    ],
    "scipy.special._add_newdocs": [
        "scipy.special._add_newdocs.add_newdoc"
    ],
    "scipy.special._add_newdocs.add_newdoc": [],
    "scipy.special.basic": [
        "scipy.special._basic"
    ],
    "scipy.special.orthogonal": [
        "<builtin>.list",
        "<map>.keys",
        "scipy.special._orthogonal"
    ],
    "scipy.special.specfun": [],
    "scipy.special.sf_error": [
        "scipy.special._sf_error"
    ],
    "scipy.special.spfun_stats": [
        "scipy.special._spfun_stats"
    ],
    "scipy.spatial.distance.CDistMetricWrapper": [],
    "scipy.spatial.distance.CDistWeightedMetricWrapper": [],
    "scipy.spatial.distance.PDistMetricWrapper": [],
    "scipy.spatial.distance.PDistWeightedMetricWrapper": [],
    "scipy.spatial.distance.MetricInfo": [],
    "scipy.ndimage._measurements": [
        "numpy",
        "scipy.ndimage._morphology",
        "scipy.ndimage._ni_support"
    ],
    "scipy.ndimage._ni_support": [
        "numpy"
    ],
    "scipy.ndimage._morphology": [
        "numpy",
        "scipy.ndimage._filters",
        "scipy.ndimage._ni_support"
    ],
    "scipy.ndimage._filters": [
        "scipy.ndimage._ni_docstrings",
        "scipy.ndimage._ni_support",
        "numpy.core.multiarray",
        "scipy._lib.doccer.filldoc.decorate",
        "numpy"
    ],
    "scipy.ndimage._ni_docstrings": [
        "scipy._lib.doccer",
        "scipy._lib.doccer.filldoc"
    ],
    "scipy._lib.doccer": [],
    "scipy._lib.doccer.filldoc": [
        "scipy._lib.doccer.unindent_dict"
    ],
    "scipy._lib.doccer.unindent_dict": [
        "<map>.items",
        "scipy._lib.doccer.unindent_string"
    ],
    "scipy._lib.doccer.unindent_string": [
        "scipy._lib.doccer.indentcount_lines"
    ],
    "scipy._lib.doccer.indentcount_lines": [
        "<builtin>.len",
        "<builtin>.min"
    ],
    "<builtin>.min": [],
    "scipy._lib.doccer.filldoc.decorate": [
        "scipy._lib.doccer.docformat"
    ],
    "scipy._lib.doccer.docformat": [
        "append",
        "<builtin>.len",
        "<map>.items",
        "scipy._lib.doccer.indentcount_lines"
    ],
    "scipy.stats.distributions": [
        "scipy.stats._distn_infrastructure",
        "scipy.stats._levy_stable",
        "scipy.stats._continuous_distns",
        "scipy.stats._discrete_distns",
        "scipy.stats._entropy"
    ],
    "scipy.stats._distn_infrastructure": [
        "scipy.optimize",
        "scipy.stats._distn_infrastructure.rv_sample",
        "<builtin>.exec",
        "numpy",
        "scipy.misc",
        "scipy.stats._warnings_errors",
        "<map>.pop",
        "scipy.stats",
        "scipy.stats._distn_infrastructure._ShapeInfo",
        "scipy.stats._distr_params",
        "scipy.integrate",
        "scipy.stats._constants",
        "<map>.copy",
        "scipy.special",
        "scipy.stats._distn_infrastructure.rv_generic",
        "scipy.stats._distn_infrastructure.rv_frozen",
        "scipy.stats._distn_infrastructure.rv_discrete",
        "scipy._lib.doccer",
        "scipy._lib._util",
        "scipy.stats._distn_infrastructure.rv_discrete_frozen",
        "<builtin>.dir",
        "scipy.stats._distn_infrastructure.rv_continuous",
        "scipy.stats._distn_infrastructure.rv_continuous_frozen"
    ],
    "scipy.stats._distr_params": [
        "numpy"
    ],
    "scipy.optimize": [
        "scipy.optimize._root",
        "scipy.optimize._milp",
        "scipy.optimize.lbfgsb",
        "scipy.optimize._tnc",
        "scipy.optimize.tnc",
        "scipy.optimize._zeros_py",
        "scipy.optimize.linesearch",
        "scipy.optimize._optimize",
        "scipy.optimize._cobyla_py",
        "scipy.optimize._direct_py",
        "scipy.optimize.nonlin",
        "scipy.optimize._lsq.lsq_linear",
        "scipy.optimize._lbfgsb_py",
        "scipy.optimize._differentialevolution",
        "scipy.optimize._root_scalar",
        "scipy.optimize._slsqp_py",
        "scipy.optimize._dual_annealing",
        "scipy.optimize.zeros",
        "scipy.optimize.cobyla",
        "scipy.optimize._hessian_update_strategy",
        "scipy.optimize.slsqp",
        "scipy.optimize._minimize",
        "scipy.optimize._nonlin",
        "scipy.optimize._nnls",
        "scipy.optimize._constraints",
        "scipy._lib._testutils",
        "scipy.optimize._lsq.least_squares",
        "scipy.optimize.optimize",
        "scipy.optimize._basinhopping",
        "scipy.optimize.minpack2",
        "scipy.optimize._qap",
        "scipy.optimize._linprog",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.optimize._shgo",
        "scipy.optimize.moduleTNC",
        "<builtin>.dir",
        "scipy.optimize.minpack",
        "scipy.optimize._minpack_py"
    ],
    "scipy.optimize._optimize": [
        "scipy.optimize._optimize.OptimizeWarning",
        "scipy.sparse.linalg",
        "scipy.optimize._optimize._LineSearchError",
        "scipy.optimize._optimize.Brent",
        "scipy.optimize._numdiff",
        "scipy.optimize._linesearch",
        "scipy.optimize._hessian_update_strategy",
        "scipy.optimize._differentiable_functions",
        "scipy.optimize._optimize.MemoizeJac",
        "scipy._lib._util",
        "scipy.optimize._optimize.OptimizeResult",
        "numpy.core.finfo",
        "scipy.optimize._optimize._MaxFuncCallError",
        "numpy",
        "scipy.optimize._optimize._Brute_Wrapper"
    ],
    "scipy.optimize._linesearch": [
        "numpy",
        "scipy.optimize._linesearch.LineSearchWarning"
    ],
    "scipy.optimize._linesearch.LineSearchWarning": [],
    "scipy.optimize._numdiff": [
        "numpy",
        "scipy.sparse.linalg",
        "numpy.linalg",
        "scipy.sparse"
    ],
    "scipy.optimize._hessian_update_strategy": [
        "scipy.linalg",
        "scipy.optimize._hessian_update_strategy.BFGS",
        "numpy.linalg",
        "scipy.optimize._hessian_update_strategy.FullHessianUpdateStrategy",
        "numpy",
        "scipy.optimize._hessian_update_strategy.HessianUpdateStrategy",
        "scipy.optimize._hessian_update_strategy.SR1"
    ],
    "scipy.optimize._hessian_update_strategy.HessianUpdateStrategy": [],
    "scipy.optimize._hessian_update_strategy.FullHessianUpdateStrategy": [
        "scipy.linalg.blas.get_blas_funcs"
    ],
    "scipy.linalg.blas.get_blas_funcs": [
        "scipy.linalg.blas._get_funcs",
        "<builtin>.isinstance",
        "<builtin>.RuntimeError",
        "<builtin>.ValueError"
    ],
    "scipy.linalg.blas._get_funcs": [
        "scipy.linalg.blas.find_best_blas_type",
        "<builtin>.isinstance",
        "append",
        "<map>.get",
        "<builtin>.getattr",
        "<builtin>.ValueError"
    ],
    "scipy.linalg.blas.find_best_blas_type": [
        "<builtin>.len",
        "<builtin>.max",
        "<map>.get"
    ],
    "scipy.optimize._hessian_update_strategy.BFGS": [],
    "scipy.optimize._hessian_update_strategy.SR1": [],
    "scipy.optimize._differentiable_functions": [
        "scipy.sparse.linalg",
        "scipy.optimize._numdiff",
        "scipy.optimize._differentiable_functions.VectorFunction",
        "scipy.optimize._hessian_update_strategy",
        "scipy.optimize._differentiable_functions.IdentityVectorFunction",
        "scipy.sparse",
        "scipy.optimize._differentiable_functions.LinearVectorFunction",
        "numpy",
        "scipy.optimize._differentiable_functions.ScalarFunction"
    ],
    "scipy.optimize._differentiable_functions.ScalarFunction": [],
    "scipy.optimize._differentiable_functions.VectorFunction": [],
    "scipy.optimize._differentiable_functions.LinearVectorFunction": [],
    "scipy.optimize._differentiable_functions.IdentityVectorFunction": [],
    "scipy.optimize._optimize.MemoizeJac": [],
    "scipy.optimize._optimize.OptimizeResult": [],
    "scipy.optimize._optimize.OptimizeWarning": [],
    "scipy.optimize._optimize._MaxFuncCallError": [],
    "scipy.optimize._optimize._LineSearchError": [],
    "scipy.optimize._optimize.Brent": [],
    "scipy.optimize._optimize._Brute_Wrapper": [],
    "scipy.optimize._minimize": [
        "scipy.optimize._slsqp_py",
        "scipy.optimize._tnc",
        "scipy.optimize._differentiable_functions",
        "scipy.optimize._lbfgsb_py",
        "scipy.optimize._trustregion_ncg",
        "scipy.optimize._trustregion_exact",
        "scipy.optimize._trustregion_constr",
        "scipy.optimize._trustregion_krylov",
        "scipy.optimize._constraints",
        "numpy",
        "scipy.optimize._optimize",
        "scipy.optimize._cobyla_py",
        "scipy.optimize._trustregion_dogleg"
    ],
    "scipy.optimize._trustregion_dogleg": [
        "numpy",
        "scipy.optimize._trustregion",
        "scipy.linalg",
        "scipy.optimize._trustregion_dogleg.DoglegSubproblem"
    ],
    "scipy.optimize._trustregion": [
        "scipy.linalg",
        "scipy.optimize._differentiable_functions",
        "scipy.optimize._hessian_update_strategy",
        "scipy.optimize._trustregion.BaseQuadraticSubproblem",
        "numpy",
        "scipy.optimize._optimize"
    ],
    "scipy.optimize._trustregion.BaseQuadraticSubproblem": [
        "<builtin>.property"
    ],
    "scipy.optimize._trustregion_dogleg.DoglegSubproblem": [],
    "scipy.optimize._trustregion_ncg": [
        "numpy",
        "scipy.optimize._trustregion",
        "scipy.linalg",
        "scipy.optimize._trustregion_ncg.CGSteihaugSubproblem"
    ],
    "scipy.optimize._trustregion_ncg.CGSteihaugSubproblem": [],
    "scipy.optimize._trustregion_krylov": [
        "scipy.optimize._trlib",
        "scipy.optimize._trustregion"
    ],
    "scipy.optimize._trlib": [],
    "scipy.optimize._trustregion_exact": [
        "numpy",
        "scipy.optimize._trustregion",
        "scipy.linalg",
        "scipy.optimize._trustregion_exact.IterativeSubproblem"
    ],
    "scipy.optimize._trustregion_exact.IterativeSubproblem": [
        "numpy.core.finfo"
    ],
    "scipy.optimize._trustregion_constr": [
        "scipy.optimize._trustregion_constr.minimize_trustregion_constr"
    ],
    "scipy.optimize._trustregion_constr.minimize_trustregion_constr": [
        "scipy.sparse.linalg",
        "scipy.optimize._trustregion_constr.canonical_constraint",
        "scipy.optimize._trustregion_constr.report",
        "scipy.optimize._trustregion_constr.tr_interior_point",
        "scipy.optimize._differentiable_functions",
        "scipy.optimize._hessian_update_strategy",
        "scipy.optimize._trustregion_constr.minimize_trustregion_constr.LagrangianHessian",
        "scipy.optimize._trustregion_constr.equality_constrained_sqp",
        "scipy.optimize._constraints",
        "numpy",
        "scipy.optimize._optimize",
        "scipy.optimize._trustregion_constr.minimize_trustregion_constr.HessianLinearOperator"
    ],
    "scipy.optimize._constraints": [
        "numpy.testing",
        "scipy.optimize._constraints.NonlinearConstraint",
        "scipy.optimize._constraints.Bounds",
        "scipy.optimize._differentiable_functions",
        "scipy.optimize._constraints.PreparedConstraint",
        "scipy.optimize._hessian_update_strategy",
        "scipy.sparse",
        "scipy.optimize._constraints.LinearConstraint",
        "numpy",
        "scipy.optimize._optimize"
    ],
    "scipy.optimize._constraints.NonlinearConstraint": [
        "scipy.optimize._hessian_update_strategy.BFGS.__init__"
    ],
    "scipy.optimize._hessian_update_strategy.BFGS.__init__": [
        "<builtin>.super",
        "<builtin>.ValueError"
    ],
    "scipy.optimize._constraints.LinearConstraint": [],
    "scipy.optimize._constraints.Bounds": [],
    "scipy.optimize._constraints.PreparedConstraint": [],
    "scipy.optimize._trustregion_constr.equality_constrained_sqp": [
        "scipy.optimize._trustregion_constr.projections",
        "numpy.linalg",
        "scipy.sparse",
        "scipy.optimize._trustregion_constr.qp_subproblem",
        "numpy"
    ],
    "scipy.optimize._trustregion_constr.projections": [
        "numpy",
        "scipy.linalg",
        "scipy.sparse.linalg",
        "scipy.sparse"
    ],
    "scipy.optimize._trustregion_constr.qp_subproblem": [
        "numpy",
        "scipy.sparse.linalg",
        "numpy.linalg",
        "scipy.sparse"
    ],
    "scipy.optimize._trustregion_constr.canonical_constraint": [
        "numpy",
        "scipy.optimize._trustregion_constr.canonical_constraint.CanonicalConstraint",
        "scipy.sparse"
    ],
    "scipy.optimize._trustregion_constr.canonical_constraint.CanonicalConstraint": [
        "<builtin>.classmethod"
    ],
    "scipy.optimize._trustregion_constr.tr_interior_point": [
        "scipy.sparse.linalg",
        "scipy.optimize._trustregion_constr.equality_constrained_sqp",
        "scipy.sparse",
        "scipy.optimize._trustregion_constr.tr_interior_point.BarrierSubproblem",
        "numpy"
    ],
    "scipy.optimize._trustregion_constr.tr_interior_point.BarrierSubproblem": [],
    "scipy.optimize._trustregion_constr.report": [
        "scipy.optimize._trustregion_constr.report.ReportBase",
        "scipy.optimize._trustregion_constr.report.SQPReport",
        "scipy.optimize._trustregion_constr.report.IPReport",
        "scipy.optimize._trustregion_constr.report.BasicReport"
    ],
    "scipy.optimize._trustregion_constr.report.ReportBase": [
        "<builtin>.classmethod"
    ],
    "scipy.optimize._trustregion_constr.report.BasicReport": [],
    "scipy.optimize._trustregion_constr.report.SQPReport": [],
    "scipy.optimize._trustregion_constr.report.IPReport": [],
    "scipy.optimize._trustregion_constr.minimize_trustregion_constr.HessianLinearOperator": [],
    "scipy.optimize._trustregion_constr.minimize_trustregion_constr.LagrangianHessian": [],
    "scipy.optimize._lbfgsb_py": [
        "scipy.sparse.linalg",
        "scipy.optimize._constraints",
        "scipy.optimize._lbfgsb_py.LbfgsInvHessProduct",
        "numpy",
        "scipy.optimize._optimize"
    ],
    "scipy.optimize._lbfgsb_py.LbfgsInvHessProduct": [],
    "scipy.optimize._tnc": [
        "numpy",
        "scipy.optimize._optimize",
        "scipy.optimize._constraints"
    ],
    "scipy.optimize._cobyla_py": [
        "numpy",
        "scipy.optimize._cobyla_py.synchronized",
        "scipy.optimize._optimize",
        "threading.RLock"
    ],
    "scipy.optimize._cobyla_py.synchronized": [],
    "scipy.optimize._slsqp_py": [
        "numpy.lib.polynomial.finfo",
        "scipy.optimize._numdiff",
        "numpy.linalg",
        "scipy.optimize._constraints",
        "numpy",
        "scipy.optimize._optimize"
    ],
    "numpy.lib.polynomial.finfo": [],
    "scipy.optimize._root": [
        "scipy.optimize._nonlin",
        "scipy.optimize._spectral",
        "numpy",
        "scipy.optimize._optimize",
        "scipy.optimize._minpack_py"
    ],
    "scipy.optimize._minpack_py": [
        "scipy.linalg",
        "scipy._lib._util",
        "numpy",
        "scipy.optimize._lsq.least_squares",
        "scipy.optimize._optimize"
    ],
    "scipy.optimize._lsq.least_squares": [
        "scipy.optimize._lsq.dogbox",
        "scipy.sparse.linalg",
        "scipy.optimize._numdiff",
        "scipy.optimize",
        "numpy.linalg",
        "scipy.sparse",
        "scipy.optimize._lsq.common",
        "<builtin>.dict",
        "numpy",
        "scipy.optimize._lsq.trf"
    ],
    "scipy.optimize._lsq.trf": [
        "scipy.linalg",
        "scipy.sparse.linalg",
        "scipy.optimize",
        "numpy.linalg",
        "scipy.optimize._lsq.common",
        "numpy"
    ],
    "scipy.optimize._lsq.common": [
        "scipy.linalg",
        "scipy.sparse.linalg",
        "numpy.linalg",
        "scipy.sparse",
        "numpy.core.finfo",
        "numpy"
    ],
    "scipy.optimize._lsq.dogbox": [
        "scipy.sparse.linalg",
        "scipy.optimize",
        "numpy.linalg",
        "scipy.optimize._lsq.common",
        "numpy"
    ],
    "scipy.optimize._spectral": [
        "scipy.optimize._spectral._NoConvergence",
        "scipy.optimize._linesearch",
        "scipy.optimize",
        "numpy",
        "scipy.optimize._optimize"
    ],
    "scipy.optimize._spectral._NoConvergence": [],
    "scipy.optimize._nonlin": [
        "scipy.optimize._nonlin.TerminationCondition",
        "scipy.optimize._linesearch",
        "numpy",
        "scipy.linalg",
        "scipy.optimize._nonlin.LowRankMatrix",
        "scipy.sparse",
        "scipy.optimize._nonlin.GenericBroyden",
        "scipy.optimize._nonlin.Anderson",
        "scipy.optimize._nonlin.Jacobian",
        "scipy.optimize._nonlin._set_doc",
        "scipy.optimize._nonlin.DiagBroyden",
        "scipy.optimize._nonlin.InverseJacobian",
        "scipy.sparse.linalg",
        "scipy.optimize._nonlin.BroydenFirst",
        "<builtin>.dict",
        "scipy.optimize._nonlin.BroydenSecond",
        "scipy.optimize._nonlin.LinearMixing",
        "scipy.optimize._nonlin.KrylovJacobian",
        "scipy._lib._util",
        "scipy.optimize._nonlin.ExcitingMixing",
        "scipy.optimize._nonlin._nonlin_wrapper",
        "scipy.optimize._nonlin.NoConvergence"
    ],
    "scipy.optimize._nonlin.NoConvergence": [],
    "scipy.optimize._nonlin._set_doc": [],
    "scipy.optimize._nonlin.TerminationCondition": [],
    "scipy.optimize._nonlin.Jacobian": [],
    "scipy.optimize._nonlin.InverseJacobian": [
        "<builtin>.property"
    ],
    "scipy.optimize._nonlin.GenericBroyden": [],
    "scipy.optimize._nonlin.LowRankMatrix": [
        "<builtin>.staticmethod"
    ],
    "scipy.optimize._nonlin.BroydenFirst": [],
    "scipy.optimize._nonlin.BroydenSecond": [],
    "scipy.optimize._nonlin.Anderson": [],
    "scipy.optimize._nonlin.DiagBroyden": [],
    "scipy.optimize._nonlin.LinearMixing": [],
    "scipy.optimize._nonlin.ExcitingMixing": [],
    "scipy.optimize._nonlin.KrylovJacobian": [],
    "scipy.optimize._nonlin._nonlin_wrapper": [
        "scipy.optimize._nonlin._set_doc",
        "<builtin>.zip",
        "<builtin>.list",
        "<builtin>.dict",
        "<map>.update",
        "<builtin>.exec",
        "scipy._lib._util.getfullargspec_no_self",
        "<builtin>.ValueError",
        "<builtin>.len"
    ],
    "scipy._lib._util.getfullargspec_no_self": [
        "<builtin>.tuple"
    ],
    "scipy.optimize._root_scalar": [
        "numpy",
        "scipy.optimize._zeros_py",
        "scipy.optimize._root_scalar.MemoizeDer"
    ],
    "scipy.optimize._zeros_py": [
        "numpy",
        "numpy.core.finfo",
        "scipy.optimize._zeros_py.TOMS748Solver",
        "scipy.optimize._zeros_py.RootResults"
    ],
    "scipy.optimize._zeros_py.RootResults": [],
    "scipy.optimize._zeros_py.TOMS748Solver": [],
    "scipy.optimize._root_scalar.MemoizeDer": [],
    "scipy.optimize._nnls": [
        "numpy"
    ],
    "scipy.optimize._basinhopping": [
        "scipy.optimize._basinhopping.AdaptiveStepsize",
        "scipy.optimize._basinhopping.Metropolis",
        "scipy.optimize._basinhopping.Storage",
        "scipy.optimize._basinhopping.MinimizerWrapper",
        "scipy.optimize",
        "scipy._lib._util",
        "scipy.optimize._basinhopping.BasinHoppingRunner",
        "numpy",
        "scipy.optimize._basinhopping.RandomDisplacement"
    ],
    "scipy.optimize._basinhopping.Storage": [],
    "scipy.optimize._basinhopping.BasinHoppingRunner": [],
    "scipy.optimize._basinhopping.AdaptiveStepsize": [],
    "scipy.optimize._basinhopping.RandomDisplacement": [],
    "scipy.optimize._basinhopping.MinimizerWrapper": [],
    "scipy.optimize._basinhopping.Metropolis": [],
    "scipy.optimize._linprog": [
        "scipy.optimize._linprog_highs",
        "scipy.optimize._linprog_util",
        "scipy.optimize._linprog_ip",
        "scipy.optimize._linprog_rs",
        "scipy.optimize._linprog_doc",
        "scipy.optimize._linprog_simplex",
        "numpy",
        "scipy.optimize._optimize"
    ],
    "scipy.optimize._linprog_highs": [
        "numpy",
        "scipy.optimize._optimize",
        "scipy.sparse"
    ],
    "scipy.optimize._linprog_ip": [
        "scipy.linalg",
        "scipy",
        "scipy.optimize._linprog_util",
        "scipy.sparse",
        "numpy",
        "scipy.optimize._optimize"
    ],
    "scipy.optimize._linprog_util": [
        "collections.namedtuple",
        "scipy.optimize._remove_redundancy",
        "scipy.sparse",
        "numpy",
        "scipy.optimize._optimize"
    ],
    "scipy.optimize._remove_redundancy": [
        "scipy.linalg",
        "scipy",
        "scipy.linalg.interpolative",
        "numpy",
        "scipy.linalg.blas"
    ],
    "scipy.linalg.interpolative": [
        "numpy",
        "<builtin>.TypeError",
        "scipy.linalg._interpolative_backend",
        "<builtin>.ValueError"
    ],
    "scipy.linalg._interpolative_backend": [
        "numpy",
        "<builtin>.RuntimeError"
    ],
    "scipy.optimize._linprog_simplex": [
        "numpy",
        "scipy.optimize._optimize",
        "scipy.optimize._linprog_util"
    ],
    "scipy.optimize._linprog_rs": [
        "scipy.linalg",
        "scipy.optimize._linprog_util",
        "numpy.linalg",
        "numpy",
        "scipy.optimize._optimize"
    ],
    "scipy.optimize._linprog_doc": [],
    "scipy.optimize._differentialevolution": [
        "scipy.optimize._differentialevolution._ConstraintWrapper",
        "scipy.optimize",
        "scipy.sparse",
        "scipy._lib._util",
        "numpy.core.finfo",
        "scipy.optimize._constraints",
        "numpy",
        "scipy.optimize._optimize",
        "scipy.optimize._differentialevolution.DifferentialEvolutionSolver"
    ],
    "scipy.optimize._differentialevolution.DifferentialEvolutionSolver": [
        "<builtin>.property"
    ],
    "scipy.optimize._differentialevolution._ConstraintWrapper": [],
    "scipy.optimize._lsq.lsq_linear": [
        "scipy.sparse.linalg",
        "scipy.optimize",
        "numpy.linalg",
        "scipy.sparse",
        "scipy.optimize._lsq.common",
        "scipy.optimize._lsq.bvls",
        "numpy",
        "scipy.optimize._lsq.trf_linear"
    ],
    "scipy.optimize._lsq.trf_linear": [
        "scipy.linalg",
        "scipy.sparse.linalg",
        "scipy.optimize",
        "numpy.linalg",
        "scipy.optimize._lsq.common",
        "numpy"
    ],
    "scipy.optimize._lsq.bvls": [
        "numpy",
        "scipy.optimize._lsq.common",
        "scipy.optimize",
        "numpy.linalg"
    ],
    "scipy.optimize._shgo": [
        "scipy.spatial",
        "scipy.optimize._shgo.LMap",
        "scipy.optimize",
        "scipy.optimize._shgo_lib.triangulation",
        "scipy.optimize._shgo.LMapCache",
        "scipy.optimize._constraints",
        "numpy",
        "scipy.optimize._optimize",
        "scipy.optimize._shgo.SHGO"
    ],
    "scipy.spatial": [
        "scipy.spatial.kdtree",
        "scipy.spatial.qhull",
        "scipy.spatial.transform",
        "scipy.spatial._plotutils",
        "scipy.spatial._spherical_voronoi",
        "scipy.spatial._geometric_slerp",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.spatial.ckdtree",
        "scipy.spatial._kdtree",
        "scipy.spatial.distance",
        "<builtin>.dir",
        "scipy.spatial._procrustes",
        "scipy._lib._testutils"
    ],
    "scipy.spatial._kdtree": [
        "numpy",
        "scipy.spatial._kdtree.Rectangle",
        "scipy.spatial._kdtree.KDTree"
    ],
    "scipy.spatial._kdtree.Rectangle": [],
    "scipy.spatial._kdtree.KDTree": [
        "scipy.spatial._kdtree.KDTree.innernode",
        "<builtin>.property",
        "scipy.spatial._kdtree.KDTree.leafnode",
        "scipy.spatial._kdtree.KDTree.node"
    ],
    "scipy.spatial._kdtree.KDTree.node": [
        "<builtin>.staticmethod"
    ],
    "scipy.spatial._kdtree.KDTree.leafnode": [
        "<builtin>.property"
    ],
    "scipy.spatial._kdtree.KDTree.innernode": [
        "<builtin>.property"
    ],
    "scipy.spatial._spherical_voronoi": [
        "numpy",
        "scipy.spatial",
        "scipy",
        "scipy.spatial._spherical_voronoi.SphericalVoronoi"
    ],
    "scipy.spatial._spherical_voronoi.SphericalVoronoi": [],
    "scipy.spatial._plotutils": [
        "numpy",
        "scipy.spatial._plotutils._held_figure",
        "scipy._lib.decorator.decorator",
        "scipy._lib.decorator"
    ],
    "scipy.spatial._plotutils._held_figure": [
        "scipy.spatial._plotutils.voronoi_plot_2d",
        "<builtin>.getattr",
        "scipy.spatial._plotutils.delaunay_plot_2d",
        "scipy.spatial._plotutils.convex_hull_plot_2d"
    ],
    "scipy.spatial._plotutils.delaunay_plot_2d": [
        "scipy.spatial._plotutils._adjust_bounds",
        "<builtin>.ValueError"
    ],
    "scipy.spatial._plotutils._adjust_bounds": [],
    "scipy.spatial._plotutils.convex_hull_plot_2d": [
        "scipy.spatial._plotutils._adjust_bounds",
        "matplotlib.collections.LineCollection",
        "<builtin>.ValueError"
    ],
    "matplotlib.collections.LineCollection": [],
    "scipy.spatial._plotutils.voronoi_plot_2d": [
        "<builtin>.zip",
        "numpy.core.dot",
        "numpy.core.fromnumeric.all",
        "numpy.core.multiarray.dot",
        "numpy.core.numeric.dot",
        "append",
        "scipy.spatial._plotutils._adjust_bounds",
        "<builtin>.ValueError",
        "numpy.linalg.linalg.norm",
        "matplotlib.collections.LineCollection"
    ],
    "numpy.core.fromnumeric.all": [
        "numpy.core.fromnumeric._wrapreduction"
    ],
    "numpy.core.fromnumeric._wrapreduction": [
        "<builtin>.type",
        "<builtin>.getattr"
    ],
    "numpy.linalg.linalg.norm": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.int",
        "numpy.linalg.linalg._multi_svd_norm",
        "<builtin>.tuple",
        "<builtin>.range",
        "<builtin>.issubclass",
        "<builtin>.abs",
        "<builtin>.list",
        "numpy.linalg.linalg.isComplexType",
        "<builtin>.len",
        "<builtin>.ValueError"
    ],
    "numpy.linalg.linalg.isComplexType": [
        "<builtin>.issubclass"
    ],
    "numpy.linalg.linalg._multi_svd_norm": [
        "numpy.core.fromnumeric.amin",
        "numpy.linalg.linalg.svd",
        "numpy.core.numeric.moveaxis",
        "numpy.core.fromnumeric.amax",
        "numpy.core.fromnumeric.sum"
    ],
    "numpy.core.numeric.moveaxis": [
        "",
        "<builtin>.zip",
        "<builtin>.range",
        "numpy.ma.core._arraymethod.wrapped_method",
        "<map>",
        "numpy.core.numeric.normalize_axis_tuple",
        "pandas.core.arrays.base.ExtensionArray.transpose",
        "<builtin>.ValueError",
        "<builtin>.len",
        "pandas.core.base.IndexOpsMixin.transpose",
        "<builtin>.sorted"
    ],
    "numpy.core.numeric.normalize_axis_tuple": [
        "<builtin>.tuple",
        "<builtin>.set",
        "<builtin>.ValueError",
        "<builtin>.len",
        "<builtin>.type"
    ],
    "numpy.linalg.linalg.svd": [
        "numpy.linalg.linalg._commonType",
        "numpy.linalg.linalg.get_linalg_error_extobj",
        "numpy.core.fromnumeric.argsort",
        "numpy.linalg.linalg.eigh",
        "numpy.linalg.linalg._makearray",
        "numpy.lib.shape_base.take_along_axis",
        "numpy.linalg.linalg._assert_stacked_2d",
        "numpy.linalg.linalg.isComplexType",
        "numpy",
        "<builtin>.abs",
        "numpy.linalg.linalg._realType",
        "numpy.core.fromnumeric.sort",
        "numpy.linalg.linalg.transpose",
        "numpy.linalg.linalg.eigvalsh"
    ],
    "numpy.linalg.linalg._makearray": [
        "<builtin>.getattr"
    ],
    "numpy.linalg.linalg.eigvalsh": [
        "numpy.linalg.linalg.isComplexType",
        "numpy.linalg.linalg._commonType",
        "numpy.linalg.linalg.get_linalg_error_extobj",
        "numpy.linalg.linalg._assert_stacked_2d",
        "numpy.linalg.linalg._makearray",
        "numpy.linalg.linalg._realType",
        "<builtin>.ValueError",
        "<str>.upper",
        "numpy.linalg.linalg._assert_stacked_square"
    ],
    "<str>.upper": [],
    "numpy.linalg.linalg.get_linalg_error_extobj": [
        "<builtin>.list"
    ],
    "numpy.linalg.linalg._assert_stacked_2d": [],
    "numpy.linalg.linalg._assert_stacked_square": [],
    "numpy.linalg.linalg._commonType": [
        "<builtin>.issubclass",
        "<builtin>.TypeError",
        "numpy.linalg.linalg._realType",
        "numpy.linalg.linalg.isComplexType"
    ],
    "numpy.linalg.linalg._realType": [
        "<map>.get"
    ],
    "numpy.core.fromnumeric.sort": [],
    "numpy.linalg.linalg.eigh": [
        "numpy.linalg.linalg.isComplexType",
        "numpy.linalg.linalg._commonType",
        "numpy.linalg.linalg.get_linalg_error_extobj",
        "numpy.linalg.linalg._assert_stacked_2d",
        "numpy.linalg.linalg._makearray",
        "numpy.linalg.linalg._realType",
        "<builtin>.ValueError",
        "<str>.upper",
        "numpy.linalg.linalg._assert_stacked_square"
    ],
    "numpy.core.fromnumeric.argsort": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "numpy.core.fromnumeric._wrapfunc": [
        "numpy.core.fromnumeric._wrapit",
        "<builtin>.getattr"
    ],
    "numpy.core.fromnumeric._wrapit": [
        "",
        "<builtin>.isinstance",
        "numpy.ma.core.MaskedConstant.__array_wrap__",
        "<map>",
        "<builtin>.getattr",
        "pandas.core.indexes.base.Index.__array_wrap__",
        "numpy.ma.core.MaskedArray.__array_wrap__"
    ],
    "numpy.lib.shape_base.take_along_axis": [
        "numpy.lib.shape_base._make_along_axis_idx",
        "<builtin>.len"
    ],
    "numpy.lib.shape_base._make_along_axis_idx": [
        "<builtin>.zip",
        "<builtin>.tuple",
        "append",
        "<builtin>.range",
        "<builtin>.IndexError",
        "<builtin>.list",
        "<builtin>.ValueError",
        "<builtin>.len",
        "numpy.core.numerictypes.issubdtype"
    ],
    "numpy.core.numerictypes.issubdtype": [
        "<builtin>.issubclass",
        "numpy.core.numerictypes.issubclass_"
    ],
    "numpy.core.numerictypes.issubclass_": [
        "<builtin>.issubclass"
    ],
    "<builtin>.IndexError": [],
    "numpy.linalg.linalg.transpose": [
        "numpy.core.fromnumeric.swapaxes"
    ],
    "numpy.core.fromnumeric.swapaxes": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "numpy.core.fromnumeric.sum": [
        "numpy.core.fromnumeric._wrapreduction",
        "<builtin>.isinstance",
        "numpy.core.fromnumeric.sum"
    ],
    "numpy.core.fromnumeric.amin": [
        "numpy.core.fromnumeric._wrapreduction"
    ],
    "numpy.core.fromnumeric.amax": [
        "numpy.core.fromnumeric._wrapreduction"
    ],
    "numpy.core.multiarray.dot": [],
    "numpy.core.dot": [],
    "numpy.core.numeric.dot": [],
    "scipy.spatial._procrustes": [
        "numpy",
        "scipy.linalg"
    ],
    "scipy.spatial._geometric_slerp": [
        "numpy",
        "scipy.spatial.distance",
        "numpy.typing"
    ],
    "scipy.spatial.ckdtree": [],
    "scipy.spatial.kdtree": [
        "scipy.spatial._kdtree"
    ],
    "scipy.spatial.qhull": [],
    "scipy.spatial.transform": [
        "scipy.spatial.transform._rotation_spline",
        "scipy._lib._testutils",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.spatial.transform.rotation"
    ],
    "scipy.spatial.transform._rotation_spline": [
        "numpy",
        "scipy.spatial.transform._rotation_spline.RotationSpline",
        "scipy.linalg"
    ],
    "scipy.spatial.transform._rotation_spline.RotationSpline": [],
    "scipy.spatial.transform.rotation": [],
    "scipy.optimize._shgo_lib.triangulation": [
        "scipy.optimize._shgo_lib.triangulation.Simplex",
        "scipy.optimize._shgo_lib.triangulation.VertexCache",
        "scipy.optimize._shgo_lib.triangulation.Cell",
        "scipy.optimize._shgo_lib.triangulation.Vertex",
        "numpy",
        "scipy.optimize._shgo_lib.triangulation.Complex",
        "scipy.optimize._shgo_lib.triangulation.VertexGroup"
    ],
    "scipy.optimize._shgo_lib.triangulation.Complex": [],
    "scipy.optimize._shgo_lib.triangulation.VertexGroup": [],
    "scipy.optimize._shgo_lib.triangulation.Cell": [],
    "scipy.optimize._shgo_lib.triangulation.Simplex": [],
    "scipy.optimize._shgo_lib.triangulation.Vertex": [],
    "scipy.optimize._shgo_lib.triangulation.VertexCache": [],
    "scipy.optimize._shgo.SHGO": [
        "<builtin>.staticmethod"
    ],
    "scipy.optimize._shgo.LMap": [],
    "scipy.optimize._shgo.LMapCache": [],
    "scipy.optimize._dual_annealing": [
        "scipy.optimize._dual_annealing.ObjectiveFunWrapper",
        "scipy.optimize._dual_annealing.EnergyState",
        "scipy.special",
        "scipy.optimize",
        "scipy._lib._util",
        "scipy.optimize._dual_annealing.StrategyChain",
        "scipy.optimize._constraints",
        "numpy",
        "scipy.optimize._dual_annealing.LocalSearchWrapper",
        "scipy.optimize._dual_annealing.VisitingDistribution"
    ],
    "scipy.optimize._dual_annealing.VisitingDistribution": [],
    "scipy.optimize._dual_annealing.EnergyState": [],
    "scipy.optimize._dual_annealing.StrategyChain": [],
    "scipy.optimize._dual_annealing.ObjectiveFunWrapper": [],
    "scipy.optimize._dual_annealing.LocalSearchWrapper": [],
    "scipy.optimize._qap": [
        "numpy",
        "scipy._lib._util",
        "scipy.optimize._optimize"
    ],
    "scipy.optimize._direct_py": [
        "numpy",
        "numpy.typing",
        "scipy.optimize",
        "scipy.optimize._constraints"
    ],
    "scipy.optimize._milp": [
        "scipy.optimize._linprog_highs",
        "scipy.sparse",
        "scipy.optimize._constraints",
        "numpy",
        "scipy.optimize._optimize"
    ],
    "scipy.optimize.cobyla": [
        "scipy.optimize._cobyla_py"
    ],
    "scipy.optimize.lbfgsb": [
        "scipy.optimize._lbfgsb_py"
    ],
    "scipy.optimize.linesearch": [
        "scipy.optimize._linesearch"
    ],
    "scipy.optimize.minpack": [
        "scipy.optimize._minpack_py"
    ],
    "scipy.optimize.minpack2": [],
    "scipy.optimize.moduleTNC": [],
    "scipy.optimize.nonlin": [
        "scipy.optimize._nonlin"
    ],
    "scipy.optimize.optimize": [
        "scipy.optimize._optimize"
    ],
    "scipy.optimize.slsqp": [
        "scipy.optimize._slsqp_py"
    ],
    "scipy.optimize.tnc": [
        "scipy.optimize._tnc"
    ],
    "scipy.optimize.zeros": [
        "scipy.optimize._zeros_py"
    ],
    "scipy.integrate": [
        "scipy.integrate._ivp",
        "scipy.integrate.quadpack",
        "scipy.integrate.vode",
        "scipy.integrate.dop",
        "scipy.integrate.odepack",
        "scipy.integrate._odepack_py",
        "scipy.integrate._bvp",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.integrate._quadrature",
        "scipy.integrate._quadpack_py",
        "scipy.integrate._quad_vec",
        "<builtin>.dir",
        "scipy.integrate.lsoda",
        "scipy._lib._testutils",
        "scipy.integrate._ode"
    ],
    "scipy.integrate._quadrature": [
        "scipy.integrate._quadrature._copy_func",
        "scipy.special",
        "scipy.integrate._quadrature.cache_decorator",
        "scipy.integrate._quadrature.AccuracyWarning",
        "<builtin>.dict",
        "numpy",
        "scipy.integrate._quadrature.CacheAttributes"
    ],
    "scipy.integrate._quadrature._copy_func": [],
    "scipy.integrate._quadrature.AccuracyWarning": [],
    "scipy.integrate._quadrature.CacheAttributes": [],
    "scipy.integrate._quadrature.cache_decorator": [
        "typing.cast"
    ],
    "scipy.integrate._odepack_py": [
        "numpy",
        "scipy.integrate._odepack_py.ODEintWarning"
    ],
    "scipy.integrate._odepack_py.ODEintWarning": [],
    "scipy.integrate._quadpack_py": [
        "scipy.integrate._quadpack_py._RangeFunc",
        "scipy.integrate._quadpack_py.IntegrationWarning",
        "numpy",
        "scipy.integrate._quadpack_py._NQuad",
        "scipy.integrate._quadpack_py._OptFunc"
    ],
    "scipy.integrate._quadpack_py.IntegrationWarning": [],
    "scipy.integrate._quadpack_py._RangeFunc": [],
    "scipy.integrate._quadpack_py._OptFunc": [],
    "scipy.integrate._quadpack_py._NQuad": [],
    "scipy.integrate._ode": [
        "scipy.integrate._ode.IntegratorConcurrencyError",
        "scipy.integrate._ode.complex_ode",
        "scipy.integrate._ode.vode",
        "scipy.integrate._ode.zvode",
        "scipy.integrate._ode.dopri5",
        "append",
        "scipy.integrate._ode.ode",
        "scipy.integrate._ode.lsoda",
        "numpy",
        "scipy.integrate._ode.IntegratorBase",
        "scipy.integrate._ode.dop853"
    ],
    "scipy.integrate._ode.ode": [
        "<builtin>.property"
    ],
    "scipy.integrate._ode.complex_ode": [
        "<builtin>.property"
    ],
    "scipy.integrate._ode.IntegratorConcurrencyError": [],
    "scipy.integrate._ode.IntegratorBase": [],
    "scipy.integrate._ode.vode": [
        "<builtin>.getattr"
    ],
    "scipy.integrate._ode.zvode": [
        "<builtin>.getattr"
    ],
    "scipy.integrate._ode.dopri5": [
        "<builtin>.getattr"
    ],
    "scipy.integrate._ode.dop853": [
        "<builtin>.getattr"
    ],
    "scipy.integrate._ode.lsoda": [
        "<builtin>.getattr"
    ],
    "scipy.integrate._bvp": [
        "scipy.sparse.linalg",
        "scipy.optimize",
        "numpy.linalg",
        "scipy.sparse",
        "scipy.integrate._bvp.BVPResult",
        "numpy.core.finfo",
        "numpy"
    ],
    "scipy.integrate._bvp.BVPResult": [],
    "scipy.integrate._ivp": [
        "scipy.integrate._ivp.bdf",
        "scipy.integrate._ivp.base",
        "scipy.integrate._ivp.ivp",
        "scipy.integrate._ivp.rk",
        "scipy.integrate._ivp.radau",
        "scipy.integrate._ivp.common",
        "scipy.integrate._ivp.lsoda"
    ],
    "scipy.integrate._ivp.ivp": [
        "scipy.integrate._ivp.bdf",
        "scipy.integrate._ivp.base",
        "scipy.optimize",
        "scipy.integrate._ivp.rk",
        "scipy.integrate._ivp.radau",
        "numpy",
        "scipy.integrate._ivp.ivp.OdeResult",
        "scipy.integrate._ivp.common",
        "scipy.integrate._ivp.lsoda"
    ],
    "scipy.integrate._ivp.bdf": [
        "scipy.linalg",
        "scipy.sparse.linalg",
        "scipy.integrate._ivp.base",
        "scipy.integrate._ivp.bdf.BDF",
        "scipy.optimize._numdiff",
        "scipy.sparse",
        "scipy.integrate._ivp.bdf.BdfDenseOutput",
        "numpy",
        "scipy.integrate._ivp.common"
    ],
    "scipy.integrate._ivp.common": [
        "numpy",
        "numpy.core.finfo",
        "scipy.integrate._ivp.common.OdeSolution",
        "scipy.sparse"
    ],
    "scipy.integrate._ivp.common.OdeSolution": [],
    "scipy.integrate._ivp.base": [
        "numpy",
        "scipy.integrate._ivp.base.OdeSolver",
        "scipy.integrate._ivp.base.ConstantDenseOutput",
        "scipy.integrate._ivp.base.DenseOutput"
    ],
    "scipy.integrate._ivp.base.OdeSolver": [
        "<builtin>.property"
    ],
    "scipy.integrate._ivp.base.DenseOutput": [],
    "scipy.integrate._ivp.base.ConstantDenseOutput": [],
    "scipy.integrate._ivp.bdf.BDF": [],
    "scipy.integrate._ivp.bdf.BdfDenseOutput": [],
    "scipy.integrate._ivp.radau": [
        "scipy.linalg",
        "scipy.sparse.linalg",
        "scipy.integrate._ivp.base",
        "scipy.optimize._numdiff",
        "scipy.integrate._ivp.radau.Radau",
        "scipy.sparse",
        "scipy.integrate._ivp.radau.RadauDenseOutput",
        "numpy",
        "scipy.integrate._ivp.common"
    ],
    "scipy.integrate._ivp.radau.Radau": [],
    "scipy.integrate._ivp.radau.RadauDenseOutput": [],
    "scipy.integrate._ivp.rk": [
        "scipy.integrate._ivp.rk.Dop853DenseOutput",
        "scipy.integrate._ivp.base",
        "scipy.integrate._ivp.rk.RungeKutta",
        "scipy.integrate._ivp.rk.RkDenseOutput",
        "scipy.integrate._ivp.rk.RK45",
        "scipy.integrate._ivp.dop853_coefficients",
        "scipy.integrate._ivp.rk.DOP853",
        "numpy",
        "scipy.integrate._ivp.common",
        "scipy.integrate._ivp.rk.RK23"
    ],
    "scipy.integrate._ivp.dop853_coefficients": [
        "numpy"
    ],
    "scipy.integrate._ivp.rk.RungeKutta": [],
    "scipy.integrate._ivp.rk.RK23": [],
    "scipy.integrate._ivp.rk.RK45": [],
    "scipy.integrate._ivp.rk.DOP853": [],
    "scipy.integrate._ivp.rk.RkDenseOutput": [],
    "scipy.integrate._ivp.rk.Dop853DenseOutput": [],
    "scipy.integrate._ivp.lsoda": [
        "scipy.integrate._ivp.lsoda.LsodaDenseOutput",
        "scipy.integrate._ivp.base",
        "scipy.integrate",
        "numpy",
        "scipy.integrate._ivp.common",
        "scipy.integrate._ivp.lsoda.LSODA"
    ],
    "scipy.integrate._ivp.lsoda.LSODA": [],
    "scipy.integrate._ivp.lsoda.LsodaDenseOutput": [],
    "scipy.integrate._ivp.ivp.OdeResult": [],
    "scipy.integrate._quad_vec": [
        "scipy.integrate._quad_vec.SemiInfiniteFunc",
        "scipy.integrate._quad_vec._Bunch",
        "scipy._lib._util",
        "scipy.integrate._quad_vec.LRUDict",
        "numpy",
        "scipy.integrate._quad_vec.DoubleInfiniteFunc"
    ],
    "scipy.integrate._quad_vec.LRUDict": [],
    "scipy.integrate._quad_vec.SemiInfiniteFunc": [],
    "scipy.integrate._quad_vec.DoubleInfiniteFunc": [],
    "scipy.integrate._quad_vec._Bunch": [],
    "scipy.integrate.dop": [],
    "scipy.integrate.lsoda": [],
    "scipy.integrate.vode": [],
    "scipy.integrate.odepack": [
        "scipy.integrate._odepack_py"
    ],
    "scipy.integrate.quadpack": [
        "scipy.integrate._quadpack_py"
    ],
    "scipy.misc": [
        "scipy.misc.common",
        "scipy.misc.doccer",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.misc._common",
        "scipy._lib._testutils"
    ],
    "scipy.misc._common": [
        "numpy"
    ],
    "scipy.misc.common": [
        "scipy.misc._common"
    ],
    "scipy.misc.doccer": [
        "scipy._lib.doccer"
    ],
    "scipy.stats._constants": [
        "numpy",
        "numpy.core.finfo"
    ],
    "<map>.pop": [],
    "scipy.stats._distn_infrastructure.rv_frozen": [
        "<builtin>.property"
    ],
    "scipy.stats._distn_infrastructure.rv_discrete_frozen": [],
    "scipy.stats._distn_infrastructure.rv_continuous_frozen": [],
    "scipy.stats._distn_infrastructure.rv_generic": [
        "<builtin>.property"
    ],
    "scipy.stats._distn_infrastructure._ShapeInfo": [],
    "scipy.stats._distn_infrastructure.rv_continuous": [],
    "scipy.stats._distn_infrastructure.rv_discrete": [],
    "scipy.stats._distn_infrastructure.rv_sample": [],
    "scipy.stats._continuous_distns": [
        "scipy.stats._continuous_distns.burr12_gen",
        "scipy.stats._continuous_distns.gengamma_gen",
        "numpy.lib.utils.deprecate",
        "scipy.stats._continuous_distns.exponpow_gen",
        "scipy.stats._continuous_distns.skewcauchy_gen",
        "numpy",
        "<builtin>.globals",
        "scipy.stats._distn_infrastructure",
        "scipy.stats._ksstats",
        "scipy.integrate",
        "scipy.stats._continuous_distns.levy_l_gen",
        "scipy.stats._continuous_distns.gumbel_r_gen",
        "scipy.special",
        "scipy.stats._continuous_distns.norminvgauss_gen",
        "scipy.stats._continuous_distns.ksone_gen",
        "scipy.stats._continuous_distns.johnsonsu_gen",
        "scipy.stats._continuous_distns.gennorm_gen",
        "scipy.stats._continuous_distns.nakagami_gen",
        "scipy.stats._continuous_distns.FitUniformFixedScaleDataError",
        "scipy._lib._util",
        "scipy.stats._continuous_distns.nct_gen",
        "scipy.stats._continuous_distns.loggamma_gen",
        "scipy.stats._continuous_distns.logistic_gen",
        "scipy.stats._continuous_distns.kappa4_gen",
        "scipy.stats._continuous_distns.powerlognorm_gen",
        "scipy.stats._continuous_distns.genhyperbolic_gen",
        "scipy.stats._continuous_distns.beta_gen",
        "scipy.stats._continuous_distns.genextreme_gen",
        "scipy.stats._continuous_distns.invgauss_gen",
        "scipy.stats._continuous_distns.invweibull_gen",
        "scipy.stats._continuous_distns.laplace_asymmetric_gen",
        "<builtin>.setattr",
        "scipy.stats._continuous_distns.ncx2_gen",
        "scipy.stats._continuous_distns.f_gen",
        "scipy.stats._continuous_distns.kappa3_gen",
        "scipy.stats._continuous_distns.norm_gen",
        "scipy.stats._continuous_distns.rayleigh_gen",
        "scipy.stats._continuous_distns.alpha_gen",
        "scipy.stats._continuous_distns.exponweib_gen",
        "scipy.stats._continuous_distns.kstwo_gen",
        "scipy.stats._continuous_distns.gumbel_l_gen",
        "scipy.stats._continuous_distns.mielke_gen",
        "scipy.stats._continuous_distns.chi_gen",
        "scipy.stats._tukeylambda_stats",
        "scipy.stats._continuous_distns.exponnorm_gen",
        "scipy.stats._continuous_distns.hypsecant_gen",
        "scipy.stats._continuous_distns.maxwell_gen",
        "scipy.stats._continuous_distns.weibull_min_gen",
        "scipy.stats._continuous_distns.dgamma_gen",
        "scipy.stats._boost",
        "scipy.stats._continuous_distns.erlang_gen",
        "scipy.stats._continuous_distns.uniform_gen",
        "<builtin>.list",
        "scipy.stats._continuous_distns.triang_gen",
        "scipy.stats._continuous_distns.lognorm_gen",
        "scipy.stats._continuous_distns.gamma_gen",
        "scipy.stats._continuous_distns.truncweibull_min_gen",
        "scipy.stats._continuous_distns.laplace_gen",
        "scipy.stats._distn_infrastructure.get_distribution_names",
        "scipy._lib.doccer",
        "scipy.stats._continuous_distns.reciprocal_gen",
        "scipy.stats._continuous_distns.gibrat_gen",
        "scipy.stats._continuous_distns.genlogistic_gen",
        "scipy.stats._continuous_distns.gilbrat_gen",
        "scipy.stats._continuous_distns.powerlaw_gen",
        "scipy.stats._continuous_distns.truncnorm_gen",
        "scipy.stats._continuous_distns.vonmises_gen",
        "scipy.stats._continuous_distns.gausshyper_gen",
        "scipy.stats._continuous_distns.tukeylambda_gen",
        "scipy.stats._continuous_distns.expon_gen",
        "scipy.stats._continuous_distns.fatiguelife_gen",
        "scipy.stats._continuous_distns.lomax_gen",
        "scipy.stats._warnings_errors",
        "scipy.stats._continuous_distns.levy_gen",
        "scipy.stats._continuous_distns.rice_gen",
        "scipy.stats._continuous_distns.genhalflogistic_gen",
        "scipy.stats._continuous_distns.halfnorm_gen",
        "scipy.stats._continuous_distns.weibull_max_gen",
        "scipy.stats._continuous_distns.genpareto_gen",
        "scipy.stats._continuous_distns.johnsonsb_gen",
        "scipy.stats._continuous_distns.halfgennorm_gen",
        "scipy.stats._continuous_distns.FitDataError",
        "scipy.stats._continuous_distns.foldcauchy_gen",
        "scipy.stats._constants",
        "scipy.stats._continuous_distns.wald_gen",
        "scipy.stats._continuous_distns.skew_norm_gen",
        "<builtin>.getattr",
        "scipy.stats._continuous_distns.cauchy_gen",
        "scipy.stats._continuous_distns.trapezoid_gen",
        "scipy.stats._continuous_distns.arcsine_gen",
        "scipy.stats._continuous_distns.cosine_gen",
        "scipy.stats._continuous_distns.chi2_gen",
        "scipy.stats._continuous_distns.FitSolverError",
        "scipy.stats._continuous_distns.studentized_range_gen",
        "scipy.stats._continuous_distns.semicircular_gen",
        "scipy.stats._continuous_distns.wrapcauchy_gen",
        "scipy.stats._continuous_distns.kstwobign_gen",
        "scipy.stats._continuous_distns.dweibull_gen",
        "scipy.stats._continuous_distns.foldnorm_gen",
        "scipy.stats._continuous_distns.pearson3_gen",
        "scipy.stats._continuous_distns.bradford_gen",
        "scipy.optimize",
        "scipy.stats._continuous_distns.betaprime_gen",
        "scipy.stats._continuous_distns.argus_gen",
        "scipy._lib._ccallback",
        "scipy.stats._continuous_distns.invgamma_gen",
        "scipy.stats._continuous_distns.halflogistic_gen",
        "scipy.stats._continuous_distns.geninvgauss_gen",
        "scipy.stats._continuous_distns.rv_histogram",
        "scipy.stats._continuous_distns.moyal_gen",
        "scipy.stats._continuous_distns.burr_gen",
        "scipy.stats._continuous_distns.powernorm_gen",
        "scipy.stats._continuous_distns.recipinvgauss_gen",
        "scipy.stats._continuous_distns.loglaplace_gen",
        "scipy.stats._continuous_distns.pareto_gen",
        "scipy.stats._continuous_distns.ncf_gen",
        "scipy.stats._continuous_distns.anglit_gen",
        "scipy.stats._continuous_distns.rdist_gen",
        "scipy.stats._continuous_distns.fisk_gen",
        "scipy.stats._continuous_distns.halfcauchy_gen",
        "scipy.stats._continuous_distns.t_gen",
        "scipy.stats._continuous_distns.truncexpon_gen",
        "scipy.stats._continuous_distns.gompertz_gen",
        "scipy.stats._continuous_distns.crystalball_gen",
        "scipy.stats._continuous_distns.genexpon_gen"
    ],
    "scipy.stats._tukeylambda_stats": [
        "numpy",
        "numpy.lib.polynomial.poly1d.__init__",
        "scipy.special"
    ],
    "numpy.lib.polynomial.poly1d.__init__": [
        "<builtin>.isinstance",
        "numpy.core.shape_base.atleast_1d",
        "<builtin>.set",
        "numpy.lib.polynomial.poly",
        "<builtin>.ValueError",
        "numpy.lib.function_base.trim_zeros",
        "<builtin>.len"
    ],
    "numpy.lib.polynomial.poly": [
        "numpy.core.numeric.convolve",
        "numpy.core.shape_base.atleast_1d",
        "numpy.lib.type_check.mintypecode",
        "numpy.core.fromnumeric.all",
        "<builtin>.issubclass",
        "<builtin>.ValueError",
        "<builtin>.len",
        "numpy.linalg.linalg.eigvals",
        "numpy.core.numeric.ones",
        "numpy.core.fromnumeric.sort"
    ],
    "numpy.core.shape_base.atleast_1d": [
        "append",
        "<builtin>.len"
    ],
    "numpy.lib.type_check.mintypecode": [
        "<builtin>.set",
        "<builtin>.min",
        "<builtin>.isinstance"
    ],
    "numpy.linalg.linalg.eigvals": [
        "numpy.linalg.linalg._commonType",
        "numpy.linalg.linalg.get_linalg_error_extobj",
        "numpy.linalg.linalg._complexType",
        "numpy.linalg.linalg._assert_finite",
        "numpy.linalg.linalg._assert_stacked_2d",
        "numpy.linalg.linalg._makearray",
        "<builtin>.all",
        "numpy.linalg.linalg.isComplexType",
        "numpy.linalg.linalg._realType",
        "numpy.linalg.linalg._assert_stacked_square"
    ],
    "numpy.linalg.linalg._assert_finite": [],
    "<builtin>.all": [],
    "numpy.linalg.linalg._complexType": [
        "<map>.get"
    ],
    "numpy.core.numeric.ones": [
        "numpy.core.multiarray.copyto"
    ],
    "numpy.core.multiarray.copyto": [],
    "numpy.core.numeric.convolve": [
        "<builtin>.len",
        "<builtin>.ValueError"
    ],
    "numpy.lib.function_base.trim_zeros": [
        "<str>.upper",
        "<builtin>.len"
    ],
    "scipy.stats._ksstats": [
        "numpy",
        "scipy.misc",
        "scipy.special"
    ],
    "scipy.stats._boost": [],
    "scipy.stats._continuous_distns.ksone_gen": [],
    "scipy.stats._continuous_distns.kstwo_gen": [],
    "scipy.stats._continuous_distns.kstwobign_gen": [],
    "scipy.stats._continuous_distns.norm_gen": [
        "scipy._lib.doccer.replace_notes_in_docstring._doc",
        "scipy.stats._continuous_distns._call_super_mom",
        "scipy._lib.doccer.replace_notes_in_docstring"
    ],
    "scipy._lib.doccer.replace_notes_in_docstring": [],
    "scipy._lib.doccer.replace_notes_in_docstring._doc": [
        "<builtin>.len",
        "<builtin>.getattr"
    ],
    "scipy.stats._continuous_distns._call_super_mom": [
        "functools.wraps"
    ],
    "scipy.stats._continuous_distns.alpha_gen": [],
    "scipy.stats._continuous_distns.anglit_gen": [],
    "scipy.stats._continuous_distns.arcsine_gen": [],
    "scipy.stats._continuous_distns.FitDataError": [],
    "scipy.stats._continuous_distns.FitSolverError": [],
    "scipy.stats._continuous_distns.beta_gen": [
        "scipy._lib.doccer.extend_notes_in_docstring._doc",
        "scipy.stats._continuous_distns._call_super_mom",
        "scipy._lib.doccer.extend_notes_in_docstring"
    ],
    "scipy._lib.doccer.extend_notes_in_docstring": [],
    "scipy._lib.doccer.extend_notes_in_docstring._doc": [
        "<builtin>.len",
        "<builtin>.getattr"
    ],
    "scipy.stats._continuous_distns.betaprime_gen": [],
    "scipy.stats._continuous_distns.bradford_gen": [],
    "scipy.stats._continuous_distns.burr_gen": [],
    "scipy.stats._continuous_distns.burr12_gen": [],
    "scipy.stats._continuous_distns.fisk_gen": [],
    "scipy.stats._continuous_distns.cauchy_gen": [],
    "scipy.stats._continuous_distns.chi_gen": [],
    "scipy.stats._continuous_distns.chi2_gen": [],
    "scipy.stats._continuous_distns.cosine_gen": [],
    "scipy.stats._continuous_distns.dgamma_gen": [],
    "scipy.stats._continuous_distns.dweibull_gen": [],
    "scipy.stats._continuous_distns.expon_gen": [
        "scipy._lib.doccer.replace_notes_in_docstring._doc",
        "scipy.stats._continuous_distns._call_super_mom",
        "scipy._lib.doccer.replace_notes_in_docstring"
    ],
    "scipy.stats._continuous_distns.exponnorm_gen": [],
    "scipy.stats._continuous_distns.exponweib_gen": [],
    "scipy.stats._continuous_distns.exponpow_gen": [],
    "scipy.stats._continuous_distns.fatiguelife_gen": [],
    "scipy.stats._continuous_distns.foldcauchy_gen": [],
    "scipy.stats._continuous_distns.f_gen": [],
    "scipy.stats._continuous_distns.foldnorm_gen": [],
    "scipy.stats._continuous_distns.weibull_min_gen": [],
    "scipy.stats._continuous_distns.truncweibull_min_gen": [],
    "scipy.stats._continuous_distns.weibull_max_gen": [],
    "scipy.stats._continuous_distns.genlogistic_gen": [],
    "scipy.stats._continuous_distns.genpareto_gen": [],
    "scipy.stats._continuous_distns.genexpon_gen": [],
    "scipy.stats._continuous_distns.genextreme_gen": [],
    "scipy.stats._continuous_distns.gamma_gen": [
        "scipy._lib.doccer.extend_notes_in_docstring._doc",
        "scipy._lib.doccer.extend_notes_in_docstring"
    ],
    "scipy.stats._continuous_distns.erlang_gen": [
        "scipy._lib.doccer.extend_notes_in_docstring._doc",
        "scipy._lib.doccer.extend_notes_in_docstring"
    ],
    "scipy.stats._continuous_distns.gengamma_gen": [],
    "scipy.stats._continuous_distns.genhalflogistic_gen": [],
    "scipy.stats._continuous_distns.genhyperbolic_gen": [],
    "scipy.stats._continuous_distns.gompertz_gen": [],
    "scipy.stats._continuous_distns.gumbel_r_gen": [
        "scipy._lib.doccer.inherit_docstring_from",
        "scipy.stats._continuous_distns._call_super_mom",
        "scipy._lib.doccer.inherit_docstring_from._doc"
    ],
    "scipy._lib.doccer.inherit_docstring_from": [],
    "scipy._lib.doccer.inherit_docstring_from._doc": [
        "<builtin>.dict",
        "<builtin>.getattr"
    ],
    "scipy.stats._continuous_distns.gumbel_l_gen": [
        "scipy._lib.doccer.inherit_docstring_from",
        "scipy.stats._continuous_distns._call_super_mom",
        "scipy._lib.doccer.inherit_docstring_from._doc"
    ],
    "scipy.stats._continuous_distns.halfcauchy_gen": [],
    "scipy.stats._continuous_distns.halflogistic_gen": [],
    "scipy.stats._continuous_distns.halfnorm_gen": [],
    "scipy.stats._continuous_distns.hypsecant_gen": [],
    "scipy.stats._continuous_distns.gausshyper_gen": [],
    "scipy.stats._continuous_distns.invgamma_gen": [],
    "scipy.stats._continuous_distns.invgauss_gen": [
        "scipy._lib.doccer.inherit_docstring_from",
        "scipy._lib.doccer.inherit_docstring_from._doc"
    ],
    "scipy.stats._continuous_distns.geninvgauss_gen": [],
    "scipy.stats._continuous_distns.norminvgauss_gen": [],
    "scipy.stats._continuous_distns.invweibull_gen": [],
    "scipy.stats._continuous_distns.johnsonsb_gen": [],
    "scipy.stats._continuous_distns.johnsonsu_gen": [],
    "scipy.stats._continuous_distns.laplace_gen": [
        "scipy._lib.doccer.replace_notes_in_docstring._doc",
        "scipy.stats._continuous_distns._call_super_mom",
        "scipy._lib.doccer.replace_notes_in_docstring"
    ],
    "scipy.stats._continuous_distns.laplace_asymmetric_gen": [],
    "scipy.stats._continuous_distns.levy_gen": [],
    "scipy.stats._continuous_distns.levy_l_gen": [],
    "scipy.stats._continuous_distns.logistic_gen": [
        "scipy._lib.doccer.inherit_docstring_from",
        "scipy.stats._continuous_distns._call_super_mom",
        "scipy._lib.doccer.inherit_docstring_from._doc"
    ],
    "scipy.stats._continuous_distns.loggamma_gen": [],
    "scipy.stats._continuous_distns.loglaplace_gen": [],
    "scipy.stats._continuous_distns.lognorm_gen": [
        "scipy._lib.doccer.extend_notes_in_docstring._doc",
        "scipy.stats._continuous_distns._call_super_mom",
        "scipy._lib.doccer.extend_notes_in_docstring"
    ],
    "scipy.stats._continuous_distns.gibrat_gen": [],
    "scipy.stats._continuous_distns.gilbrat_gen": [],
    "numpy.lib.utils.deprecate": [
        "numpy.lib.utils._Deprecate.__init__"
    ],
    "numpy.lib.utils._Deprecate.__init__": [],
    "scipy.stats._continuous_distns.maxwell_gen": [],
    "scipy.stats._continuous_distns.mielke_gen": [],
    "scipy.stats._continuous_distns.kappa4_gen": [],
    "scipy.stats._continuous_distns.kappa3_gen": [],
    "scipy.stats._continuous_distns.moyal_gen": [],
    "scipy.stats._continuous_distns.nakagami_gen": [],
    "scipy.stats._continuous_distns.ncx2_gen": [],
    "scipy.stats._continuous_distns.ncf_gen": [],
    "scipy.stats._continuous_distns.t_gen": [],
    "scipy.stats._continuous_distns.nct_gen": [],
    "scipy.stats._continuous_distns.pareto_gen": [
        "scipy._lib.doccer.inherit_docstring_from",
        "scipy.stats._continuous_distns._call_super_mom",
        "scipy._lib.doccer.inherit_docstring_from._doc"
    ],
    "scipy.stats._continuous_distns.lomax_gen": [],
    "scipy.stats._continuous_distns.pearson3_gen": [
        "scipy._lib.doccer.extend_notes_in_docstring._doc",
        "scipy.stats._continuous_distns._call_super_mom",
        "scipy._lib.doccer.extend_notes_in_docstring"
    ],
    "scipy.stats._continuous_distns.powerlaw_gen": [],
    "scipy.stats._continuous_distns.powerlognorm_gen": [],
    "scipy.stats._continuous_distns.powernorm_gen": [],
    "scipy.stats._continuous_distns.rdist_gen": [],
    "scipy.stats._continuous_distns.rayleigh_gen": [
        "scipy._lib.doccer.extend_notes_in_docstring._doc",
        "scipy.stats._continuous_distns._call_super_mom",
        "scipy._lib.doccer.extend_notes_in_docstring"
    ],
    "scipy.stats._continuous_distns.reciprocal_gen": [
        "scipy._lib.doccer.extend_notes_in_docstring._doc",
        "scipy._lib.doccer.extend_notes_in_docstring"
    ],
    "scipy.stats._continuous_distns.rice_gen": [],
    "scipy.stats._continuous_distns.recipinvgauss_gen": [],
    "scipy.stats._continuous_distns.semicircular_gen": [],
    "scipy.stats._continuous_distns.skewcauchy_gen": [],
    "scipy.stats._continuous_distns.skew_norm_gen": [],
    "scipy.stats._continuous_distns.trapezoid_gen": [],
    "scipy.stats._continuous_distns.triang_gen": [],
    "scipy.stats._continuous_distns.truncexpon_gen": [],
    "scipy.stats._continuous_distns.truncnorm_gen": [],
    "scipy.stats._continuous_distns.tukeylambda_gen": [],
    "scipy.stats._continuous_distns.FitUniformFixedScaleDataError": [],
    "scipy.stats._continuous_distns.uniform_gen": [
        "scipy.stats._continuous_distns._call_super_mom"
    ],
    "scipy.stats._continuous_distns.vonmises_gen": [
        "scipy._lib.doccer.inherit_docstring_from",
        "scipy._lib.doccer.inherit_docstring_from._doc"
    ],
    "scipy.stats._continuous_distns.wald_gen": [],
    "scipy.stats._continuous_distns.wrapcauchy_gen": [],
    "scipy.stats._continuous_distns.gennorm_gen": [],
    "scipy.stats._continuous_distns.halfgennorm_gen": [],
    "scipy.stats._continuous_distns.crystalball_gen": [],
    "scipy.stats._continuous_distns.argus_gen": [],
    "scipy.stats._continuous_distns.rv_histogram": [],
    "scipy.stats._continuous_distns.studentized_range_gen": [],
    "scipy.stats._distn_infrastructure.get_distribution_names": [
        "<builtin>.issubclass",
        "append",
        "<builtin>.isinstance"
    ],
    "scipy.stats._discrete_distns": [
        "scipy.stats._discrete_distns.zipf_gen",
        "scipy.stats._discrete_distns.zipfian_gen",
        "scipy.stats._discrete_distns.binom_gen",
        "scipy.stats._discrete_distns.boltzmann_gen",
        "scipy.stats._discrete_distns.poisson_gen",
        "scipy.stats._discrete_distns.yulesimon_gen",
        "scipy.stats._discrete_distns.planck_gen",
        "scipy.stats._discrete_distns.nbinom_gen",
        "scipy.stats._discrete_distns.geom_gen",
        "numpy",
        "<builtin>.globals",
        "scipy.stats._discrete_distns.hypergeom_gen",
        "scipy.stats._discrete_distns.nhypergeom_gen",
        "scipy.stats._distn_infrastructure",
        "scipy.stats._discrete_distns.skellam_gen",
        "scipy.stats._discrete_distns._nchypergeom_gen",
        "scipy.special",
        "scipy.stats._boost",
        "scipy.stats._discrete_distns.betabinom_gen",
        "scipy.interpolate",
        "<builtin>.list",
        "scipy.stats._discrete_distns.logser_gen",
        "scipy.stats._discrete_distns.dlaplace_gen",
        "scipy.stats._discrete_distns.bernoulli_gen",
        "scipy.stats._discrete_distns.randint_gen",
        "scipy.stats._distn_infrastructure.get_distribution_names",
        "scipy._lib._util",
        "scipy.stats._discrete_distns.nchypergeom_wallenius_gen",
        "scipy.stats._discrete_distns.nchypergeom_fisher_gen"
    ],
    "scipy.interpolate": [
        "scipy.interpolate._pade",
        "scipy.interpolate._rbfinterp",
        "scipy.interpolate._rgi",
        "scipy.interpolate._polyint",
        "scipy.interpolate._rbf",
        "scipy.interpolate._fitpack2",
        "scipy.interpolate._interpolate",
        "scipy.interpolate.fitpack2",
        "scipy.interpolate._fitpack_py",
        "scipy.interpolate.fitpack",
        "scipy.interpolate._cubic",
        "scipy.interpolate._bsplines",
        "scipy._lib._testutils",
        "scipy.interpolate.polyint",
        "scipy.interpolate._ndgriddata",
        "scipy.interpolate.ndgriddata",
        "scipy.interpolate.rbf",
        "scipy._lib._testutils.PytestTester.__init__",
        "<builtin>.dir",
        "scipy.interpolate.interpolate"
    ],
    "scipy.interpolate._interpolate": [
        "scipy.interpolate._fitpack2",
        "scipy.interpolate._interpolate.NdPPoly",
        "scipy.interpolate._fitpack_py",
        "scipy.interpolate._interpolate._PPolyBase",
        "scipy.special",
        "scipy.interpolate._interpolate.BPoly",
        "scipy.interpolate._interpolate.interp2d",
        "scipy.interpolate._interpolate.PPoly",
        "scipy._lib._util",
        "scipy.interpolate._bsplines",
        "numpy",
        "scipy.interpolate._interpolate.interp1d",
        "scipy.interpolate._polyint"
    ],
    "scipy.interpolate._fitpack_py": [
        "numpy",
        "scipy.interpolate._fitpack_impl",
        "scipy.interpolate._bsplines"
    ],
    "scipy.interpolate._fitpack_impl": [
        "numpy"
    ],
    "scipy.interpolate._bsplines": [
        "scipy.interpolate._bsplines.BSpline",
        "scipy.linalg",
        "numpy.core.multiarray",
        "scipy.special",
        "scipy.sparse",
        "scipy.interpolate._fitpack_impl",
        "scipy._lib._util",
        "numpy"
    ],
    "scipy.interpolate._bsplines.BSpline": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "scipy.interpolate._polyint": [
        "scipy.interpolate._polyint._Interpolator1DWithDerivatives",
        "scipy.interpolate._polyint._Interpolator1D",
        "scipy.interpolate._polyint.BarycentricInterpolator",
        "scipy.special",
        "scipy._lib._util",
        "scipy.interpolate._polyint.KroghInterpolator",
        "numpy"
    ],
    "scipy.interpolate._polyint._Interpolator1D": [],
    "scipy.interpolate._polyint._Interpolator1DWithDerivatives": [],
    "scipy.interpolate._polyint.KroghInterpolator": [],
    "scipy.interpolate._polyint.BarycentricInterpolator": [],
    "scipy.interpolate._fitpack2": [
        "scipy.interpolate._fitpack2.BivariateSpline",
        "scipy.interpolate._fitpack2.LSQSphereBivariateSpline",
        "scipy.interpolate._fitpack_py",
        "<map>.copy",
        "scipy.interpolate._fitpack2.RectBivariateSpline",
        "scipy.interpolate._fitpack2._DerivedBivariateSpline",
        "scipy.interpolate._fitpack2.SmoothBivariateSpline",
        "scipy.interpolate._fitpack2.InterpolatedUnivariateSpline",
        "scipy.interpolate._fitpack2.RectSphereBivariateSpline",
        "scipy.interpolate._fitpack2.SmoothSphereBivariateSpline",
        "scipy.interpolate._fitpack2._BivariateSplineBase",
        "scipy.interpolate._fitpack2.SphereBivariateSpline",
        "numpy",
        "scipy.interpolate._fitpack2.LSQUnivariateSpline",
        "scipy.interpolate._fitpack2.UnivariateSpline",
        "scipy.interpolate._fitpack2.LSQBivariateSpline"
    ],
    "scipy.interpolate._fitpack2.UnivariateSpline": [
        "<builtin>.staticmethod",
        "<builtin>.classmethod"
    ],
    "scipy.interpolate._fitpack2.InterpolatedUnivariateSpline": [],
    "scipy.interpolate._fitpack2.LSQUnivariateSpline": [],
    "scipy.interpolate._fitpack2._BivariateSplineBase": [
        "<builtin>.classmethod"
    ],
    "scipy.interpolate._fitpack2.BivariateSpline": [
        "<builtin>.staticmethod"
    ],
    "scipy.interpolate._fitpack2._DerivedBivariateSpline": [
        "<builtin>.property"
    ],
    "scipy.interpolate._fitpack2.SmoothBivariateSpline": [],
    "scipy.interpolate._fitpack2.LSQBivariateSpline": [],
    "scipy.interpolate._fitpack2.RectBivariateSpline": [],
    "scipy.interpolate._fitpack2.SphereBivariateSpline": [],
    "scipy.interpolate._fitpack2.SmoothSphereBivariateSpline": [],
    "scipy.interpolate._fitpack2.LSQSphereBivariateSpline": [],
    "scipy.interpolate._fitpack2.RectSphereBivariateSpline": [],
    "scipy.interpolate._interpolate.interp2d": [],
    "scipy.interpolate._interpolate.interp1d": [
        "<builtin>.property"
    ],
    "scipy.interpolate._interpolate._PPolyBase": [
        "<builtin>.classmethod"
    ],
    "scipy.interpolate._interpolate.PPoly": [
        "<builtin>.classmethod"
    ],
    "scipy.interpolate._interpolate.BPoly": [
        "<builtin>.staticmethod",
        "<builtin>.classmethod"
    ],
    "scipy.interpolate._interpolate.NdPPoly": [
        "<builtin>.classmethod"
    ],
    "scipy.interpolate._rbf": [
        "scipy.linalg",
        "scipy.special",
        "scipy.interpolate._rbf.Rbf",
        "scipy.spatial.distance",
        "numpy"
    ],
    "scipy.interpolate._rbf.Rbf": [
        "<builtin>.property"
    ],
    "scipy.interpolate._rbfinterp": [
        "scipy.spatial",
        "scipy.interpolate._rbfinterp.RBFInterpolator",
        "scipy.special",
        "numpy.linalg",
        "scipy.linalg.lapack",
        "numpy",
        "scipy.interpolate._rbfinterp_pythran"
    ],
    "scipy.interpolate._rbfinterp_pythran": [
        "numpy"
    ],
    "scipy.interpolate._rbfinterp.RBFInterpolator": [],
    "scipy.interpolate._cubic": [
        "scipy.interpolate._cubic.CubicHermiteSpline",
        "scipy.linalg",
        "scipy.interpolate._cubic.PchipInterpolator",
        "scipy.interpolate._cubic.Akima1DInterpolator",
        "numpy",
        "scipy.interpolate._cubic.CubicSpline",
        "scipy.interpolate._polyint"
    ],
    "scipy.interpolate._cubic.CubicHermiteSpline": [],
    "scipy.interpolate._cubic.PchipInterpolator": [
        "<builtin>.staticmethod"
    ],
    "scipy.interpolate._cubic.Akima1DInterpolator": [
        "<builtin>.classmethod"
    ],
    "scipy.interpolate._cubic.CubicSpline": [
        "<builtin>.staticmethod"
    ],
    "scipy.interpolate._ndgriddata": [
        "numpy",
        "scipy.spatial",
        "scipy.interpolate._ndgriddata.NearestNDInterpolator"
    ],
    "scipy.interpolate._ndgriddata.NearestNDInterpolator": [],
    "scipy.interpolate._pade": [
        "numpy",
        "scipy.linalg"
    ],
    "scipy.interpolate._rgi": [
        "scipy.interpolate._fitpack2",
        "scipy.interpolate._rgi.RegularGridInterpolator",
        "scipy.interpolate._cubic",
        "scipy.interpolate._bsplines",
        "numpy"
    ],
    "scipy.interpolate._rgi.RegularGridInterpolator": [
        "<builtin>.list",
        "<builtin>.staticmethod",
        "<map>.keys"
    ],
    "scipy.interpolate.fitpack": [
        "scipy.interpolate._fitpack_py"
    ],
    "scipy.interpolate.fitpack2": [
        "scipy.interpolate._fitpack2"
    ],
    "scipy.interpolate.interpolate": [
        "scipy.interpolate._interpolate"
    ],
    "scipy.interpolate.ndgriddata": [
        "scipy.interpolate._ndgriddata"
    ],
    "scipy.interpolate.polyint": [
        "scipy.interpolate._polyint"
    ],
    "scipy.interpolate.rbf": [
        "scipy.interpolate._rbf"
    ],
    "scipy.stats._discrete_distns.binom_gen": [],
    "scipy.stats._discrete_distns.bernoulli_gen": [],
    "scipy.stats._discrete_distns.betabinom_gen": [],
    "scipy.stats._discrete_distns.nbinom_gen": [],
    "scipy.stats._discrete_distns.geom_gen": [],
    "scipy.stats._discrete_distns.hypergeom_gen": [],
    "scipy.stats._discrete_distns.nhypergeom_gen": [],
    "scipy.stats._discrete_distns.logser_gen": [],
    "scipy.stats._discrete_distns.poisson_gen": [],
    "scipy.stats._discrete_distns.planck_gen": [],
    "scipy.stats._discrete_distns.boltzmann_gen": [],
    "scipy.stats._discrete_distns.randint_gen": [],
    "scipy.stats._discrete_distns.zipf_gen": [],
    "scipy.stats._discrete_distns.zipfian_gen": [],
    "scipy.stats._discrete_distns.dlaplace_gen": [],
    "scipy.stats._discrete_distns.skellam_gen": [],
    "scipy.stats._discrete_distns.yulesimon_gen": [],
    "scipy.stats._discrete_distns._nchypergeom_gen": [],
    "scipy.stats._discrete_distns.nchypergeom_fisher_gen": [],
    "scipy.stats._discrete_distns.nchypergeom_wallenius_gen": [],
    "scipy.stats._levy_stable": [
        "scipy.stats._distn_infrastructure",
        "scipy._lib.doccer",
        "scipy.special",
        "scipy.optimize",
        "numpy.lib.arraypad.pad",
        "scipy._lib._util",
        "scipy.integrate._quadrature",
        "scipy.interpolate",
        "scipy.stats._continuous_distns",
        "scipy.stats._levy_stable.levy_stable_gen",
        "scipy.integrate",
        "numpy",
        "<builtin>.len",
        "functools.partial"
    ],
    "scipy.stats._levy_stable.levy_stable_gen": [
        "scipy._lib.doccer.inherit_docstring_from",
        "scipy._lib.doccer.inherit_docstring_from._doc"
    ],
    "numpy.lib.arraypad.pad": [
        "<builtin>.TypeError",
        "numpy.lib.arraypad._get_edges",
        "numpy.lib.arraypad._get_stats",
        "numpy.lib.arraypad._set_wrap_both",
        "numpy.lib.arraypad._set_reflect_both",
        "<builtin>.any",
        "numpy.lib.index_tricks.ndindex.__iter__",
        "<builtin>.callable",
        "numpy.lib.arraypad._get_linear_ramps",
        "numpy.lib.index_tricks.ndindex.__next__",
        "<builtin>.range",
        "<builtin>.set",
        "numpy.lib.arraypad._view_roi",
        "numpy.lib.index_tricks.ndindex.__init__",
        "numpy.lib.arraypad._set_pad_area",
        "numpy.core.numeric.moveaxis",
        "<builtin>.zip",
        "numpy.lib.arraypad._as_pairs",
        "<builtin>.ValueError",
        "numpy.lib.arraypad._pad_simple"
    ],
    "numpy.lib.arraypad._as_pairs": [
        "numpy.lib.stride_tricks.broadcast_to",
        "numpy.core.fromnumeric.round_",
        "<builtin>.ValueError"
    ],
    "numpy.core.fromnumeric.round_": [
        "numpy.core.fromnumeric.around"
    ],
    "numpy.core.fromnumeric.around": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "numpy.lib.stride_tricks.broadcast_to": [
        "numpy.lib.stride_tricks._broadcast_to"
    ],
    "numpy.lib.stride_tricks._broadcast_to": [
        "numpy.lib.stride_tricks._maybe_view_as_subclass",
        "<builtin>.tuple",
        "<builtin>.any",
        "<builtin>.ValueError",
        "numpy.lib.function_base.iterable"
    ],
    "<builtin>.any": [],
    "numpy.lib.stride_tricks._maybe_view_as_subclass": [
        "<builtin>.type"
    ],
    "numpy.lib.arraypad._pad_simple": [
        "<builtin>.slice",
        "<builtin>.zip",
        "<builtin>.tuple"
    ],
    "numpy.lib.index_tricks.ndindex.__init__": [
        "<builtin>.len",
        "<builtin>.isinstance",
        "numpy.core.numeric.zeros_like",
        "numpy.lib.stride_tricks.as_strided"
    ],
    "numpy.core.numeric.zeros_like": [
        "numpy.core.multiarray.copyto",
        "numpy.core.multiarray.empty_like"
    ],
    "numpy.core.multiarray.empty_like": [],
    "numpy.lib.stride_tricks.as_strided": [
        "numpy.lib.stride_tricks._maybe_view_as_subclass",
        "<builtin>.dict",
        "<builtin>.tuple",
        "numpy.lib.stride_tricks.DummyArray.__init__"
    ],
    "numpy.lib.stride_tricks.DummyArray.__init__": [],
    "numpy.lib.index_tricks.ndindex.__iter__": [],
    "numpy.lib.index_tricks.ndindex.__next__": [
        "<builtin>.next"
    ],
    "numpy.lib.arraypad._view_roi": [
        "<builtin>.slice"
    ],
    "numpy.lib.arraypad._set_wrap_both": [
        "<builtin>.min",
        "numpy.lib.arraypad._slice_at_axis",
        "<builtin>.slice"
    ],
    "numpy.lib.arraypad._slice_at_axis": [
        "<builtin>.slice"
    ],
    "numpy.lib.arraypad._get_edges": [
        "numpy.lib.arraypad._slice_at_axis",
        "<builtin>.slice"
    ],
    "numpy.lib.arraypad._set_pad_area": [
        "numpy.lib.arraypad._slice_at_axis",
        "<builtin>.slice"
    ],
    "numpy.lib.arraypad._set_reflect_both": [
        "<builtin>.min",
        "numpy.lib.arraypad._slice_at_axis",
        "<builtin>.slice"
    ],
    "numpy.lib.arraypad._get_stats": [
        "numpy.core.fromnumeric.amin",
        "numpy.core.fromnumeric.mean",
        "numpy.lib.function_base.median",
        "<builtin>.slice",
        "numpy.lib.arraypad._slice_at_axis",
        "<builtin>.ValueError",
        "numpy.core.fromnumeric.amax",
        "numpy.lib.arraypad._round_if_needed"
    ],
    "numpy.core.fromnumeric.mean": [
        "<builtin>.type",
        "numpy.core._methods._mean"
    ],
    "numpy.core._methods._mean": [
        "<builtin>.issubclass",
        "<builtin>.isinstance",
        "<builtin>.hasattr",
        "numpy.core._methods._count_reduce_items"
    ],
    "numpy.core._methods._count_reduce_items": [
        "<builtin>.isinstance",
        "<builtin>.tuple",
        "numpy.lib.stride_tricks.broadcast_to",
        "<builtin>.range",
        "numpy.lib.stride_tricks"
    ],
    "numpy.lib.function_base.median": [
        "numpy.lib.function_base._ureduce"
    ],
    "numpy.lib.function_base._ureduce": [
        "<builtin>.tuple",
        "numpy.lib.function_base._median",
        "<builtin>.range",
        "<builtin>.set",
        "<builtin>.list",
        "numpy.core.numeric.normalize_axis_tuple",
        "<builtin>.enumerate",
        "<builtin>.len",
        "<builtin>.sorted"
    ],
    "numpy.lib.function_base._median": [
        "<builtin>.tuple",
        "append",
        "numpy.core.fromnumeric.mean",
        "<builtin>.slice",
        "numpy.core.fromnumeric.partition",
        "numpy.core.numerictypes.issubdtype",
        "numpy.lib.utils._median_nancheck"
    ],
    "numpy.core.fromnumeric.partition": [],
    "numpy.lib.utils._median_nancheck": [
        "numpy.ma.core.isMaskedArray",
        "<builtin>.isinstance",
        "numpy.core.numeric.count_nonzero"
    ],
    "numpy.ma.core.isMaskedArray": [
        "<builtin>.isinstance"
    ],
    "numpy.core.numeric.count_nonzero": [
        "numpy.core.numerictypes.issubdtype"
    ],
    "numpy.lib.arraypad._round_if_needed": [
        "numpy.core.numerictypes.issubdtype"
    ],
    "numpy.lib.arraypad._get_linear_ramps": [
        "<builtin>.zip",
        "numpy.core.function_base.linspace",
        "<builtin>.slice",
        "numpy.lib.arraypad._get_edges",
        "numpy.core.linspace",
        "numpy.lib.arraypad._slice_at_axis"
    ],
    "numpy.core.linspace": [],
    "numpy.core.function_base.linspace": [
        "numpy.core.numeric.moveaxis",
        "numpy.core.fromnumeric.any",
        "numpy.core.fromnumeric.ndim",
        "numpy.core.multiarray.result_type",
        "<builtin>.ValueError",
        "<builtin>.float",
        "numpy.core.numerictypes.issubdtype",
        "numpy.core.numeric.isscalar"
    ],
    "numpy.core.multiarray.result_type": [],
    "numpy.core.fromnumeric.ndim": [],
    "numpy.core.numeric.isscalar": [
        "<builtin>.isinstance",
        "<builtin>.type"
    ],
    "numpy.core.fromnumeric.any": [
        "numpy.core.fromnumeric._wrapreduction"
    ],
    "scipy.stats._entropy": [
        "numpy",
        "scipy.special"
    ],
    "scipy.stats._mstats_basic": [
        "collections.namedtuple",
        "scipy._lib._util._rename_parameter.decorator",
        "scipy._lib._util._rename_parameter",
        "scipy.special",
        "numpy.ma",
        "scipy._lib._util",
        "scipy.stats.distributions",
        "scipy.stats._stats_mstats_common",
        "<builtin>.list",
        "scipy.stats._stats_py",
        "numpy"
    ],
    "scipy.stats._stats_mstats_common": [
        "scipy._lib._bunch",
        "scipy._lib._bunch._make_tuple_bunch",
        "scipy.stats.distributions",
        "scipy.stats._stats_py",
        "numpy"
    ],
    "scipy._lib._bunch": [],
    "scipy._lib._bunch._make_tuple_bunch": [
        "scipy._lib._bunch._validate_names",
        "<builtin>.str",
        "<builtin>.tuple",
        "<builtin>.property",
        "<builtin>.repr",
        "<builtin>.enumerate",
        "<builtin>.dict",
        "<builtin>.exec",
        "<builtin>.ValueError",
        "<builtin>.map",
        "<builtin>.len",
        "<builtin>.type"
    ],
    "scipy._lib._bunch._validate_names": [
        "<builtin>.TypeError",
        "<builtin>.set",
        "keyword.iskeyword",
        "<builtin>.ValueError",
        "<builtin>.type"
    ],
    "keyword.iskeyword": [],
    "scipy._lib._util._rename_parameter": [],
    "scipy._lib._util._rename_parameter.decorator": [],
    "scipy.stats._hypotests": [
        "collections.namedtuple",
        "scipy.stats._hypotests.CramerVonMisesResult",
        "scipy.fft",
        "dataclasses.make_dataclass",
        "scipy.stats",
        "scipy.stats._hypotests.TukeyHSDResult",
        "scipy.special",
        "scipy.optimize",
        "scipy.stats.distributions",
        "scipy.stats._continuous_distns",
        "numpy",
        "scipy.stats._common"
    ],
    "scipy.stats._common": [
        "collections.namedtuple"
    ],
    "scipy.fft": [
        "scipy.fft._basic",
        "scipy.fft._backend",
        "scipy.fft._helper",
        "numpy.fft",
        "scipy.fft._pocketfft.helper",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.fft._fftlog",
        "scipy.fft._fftlog_multimethods",
        "scipy._lib._testutils",
        "scipy.fft._realtransforms"
    ],
    "scipy.fft._basic": [
        "numpy",
        "scipy._lib.uarray",
        "scipy.fft._basic._dispatch"
    ],
    "scipy._lib.uarray": [
        "scipy._lib._uarray"
    ],
    "scipy._lib._uarray": [
        "scipy._lib._uarray._backend"
    ],
    "scipy._lib._uarray._backend": [
        "scipy._lib._uarray._backend.Dispatchable"
    ],
    "scipy._lib._uarray._backend.Dispatchable": [],
    "scipy.fft._basic._dispatch": [
        "scipy._lib._uarray._backend.generate_multimethod"
    ],
    "scipy._lib._uarray._backend.generate_multimethod": [
        "scipy._lib._uarray._backend.get_defaults",
        "_uarray._Function"
    ],
    "scipy._lib._uarray._backend.get_defaults": [
        "<builtin>.set",
        "append",
        "<builtin>.tuple"
    ],
    "_uarray._Function": [],
    "scipy.fft._realtransforms": [
        "numpy",
        "scipy.fft._basic",
        "scipy._lib.uarray",
        "scipy.fft._basic._dispatch"
    ],
    "scipy.fft._fftlog": [
        "numpy",
        "scipy.fft._basic",
        "scipy.special"
    ],
    "scipy.fft._fftlog_multimethods": [
        "scipy.fft._basic",
        "scipy._lib.uarray",
        "scipy.fft._basic._dispatch",
        "scipy.fft._fftlog",
        "numpy"
    ],
    "scipy.fft._helper": [
        "functools.lru_cache",
        "scipy.fft._pocketfft.helper",
        "functools.update_wrapper"
    ],
    "scipy.fft._pocketfft.helper": [
        "numpy"
    ],
    "functools.lru_cache": [],
    "functools.update_wrapper": [],
    "scipy.fft._backend": [
        "scipy.fft._backend._ScipyBackend",
        "scipy.fft._backend.set_global_backend",
        "scipy._lib.uarray",
        "scipy.fft._fftlog",
        "scipy.fft._pocketfft"
    ],
    "scipy.fft._pocketfft": [
        "scipy.fft._pocketfft.helper",
        "scipy.fft._pocketfft.basic",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy._lib._testutils",
        "scipy.fft._pocketfft.realtransforms"
    ],
    "scipy.fft._pocketfft.basic": [
        "numpy",
        "scipy.fft._pocketfft.helper"
    ],
    "scipy.fft._pocketfft.realtransforms": [
        "numpy",
        "scipy.fft._pocketfft.helper"
    ],
    "scipy.fft._backend._ScipyBackend": [
        "<builtin>.staticmethod"
    ],
    "scipy.fft._backend.set_global_backend": [
        "scipy.fft._backend._backend_from_arg",
        "scipy._lib._uarray._backend.set_global_backend"
    ],
    "scipy.fft._backend._backend_from_arg": [
        "<builtin>.isinstance",
        "<builtin>.ValueError"
    ],
    "scipy._lib._uarray._backend.set_global_backend": [],
    "scipy.stats._hypotests.CramerVonMisesResult": [],
    "dataclasses.make_dataclass": [],
    "scipy.stats._hypotests.TukeyHSDResult": [],
    "scipy.stats._resampling": [
        "dataclasses.make_dataclass",
        "scipy.special",
        "scipy._lib._util",
        "scipy.stats._axis_nan_policy",
        "numpy",
        "scipy.stats._warnings_errors",
        "scipy.stats._common"
    ],
    "scipy.stats._axis_nan_policy": [
        "scipy._lib._docscrape",
        "scipy.stats",
        "scipy.stats._stats_py",
        "numpy",
        "<str>.split"
    ],
    "scipy._lib._docscrape": [
        "collections.namedtuple",
        "scipy._lib._docscrape.FunctionDoc",
        "scipy._lib._docscrape.ClassDoc",
        "scipy._lib._docscrape.NumpyDocString",
        "scipy._lib._docscrape.ParseError",
        "scipy._lib._docscrape.Reader"
    ],
    "scipy._lib._docscrape.Reader": [],
    "scipy._lib._docscrape.ParseError": [],
    "scipy._lib._docscrape.NumpyDocString": [],
    "scipy._lib._docscrape.FunctionDoc": [],
    "scipy._lib._docscrape.ClassDoc": [
        "<builtin>.property"
    ],
    "scipy.stats._binomtest": [
        "scipy.stats._binomtest.BinomTestResult",
        "scipy.special",
        "scipy.optimize",
        "scipy._lib._util",
        "scipy.stats._discrete_distns",
        "numpy",
        "scipy.stats._common"
    ],
    "scipy.stats._binomtest.BinomTestResult": [],
    "scipy.stats._axis_nan_policy._axis_nan_policy_factory": [],
    "scipy.stats._axis_nan_policy._axis_nan_policy_factory.axis_nan_policy_decorator": [
        "<builtin>.str",
        "functools.wraps",
        "<builtin>.list",
        "scipy._lib._docscrape.FunctionDoc.__init__",
        "scipy.stats._axis_nan_policy._get_axis_params"
    ],
    "scipy.stats._axis_nan_policy._get_axis_params": [],
    "scipy._lib._docscrape.FunctionDoc.__init__": [
        "scipy._lib._docscrape.NumpyDocString.__init__",
        "<builtin>.ValueError"
    ],
    "scipy._lib._docscrape.NumpyDocString.__init__": [
        "scipy._lib._docscrape.Reader.__init__",
        "scipy._lib._docscrape.NumpyDocString._parse"
    ],
    "scipy._lib._docscrape.Reader.__init__": [
        "<builtin>.isinstance",
        "scipy._lib._docscrape.Reader.reset"
    ],
    "scipy._lib._docscrape.Reader.reset": [],
    "scipy._lib._docscrape.NumpyDocString._parse": [
        "scipy._lib._docscrape.NumpyDocString._error_location",
        "scipy._lib._docscrape.NumpyDocString._parse_index",
        "scipy._lib._docscrape.NumpyDocString._read_sections",
        "<str>.startswith",
        "<builtin>.set",
        "<builtin>.list",
        "scipy._lib._docscrape.NumpyDocString._parse_summary",
        "scipy._lib._docscrape.NumpyDocString._parse_see_also",
        "<builtin>.ValueError",
        "scipy._lib._docscrape.NumpyDocString._parse_param_list"
    ],
    "scipy._lib._docscrape.NumpyDocString._parse_summary": [
        "scipy._lib._docscrape.NumpyDocString._read_to_next_section",
        "scipy._lib._docscrape.NumpyDocString._is_at_section"
    ],
    "scipy._lib._docscrape.NumpyDocString._is_at_section": [
        "<builtin>.len"
    ],
    "scipy._lib._docscrape.NumpyDocString._read_to_next_section": [
        "scipy._lib._docscrape.NumpyDocString._is_at_section"
    ],
    "scipy._lib._docscrape.NumpyDocString._read_sections": [
        "scipy._lib._docscrape.NumpyDocString._read_to_next_section",
        "<builtin>.len",
        "scipy._lib._docscrape.NumpyDocString._strip"
    ],
    "scipy._lib._docscrape.NumpyDocString._strip": [
        "<builtin>.len",
        "<builtin>.enumerate"
    ],
    "scipy._lib._docscrape.NumpyDocString._error_location": [
        "<builtin>.hasattr",
        "warnings.warn",
        "<builtin>.ValueError"
    ],
    "warnings.warn": [],
    "scipy._lib._docscrape.NumpyDocString._parse_see_also": [
        "scipy._lib._docscrape.NumpyDocString._error_location",
        "append",
        "scipy._lib._docscrape.NumpyDocString._parse_see_also.parse_item_name",
        "<builtin>.list",
        "<builtin>.filter"
    ],
    "scipy._lib._docscrape.NumpyDocString._parse_see_also.parse_item_name": [],
    "<builtin>.filter": [],
    "scipy._lib._docscrape.NumpyDocString._parse_index": [
        "<builtin>.len",
        "scipy._lib._docscrape.NumpyDocString._parse_index.strip_each_in"
    ],
    "scipy._lib._docscrape.NumpyDocString._parse_index.strip_each_in": [],
    "scipy._lib._docscrape.NumpyDocString._parse_param_list": [
        "scipy._lib._docscrape.Reader.__init__",
        "scipy._lib._docscrape.dedent_lines",
        "scipy._lib._docscrape.Reader.eof",
        "scipy._lib._docscrape.strip_blank_lines",
        "append",
        "scipy._lib._docscrape.Reader.read_to_next_unindented_line",
        "scipy._lib._docscrape.Reader.read"
    ],
    "scipy._lib._docscrape.Reader.eof": [
        "<builtin>.len"
    ],
    "scipy._lib._docscrape.Reader.read": [
        "scipy._lib._docscrape.Reader.eof"
    ],
    "scipy._lib._docscrape.Reader.read_to_next_unindented_line": [
        "scipy._lib._docscrape.Reader.read_to_condition"
    ],
    "scipy._lib._docscrape.Reader.read_to_condition": [
        "scipy._lib._docscrape.Reader.read_to_next_unindented_line.is_unindented",
        "scipy._lib._docscrape.Reader.eof"
    ],
    "scipy._lib._docscrape.Reader.read_to_next_unindented_line.is_unindented": [
        "<builtin>.len"
    ],
    "scipy._lib._docscrape.dedent_lines": [],
    "scipy._lib._docscrape.strip_blank_lines": [],
    "scipy.stats._stats_py.PearsonRResult": [],
    "scipy.stats._stats_py._ParallelP": [],
    "scipy.stats._variation": [
        "numpy",
        "scipy._lib._util",
        "numpy.core.multiarray",
        "scipy.stats._stats_py"
    ],
    "scipy.stats._morestats": [
        "collections.namedtuple",
        "scipy._lib._bunch",
        "scipy.optimize",
        "scipy._lib._util._rename_parameter.decorator",
        "numpy",
        "scipy.stats.contingency",
        "scipy._lib._util._rename_parameter",
        "scipy.stats._morestats._ABW.__init__",
        "scipy.stats._distn_infrastructure",
        "scipy.stats._hypotests",
        "scipy.stats._morestats._ABW",
        "scipy.stats._stats_py",
        "scipy.stats._axis_nan_policy._axis_nan_policy_factory",
        "scipy.special",
        "scipy.stats._axis_nan_policy",
        "scipy.stats.distributions",
        "scipy._lib._bunch._make_tuple_bunch",
        "scipy._lib._util",
        "scipy.stats._axis_nan_policy._axis_nan_policy_factory.axis_nan_policy_decorator"
    ],
    "scipy.stats.contingency": [
        "numpy",
        "scipy.stats._relative_risk",
        "scipy.stats._crosstab",
        "scipy.stats._stats_py"
    ],
    "scipy.stats._relative_risk": [
        "numpy",
        "scipy.special",
        "scipy.stats._common",
        "scipy.stats._relative_risk.RelativeRiskResult"
    ],
    "scipy.stats._relative_risk.RelativeRiskResult": [],
    "scipy.stats._crosstab": [
        "numpy",
        "scipy.sparse"
    ],
    "scipy.stats._morestats._ABW": [],
    "scipy.stats._morestats._ABW.__init__": [],
    "scipy.stats._binned_statistic": [
        "numpy",
        "collections.namedtuple",
        "numpy.testing"
    ],
    "scipy.stats._kde": [
        "scipy.linalg",
        "scipy.special",
        "scipy._lib._util",
        "scipy.stats._kde.gaussian_kde",
        "numpy"
    ],
    "scipy.stats._kde.gaussian_kde": [
        "<builtin>.property"
    ],
    "scipy.stats.mstats": [
        "scipy.stats._mstats_basic",
        "scipy.stats._mstats_extras",
        "scipy.stats"
    ],
    "scipy.stats._mstats_extras": [
        "scipy.stats._mstats_basic",
        "numpy.ma",
        "<builtin>.list",
        "scipy.stats.distributions",
        "numpy"
    ],
    "scipy.stats.qmc": [
        "scipy.stats._qmc"
    ],
    "scipy.stats._qmc": [
        "scipy.spatial",
        "typing.overload",
        "scipy.stats._qmc.LatinHypercube",
        "scipy.stats",
        "scipy.stats._qmc.PoissonDisk",
        "scipy.special",
        "scipy.spatial.distance",
        "scipy._lib._util",
        "numpy.typing",
        "scipy.stats._qmc.QMCEngine",
        "scipy.stats._qmc.MultivariateNormalQMC",
        "scipy.stats._qmc.MultinomialQMC",
        "numpy",
        "scipy.stats._qmc.Halton",
        "scipy.stats._qmc.Sobol"
    ],
    "scipy.stats._qmc.QMCEngine": [
        "abc.abstractmethod"
    ],
    "scipy.stats._qmc.Halton": [],
    "scipy.stats._qmc.LatinHypercube": [],
    "scipy.stats._qmc.Sobol": [],
    "scipy.stats._qmc.PoissonDisk": [],
    "scipy.stats._qmc.MultivariateNormalQMC": [],
    "scipy.stats._qmc.MultinomialQMC": [],
    "scipy.stats._multivariate": [
        "scipy._lib.doccer.docformat",
        "scipy.stats._multivariate.unitary_group_gen.__init__",
        "scipy.stats._multivariate.matrix_normal_gen",
        "scipy.stats._multivariate.wishart_gen",
        "scipy.stats._multivariate.multinomial_gen",
        "scipy.stats._multivariate.random_correlation_gen",
        "scipy.stats._multivariate.unitary_group_frozen",
        "scipy.stats._multivariate.special_ortho_group_gen.__init__",
        "numpy",
        "scipy.stats._multivariate.special_ortho_group_frozen",
        "scipy.linalg",
        "scipy.stats._multivariate.multivariate_normal_gen.__init__",
        "scipy.stats._multivariate.dirichlet_gen.__init__",
        "scipy.stats._multivariate.wishart_frozen",
        "scipy.stats._multivariate.multivariate_t_frozen",
        "scipy.stats._multivariate.multivariate_hypergeom_gen.__init__",
        "scipy.stats._multivariate.ortho_group_gen.__init__",
        "scipy.linalg._misc",
        "scipy.stats._multivariate.wishart_gen.__init__",
        "scipy.stats._multivariate.dirichlet_frozen",
        "scipy.stats._multivariate.multi_rv_generic",
        "scipy.stats._multivariate.ortho_group_gen",
        "scipy.stats._multivariate.random_correlation_gen.__init__",
        "scipy.stats._multivariate.matrix_normal_gen.__init__",
        "scipy.special",
        "scipy.stats._multivariate.special_ortho_group_gen",
        "scipy.stats._multivariate.multi_rv_frozen",
        "scipy.stats._multivariate.invwishart_frozen",
        "scipy.stats._multivariate.invwishart_gen",
        "scipy.linalg.lapack",
        "scipy.stats._multivariate.multivariate_t_gen",
        "scipy.stats._multivariate.multivariate_normal_gen",
        "scipy.stats._multivariate.multinomial_gen.__init__",
        "scipy.stats._multivariate.ortho_group_frozen",
        "scipy.stats._multivariate.multivariate_normal_frozen",
        "scipy.stats._multivariate.multivariate_hypergeom_gen",
        "scipy.stats._multivariate.dirichlet_gen",
        "scipy.stats._multivariate.matrix_normal_frozen",
        "scipy._lib.doccer",
        "scipy.stats._multivariate.multinomial_frozen",
        "scipy._lib._util",
        "scipy.stats._multivariate.multivariate_t_gen.__init__",
        "scipy.stats._multivariate.invwishart_gen.__init__",
        "scipy.stats._multivariate.multivariate_hypergeom_frozen",
        "scipy.stats._discrete_distns",
        "scipy.stats._multivariate._PSD",
        "scipy.linalg.blas",
        "scipy.stats._multivariate.unitary_group_gen",
        "scipy.stats._multivariate.random_correlation_frozen"
    ],
    "scipy.stats._multivariate._PSD": [
        "<builtin>.property"
    ],
    "scipy.stats._multivariate.multi_rv_generic": [
        "<builtin>.property"
    ],
    "scipy.stats._multivariate.multi_rv_frozen": [
        "<builtin>.property"
    ],
    "scipy.stats._multivariate.multivariate_normal_gen": [],
    "scipy.stats._multivariate.multivariate_normal_gen.__init__": [
        "scipy._lib.doccer.docformat",
        "<builtin>.super"
    ],
    "scipy.stats._multivariate.multivariate_normal_frozen": [],
    "scipy.stats._multivariate.matrix_normal_gen": [],
    "scipy.stats._multivariate.matrix_normal_gen.__init__": [
        "scipy._lib.doccer.docformat",
        "<builtin>.super"
    ],
    "scipy.stats._multivariate.matrix_normal_frozen": [],
    "scipy.stats._multivariate.dirichlet_gen": [],
    "scipy.stats._multivariate.dirichlet_gen.__init__": [
        "scipy._lib.doccer.docformat",
        "<builtin>.super"
    ],
    "scipy.stats._multivariate.dirichlet_frozen": [],
    "scipy.stats._multivariate.wishart_gen": [],
    "scipy.stats._multivariate.wishart_gen.__init__": [
        "scipy._lib.doccer.docformat",
        "<builtin>.super"
    ],
    "scipy.stats._multivariate.wishart_frozen": [],
    "scipy.stats._multivariate.invwishart_gen": [],
    "scipy.stats._multivariate.invwishart_gen.__init__": [
        "scipy._lib.doccer.docformat",
        "<builtin>.super"
    ],
    "scipy.stats._multivariate.invwishart_frozen": [],
    "scipy.stats._multivariate.multinomial_gen": [],
    "scipy.stats._multivariate.multinomial_gen.__init__": [
        "scipy._lib.doccer.docformat",
        "<builtin>.super"
    ],
    "scipy.stats._multivariate.multinomial_frozen": [],
    "scipy.stats._multivariate.special_ortho_group_gen": [],
    "scipy.stats._multivariate.special_ortho_group_gen.__init__": [
        "scipy._lib.doccer.docformat",
        "<builtin>.super"
    ],
    "scipy.stats._multivariate.special_ortho_group_frozen": [],
    "scipy.stats._multivariate.ortho_group_gen": [],
    "scipy.stats._multivariate.ortho_group_gen.__init__": [
        "scipy._lib.doccer.docformat",
        "<builtin>.super"
    ],
    "scipy.stats._multivariate.ortho_group_frozen": [],
    "scipy.stats._multivariate.random_correlation_gen": [],
    "scipy.stats._multivariate.random_correlation_gen.__init__": [
        "scipy._lib.doccer.docformat",
        "<builtin>.super"
    ],
    "scipy.stats._multivariate.random_correlation_frozen": [],
    "scipy.stats._multivariate.unitary_group_gen": [],
    "scipy.stats._multivariate.unitary_group_gen.__init__": [
        "scipy._lib.doccer.docformat",
        "<builtin>.super"
    ],
    "scipy.stats._multivariate.unitary_group_frozen": [],
    "scipy.stats._multivariate.multivariate_t_gen": [],
    "scipy.stats._multivariate.multivariate_t_frozen": [],
    "scipy.stats._multivariate.multivariate_t_gen.__init__": [
        "scipy._lib.doccer.docformat",
        "scipy._lib._util.check_random_state",
        "<builtin>.super"
    ],
    "scipy._lib._util.check_random_state": [
        "<builtin>.isinstance",
        "<builtin>.ValueError"
    ],
    "scipy.stats._multivariate.multivariate_hypergeom_gen": [],
    "scipy.stats._multivariate.multivariate_hypergeom_gen.__init__": [
        "scipy._lib.doccer.docformat",
        "<builtin>.super"
    ],
    "scipy.stats._multivariate.multivariate_hypergeom_frozen": [],
    "scipy.stats._rvs_sampling": [
        "numpy",
        "scipy._lib._util",
        "scipy.stats._rvs_sampling.NumericalInverseHermite",
        "scipy._lib.deprecation"
    ],
    "scipy.stats._rvs_sampling.NumericalInverseHermite": [
        "scipy._lib.deprecation._deprecated",
        "scipy._lib.deprecation._deprecated.wrap"
    ],
    "scipy.stats._page_trend_test": [
        "dataclasses.make_dataclass",
        "scipy.stats",
        "scipy.stats._page_trend_test._PageL.__init__",
        "scipy.stats._continuous_distns",
        "numpy",
        "scipy.stats._page_trend_test._PageL"
    ],
    "scipy.stats._page_trend_test._PageL": [],
    "scipy.stats._page_trend_test._PageL.__init__": [],
    "scipy.stats._mannwhitneyu": [
        "collections.namedtuple",
        "scipy.stats._mannwhitneyu._MWU",
        "scipy.stats._mannwhitneyu._MWU.__init__",
        "scipy.stats",
        "scipy.special",
        "scipy.stats._axis_nan_policy",
        "scipy.stats._axis_nan_policy._axis_nan_policy_factory",
        "numpy",
        "scipy.stats._axis_nan_policy._axis_nan_policy_factory.axis_nan_policy_decorator"
    ],
    "scipy.stats._mannwhitneyu._MWU": [],
    "scipy.stats._mannwhitneyu._MWU.__init__": [
        "numpy.core.ones",
        "numpy.core.numeric.ones"
    ],
    "numpy.core.ones": [],
    "scipy.stats._fit": [
        "numpy",
        "scipy.stats._fit.FitResult",
        "scipy.optimize"
    ],
    "scipy.stats._fit.FitResult": [],
    "scipy.stats.biasedurn": [],
    "scipy.stats.kde": [
        "scipy.stats._kde"
    ],
    "scipy.stats.morestats": [
        "scipy.stats._morestats"
    ],
    "scipy.stats.mstats_basic": [
        "scipy.stats._mstats_basic"
    ],
    "scipy.stats.mstats_extras": [
        "scipy.stats._mstats_extras"
    ],
    "scipy.stats.mvn": [],
    "scipy.stats.statlib": [],
    "scipy.stats.stats": [
        "scipy.stats._stats_py"
    ],
    "threadpoolctl": [
        "functools.lru_cache",
        "threadpoolctl.FlexiBLASController",
        "threadpoolctl.OpenBLASController",
        "threadpoolctl.ThreadpoolController",
        "threadpoolctl._ThreadpoolLimiter",
        "threadpoolctl.BLISController",
        "threadpoolctl.OpenMPController",
        "<builtin>.set",
        "threadpoolctl._ThreadpoolLimiterDecorator",
        "<builtin>.list",
        "threadpoolctl._format_docstring.decorator",
        "threadpoolctl.LibController",
        "threadpoolctl.MKLController",
        "threadpoolctl._dl_phdr_info",
        "threadpoolctl._format_docstring",
        "threadpoolctl.threadpool_limits"
    ],
    "threadpoolctl._dl_phdr_info": [],
    "threadpoolctl.LibController": [
        "typing.final",
        "abc.abstractmethod",
        "<builtin>.property"
    ],
    "threadpoolctl.OpenBLASController": [
        "<builtin>.tuple"
    ],
    "threadpoolctl.BLISController": [],
    "threadpoolctl.FlexiBLASController": [
        "<builtin>.property"
    ],
    "threadpoolctl.MKLController": [],
    "threadpoolctl.OpenMPController": [],
    "threadpoolctl._format_docstring": [],
    "threadpoolctl._format_docstring.decorator": [],
    "threadpoolctl._ThreadpoolLimiter": [
        "<builtin>.classmethod"
    ],
    "threadpoolctl._ThreadpoolLimiterDecorator": [],
    "threadpoolctl.threadpool_limits": [
        "<builtin>.classmethod"
    ],
    "threadpoolctl.ThreadpoolController": [
        "<builtin>.dict",
        "threadpoolctl._format_docstring",
        "threadpoolctl._format_docstring.decorator",
        "<builtin>.classmethod"
    ],
    "sklearn.externals._packaging.version": [
        "sklearn.externals._packaging._structures",
        "sklearn.externals._packaging.version._BaseVersion",
        "sklearn.externals._packaging.version.LegacyVersion",
        "sklearn.externals._packaging.version.Version",
        "sklearn.externals._packaging.version.InvalidVersion"
    ],
    "sklearn.externals._packaging._structures": [
        "sklearn.externals._packaging._structures.InfinityType",
        "sklearn.externals._packaging._structures.NegativeInfinityType"
    ],
    "sklearn.externals._packaging._structures.InfinityType": [],
    "sklearn.externals._packaging._structures.NegativeInfinityType": [],
    "sklearn.externals._packaging.version.InvalidVersion": [],
    "sklearn.externals._packaging.version._BaseVersion": [],
    "sklearn.externals._packaging.version.LegacyVersion": [
        "<builtin>.property"
    ],
    "sklearn.externals._packaging.version.Version": [
        "<builtin>.property"
    ],
    "sklearn.externals._packaging.version.parse": [
        "sklearn.externals._packaging.version.Version.__init__",
        "sklearn.externals._packaging.version.LegacyVersion.__init__"
    ],
    "sklearn.externals._packaging.version.Version.__init__": [
        "<builtin>.int",
        "<builtin>.tuple",
        "sklearn.externals._packaging.version._parse_letter_version",
        "sklearn.externals._packaging.version._cmpkey",
        "sklearn.externals._packaging.version._parse_local_version"
    ],
    "sklearn.externals._packaging.version._parse_letter_version": [
        "<builtin>.int",
        "<str>.lower"
    ],
    "sklearn.externals._packaging.version._parse_local_version": [
        "<builtin>.int",
        "<builtin>.tuple"
    ],
    "sklearn.externals._packaging.version._cmpkey": [
        "<builtin>.isinstance",
        "<builtin>.list",
        "<builtin>.tuple",
        "<builtin>.reversed"
    ],
    "sklearn.externals._packaging.version.LegacyVersion.__init__": [
        "<builtin>.str",
        "sklearn.externals._packaging.version._legacy_cmpkey"
    ],
    "sklearn.externals._packaging.version._legacy_cmpkey": [
        "<str>.startswith",
        "<builtin>.tuple",
        "sklearn.externals._packaging.version._parse_version_parts"
    ],
    "sklearn.externals._packaging.version._parse_version_parts": [
        "<map>.get"
    ],
    "sklearn.externals._lobpcg": [
        "numpy",
        "scipy.linalg",
        "scipy.sparse.linalg"
    ],
    "sklearn.utils.fixes.loguniform": [],
    "sklearn.utils.fixes._FuncWrapper": [],
    "sklearn.utils._estimator_html_repr": [
        "sklearn",
        "sklearn.utils._estimator_html_repr._VisualBlock",
        "sklearn.utils._estimator_html_repr._IDCounter",
        "sklearn.utils._estimator_html_repr._IDCounter.__init__"
    ],
    "sklearn.utils._estimator_html_repr._IDCounter": [],
    "sklearn.utils._estimator_html_repr._IDCounter.__init__": [],
    "sklearn.utils._estimator_html_repr._VisualBlock": [],
    "sklearn.utils.validation": [
        "sklearn",
        "sklearn.exceptions",
        "scipy.sparse",
        "joblib",
        "numpy.core.numeric",
        "sklearn.utils.fixes",
        "numpy"
    ],
    "joblib": [
        "joblib.memory",
        "joblib.hashing",
        "joblib.parallel",
        "joblib.compressor",
        "joblib._cloudpickle_wrapper",
        "joblib.numpy_pickle",
        "joblib.logger"
    ],
    "joblib.memory": [
        "joblib.hashing",
        "joblib.memory.JobLibCollisionWarning",
        "joblib.memory.Memory",
        "joblib._store_backends",
        "joblib.func_inspect",
        "joblib.memory.NotMemorizedFunc",
        "joblib.memory.AsyncMemorizedFunc",
        "joblib.memory.AsyncNotMemorizedFunc",
        "joblib.memory.MemorizedResult",
        "joblib.memory.NotMemorizedResult",
        "joblib.memory.MemorizedFunc",
        "joblib.logger"
    ],
    "joblib.hashing": [
        "joblib.hashing._ConsistentSet",
        "joblib.hashing.NumpyHasher",
        "joblib.hashing._MyHash",
        "joblib.hashing.Hasher"
    ],
    "joblib.hashing._ConsistentSet": [],
    "joblib.hashing._MyHash": [],
    "joblib.hashing.Hasher": [
        "<builtin>.set",
        "<builtin>.type"
    ],
    "joblib.hashing.NumpyHasher": [],
    "joblib._store_backends": [
        "joblib._store_backends.StoreBackendBase",
        "joblib._store_backends.CacheWarning",
        "joblib._store_backends.StoreBackendMixin",
        "joblib.backports",
        "joblib._store_backends.FileSystemStoreBackend",
        "joblib.numpy_pickle",
        "joblib.disk",
        "joblib.logger"
    ],
    "joblib.backports": [
        "joblib.backports.LooseVersion",
        "numpy",
        "joblib.backports.Version"
    ],
    "joblib.backports.Version": [],
    "joblib.backports.LooseVersion": [],
    "joblib.disk": [],
    "joblib.logger": [
        "joblib.disk",
        "joblib.logger.PrintTime",
        "joblib.logger.Logger"
    ],
    "joblib.logger.Logger": [],
    "joblib.logger.PrintTime": [],
    "joblib.numpy_pickle": [
        "joblib.numpy_pickle.NumpyArrayWrapper",
        "joblib.compressor",
        "joblib.compressor.ZlibCompressorWrapper.__init__",
        "joblib.numpy_pickle.NumpyUnpickler",
        "joblib.backports",
        "joblib.compressor.register_compressor",
        "joblib.compressor.LZMACompressorWrapper.__init__",
        "joblib.compressor.BZ2CompressorWrapper.__init__",
        "joblib.numpy_pickle_compat",
        "joblib.compressor.LZ4CompressorWrapper.__init__",
        "joblib.compressor.GzipCompressorWrapper.__init__",
        "joblib.numpy_pickle.NumpyPickler",
        "joblib.numpy_pickle_utils"
    ],
    "joblib.compressor": [
        "joblib.compressor.ZlibCompressorWrapper",
        "joblib.compressor.BZ2CompressorWrapper",
        "joblib.backports",
        "joblib.compressor.BinaryGzipFile",
        "joblib.compressor.CompressorWrapper",
        "joblib.compressor.GzipCompressorWrapper",
        "joblib.compressor.LZ4CompressorWrapper",
        "joblib.compressor.BinaryZlibFile",
        "joblib.compressor.LZMACompressorWrapper",
        "joblib.compressor.XZCompressorWrapper"
    ],
    "joblib.compressor.CompressorWrapper": [],
    "joblib.compressor.BZ2CompressorWrapper": [],
    "joblib.compressor.LZMACompressorWrapper": [],
    "joblib.compressor.XZCompressorWrapper": [],
    "joblib.compressor.LZ4CompressorWrapper": [],
    "joblib.compressor.BinaryZlibFile": [
        "<builtin>.property"
    ],
    "joblib.compressor.ZlibCompressorWrapper": [],
    "joblib.compressor.BinaryGzipFile": [],
    "joblib.compressor.GzipCompressorWrapper": [],
    "joblib.numpy_pickle_utils": [
        "numpy",
        "joblib.compressor"
    ],
    "joblib.numpy_pickle_compat": [
        "joblib.numpy_pickle_compat.hex_str",
        "joblib.numpy_pickle_compat.NDArrayWrapper",
        "joblib.numpy_pickle_compat.ZNDArrayWrapper",
        "<builtin>.len",
        "joblib.numpy_pickle_compat.ZipNumpyUnpickler",
        "joblib.numpy_pickle_utils"
    ],
    "joblib.numpy_pickle_compat.hex_str": [],
    "joblib.numpy_pickle_compat.NDArrayWrapper": [],
    "joblib.numpy_pickle_compat.ZNDArrayWrapper": [],
    "joblib.numpy_pickle_compat.ZipNumpyUnpickler": [],
    "joblib.compressor.ZlibCompressorWrapper.__init__": [
        "joblib.compressor.CompressorWrapper.__init__"
    ],
    "joblib.compressor.CompressorWrapper.__init__": [],
    "joblib.compressor.register_compressor": [
        "<builtin>.isinstance",
        "<builtin>.hasattr",
        "<builtin>.ValueError"
    ],
    "joblib.compressor.GzipCompressorWrapper.__init__": [
        "joblib.compressor.CompressorWrapper.__init__"
    ],
    "joblib.compressor.BZ2CompressorWrapper.__init__": [],
    "joblib.compressor.LZMACompressorWrapper.__init__": [
        "<builtin>.getattr"
    ],
    "joblib.compressor.LZ4CompressorWrapper.__init__": [],
    "joblib.numpy_pickle.NumpyArrayWrapper": [],
    "joblib.numpy_pickle.NumpyPickler": [],
    "joblib.numpy_pickle.NumpyUnpickler": [],
    "joblib._store_backends.CacheWarning": [],
    "joblib._store_backends.StoreBackendBase": [
        "<builtin>.dict",
        "abc.abstractmethod"
    ],
    "joblib._store_backends.StoreBackendMixin": [],
    "joblib._store_backends.FileSystemStoreBackend": [
        "<builtin>.staticmethod"
    ],
    "joblib.func_inspect": [
        "<builtin>.dict",
        "joblib.logger"
    ],
    "joblib.memory.JobLibCollisionWarning": [],
    "joblib.memory.MemorizedResult": [
        "<builtin>.property"
    ],
    "joblib.memory.NotMemorizedResult": [],
    "joblib.memory.NotMemorizedFunc": [],
    "joblib.memory.AsyncNotMemorizedFunc": [],
    "joblib.memory.MemorizedFunc": [
        "<builtin>.property"
    ],
    "joblib.memory.AsyncMemorizedFunc": [],
    "joblib.memory.Memory": [],
    "joblib.parallel": [
        "<builtin>.hasattr",
        "joblib.parallel.Parallel",
        "joblib.parallel.BatchedCalls",
        "joblib.externals.loky",
        "joblib.parallel.parallel_backend",
        "joblib._parallel_backends",
        "joblib.parallel.parallel_config",
        "joblib.disk",
        "joblib.parallel.BatchCompletionCallBack",
        "joblib._multiprocessing_helpers",
        "joblib.logger",
        "joblib._utils"
    ],
    "joblib._multiprocessing_helpers": [
        "<builtin>.int",
        "<builtin>.range",
        "<builtin>.next",
        "<builtin>.FileExistsError",
        "_multiprocessing.SemLock"
    ],
    "_multiprocessing.SemLock": [],
    "<builtin>.FileExistsError": [],
    "joblib._parallel_backends": [
        "joblib._parallel_backends.MultiprocessingBackend",
        "joblib._parallel_backends.LokyBackend",
        "joblib._parallel_backends.ParallelBackendBase",
        "joblib.executor",
        "joblib.pool",
        "joblib._parallel_backends.ThreadingBackend",
        "joblib.externals.loky",
        "joblib._parallel_backends.SequentialBackend",
        "joblib._parallel_backends.FallbackToBackend",
        "joblib._parallel_backends.PoolManagerMixin",
        "joblib._parallel_backends.AutoBatchingMixin",
        "joblib.externals.loky.process_executor",
        "joblib._multiprocessing_helpers",
        "joblib._utils"
    ],
    "joblib._utils": [
        "joblib._utils._Sentinel",
        "joblib._utils._TracebackCapturingWrapper",
        "joblib.externals.loky.process_executor",
        "joblib._multiprocessing_helpers"
    ],
    "joblib.externals.loky.process_executor": [
        "joblib.externals.loky.process_executor._ThreadWakeup",
        "joblib.externals.loky.process_executor._CallItem",
        "joblib.externals.loky.process_executor.ShutdownExecutorError",
        "joblib.externals.loky.backend.queues",
        "joblib.externals.loky.process_executor._RemoteTraceback",
        "joblib.externals.loky.process_executor.LokyRecursionError",
        "joblib.externals.loky.process_executor._ExecutorFlags",
        "joblib.externals.loky.process_executor._ExecutorManagerThread",
        "joblib.externals.loky.backend.utils",
        "joblib.externals.loky.backend",
        "<builtin>.int",
        "joblib.externals.loky.process_executor._SafeQueue",
        "joblib.externals.loky.process_executor._WorkItem",
        "joblib.externals.loky.process_executor.BrokenProcessPool",
        "joblib.externals.loky._base",
        "joblib.externals.loky.backend.context",
        "joblib.externals.loky.process_executor._ExceptionWithTraceback",
        "joblib.externals.loky.process_executor.ProcessPoolExecutor",
        "joblib.externals.loky.process_executor.TerminatedWorkerError",
        "joblib.externals.loky.initializers",
        "joblib.externals.loky.process_executor._ResultItem",
        "joblib.externals.loky.backend.reduction"
    ],
    "joblib.externals.loky._base": [
        "joblib.externals.loky._base.Future"
    ],
    "joblib.externals.loky._base.Future": [],
    "joblib.externals.loky.backend": [
        "joblib.externals.loky.backend.context",
        "<builtin>.staticmethod"
    ],
    "joblib.externals.loky.backend.context": [
        "joblib.externals.loky.backend.context.LokyInitMainContext",
        "joblib.externals.loky.backend.process",
        "joblib.externals.loky.backend.context.LokyContext"
    ],
    "joblib.externals.loky.backend.process": [
        "joblib.externals.loky.backend.process.LokyProcess",
        "joblib.externals.loky.backend.process.LokyInitMainProcess",
        "joblib.externals.loky.backend.process.AuthenticationKey"
    ],
    "joblib.externals.loky.backend.process.LokyProcess": [
        "<builtin>.staticmethod"
    ],
    "joblib.externals.loky.backend.process.LokyInitMainProcess": [],
    "joblib.externals.loky.backend.process.AuthenticationKey": [],
    "joblib.externals.loky.backend.context.LokyContext": [
        "<builtin>.staticmethod"
    ],
    "joblib.externals.loky.backend.context.LokyInitMainContext": [],
    "joblib.externals.loky.backend.queues": [
        "joblib.externals.loky.backend.reduction",
        "joblib.externals.loky.backend.queues.Queue",
        "joblib.externals.loky.backend.queues.SimpleQueue"
    ],
    "joblib.externals.loky.backend.reduction": [
        "<builtin>.hasattr",
        "joblib.externals.loky.backend._posix_reduction",
        "joblib.externals.loky.backend.reduction.set_loky_pickler",
        "joblib.externals.loky.backend.reduction._C",
        "joblib.externals.loky.backend._win_reduction",
        "joblib.externals.loky.backend.reduction.register",
        "<builtin>.type",
        "joblib.externals.cloudpickle"
    ],
    "joblib.externals.loky.backend.reduction._C": [
        "<builtin>.classmethod"
    ],
    "joblib.externals.loky.backend.reduction.register": [],
    "joblib.externals.loky.backend._win_reduction": [
        "joblib.externals.loky.backend.reduction",
        "joblib.externals.loky.backend.reduction.register"
    ],
    "joblib.externals.loky.backend._posix_reduction": [
        "joblib.externals.loky.backend.reduction",
        "joblib.externals.loky.backend.reduction.register",
        "<builtin>.hasattr"
    ],
    "joblib.externals.cloudpickle": [
        "joblib.externals.cloudpickle.cloudpickle"
    ],
    "joblib.externals.cloudpickle.cloudpickle": [
        "<builtin>.set",
        "<builtin>.type",
        "joblib.externals.cloudpickle.cloudpickle._empty_cell_value",
        "joblib.externals.cloudpickle.cloudpickle.Pickler"
    ],
    "joblib.externals.cloudpickle.cloudpickle._empty_cell_value": [
        "<builtin>.classmethod"
    ],
    "joblib.externals.cloudpickle.cloudpickle.Pickler": [
        "collections.ChainMap",
        "<builtin>.type",
        "collections.OrderedDict"
    ],
    "collections.OrderedDict": [],
    "collections.ChainMap": [],
    "joblib.externals.loky.backend.reduction.set_loky_pickler": [
        "joblib.externals.loky.backend.reduction.set_loky_pickler.CustomizablePickler",
        "importlib.import_module",
        "joblib.externals.cloudpickle"
    ],
    "importlib.import_module": [],
    "joblib.externals.loky.backend.reduction.set_loky_pickler.CustomizablePickler": [],
    "joblib.externals.loky.backend.queues.Queue": [
        "<builtin>.staticmethod"
    ],
    "joblib.externals.loky.backend.queues.SimpleQueue": [],
    "joblib.externals.loky.backend.utils": [],
    "joblib.externals.loky.initializers": [
        "joblib.externals.loky.initializers._ChainedInitializer"
    ],
    "joblib.externals.loky.initializers._ChainedInitializer": [],
    "joblib.externals.loky.process_executor._ThreadWakeup": [],
    "joblib.externals.loky.process_executor._ExecutorFlags": [],
    "joblib.externals.loky.process_executor._RemoteTraceback": [],
    "joblib.externals.loky.process_executor._ExceptionWithTraceback": [],
    "joblib.externals.loky.process_executor._WorkItem": [],
    "joblib.externals.loky.process_executor._ResultItem": [],
    "joblib.externals.loky.process_executor._CallItem": [],
    "joblib.externals.loky.process_executor._SafeQueue": [],
    "joblib.externals.loky.process_executor._ExecutorManagerThread": [],
    "joblib.externals.loky.process_executor.LokyRecursionError": [],
    "joblib.externals.loky.process_executor.BrokenProcessPool": [],
    "joblib.externals.loky.process_executor.TerminatedWorkerError": [],
    "joblib.externals.loky.process_executor.ShutdownExecutorError": [],
    "joblib.externals.loky.process_executor.ProcessPoolExecutor": [],
    "joblib._utils._Sentinel": [],
    "joblib._utils._TracebackCapturingWrapper": [],
    "joblib.pool": [
        "joblib.pool.CustomizablePickler",
        "joblib._memmapping_reducer",
        "joblib.pool.CustomizablePicklingQueue",
        "joblib.pool.MemmappingPool",
        "numpy",
        "joblib.pool.PicklingPool",
        "<builtin>.type",
        "joblib._multiprocessing_helpers"
    ],
    "joblib._memmapping_reducer": [
        "numpy.lib.stride_tricks",
        "<builtin>.int",
        "joblib.externals.loky.backend.resource_tracker",
        "joblib.backports",
        "joblib._memmapping_reducer._WeakArrayKeyMap",
        "<builtin>.set",
        "joblib._memmapping_reducer.ArrayMemmapForwardReducer",
        "joblib._memmapping_reducer.TemporaryResourcesManager",
        "joblib.numpy_pickle",
        "numpy",
        "<builtin>.type",
        "joblib.disk"
    ],
    "joblib.externals.loky.backend.resource_tracker": [
        "joblib.externals.loky.backend.resource_tracker.ResourceTracker",
        "<builtin>.hasattr",
        "joblib.externals.loky.backend.spawn",
        "joblib.externals.loky.backend.resource_tracker.ResourceTracker.__init__"
    ],
    "joblib.externals.loky.backend.spawn": [
        "<builtin>.getattr"
    ],
    "joblib.externals.loky.backend.resource_tracker.ResourceTracker": [],
    "joblib.externals.loky.backend.resource_tracker.ResourceTracker.__init__": [],
    "joblib._memmapping_reducer._WeakArrayKeyMap": [],
    "joblib._memmapping_reducer.ArrayMemmapForwardReducer": [
        "<builtin>.property"
    ],
    "joblib._memmapping_reducer.TemporaryResourcesManager": [],
    "joblib.pool.CustomizablePickler": [],
    "joblib.pool.CustomizablePicklingQueue": [],
    "joblib.pool.PicklingPool": [],
    "joblib.pool.MemmappingPool": [
        "<builtin>.property"
    ],
    "joblib.executor": [
        "joblib._memmapping_reducer",
        "joblib.executor.MemmappingExecutor",
        "joblib.executor._TestingMemmappingExecutor",
        "joblib.externals.loky.reusable_executor"
    ],
    "joblib.externals.loky.reusable_executor": [
        "joblib.externals.loky.backend.context",
        "joblib.externals.loky.backend",
        "joblib.externals.loky.process_executor",
        "joblib.externals.loky.reusable_executor._ReusablePoolExecutor"
    ],
    "joblib.externals.loky.reusable_executor._ReusablePoolExecutor": [
        "<builtin>.classmethod"
    ],
    "joblib.executor.MemmappingExecutor": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "joblib.executor._TestingMemmappingExecutor": [],
    "joblib.externals.loky": [
        "joblib.externals.loky.backend.reduction",
        "joblib.externals.loky.reusable_executor",
        "joblib.externals.loky.cloudpickle_wrapper",
        "joblib.externals.loky._base",
        "joblib.externals.loky.backend.context",
        "joblib.externals.loky.process_executor"
    ],
    "joblib.externals.loky.cloudpickle_wrapper": [
        "joblib.externals.loky.cloudpickle_wrapper.CloudpickledObjectWrapper",
        "joblib.externals.loky.cloudpickle_wrapper.CallableObjectWrapper",
        "joblib.externals.cloudpickle"
    ],
    "joblib.externals.loky.cloudpickle_wrapper.CloudpickledObjectWrapper": [],
    "joblib.externals.loky.cloudpickle_wrapper.CallableObjectWrapper": [],
    "joblib._parallel_backends.ParallelBackendBase": [
        "<builtin>.staticmethod",
        "abc.abstractmethod",
        "<builtin>.property"
    ],
    "joblib._parallel_backends.SequentialBackend": [],
    "joblib._parallel_backends.PoolManagerMixin": [],
    "joblib._parallel_backends.AutoBatchingMixin": [],
    "joblib._parallel_backends.ThreadingBackend": [],
    "joblib._parallel_backends.MultiprocessingBackend": [],
    "joblib._parallel_backends.LokyBackend": [],
    "joblib._parallel_backends.FallbackToBackend": [],
    "joblib.parallel.parallel_config": [],
    "joblib.parallel.parallel_backend": [],
    "joblib.parallel.BatchedCalls": [],
    "joblib.parallel.BatchCompletionCallBack": [],
    "joblib.parallel.Parallel": [],
    "joblib._cloudpickle_wrapper": [
        "joblib._multiprocessing_helpers",
        "joblib.externals.loky"
    ],
    "sklearn.utils._bunch": [
        "sklearn.utils._bunch.Bunch"
    ],
    "sklearn.utils._bunch.Bunch": [],
    "sklearn.utils._tags": [
        "numpy"
    ],
    "sklearn.base.BaseEstimator": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "sklearn.base.ClassifierMixin": [],
    "sklearn.base.RegressorMixin": [],
    "sklearn.base.ClusterMixin": [],
    "sklearn.base.BiclusterMixin": [
        "<builtin>.property"
    ],
    "sklearn.base.TransformerMixin": [],
    "sklearn.base._OneToOneFeatureMixin": [],
    "sklearn.base._ClassNamePrefixFeaturesOutMixin": [],
    "sklearn.base.DensityMixin": [],
    "sklearn.base.OutlierMixin": [],
    "sklearn.base.MetaEstimatorMixin": [],
    "sklearn.base.MultiOutputMixin": [],
    "sklearn.base._UnstableArchMixin": [],
    "sklearn.utils._show_versions": [
        "sklearn",
        "sklearn.utils.fixes"
    ],
    "handler.load_model": [
        "<builtin>.open"
    ],
    "handler.handle": [
        "<builtin>.float",
        "<builtin>.str",
        "numpy.core.fromnumeric.round_",
        "pandas.core.frame.DataFrame.__init__"
    ],
    "pandas.core.frame.DataFrame.__init__": [
        "<builtin>.TypeError",
        "pandas.core.internals.construction.ndarray_to_mgr",
        "pandas.core.indexes.api.default_index",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.construction.sanitize_masked_array",
        "pandas.core.indexes.base.ensure_index",
        "pandas.core.generic.NDFrame.__init__",
        "pandas.core.dtypes.cast.construct_1d_arraylike_from_scalar",
        "pandas.core.dtypes.inference.is_dataclass",
        "pandas.core.dtypes.cast.infer_dtype_from_scalar",
        "pandas.core.dtypes.cast.construct_2d_arraylike_from_scalar",
        "pandas.core.internals.construction.nested_data_to_arrays",
        "pandas.core.internals.construction.dict_to_mgr",
        "pandas._config.using_copy_on_write",
        "pandas.core.internals.construction.mgr_to_mgr",
        "<builtin>.hasattr",
        "numpy.ma.mrecords",
        "<map>.copy",
        "typing.cast",
        "<builtin>.range",
        "<builtin>.list",
        "pandas.core.internals.construction.treat_as_nested",
        "<builtin>.getattr",
        "pandas.core.internals.construction.arrays_to_mgr",
        "<builtin>.len",
        "<builtin>.type",
        "pandas.core.generic.NDFrame._init_mgr",
        "<builtin>.isinstance",
        "pandas.core.internals.construction.dataclasses_to_dicts",
        "pandas._config.config._get_option",
        "pandas.core.generic.NDFrame._validate_dtype",
        "pandas.core.internals.construction.rec_array_to_mgr",
        "<builtin>.ValueError"
    ],
    "pandas.core.generic.NDFrame._validate_dtype": [
        "pandas.core.dtypes.common.pandas_dtype",
        "<builtin>.NotImplementedError"
    ],
    "pandas._config.using_copy_on_write": [],
    "pandas.core.generic.NDFrame.__init__": [
        "pandas.core.flags.Flags.__init__"
    ],
    "pandas.core.flags.Flags.__init__": [],
    "pandas._config.config._get_option": [
        "pandas._config.config._get_single_key",
        "pandas._config.config._get_root"
    ],
    "pandas._config.config._get_single_key": [
        "pandas._config.config._warn_if_deprecated",
        "pandas._config.config._select_options",
        "pandas._config.config._translate_key",
        "<builtin>.repr",
        "<builtin>.len"
    ],
    "pandas._config.config._select_options": [
        "<builtin>.sorted"
    ],
    "pandas._config.config._warn_if_deprecated": [
        "pandas.util._exceptions.find_stack_level",
        "pandas._config.config._get_deprecated_option"
    ],
    "pandas._config.config._get_deprecated_option": [],
    "pandas._config.config._translate_key": [
        "pandas._config.config._get_deprecated_option"
    ],
    "pandas._config.config._get_root": [],
    "pandas.core.indexes.api.default_index": [
        "pandas.core.indexes.range.RangeIndex._simple_new",
        "<builtin>.range"
    ],
    "pandas.core.indexes.range.RangeIndex._simple_new": [
        "<builtin>.isinstance"
    ],
    "pandas.core.indexes.base.ensure_index": [
        "numpy.ma.core.MaskedConstant.copy",
        "<builtin>.isinstance",
        "copy",
        "<map>.copy",
        "pandas.core.indexes.multi.MultiIndex.from_arrays",
        "numpy.ma.core._arraymethod.wrapped_method",
        "pandas.core.indexes.multi",
        "pandas.core.indexes.base.Index.copy",
        "pandas.core.indexes.multi.MultiIndex.copy",
        "<builtin>.list",
        "<builtin>.len",
        "<builtin>.type"
    ],
    "pandas.core.indexes.multi.MultiIndex.from_arrays": [
        "<builtin>.TypeError",
        "<builtin>.range",
        "<builtin>.list",
        "<builtin>.getattr",
        "<builtin>.ValueError",
        "<builtin>.len",
        "pandas.core.arrays.categorical.factorize_from_iterables"
    ],
    "pandas.core.arrays.categorical.factorize_from_iterables": [
        "<builtin>.len",
        "<builtin>.list",
        "<builtin>.zip",
        "pandas.core.arrays.categorical.factorize_from_iterable"
    ],
    "pandas.core.arrays.categorical.factorize_from_iterable": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas",
        "pandas.core.indexes.api.CategoricalIndex",
        "pandas.core.construction.extract_array",
        "<builtin>.getattr",
        "pandas.core.arrays.categorical.Categorical.from_codes",
        "<builtin>.len",
        "pandas.core.arrays.categorical.Categorical.__init__"
    ],
    "pandas.core.arrays.categorical.Categorical.__init__": [
        "<builtin>.TypeError",
        "numpy.core.numeric.where",
        "pandas.core.dtypes.dtypes.CategoricalDtype.update_dtype",
        "<builtin>.issubclass",
        "<builtin>.NotImplementedError",
        "pandas.core.construction.sanitize_array",
        "pandas.core.construction.extract_array",
        "pandas.core.dtypes.dtypes.CategoricalDtype.__init__",
        "pandas.core.dtypes.cast.coerce_indexer_dtype",
        "pandas.core.arrays.categorical.Categorical.isna",
        "pandas.core.dtypes.dtypes.CategoricalDtype._from_values_or_dtype",
        "pandas.core.common.convert_to_list_like",
        "pandas.core.algorithms.factorize",
        "numpy.core.ones",
        "<builtin>.getattr",
        "<builtin>.len",
        "numpy.core.multiarray.where",
        "numpy.core.numeric.ones",
        "<builtin>.super",
        "pandas.core.arrays.categorical.recode_for_categories",
        "<builtin>.isinstance",
        "pandas.util._exceptions.find_stack_level",
        "pandas.core.arrays.categorical._get_codes_for_values"
    ],
    "pandas.core.dtypes.dtypes.CategoricalDtype._from_values_or_dtype": [
        "pandas.core.dtypes.dtypes.CategoricalDtype.__init__",
        "<builtin>.isinstance",
        "typing.cast",
        "<builtin>.ValueError",
        "<builtin>.repr",
        "pandas.core.dtypes.base.ExtensionDtype.is_dtype"
    ],
    "pandas.core.dtypes.base.ExtensionDtype.is_dtype": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.dtypes.IntervalDtype.construct_from_string",
        "pandas.core.dtypes.dtypes.CategoricalDtype.construct_from_string",
        "pandas.core.dtypes.base.ExtensionDtype.construct_from_string",
        "pandas.core.dtypes.dtypes.PeriodDtype.construct_from_string",
        "<builtin>.getattr",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_from_string"
    ],
    "pandas.core.dtypes.base.ExtensionDtype.construct_from_string": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.dtypes.dtypes.CategoricalDtype.__init__",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__",
        "pandas.core.dtypes.dtypes.IntervalDtype.__init__",
        "<builtin>.type"
    ],
    "pandas.core.dtypes.dtypes.CategoricalDtype.__init__": [
        "pandas.core.dtypes.dtypes.CategoricalDtype._finalize"
    ],
    "pandas.core.dtypes.dtypes.CategoricalDtype._finalize": [
        "pandas.core.dtypes.dtypes.CategoricalDtype.validate_ordered",
        "pandas.core.dtypes.dtypes.CategoricalDtype.validate_categories"
    ],
    "pandas.core.dtypes.dtypes.CategoricalDtype.validate_ordered": [
        "<builtin>.TypeError"
    ],
    "pandas.core.dtypes.dtypes.CategoricalDtype.validate_categories": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.indexes.base.Index._with_infer",
        "pandas.core.indexes.base",
        "<builtin>.repr",
        "<builtin>.ValueError"
    ],
    "pandas.core.indexes.base.Index._with_infer": [],
    "pandas.core.dtypes.dtypes.CategoricalDtype.construct_from_string": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.type",
        "pandas.core.dtypes.dtypes.CategoricalDtype.__init__"
    ],
    "pandas.core.dtypes.cast.coerce_indexer_dtype": [
        "<builtin>.len"
    ],
    "pandas.core.dtypes.dtypes.CategoricalDtype.update_dtype": [
        "pandas.core.dtypes.dtypes.CategoricalDtype.__init__",
        "<builtin>.isinstance",
        "typing.cast",
        "<builtin>.ValueError",
        "<builtin>.repr",
        "pandas.core.dtypes.base.ExtensionDtype.is_dtype"
    ],
    "pandas.core.common.convert_to_list_like": [
        "<builtin>.list",
        "<builtin>.isinstance"
    ],
    "pandas.core.construction.sanitize_array": [
        "numpy.ma.core.MaskedConstant.copy",
        "pandas.core.arrays.period.PeriodArray._from_sequence",
        "pandas.core.construction.sanitize_masked_array",
        "pandas.core.dtypes.cast.maybe_convert_platform",
        "pandas.core.arrays.base.ExtensionArray.copy",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_array_type",
        "pandas.core.construction.sanitize_array",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.arrays.string_arrow.ArrowStringArray._from_sequence",
        "pandas.core.construction.extract_array",
        "pandas.core.dtypes.cast.construct_1d_arraylike_from_scalar",
        "pandas.core.dtypes.dtypes.PeriodDtype.construct_array_type",
        "pandas.core.arrays.datetimes.DatetimeArray.astype",
        "pandas.core.arrays.string_.StringArray._from_sequence",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.indexes.multi.MultiIndex.copy",
        "pandas.core.dtypes.dtypes.IntervalDtype.construct_array_type",
        "pandas.core.arrays.datetimes.DatetimeArray._from_sequence",
        "pandas.core.construction._try_cast",
        "copy",
        "pandas.core.internals.managers.BaseBlockManager.copy",
        "pandas.core.dtypes.dtypes.ArrowDtype.construct_array_type",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.generic.NDFrame.astype",
        "pandas._config.using_pyarrow_string_dtype",
        "pandas.core.internals.array_manager.BaseArrayManager.copy",
        "<builtin>.hasattr",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray._from_sequence",
        "pandas.core.dtypes.cast.maybe_infer_to_datetimelike",
        "pandas.core.arrays.string_.StringDtype.__init__",
        "<map>.copy",
        "pandas.core.dtypes.dtypes.CategoricalDtype.construct_array_type",
        "typing.cast",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.dtypes.common.is_string_dtype",
        "pandas.core.construction._sanitize_non_ordered",
        "<builtin>.list",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.copy",
        "pandas.core.indexes.base.Index.copy",
        "pandas.core.arrays.interval.IntervalArray.copy",
        "pandas.core.construction._sanitize_ndim",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "<builtin>.len",
        "pandas.core.arrays.string_.StringDtype.construct_array_type",
        "pandas.core.arrays.masked.BaseMaskedArray.astype",
        "pandas.core.arrays.interval.IntervalArray._from_sequence",
        "pandas.core.arrays.datetimelike.TimelikeOps.copy",
        "<builtin>.isinstance",
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.copy",
        "pandas.core.arrays.string_",
        "pandas.core.construction._sanitize_str_dtypes",
        "numpy.ma.core._arraymethod.wrapped_method",
        "pandas.core.construction.range_to_ndarray",
        "<builtin>.ValueError",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.generic.NDFrame.copy"
    ],
    "pandas.core.construction.sanitize_masked_array": [
        "numpy.ma.core.MaskedConstant.copy",
        "pandas.core.arrays.base.ExtensionArray.copy",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "numpy.ma.core.asarray",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.dtypes.cast.maybe_promote",
        "numpy.ma.core.getmaskarray",
        "numpy.ma.core.MaskedArray.soften_mask",
        "pandas.core.arrays.datetimes.DatetimeArray.astype",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.indexes.multi.MultiIndex.copy",
        "copy",
        "pandas.core.internals.managers.BaseBlockManager.copy",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.generic.NDFrame.astype",
        "pandas.core.internals.array_manager.BaseArrayManager.copy",
        "<map>.copy",
        "typing.cast",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.copy",
        "pandas.core.indexes.base.Index.copy",
        "pandas.core.arrays.interval.IntervalArray.copy",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.astype",
        "pandas.core.arrays.datetimelike.TimelikeOps.copy",
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.copy",
        "numpy.ma.core._arraymethod.wrapped_method",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.generic.NDFrame.copy"
    ],
    "numpy.ma.core.getmaskarray": [
        "numpy.ma.core.make_mask_none",
        "<builtin>.getattr",
        "numpy.ma.core.getmask",
        "numpy.core.fromnumeric.shape"
    ],
    "numpy.ma.core.getmask": [
        "<builtin>.getattr"
    ],
    "numpy.core.fromnumeric.shape": [],
    "numpy.ma.core.make_mask_none": [
        "numpy.ma.core.make_mask_descr"
    ],
    "numpy.ma.core.make_mask_descr": [
        "numpy.ma.core._replace_dtype_fields"
    ],
    "numpy.ma.core._replace_dtype_fields": [
        "numpy.ma.core._replace_dtype_fields_recursive"
    ],
    "numpy.ma.core._replace_dtype_fields_recursive": [
        "<builtin>.tuple",
        "append",
        "<builtin>.list",
        "numpy.ma.core._replace_dtype_fields_recursive",
        "<builtin>.len"
    ],
    "pandas.core.dtypes.cast.maybe_promote": [
        "pandas.core.dtypes.cast._maybe_promote",
        "pandas.core.dtypes.cast._maybe_promote_cached",
        "pandas._libs.missing.checknull",
        "<map>.get",
        "<builtin>.type"
    ],
    "pandas._libs.missing.checknull": [],
    "pandas.core.dtypes.cast._maybe_promote_cached": [
        "pandas.core.dtypes.cast._maybe_promote"
    ],
    "pandas.core.dtypes.cast._maybe_promote": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.cast.ensure_dtype_can_hold_na",
        "pandas.core.dtypes.cast.infer_dtype_from_scalar",
        "pandas._libs.tslibs.timedeltas.Timedelta",
        "pandas.core.arrays",
        "pandas.core.dtypes.missing.na_value_for_dtype",
        "<builtin>.issubclass",
        "pandas.core.dtypes.cast.np_can_cast_scalar",
        "pandas.core.arrays.datetimes.DatetimeArray._from_sequence",
        "pandas.core.dtypes.cast._ensure_dtype_type",
        "<builtin>.ValueError",
        "pandas.core.dtypes.missing.isna",
        "pandas.core.dtypes.missing.is_valid_na_for_dtype",
        "numpy.core.multiarray.min_scalar_type"
    ],
    "pandas.core.dtypes.missing.is_valid_na_for_dtype": [
        "pandas.core.dtypes.missing.isna",
        "<builtin>.isinstance",
        "pandas.core.dtypes.missing.is_valid_na_for_dtype"
    ],
    "pandas.core.dtypes.missing.isna": [],
    "pandas.core.dtypes.cast.ensure_dtype_can_hold_na": [],
    "pandas.core.dtypes.missing.na_value_for_dtype": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.dtypes.ArrowDtype.type",
        "pandas.core.arrays.string_.StringDtype.type",
        "pandas.core.dtypes.base.ExtensionDtype.type",
        "pandas.core.dtypes.dtypes.IntervalDtype.type"
    ],
    "numpy.core.multiarray.min_scalar_type": [],
    "pandas.core.dtypes.cast.np_can_cast_scalar": [
        "pandas.core.dtypes.cast.np_can_hold_element"
    ],
    "pandas.core.dtypes.cast.np_can_hold_element": [
        "numpy.core.arrayprint.errstate",
        "<builtin>.isinstance",
        "pandas.core.dtypes.cast._maybe_infer_dtype_type",
        "numpy.core.iinfo",
        "numpy.core.numeric.array_equal",
        "numpy.core._ufunc_config.errstate.__init__",
        "<builtin>.len",
        "<builtin>.NotImplementedError",
        "numpy.core.getlimits.iinfo.__init__",
        "pandas.core.dtypes.cast._dtype_can_hold_range"
    ],
    "pandas.core.dtypes.cast._maybe_infer_dtype_type": [
        "<builtin>.hasattr"
    ],
    "pandas.core.dtypes.cast._dtype_can_hold_range": [
        "<builtin>.len",
        "pandas.core.dtypes.cast.np_can_cast_scalar"
    ],
    "numpy.core.numeric.array_equal": [
        "<builtin>.bool"
    ],
    "pandas.core.dtypes.cast.infer_dtype_from_scalar": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.cast.infer_dtype_from_scalar",
        "pandas.core.arrays.string_.StringDtype.__init__",
        "pandas.core.arrays.string_",
        "pandas._libs.tslibs.timedeltas.Timedelta",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__",
        "pandas.core.dtypes.dtypes.IntervalDtype.__init__",
        "<builtin>.ValueError",
        "<builtin>.type",
        "pandas._libs.tslibs.timestamps.Timestamp",
        "pandas._config.using_pyarrow_string_dtype"
    ],
    "pandas._libs.tslibs.timedeltas.Timedelta": [],
    "pandas._libs.tslibs.timestamps.Timestamp": [],
    "pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.type",
        "<builtin>.ValueError"
    ],
    "pandas._config.using_pyarrow_string_dtype": [],
    "pandas.core.arrays.string_.StringDtype.__init__": [
        "<builtin>.ImportError",
        "pandas._config.config.CallableDynamicDoc.__init__",
        "<builtin>.ValueError"
    ],
    "pandas.core.dtypes.dtypes.IntervalDtype.__init__": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.dtypes.common",
        "<str>.lower",
        "pandas.core.dtypes.common.is_string_dtype",
        "<builtin>.ValueError",
        "pandas.core.dtypes.base.ExtensionDtype.is_dtype"
    ],
    "pandas.core.dtypes.common.is_string_dtype": [
        "pandas.core.dtypes.common.is_all_strings",
        "pandas.core.dtypes.common._is_dtype",
        "<builtin>.hasattr",
        "pandas.core.dtypes.common._get_dtype"
    ],
    "pandas.core.dtypes.common._get_dtype": [
        "pandas.core.dtypes.common.pandas_dtype",
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.hasattr"
    ],
    "pandas.core.dtypes.common.is_all_strings": [
        "<builtin>.len",
        "<builtin>.isinstance"
    ],
    "pandas.core.dtypes.common._is_dtype": [
        "pandas.core.dtypes.common.is_string_dtype.condition",
        "pandas.core.dtypes.common.is_numeric_dtype.<lambda1>",
        "pandas.core.dtypes.common.is_signed_integer_dtype.<lambda1>",
        "pandas.core.dtypes.common.is_float_dtype.<lambda1>",
        "pandas.core.dtypes.common.is_integer_dtype.<lambda1>",
        "pandas.core.dtypes.common._get_dtype"
    ],
    "pandas.core.dtypes.common.is_string_dtype.condition": [
        "pandas.core.dtypes.common.is_string_or_object_np_dtype"
    ],
    "pandas.core.dtypes.common.is_string_or_object_np_dtype": [],
    "pandas.core.arrays.datetimes.DatetimeArray._from_sequence": [
        "pandas.core.arrays.datetimes.DatetimeArray._from_sequence_not_strict"
    ],
    "pandas.core.arrays.datetimes.DatetimeArray._from_sequence_not_strict": [
        "pandas.core.arrays.datetimes._validate_tz_from_dtype",
        "<builtin>.isinstance",
        "pandas.core.arrays.datetimelike.ensure_arraylike_for_datetimelike",
        "pandas.core.arrays.datetimes._validate_dt64_dtype",
        "pandas.core.arrays.datetimes.tz_to_dtype",
        "pandas.core.arrays.datetimes._sequence_to_dt64",
        "pandas.core.arrays.datetimes.DatetimeArray._simple_new",
        "pandas.core.arrays.datetimelike.dtype_to_unit",
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays.datetimes._validate_dt64_dtype": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.pandas_dtype",
        "typing.cast",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__",
        "<builtin>.getattr",
        "<builtin>.ValueError",
        "pandas._libs.tslibs.np_datetime.is_supported_dtype"
    ],
    "pandas._libs.tslibs.np_datetime.is_supported_dtype": [],
    "pandas.core.arrays.datetimes._validate_tz_from_dtype": [
        "<builtin>.isinstance",
        "<builtin>.ValueError",
        "<builtin>.getattr",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_from_string"
    ],
    "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_from_string": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.type",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__"
    ],
    "pandas.core.arrays.datetimelike.dtype_to_unit": [
        "<builtin>.isinstance",
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays.datetimelike.ensure_arraylike_for_datetimelike": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.hasattr",
        "pandas.core.frame.DataFrame.to_numpy",
        "pandas.core.arrays.base.ExtensionArray.to_numpy",
        "numpy.core.fromnumeric.ndim",
        "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike",
        "pandas.core.arrays.masked.BaseMaskedArray.to_numpy",
        "<builtin>.list",
        "pandas.core.base.IndexOpsMixin.to_numpy",
        "numpy.core.numeric.ndim",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray._maybe_convert_datelike_array",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.to_numpy",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.to_numpy",
        "pandas.core.construction.extract_array"
    ],
    "pandas.core.construction.extract_array": [],
    "numpy.core.numeric.ndim": [],
    "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike": [
        "<builtin>.len"
    ],
    "pandas.core.arrays.datetimes._sequence_to_dt64": [
        "pandas.core.series.Series.view",
        "pandas.core.arrays.base.ExtensionArray.copy",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.datetimes.objects_to_datetime64",
        "pandas.core.arrays.base.ExtensionArray.view",
        "pandas.core.arrays.datetimes._maybe_infer_tz",
        "pandas._libs.tslibs.dtypes.abbrev_to_npy_unit",
        "pandas.core.arrays._mixins.NDArrayBackedExtensionArray.view",
        "pandas.core.arrays.datetimes.DatetimeArray.astype",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.arrays.datetimes._construct_from_dt64_naive",
        "pandas.core.indexes.multi.MultiIndex.view",
        "copy",
        "pandas.core.generic.NDFrame.astype",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "<map>.copy",
        "typing.cast",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.dtypes.common.is_string_dtype",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.copy",
        "pandas.core.arrays.interval.IntervalArray.copy",
        "<builtin>.getattr",
        "pandas.core.arrays.datetimes.maybe_convert_dtype",
        "numpy.ma.core.MaskedArray.view",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "pandas._libs.tslibs.np_datetime.is_supported_dtype",
        "<builtin>.type",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.astype",
        "pandas.core.arrays.datetimelike.TimelikeOps.copy",
        "<builtin>.isinstance",
        "pandas.core.indexes.base.Index.view",
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.copy",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.view",
        "pandas.core.generic.NDFrame.copy"
    ],
    "pandas.core.arrays.datetimes.maybe_convert_dtype": [
        "<builtin>.TypeError",
        "pandas.core.series.Series.view",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.arrays.base.ExtensionArray.view",
        "pandas.core.arrays._mixins.NDArrayBackedExtensionArray.view",
        "pandas.core.arrays.datetimes.DatetimeArray.astype",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.indexes.multi.MultiIndex.view",
        "pandas.core.generic.NDFrame.astype",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "<builtin>.hasattr",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.dtypes.common.is_bool_dtype",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.astype",
        "pandas.core.indexes.base.Index.astype",
        "<builtin>.isinstance",
        "pandas.core.indexes.base.Index.view",
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas.core.dtypes.common.is_float_dtype",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.view"
    ],
    "pandas.core.dtypes.common.is_float_dtype": [
        "pandas.core.dtypes.common.classes",
        "pandas.core.dtypes.common._is_dtype_type",
        "pandas.core.dtypes.common._is_dtype"
    ],
    "pandas.core.dtypes.common.classes": [],
    "pandas.core.dtypes.common._is_dtype_type": [
        "<builtin>.isinstance",
        "<builtin>.hasattr",
        "pandas.core.dtypes.common._classes_and_not_datetimelike.<lambda1>",
        "pandas.core.dtypes.common.pandas_dtype",
        "<builtin>.issubclass",
        "pandas.core.dtypes.common.classes.<lambda1>",
        "<builtin>.type"
    ],
    "pandas.core.dtypes.common.classes.<lambda1>": [
        "<builtin>.issubclass"
    ],
    "pandas.core.dtypes.common.is_float_dtype.<lambda1>": [
        "<builtin>.isinstance"
    ],
    "pandas.core.dtypes.common.is_bool_dtype": [
        "<builtin>.isinstance",
        "<builtin>.issubclass",
        "pandas.core.dtypes.common.is_bool_dtype",
        "<builtin>.getattr",
        "pandas.core.dtypes.common._get_dtype"
    ],
    "pandas.core.arrays.datetimes.objects_to_datetime64": [
        "pandas._libs.tslibs.dtypes.abbrev_to_npy_unit",
        "<builtin>.TypeError"
    ],
    "pandas._libs.tslibs.dtypes.abbrev_to_npy_unit": [],
    "pandas.core.arrays.datetimes._construct_from_dt64_naive": [
        "pandas.core.series.Series.view",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.reshape",
        "pandas.core.series.Series.ravel",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.ravel",
        "pandas.core.arrays.base.ExtensionArray.view",
        "pandas.core.arrays._mixins.NDArrayBackedExtensionArray.view",
        "pandas.core.indexes.base.Index.ravel",
        "pandas.core.arrays.datetimes.DatetimeArray.astype",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.indexes.multi.MultiIndex.view",
        "pandas.core.generic.NDFrame.astype",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas._libs.tslibs.np_datetime.get_supported_dtype",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.reshape",
        "numpy.ma.core.MaskedArray.view",
        "pandas._libs.tslibs.np_datetime.astype_overflowsafe",
        "pandas._libs.tslibs.np_datetime.is_supported_dtype",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.astype",
        "pandas.core.arrays.base.ExtensionArray.ravel",
        "pandas.core.indexes.base.Index.view",
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas._libs.tslibs.np_datetime.py_get_unit_from_dtype",
        "numpy.ma.core.MaskedArray.reshape",
        "numpy.ma.core.MaskedArray.ravel",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.view"
    ],
    "pandas._libs.tslibs.np_datetime.get_supported_dtype": [],
    "pandas._libs.tslibs.np_datetime.astype_overflowsafe": [],
    "pandas._libs.tslibs.np_datetime.py_get_unit_from_dtype": [],
    "pandas.core.arrays.datetimes._maybe_infer_tz": [
        "<builtin>.TypeError"
    ],
    "pandas.core.arrays.datetimes.tz_to_dtype": [],
    "pandas.core.arrays.datetimes.DatetimeArray._simple_new": [
        "<builtin>.isinstance",
        "<builtin>.super",
        "pandas._libs.tslibs.np_datetime.py_get_unit_from_dtype",
        "pandas._libs.tslibs.np_datetime.is_unitless"
    ],
    "pandas._libs.tslibs.np_datetime.is_unitless": [],
    "pandas.core.dtypes.cast._ensure_dtype_type": [],
    "numpy.ma.core.asarray": [],
    "numpy.ma.core.MaskedArray.soften_mask": [],
    "pandas.core.construction.range_to_ndarray": [
        "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike",
        "<builtin>.list"
    ],
    "pandas.core.construction._sanitize_non_ordered": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.type"
    ],
    "pandas.core.dtypes.cast.maybe_convert_platform": [
        "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike",
        "<builtin>.isinstance",
        "typing.cast"
    ],
    "pandas.core.dtypes.cast.maybe_infer_to_datetimelike": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.ValueError",
        "<builtin>.len",
        "<builtin>.type"
    ],
    "pandas.core.construction._try_cast": [
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.dtypes.cast.maybe_cast_to_integer_array",
        "pandas.core.series.Series.ravel",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.ravel",
        "pandas.core.indexes.base.Index.ravel",
        "pandas.core.arrays.datetimes.DatetimeArray.astype",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.generic.NDFrame.astype",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike",
        "typing.cast",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "<builtin>.len",
        "pandas.core.arrays.masked.BaseMaskedArray.astype",
        "pandas.core.arrays.base.ExtensionArray.ravel",
        "<builtin>.isinstance",
        "pandas.core.arrays.string_.StringArray.astype",
        "numpy.ma.core.MaskedArray.ravel",
        "pandas.core.dtypes.cast.maybe_cast_to_datetime",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.construction.ensure_wrapped_if_datetimelike"
    ],
    "pandas.core.dtypes.cast.maybe_cast_to_integer_array": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.OverflowError",
        "<builtin>.ValueError",
        "numpy.core.numerictypes.issubdtype"
    ],
    "<builtin>.OverflowError": [],
    "pandas.core.dtypes.cast.maybe_cast_to_datetime": [
        "<builtin>.TypeError",
        "<builtin>.str",
        "pandas.core.arrays.datetimes.DatetimeArray._from_sequence",
        "pandas.core.dtypes.cast._ensure_nanosecond_dtype",
        "pandas.core.arrays.datetimes",
        "pandas.core.arrays.timedeltas",
        "pandas.core.arrays.timedeltas.TimedeltaArray._from_sequence",
        "<builtin>.ValueError"
    ],
    "pandas.core.dtypes.cast._ensure_nanosecond_dtype": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.getattr",
        "<builtin>.ValueError",
        "pandas._libs.tslibs.np_datetime.is_supported_dtype"
    ],
    "numpy.ma.core.MaskedArray.view": [
        "<builtin>.issubclass",
        "<builtin>.getattr",
        "numpy.ma.core.getmask"
    ],
    "numpy.ma.core.MaskedArray.ravel": [
        "<builtin>.type"
    ],
    "numpy.ma.core.MaskedArray.reshape": [
        "<builtin>.type"
    ],
    "pandas.core.arrays.timedeltas.TimedeltaArray._from_sequence": [
        "pandas.core.arrays.timedeltas._validate_td64_dtype",
        "pandas.core.arrays.timedeltas.TimedeltaArray._simple_new",
        "pandas._libs.tslibs.np_datetime.astype_overflowsafe",
        "pandas.core.arrays.timedeltas.sequence_to_td64ns"
    ],
    "pandas.core.arrays.timedeltas._validate_td64_dtype": [
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas._libs.tslibs.np_datetime.is_supported_dtype",
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays.timedeltas.sequence_to_td64ns": [
        "<builtin>.TypeError",
        "pandas.core.arrays.timedeltas._objects_to_td64ns",
        "pandas.core.series.Series.view",
        "pandas.core.arrays.base.ExtensionArray.view",
        "pandas.core.arrays.timedeltas._ints_to_td64ns",
        "pandas.core.arrays._mixins.NDArrayBackedExtensionArray.view",
        "pandas.core.dtypes.common.is_integer_dtype",
        "pandas.core.arrays.datetimelike.ensure_arraylike_for_datetimelike",
        "pandas._libs.tslibs.conversion.cast_from_unit_vectorized",
        "pandas.core.indexes.multi.MultiIndex.view",
        "pandas._libs.tslibs.np_datetime.get_supported_dtype",
        "pandas.core.dtypes.common.is_string_dtype",
        "numpy.ma.core.MaskedArray.view",
        "pandas._libs.tslibs.np_datetime.astype_overflowsafe",
        "pandas._libs.tslibs.np_datetime.is_supported_dtype",
        "<builtin>.isinstance",
        "pandas.core.indexes.base.Index.view",
        "pandas.core.dtypes.common.is_float_dtype",
        "pandas._libs.tslibs.timedeltas.parse_timedelta_unit",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.view"
    ],
    "pandas._libs.tslibs.timedeltas.parse_timedelta_unit": [],
    "pandas.core.dtypes.common.is_integer_dtype": [
        "pandas.core.dtypes.common._is_dtype_type",
        "pandas.core.dtypes.common._is_dtype",
        "pandas.core.dtypes.common._classes_and_not_datetimelike"
    ],
    "pandas.core.dtypes.common._classes_and_not_datetimelike": [],
    "pandas.core.dtypes.common._classes_and_not_datetimelike.<lambda1>": [
        "<builtin>.issubclass"
    ],
    "pandas.core.dtypes.common.is_integer_dtype.<lambda1>": [
        "<builtin>.isinstance"
    ],
    "pandas._libs.tslibs.conversion.cast_from_unit_vectorized": [],
    "pandas.core.arrays.timedeltas._ints_to_td64ns": [
        "pandas.core.series.Series.view",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.arrays.base.ExtensionArray.view",
        "pandas.core.arrays._mixins.NDArrayBackedExtensionArray.view",
        "pandas.core.arrays.datetimes.DatetimeArray.astype",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.indexes.multi.MultiIndex.view",
        "pandas.core.generic.NDFrame.astype",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "numpy.ma.core.MaskedArray.view",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "pandas._libs.tslibs.np_datetime.astype_overflowsafe",
        "pandas.core.arrays.masked.BaseMaskedArray.astype",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.indexes.base.Index.view",
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.view"
    ],
    "pandas.core.arrays.timedeltas._objects_to_td64ns": [
        "pandas._libs.tslibs.timedeltas.array_to_timedelta64"
    ],
    "pandas._libs.tslibs.timedeltas.array_to_timedelta64": [],
    "pandas.core.arrays.timedeltas.TimedeltaArray._simple_new": [
        "<builtin>.isinstance",
        "<builtin>.type",
        "<builtin>.super",
        "pandas._libs.tslibs.np_datetime.is_unitless"
    ],
    "pandas.core.construction.ensure_wrapped_if_datetimelike": [
        "<builtin>.isinstance",
        "pandas.core.arrays",
        "pandas._libs.tslibs.np_datetime.get_supported_dtype",
        "pandas.core.arrays.datetimes.DatetimeArray._from_sequence",
        "pandas.core.arrays.timedeltas.TimedeltaArray._from_sequence"
    ],
    "pandas.core.arrays.string_.StringDtype.construct_array_type": [
        "pandas.core.arrays.string_arrow"
    ],
    "pandas.core.arrays.string_arrow.ArrowStringArray._from_sequence": [
        "<builtin>.isinstance",
        "pandas.core.arrays.string_arrow.ArrowStringArray.__init__",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.arrays.masked",
        "pandas.core.arrays.string_arrow._chk_pyarrow_available"
    ],
    "pandas.core.arrays.string_arrow._chk_pyarrow_available": [
        "<builtin>.ImportError"
    ],
    "pandas.core.arrays.string_arrow.ArrowStringArray.__init__": [
        "<builtin>.isinstance",
        "pandas.core.arrays.string_.StringDtype.__init__",
        "pandas.core.arrays.string_arrow._chk_pyarrow_available",
        "<builtin>.ValueError",
        "<builtin>.super"
    ],
    "pandas.core.arrays.string_.StringArray._from_sequence": [
        "pandas.core.dtypes.common.pandas_dtype",
        "<builtin>.isinstance",
        "pandas.core.arrays.masked",
        "pandas.core.arrays.string_.StringDtype.__init__"
    ],
    "pandas.core.arrays.base.ExtensionArray.copy": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.errors.AbstractMethodError.__init__": [
        "<builtin>.ValueError"
    ],
    "numpy.ma.core._arraymethod.wrapped_method": [
        "<builtin>.type",
        "<builtin>.getattr"
    ],
    "pandas.core.dtypes.cast.construct_1d_arraylike_from_scalar": [
        "pandas.core.dtypes.cast._maybe_box_and_unbox_datetimelike",
        "<builtin>.isinstance",
        "pandas.core.dtypes.cast.infer_dtype_from_scalar",
        "pandas.core.dtypes.common.ensure_str",
        "pandas.core.dtypes.missing.isna"
    ],
    "pandas.core.dtypes.cast._maybe_box_and_unbox_datetimelike": [
        "pandas.core.dtypes.cast._maybe_unbox_datetimelike",
        "<builtin>.isinstance",
        "pandas.core.dtypes.cast.maybe_box_datetimelike"
    ],
    "pandas.core.dtypes.cast.maybe_box_datetimelike": [
        "<builtin>.isinstance",
        "pandas._libs.tslibs.timestamps.Timestamp",
        "pandas._libs.tslibs.timedeltas.Timedelta"
    ],
    "pandas.core.dtypes.cast._maybe_unbox_datetimelike": [
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "pandas.core.dtypes.missing.is_valid_na_for_dtype",
        "pandas.core.dtypes.cast._disallow_mismatched_datetimelike"
    ],
    "pandas.core.dtypes.cast._disallow_mismatched_datetimelike": [
        "<builtin>.repr",
        "<builtin>.TypeError",
        "<builtin>.getattr"
    ],
    "pandas.core.dtypes.common.ensure_str": [
        "<builtin>.str",
        "<builtin>.isinstance"
    ],
    "pandas.core.construction._sanitize_ndim": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.dtypes.PeriodDtype.construct_array_type",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray._from_sequence",
        "pandas.core.arrays.string_.StringArray._from_sequence",
        "pandas.core.construction._maybe_repeat",
        "pandas.core.dtypes.dtypes.CategoricalDtype.construct_array_type",
        "pandas.core.arrays.period.PeriodArray._from_sequence",
        "pandas.core.dtypes.dtypes.ArrowDtype.construct_array_type",
        "pandas.core.dtypes.dtypes.IntervalDtype.construct_array_type",
        "pandas.core.arrays.datetimes.DatetimeArray._from_sequence",
        "pandas.core.dtypes.common.is_object_dtype",
        "<builtin>.getattr",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_array_type",
        "<builtin>.ValueError",
        "pandas.core.common.asarray_tuplesafe",
        "pandas.core.arrays.string_.StringDtype.construct_array_type",
        "pandas.core.arrays.string_arrow.ArrowStringArray._from_sequence",
        "pandas.core.arrays.interval.IntervalArray._from_sequence"
    ],
    "pandas.core.dtypes.common.is_object_dtype": [
        "pandas.core.dtypes.common.classes",
        "pandas.core.dtypes.common._is_dtype_type"
    ],
    "pandas.core.common.asarray_tuplesafe": [],
    "pandas.core.construction._maybe_repeat": [
        "pandas.core.series.Series.repeat",
        "pandas.core.indexes.multi.MultiIndex.repeat",
        "pandas.core.arrays.interval.IntervalArray.repeat",
        "pandas.core.arrays.base.ExtensionArray.repeat",
        "numpy.ma.core._arraymethod.wrapped_method",
        "pandas.core.indexes.base.Index.repeat",
        "<builtin>.len"
    ],
    "pandas.core.arrays.base.ExtensionArray.repeat": [
        "<builtin>.len",
        "pandas.compat.numpy.function.CompatValidator.__init__",
        "pandas.core.arrays.base.ExtensionArray.take"
    ],
    "pandas.core.arrays.base.ExtensionArray.take": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.construction._sanitize_str_dtypes": [
        "<builtin>.issubclass",
        "numpy.core.fromnumeric.all",
        "pandas.core.dtypes.missing.isna"
    ],
    "pandas.core.arrays.categorical.Categorical.isna": [],
    "numpy.core.multiarray.where": [],
    "numpy.core.numeric.where": [],
    "pandas.core.arrays.categorical._get_codes_for_values": [
        "pandas.core.dtypes.cast.coerce_indexer_dtype"
    ],
    "pandas.core.arrays.categorical.recode_for_categories": [
        "<builtin>.len",
        "pandas.core.dtypes.cast.coerce_indexer_dtype"
    ],
    "pandas.core.dtypes.dtypes.PeriodDtype.construct_from_string": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.type",
        "<str>.startswith"
    ],
    "pandas.core.arrays.string_arrow.ArrowStringArray.astype": [
        "pandas.core.dtypes.dtypes.IntervalDtype.__from_arrow__",
        "<builtin>.isinstance",
        "pandas.core.arrays.base.ExtensionArray.to_numpy",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.dtypes.dtypes.PeriodDtype.__from_arrow__",
        "pandas.core.dtypes.dtypes.ArrowDtype.__from_arrow__",
        "pandas.core.arrays.base.ExtensionArray.copy",
        "pandas.core.arrays.string_.StringDtype.__from_arrow__",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.__from_arrow__",
        "numpy.core.numerictypes.issubdtype",
        "<builtin>.super"
    ],
    "pandas.core.arrays.base.ExtensionArray.to_numpy": [
        "pandas.core.arrays.interval.IntervalArray.isna",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.isna",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.isna",
        "pandas.core.arrays.masked.BaseMaskedArray.isna",
        "pandas.core.arrays.base.ExtensionArray.isna"
    ],
    "pandas.core.arrays.base.ExtensionArray.isna": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.dtypes.dtypes.IntervalDtype.__from_arrow__": [
        "<builtin>.isinstance",
        "append",
        "pandas.core.arrays",
        "pandas.core.arrays.interval.IntervalArray.from_arrays",
        "pandas.core.arrays.interval.IntervalArray._concat_same_type"
    ],
    "pandas.core.arrays.interval.IntervalArray.from_arrays": [
        "pandas.core.arrays.interval.IntervalArray._ensure_simple_new_inputs",
        "pandas.core.arrays.interval._maybe_convert_platform_interval",
        "pandas.core.arrays.interval.IntervalArray._simple_new",
        "pandas.core.arrays.interval.IntervalArray._validate"
    ],
    "pandas.core.arrays.interval._maybe_convert_platform_interval": [
        "<builtin>.isinstance",
        "<builtin>.hasattr",
        "<builtin>.getattr",
        "<builtin>.len",
        "pandas.core.construction.extract_array"
    ],
    "pandas.core.arrays.interval.IntervalArray._ensure_simple_new_inputs": [
        "<builtin>.TypeError",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.dtypes.cast.maybe_upcast_numeric_to_64bit",
        "pandas.core.arrays.base.ExtensionArray.copy",
        "pandas.core.dtypes.dtypes.IntervalDtype.__init__",
        "pandas.core.dtypes.common.needs_i8_conversion",
        "pandas.core.indexes.base.ensure_index",
        "pandas.core.construction.extract_array",
        "pandas.core.dtypes.common.is_integer_dtype",
        "copy",
        "pandas.core.internals.managers.BaseBlockManager.copy",
        "pandas.core.internals.array_manager.BaseArrayManager.copy",
        "pandas.core.dtypes.common.is_string_dtype",
        "pandas.core.indexes.base.Index.copy",
        "<builtin>.getattr",
        "<builtin>.type",
        "<builtin>.ValueError",
        "<builtin>.str",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.is_float_dtype",
        "numpy.ma.core._arraymethod.wrapped_method",
        "pandas.core.indexes.base",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.construction.ensure_wrapped_if_datetimelike"
    ],
    "pandas.core.dtypes.cast.maybe_upcast_numeric_to_64bit": [
        "pandas.core.indexes.base.Index.astype"
    ],
    "pandas.core.indexes.base.Index.astype": [
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.arrays.period.PeriodArray._from_sequence",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_array_type",
        "pandas.core.arrays.string_arrow.ArrowStringArray._from_sequence",
        "pandas.core.dtypes.dtypes.PeriodDtype.construct_array_type",
        "pandas.core.arrays.string_.StringArray._from_sequence",
        "pandas.core.indexes.multi.MultiIndex.copy",
        "pandas.core.dtypes.dtypes.IntervalDtype.construct_array_type",
        "pandas.core.arrays.datetimes.DatetimeArray._from_sequence",
        "pandas.core.dtypes.dtypes.ArrowDtype.construct_array_type",
        "pandas.core.dtypes.astype.astype_is_view",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray._from_sequence",
        "pandas.core.dtypes.dtypes.CategoricalDtype.construct_array_type",
        "pandas.core.dtypes.astype.astype_array",
        "pandas.core.indexes.base.Index.copy",
        "<builtin>.type",
        "pandas.core.arrays.string_.StringDtype.construct_array_type",
        "pandas.core.arrays.interval.IntervalArray._from_sequence",
        "<builtin>.isinstance",
        "pandas.util._exceptions.rewrite_exception"
    ],
    "pandas.core.indexes.base.Index.copy": [
        "pandas.core.indexes.base.Index._validate_names",
        "<builtin>.type",
        "pandas.core.indexes.base.Index._rename"
    ],
    "pandas.core.indexes.base.Index._validate_names": [
        "<builtin>.TypeError",
        "copy.deepcopy",
        "pandas.core.dtypes.common.validate_all_hashable",
        "<builtin>.ValueError",
        "<builtin>.len",
        "<builtin>.type"
    ],
    "copy.deepcopy": [],
    "pandas.core.dtypes.common.validate_all_hashable": [
        "<builtin>.TypeError",
        "<builtin>.all",
        "pandas.core.dtypes.inference.is_hashable"
    ],
    "pandas.core.indexes.base.Index._rename": [
        "pandas.core.indexes.base.Index._view"
    ],
    "pandas.core.indexes.base.Index._view": [
        "pandas.core.indexes.base.Index._simple_new"
    ],
    "pandas.core.indexes.base.Index._simple_new": [
        "<builtin>.isinstance",
        "<builtin>.type",
        "pandas._libs.internals.BlockValuesRefs"
    ],
    "pandas._libs.internals.BlockValuesRefs": [],
    "pandas.core.dtypes.astype.astype_array": [
        "<builtin>.issubclass",
        "<builtin>.isinstance",
        "pandas.core.dtypes.astype._astype_nansafe"
    ],
    "pandas.core.dtypes.astype._astype_nansafe": [],
    "pandas.core.dtypes.dtypes.IntervalDtype.construct_array_type": [
        "pandas.core.arrays"
    ],
    "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_array_type": [
        "pandas.core.arrays"
    ],
    "pandas.core.dtypes.dtypes.PeriodDtype.construct_array_type": [
        "pandas.core.arrays"
    ],
    "pandas.core.arrays.period.PeriodArray._from_sequence": [
        "pandas.core.internals.array_manager.BaseArrayManager.copy",
        "numpy.ma.core.MaskedConstant.copy",
        "<builtin>.isinstance",
        "pandas.core.arrays.masked.BaseMaskedArray.copy",
        "pandas.core.dtypes.common.pandas_dtype",
        "<map>.copy",
        "pandas.core.generic.NDFrame.copy",
        "numpy.ma.core._arraymethod.wrapped_method",
        "pandas.core.arrays.period.PeriodArray.__init__",
        "pandas.core.indexes.base.Index.copy",
        "pandas.core.arrays.base.ExtensionArray.copy",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.copy",
        "pandas.core.arrays.interval.IntervalArray.copy",
        "pandas.core.indexes.multi.MultiIndex.copy",
        "copy",
        "pandas.core.internals.managers.BaseBlockManager.copy",
        "pandas.core.arrays.datetimelike.TimelikeOps.copy",
        "pandas.core.arrays.period.validate_dtype_freq"
    ],
    "pandas.core.arrays.period.validate_dtype_freq": [],
    "pandas.core.arrays.period.PeriodArray.__init__": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.pandas_dtype",
        "typing.cast",
        "pandas.util._exceptions.find_stack_level",
        "pandas.core.arrays.period.raise_on_incompatible",
        "<builtin>.ValueError",
        "<builtin>.type",
        "pandas.core.arrays.period.validate_dtype_freq"
    ],
    "pandas.core.arrays.period.raise_on_incompatible": [
        "<builtin>.isinstance",
        "pandas._libs.tslibs.timedeltas.Timedelta",
        "pandas._libs.tslibs.period.IncompatibleFrequency",
        "pandas._libs.tslibs.offsets.delta_to_tick",
        "<builtin>.type",
        "pandas._libs.tslibs.dtypes.freq_to_period_freqstr"
    ],
    "pandas._libs.tslibs.offsets.delta_to_tick": [],
    "pandas._libs.tslibs.dtypes.freq_to_period_freqstr": [],
    "pandas._libs.tslibs.period.IncompatibleFrequency": [],
    "pandas.core.arrays.interval.IntervalArray._from_sequence": [],
    "pandas.core.base.IndexOpsMixin.to_numpy": [
        "pandas._config.using_copy_on_write",
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "numpy.core.multiarray.shares_memory",
        "<builtin>.next",
        "pandas.core.dtypes.cast.can_hold_element",
        "<builtin>.iter",
        "pandas.core.dtypes.missing.isna",
        "numpy.core.numerictypes.issubdtype"
    ],
    "pandas.core.dtypes.cast.can_hold_element": [
        "<builtin>.isinstance",
        "typing.cast",
        "pandas.core.dtypes.cast.np_can_hold_element"
    ],
    "numpy.core.multiarray.shares_memory": [],
    "pandas.core.indexes.base.Index.view": [
        "<builtin>.isinstance",
        "<builtin>.hasattr",
        "pandas.core.indexes.base.Index._dtype_to_subclass",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.util._exceptions.find_stack_level",
        "pandas.core.indexes.base.Index._view",
        "pandas.core.dtypes.common.needs_i8_conversion",
        "pandas.core.indexes.multi.MultiIndex._view",
        "<builtin>.type",
        "pandas.core.indexes.base.Index._simple_new"
    ],
    "pandas.core.dtypes.common.needs_i8_conversion": [
        "<builtin>.isinstance"
    ],
    "pandas.core.indexes.base.Index._dtype_to_subclass": [
        "<builtin>.isinstance",
        "pandas",
        "<builtin>.issubclass",
        "<builtin>.NotImplementedError",
        "pandas.core.dtypes.common.is_numeric_dtype"
    ],
    "pandas.core.dtypes.common.is_numeric_dtype": [
        "pandas.core.dtypes.common._is_dtype_type",
        "pandas.core.dtypes.common._is_dtype",
        "pandas.core.dtypes.common._classes_and_not_datetimelike"
    ],
    "pandas.core.dtypes.common.is_numeric_dtype.<lambda1>": [
        "<builtin>.isinstance"
    ],
    "pandas.core.indexes.base.Index.ravel": [],
    "pandas.util._exceptions.rewrite_exception": [
        "<builtin>.len",
        "<builtin>.str"
    ],
    "pandas.core.dtypes.astype.astype_is_view": [
        "pandas.core.dtypes.common.is_string_dtype",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.is_object_dtype",
        "<builtin>.getattr"
    ],
    "pandas.core.arrays.interval.IntervalArray._validate": [
        "<builtin>.len",
        "<builtin>.isinstance",
        "pandas.core.dtypes.missing.notna",
        "<builtin>.ValueError"
    ],
    "pandas.core.dtypes.missing.notna": [],
    "pandas.core.arrays.interval.IntervalArray._simple_new": [],
    "pandas.core.arrays.interval.IntervalArray._concat_same_type": [
        "pandas.core.arrays.interval.IntervalArray._ensure_simple_new_inputs",
        "numpy.core.fromnumeric.concatenate",
        "numpy.core.arrayprint.concatenate",
        "pandas.core.arrays.interval.IntervalArray._simple_new",
        "<builtin>.ValueError",
        "<builtin>.len",
        "numpy.core.multiarray.concatenate",
        "numpy.core.numeric.concatenate"
    ],
    "numpy.core.multiarray.concatenate": [
        "append",
        "<builtin>.list",
        "pandas.core.indexes.base.Index.append"
    ],
    "numpy.core.fromnumeric.concatenate": [],
    "numpy.core.numeric.concatenate": [],
    "numpy.core.arrayprint.concatenate": [],
    "pandas.core.dtypes.dtypes.DatetimeTZDtype.__from_arrow__": [
        "<builtin>.isinstance",
        "pandas.core.arrays",
        "pandas.core.arrays.datetimes.DatetimeArray._simple_new"
    ],
    "pandas.core.arrays.string_.StringDtype.__from_arrow__": [
        "<builtin>.isinstance",
        "numpy.core.fromnumeric.concatenate",
        "pandas.core.arrays.string_arrow.ArrowStringArray.__init__",
        "append",
        "pandas.core.arrays.string_.StringDtype.__init__",
        "numpy.core.arrayprint.concatenate",
        "pandas._libs.lib.ensure_string_array",
        "pandas.core.arrays.string_arrow",
        "<builtin>.len",
        "numpy.core.multiarray.concatenate",
        "numpy.core.numeric.concatenate"
    ],
    "pandas._libs.lib.ensure_string_array": [],
    "pandas.core.dtypes.dtypes.PeriodDtype.__from_arrow__": [
        "<builtin>.isinstance",
        "append",
        "pandas.core.arrays.arrow._arrow_utils.pyarrow_array_to_numpy_and_mask",
        "pandas.core.arrays",
        "pandas.core.arrays.period.PeriodArray.__init__",
        "pandas.core.arrays.arrow._arrow_utils",
        "pandas.core.arrays._mixins.NDArrayBackedExtensionArray._concat_same_type"
    ],
    "pandas.core.arrays.arrow._arrow_utils.pyarrow_array_to_numpy_and_mask": [
        "<builtin>.len",
        "numpy.core.numeric.ones",
        "numpy.core.ones"
    ],
    "pandas.core.arrays._mixins.NDArrayBackedExtensionArray._concat_same_type": [
        "<builtin>.str",
        "<builtin>.super",
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.view": [],
    "pandas.core.arrays.base.ExtensionArray.view": [
        "<builtin>.NotImplementedError"
    ],
    "pandas.core.arrays.period.PeriodArray.astype": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.arrays.period.PeriodArray.asfreq",
        "<builtin>.getattr",
        "<builtin>.super",
        "pandas.core.arrays.period.PeriodArray.to_timestamp",
        "pandas.core.arrays.datetimelike.dtype_to_unit"
    ],
    "pandas.core.arrays.period.PeriodArray.asfreq": [
        "pandas._libs.tslibs.period.period_asfreq_arr",
        "<builtin>.type",
        "<builtin>.isinstance",
        "<builtin>.hasattr"
    ],
    "pandas._libs.tslibs.period.period_asfreq_arr": [],
    "pandas.core.arrays.period.PeriodArray.to_timestamp": [
        "pandas._libs.tslibs.timedeltas.Timedelta",
        "pandas.core.arrays",
        "pandas.core.arrays.period.PeriodArray.asfreq",
        "pandas.core.arrays.datetimes.DatetimeArray._from_sequence",
        "pandas._libs.tslibs.dtypes.PeriodDtypeBase",
        "<builtin>.len",
        "pandas.core.arrays.period.PeriodArray.to_timestamp"
    ],
    "pandas._libs.tslibs.dtypes.PeriodDtypeBase": [],
    "pandas.core.arrays.base.ExtensionArray.ravel": [],
    "pandas.core.arrays.base.ExtensionArray.astype": [],
    "pandas.core.indexes.base.Index.repeat": [
        "pandas.compat.numpy.function.CompatValidator.__init__"
    ],
    "pandas.core.algorithms.factorize": [
        "pandas.core.algorithms.safe_sort",
        "<builtin>.isinstance",
        "numpy.core.numeric.where",
        "pandas.core.algorithms._ensure_arraylike",
        "pandas.core.algorithms._reconstruct_data",
        "pandas.core.arrays.base.ExtensionArray.factorize",
        "pandas.core.dtypes.missing.na_value_for_dtype",
        "pandas.core.dtypes.missing.isna",
        "pandas.core.algorithms.factorize_array",
        "pandas.core.base.IndexOpsMixin.factorize",
        "<builtin>.len",
        "numpy.core.multiarray.where"
    ],
    "pandas.core.base.IndexOpsMixin.factorize": [
        "pandas.core.indexes.base.Index._constructor",
        "<builtin>.isinstance",
        "pandas",
        "pandas.core.indexes.api.Index",
        "pandas.core.algorithms.factorize"
    ],
    "pandas.core.indexes.api.Index": [],
    "pandas.core.indexes.base.Index._constructor": [
        "<builtin>.type"
    ],
    "pandas.core.arrays.base.ExtensionArray.factorize": [
        "pandas.core.arrays.base.ExtensionArray._from_factorized",
        "pandas.core.arrays.base.ExtensionArray._values_for_factorize",
        "pandas.core.algorithms.factorize_array"
    ],
    "pandas.core.arrays.base.ExtensionArray._values_for_factorize": [
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.arrays.base.ExtensionArray.astype"
    ],
    "pandas.core.algorithms.factorize_array": [
        "<builtin>.len",
        "pandas.core.algorithms._reconstruct_data",
        "pandas.core.algorithms._get_hashtable_algo"
    ],
    "pandas.core.algorithms._get_hashtable_algo": [
        "pandas.core.algorithms._check_object_for_strings",
        "pandas.core.algorithms._ensure_data"
    ],
    "pandas.core.algorithms._ensure_data": [
        "pandas.core.dtypes.common.is_integer_dtype",
        "<builtin>.isinstance",
        "pandas.core.indexes.base.Index.view",
        "pandas.core.dtypes.common.is_float_dtype",
        "pandas.core.dtypes.common.is_complex_dtype",
        "typing.cast",
        "pandas.core.dtypes.common.is_bool_dtype",
        "pandas.core.dtypes.common.needs_i8_conversion",
        "pandas.core.dtypes.common.is_object_dtype",
        "numpy.ma.core.MaskedArray.view",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.view",
        "pandas.core.arrays.base.ExtensionArray.view",
        "pandas.core.algorithms._ensure_data",
        "pandas.core.construction.extract_array"
    ],
    "pandas.core.dtypes.common.is_complex_dtype": [
        "pandas.core.dtypes.common.classes",
        "pandas.core.dtypes.common._is_dtype_type"
    ],
    "pandas.core.algorithms._check_object_for_strings": [],
    "pandas.core.algorithms._reconstruct_data": [
        "<builtin>.isinstance"
    ],
    "pandas.core.arrays.base.ExtensionArray._from_factorized": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.algorithms._ensure_arraylike": [
        "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike",
        "pandas.util._exceptions.find_stack_level",
        "<builtin>.isinstance",
        "<builtin>.list"
    ],
    "pandas.core.algorithms.safe_sort": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "numpy.core.multiarray.putmask",
        "pandas.core.array_algos.take.take_nd",
        "numpy.ma.core.MaskedArray.argsort",
        "pandas.core.algorithms._sort_mixed",
        "pandas.core.algorithms._sort_tuples",
        "pandas.core.algorithms._get_hashtable_algo",
        "pandas.core.indexes.base.Index.argsort",
        "numpy.ma.core.MaskedArray.take",
        "<builtin>.ValueError",
        "<builtin>.len",
        "pandas.core.algorithms.unique",
        "pandas.core.indexes.base.Index.take"
    ],
    "pandas.core.algorithms._sort_mixed": [
        "<builtin>.isinstance",
        "numpy.core.fromnumeric.concatenate",
        "numpy.core.arrayprint.concatenate",
        "numpy.core.fromnumeric.argsort",
        "numpy.ma.core.MaskedArray.take",
        "pandas.core.dtypes.missing.isna",
        "numpy.core.multiarray.concatenate",
        "numpy.core.numeric.concatenate",
        "pandas.core.indexes.base.Index.take"
    ],
    "pandas.core.algorithms._sort_tuples": [
        "pandas.core.internals.construction.to_arrays",
        "pandas.core.sorting.lexsort_indexer",
        "pandas.core.sorting",
        "pandas.core.internals.construction"
    ],
    "pandas.core.internals.construction.to_arrays": [
        "<builtin>.isinstance",
        "<builtin>.tuple",
        "pandas.core.internals.construction._list_of_series_to_arrays",
        "<builtin>.list",
        "pandas.core.internals.construction._list_of_dict_to_arrays",
        "pandas.core.indexes.base.ensure_index",
        "<builtin>.enumerate",
        "<builtin>.len",
        "pandas.core.internals.construction._list_to_arrays",
        "pandas.core.internals.construction._finalize_columns_and_data"
    ],
    "pandas.core.internals.construction._list_to_arrays": [
        "<builtin>.isinstance"
    ],
    "pandas.core.internals.construction._list_of_series_to_arrays": [
        "<builtin>.isinstance",
        "pandas.core.indexes.api.get_objs_combined_axis",
        "<builtin>.id",
        "pandas.core.indexes.api.default_index",
        "append",
        "numpy.core.shape_base.vstack",
        "numpy.core.vstack",
        "<builtin>.getattr",
        "<builtin>.len",
        "pandas.core.construction.extract_array"
    ],
    "pandas.core.indexes.api.get_objs_combined_axis": [
        "pandas.core.indexes.api._get_combined_index"
    ],
    "pandas.core.indexes.api._get_combined_index": [
        "pandas.core.indexes.api.union_indexes",
        "numpy.ma.core.MaskedConstant.copy",
        "copy",
        "pandas.core.indexes.api._get_distinct_objs",
        "pandas.core.indexes.api.safe_sort_index",
        "pandas.core.indexes.base.Index.copy",
        "pandas.core.indexes.base.ensure_index",
        "<builtin>.len"
    ],
    "pandas.core.indexes.api._get_distinct_objs": [
        "<builtin>.set",
        "append",
        "<builtin>.id"
    ],
    "<builtin>.id": [],
    "pandas.core.indexes.api.union_indexes": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.indexes.base.Index.union",
        "pandas.core.indexes.base.get_unanimous_names",
        "pandas.core.indexes.api.union_indexes._find_common_index_dtype",
        "<builtin>.AssertionError",
        "pandas.core.indexes.api.union_indexes._unique_indices",
        "pandas.core.indexes.api._sanitize_and_check",
        "<builtin>.all",
        "pandas.core.indexes.base.Index.rename",
        "<builtin>.len",
        "<builtin>.sorted"
    ],
    "pandas.core.indexes.api._sanitize_and_check": [
        "<builtin>.isinstance",
        "<builtin>.len",
        "<builtin>.list",
        "<builtin>.type"
    ],
    "pandas.core.indexes.api.union_indexes._find_common_index_dtype": [
        "pandas.core.dtypes.cast.find_common_type",
        "<builtin>.isinstance"
    ],
    "pandas.core.dtypes.cast.find_common_type": [],
    "pandas.core.indexes.api.union_indexes._unique_indices": [
        "pandas.core.indexes.base.Index.get_indexer_for",
        "<builtin>.isinstance",
        "pandas.core.indexes.api.union_indexes._unique_indices.conv",
        "pandas.core.indexes.base.Index.append",
        "<builtin>.all",
        "<builtin>.len",
        "pandas.core.indexes.base.Index.sort_values"
    ],
    "pandas.core.indexes.base.Index.get_indexer_for": [
        "pandas.core.indexes.base.Index.get_indexer",
        "pandas.core.indexes.base.Index.get_indexer_non_unique"
    ],
    "pandas.core.indexes.base.Index.get_indexer": [
        "pandas.core.indexes.base.Index._maybe_cast_listlike_indexer",
        "pandas.core.indexes.base.Index.get_loc",
        "pandas.core.indexes.base.Index._find_common_type_compat",
        "pandas.core.indexes.base.Index._maybe_downcast_for_indexing",
        "pandas.core.indexes.base.Index._should_compare",
        "pandas.core.array_algos.take.take_nd",
        "pandas.core.indexes.base.Index.isna",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.indexes.base.Index._get_indexer",
        "pandas.core.indexes.base.Index._check_indexing_method",
        "pandas.core.indexes.base.Index._should_partial_index",
        "pandas.core.indexes.multi.MultiIndex.get_loc",
        "pandas.core.missing.clean_reindex_fill_method",
        "pandas.core.indexes.base.Index.get_indexer",
        "<builtin>.len",
        "<builtin>.isinstance",
        "pandas.core.indexes.multi.MultiIndex.equals",
        "pandas.core.indexes.base.Index._get_indexer_non_comparable",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.indexes.base.Index.equals"
    ],
    "pandas.core.missing.clean_reindex_fill_method": [
        "pandas.core.missing.clean_fill_method"
    ],
    "pandas.core.missing.clean_fill_method": [],
    "pandas.core.indexes.base.Index._maybe_cast_listlike_indexer": [
        "pandas.core.indexes.base.ensure_index"
    ],
    "pandas.core.indexes.base.Index._check_indexing_method": [
        "<builtin>.isinstance",
        "<builtin>.type",
        "<builtin>.NotImplementedError",
        "<builtin>.ValueError"
    ],
    "pandas.core.indexes.base.Index._should_compare": [
        "pandas.core.indexes.base.Index._is_comparable_dtype",
        "pandas.core.dtypes.common.is_any_real_numeric_dtype",
        "pandas.core.indexes.multi.MultiIndex._is_comparable_dtype",
        "pandas.core.indexes.base._unpack_nested_dtype",
        "pandas.core.dtypes.common.is_object_dtype"
    ],
    "pandas.core.dtypes.common.is_any_real_numeric_dtype": [
        "pandas.core.dtypes.common.is_complex_dtype",
        "pandas.core.dtypes.common.is_bool_dtype",
        "pandas.core.dtypes.common.is_numeric_dtype"
    ],
    "pandas.core.indexes.base._unpack_nested_dtype": [
        "pandas.core.indexes.base.Index.astype",
        "<builtin>.isinstance",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.dtypes.dtypes.ArrowDtype.__init__"
    ],
    "pandas.core.dtypes.dtypes.ArrowDtype.construct_array_type": [
        "pandas.core.arrays.arrow"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray._from_sequence": [
        "pandas.core.arrays.arrow.array.ArrowExtensionArray._box_pa_array",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.__init__",
        "pandas.core.arrays.arrow.array.to_pyarrow_type"
    ],
    "pandas.core.arrays.arrow.array.to_pyarrow_type": [
        "<builtin>.isinstance"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray._box_pa_array": [
        "numpy.ma.core.MaskedConstant.copy",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.fillna",
        "pandas.core.arrays.base.ExtensionArray.to_numpy",
        "pandas.core.arrays.masked.BaseMaskedArray.__arrow_array__",
        "pandas.core.arrays.masked.BaseMaskedArray.tolist",
        "pandas.core.arrays.base.ExtensionArray.copy",
        "pandas.core.base.IndexOpsMixin.to_numpy",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.__init__",
        "pandas.core.arrays.period.PeriodArray.__arrow_array__",
        "pandas.core.tools.timedeltas",
        "pandas.core.arrays.string_.StringArray.__arrow_array__",
        "pandas.core.tools.timedeltas.to_timedelta",
        "pandas.core.arrays.base.ExtensionArray.tolist",
        "pandas.core.indexes.multi.MultiIndex.copy",
        "pandas.core.dtypes.inference.is_array_like",
        "numpy.ma.core.MaskedArray.tolist",
        "copy",
        "pandas.core.internals.managers.BaseBlockManager.copy",
        "pandas.core.internals.array_manager.BaseArrayManager.copy",
        "<map>.copy",
        "pandas.core.indexes.base.Index.copy",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.copy",
        "pandas.core.arrays.interval.IntervalArray.copy",
        "pandas.core.arrays.string_.BaseStringArray.tolist",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.to_numpy",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.to_numpy",
        "pandas.core.arrays.interval.IntervalArray.__arrow_array__",
        "pandas.core.arrays.datetimelike.TimelikeOps.copy",
        "<builtin>.isinstance",
        "pandas.core.frame.DataFrame.to_numpy",
        "pandas.core.arrays.masked.BaseMaskedArray.copy",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.__arrow_array__",
        "numpy.ma.core._arraymethod.wrapped_method",
        "pandas.core.arrays.masked.BaseMaskedArray.to_numpy",
        "pandas.core.base.IndexOpsMixin.tolist",
        "pandas.core.generic.NDFrame.copy",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray._from_sequence_of_strings"
    ],
    "pandas.core.dtypes.inference.is_array_like": [
        "<builtin>.hasattr"
    ],
    "pandas.core.base.IndexOpsMixin.tolist": [],
    "pandas.core.tools.timedeltas.to_timedelta": [],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray.__init__": [
        "<builtin>.isinstance",
        "<builtin>.ImportError",
        "<builtin>.ValueError",
        "<builtin>.type",
        "pandas.core.dtypes.dtypes.ArrowDtype.__init__"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray.fillna": [
        "<builtin>.str",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "pandas.util._validators.validate_fillna_kwargs",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.copy",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray._box_pa",
        "<builtin>.ValueError",
        "<builtin>.len",
        "<builtin>.type",
        "<builtin>.super"
    ],
    "pandas.util._validators.validate_fillna_kwargs": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.missing",
        "pandas.core.missing.clean_fill_method",
        "<builtin>.ValueError",
        "<builtin>.type"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray.copy": [
        "<builtin>.type"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray._box_pa": [
        "pandas.core.arrays.arrow.array.ArrowExtensionArray._box_pa_array",
        "<builtin>.isinstance",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray._box_pa_scalar"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray._box_pa_scalar": [
        "<builtin>.isinstance",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.isna"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray.isna": [
        "<builtin>.len",
        "numpy.core.numeric.ones",
        "numpy.core.ones"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray._from_sequence_of_strings": [
        "pandas.core.tools.numeric",
        "pandas.core.tools.times",
        "<builtin>.isinstance",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray._from_sequence",
        "pandas.core.tools.numeric.to_numeric",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.isna",
        "pandas.core.tools.datetimes.to_datetime",
        "pandas.core.arrays.arrow.array.to_pyarrow_type",
        "<builtin>.NotImplementedError",
        "pandas.core.tools.times.to_time",
        "pandas.core.tools.datetimes",
        "pandas.core.tools.timedeltas",
        "pandas.core.tools.timedeltas.to_timedelta"
    ],
    "pandas.core.tools.numeric.to_numeric": [
        "numpy.core.fromnumeric.amin",
        "<builtin>.TypeError",
        "pandas.core.frame.DataFrame._constructor",
        "pandas.core.series.Series.isna",
        "pandas.core.arrays.base.ExtensionArray.to_numpy",
        "pandas.core.series.Series.view",
        "pandas.core.arrays.masked.BaseMaskedArray.__arrow_array__",
        "pandas.core.arrays",
        "pandas.core.indexes.api.Index",
        "pandas.core.series.Series.dropna",
        "pandas.core.dtypes.common.needs_i8_conversion",
        "pandas.core.dtypes.common.is_numeric_dtype",
        "pandas.core.generic.NDFrame._constructor",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.__init__",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.dropna",
        "pandas.core.arrays.period.PeriodArray.__arrow_array__",
        "pandas.core.arrays.base.ExtensionArray.view",
        "pandas.core.arrays.string_.StringArray.__arrow_array__",
        "pandas.util._validators.check_dtype_backend",
        "pandas.core.internals.base.DataManager.isna",
        "pandas.core.arrays._mixins.NDArrayBackedExtensionArray.view",
        "pandas.core.dtypes.common.is_integer_dtype",
        "pandas.core.frame.DataFrame.isna",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.isna",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.isna",
        "pandas.core.arrays.masked.BaseMaskedArray.isna",
        "pandas.core.indexes.multi.MultiIndex.view",
        "<builtin>.float",
        "pandas.core.indexes.base.Index.isna",
        "copy",
        "pandas.core.indexes.base.Index.dropna",
        "pandas.core.generic.NDFrame.isna",
        "pandas.core.indexes.multi.MultiIndex._constructor",
        "<map>.copy",
        "<builtin>.set",
        "pandas.core.dtypes.cast.maybe_downcast_numeric",
        "pandas.core.dtypes.common.is_string_dtype",
        "pandas.core.dtypes.common.is_bool_dtype",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.isna",
        "<builtin>.getattr",
        "pandas.core.arrays.base.ExtensionArray.isna",
        "numpy.ma.core.MaskedArray.view",
        "pandas.core.indexes.multi.MultiIndex.dropna",
        "<builtin>.len",
        "pandas.core.arrays.interval.IntervalArray.__arrow_array__",
        "pandas.core.indexes.base.Index._constructor",
        "<builtin>.isinstance",
        "pandas.core.indexes.base.Index.view",
        "pandas",
        "pandas.core.arrays.interval.IntervalArray.isna",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.__arrow_array__",
        "pandas.util._exceptions.find_stack_level",
        "pandas.core.arrays.masked.BaseMaskedArray.to_numpy",
        "pandas.core.series.Series._constructor",
        "<builtin>.ValueError",
        "pandas.core.frame.DataFrame.dropna",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.view",
        "pandas.core.generic.NDFrame.copy",
        "pandas.core.dtypes.inference.is_number",
        "pandas.core.arrays.boolean.BooleanArray.__init__",
        "pandas.core.arrays.base.ExtensionArray.dropna",
        "pandas.core.base.PandasObject._constructor"
    ],
    "pandas.util._validators.check_dtype_backend": [
        "<builtin>.ValueError"
    ],
    "pandas.core.dtypes.inference.is_number": [
        "<builtin>.isinstance"
    ],
    "pandas.core.indexes.base.Index.isna": [],
    "pandas.core.indexes.base.Index.dropna": [
        "pandas.core.indexes.base.Index._view",
        "<builtin>.type",
        "<builtin>.ValueError"
    ],
    "pandas.core.dtypes.cast.maybe_downcast_numeric": [],
    "pandas.core.arrays.boolean.BooleanArray.__init__": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.super"
    ],
    "pandas.core.tools.times.to_time": [
        "pandas.core.indexes.base.Index._constructor",
        "<builtin>.isinstance",
        "pandas.core.indexes.multi.MultiIndex._constructor",
        "pandas.core.frame.DataFrame._constructor",
        "pandas._libs.lib.is_list_like",
        "pandas.util._exceptions.find_stack_level",
        "pandas.core.tools.times.to_time._convert_listlike",
        "pandas.core.series.Series._constructor",
        "pandas.core.generic.NDFrame._constructor",
        "pandas.core.base.PandasObject._constructor"
    ],
    "pandas._libs.lib.is_list_like": [],
    "pandas.core.tools.times.to_time._convert_listlike": [
        "pandas.core.tools.times._guess_time_format_for_array",
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.__iter__",
        "pandas.core.arrays.datetimes.DatetimeArray.__iter__",
        "pandas.core.generic.NDFrame.__iter__",
        "<str>.index",
        "pandas.core.arrays.interval.IntervalArray.__iter__",
        "<builtin>.getattr",
        "<builtin>.ValueError",
        "pandas.core.arrays.masked.BaseMaskedArray.__iter__",
        "pandas.core.arrays.base.ExtensionArray.__iter__"
    ],
    "pandas.core.tools.times._guess_time_format_for_array": [
        "<builtin>.len",
        "pandas.core.dtypes.missing.notna"
    ],
    "<str>.index": [],
    "pandas.core.tools.datetimes.to_datetime": [],
    "pandas.core.indexes.base.Index._is_comparable_dtype": [
        "pandas.core.dtypes.common.is_numeric_dtype"
    ],
    "pandas.core.indexes.base.Index._should_partial_index": [
        "<builtin>.isinstance"
    ],
    "pandas.core.indexes.base.Index._get_indexer_non_comparable": [],
    "pandas.core.indexes.base.Index.get_loc": [
        "<builtin>.isinstance",
        "pandas.core.indexes.base.Index._maybe_cast_indexer",
        "pandas.core.indexes.base.Index._check_indexing_error",
        "<builtin>.any",
        "<builtin>.KeyError"
    ],
    "pandas.core.indexes.base.Index._maybe_cast_indexer": [],
    "<builtin>.KeyError": [],
    "pandas.core.indexes.base.Index._check_indexing_error": [],
    "pandas.core.array_algos.take.take_nd": [],
    "pandas.core.indexes.base.Index._maybe_downcast_for_indexing": [
        "<builtin>.isinstance",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.indexes.base.Index.min",
        "pandas.core.indexes.base.Index._maybe_downcast_for_indexing",
        "pandas.core.dtypes.common.is_object_dtype",
        "numpy.ma.core.MaskedArray.min",
        "pandas.core.indexes.base.Index.astype",
        "<builtin>.type",
        "pandas._libs.tslibs.timezones.tz_compare"
    ],
    "pandas.core.indexes.base.Index.min": [
        "<builtin>.isinstance",
        "pandas.core.nanops._nanminmax.reduction",
        "pandas.compat.numpy.function.validate_minmax_axis",
        "pandas.compat.numpy.function.CompatValidator.__init__",
        "<builtin>.len",
        "pandas.core.indexes.base.Index.isna"
    ],
    "pandas.compat.numpy.function.validate_minmax_axis": [
        "<builtin>.ValueError"
    ],
    "pandas.core.nanops._nanminmax.reduction": [
        "pandas.core.nanops._maybe_null_out",
        "pandas.core.nanops._na_for_min_count",
        "<builtin>.getattr",
        "pandas.core.nanops._get_values"
    ],
    "pandas.core.nanops._na_for_min_count": [
        "numpy.core.numeric.full",
        "pandas.core.dtypes.missing.na_value_for_dtype"
    ],
    "numpy.core.numeric.full": [
        "numpy.core.multiarray.copyto"
    ],
    "pandas.core.nanops._get_values": [
        "numpy.core.numeric.where",
        "numpy.core.multiarray.putmask",
        "pandas.core.nanops._maybe_get_mask",
        "pandas.core.nanops._na_ok_dtype",
        "pandas.core.nanops._get_fill_value",
        "numpy.core.multiarray.where"
    ],
    "pandas.core.nanops._maybe_get_mask": [
        "pandas.core.dtypes.missing.isna"
    ],
    "pandas.core.nanops._get_fill_value": [
        "pandas.core.nanops._na_ok_dtype"
    ],
    "pandas.core.nanops._na_ok_dtype": [
        "<builtin>.issubclass",
        "pandas.core.dtypes.common.needs_i8_conversion"
    ],
    "numpy.core.multiarray.putmask": [],
    "pandas.core.nanops._maybe_null_out": [
        "<builtin>.isinstance",
        "pandas.core.nanops.check_below_min_count",
        "pandas.core.dtypes.common.is_float_dtype",
        "numpy.lib.stride_tricks.broadcast_to",
        "numpy.core.arrayprint.any",
        "<builtin>.getattr",
        "numpy.lib.type_check.iscomplexobj",
        "pandas.core.dtypes.common.is_numeric_dtype",
        "numpy.core.fromnumeric.any"
    ],
    "pandas.core.nanops.check_below_min_count": [
        "numpy.core.fromnumeric.prod"
    ],
    "numpy.core.fromnumeric.prod": [
        "numpy.core.fromnumeric._wrapreduction"
    ],
    "numpy.core.arrayprint.any": [],
    "numpy.lib.type_check.iscomplexobj": [
        "<builtin>.issubclass"
    ],
    "pandas.core.arrays.masked.BaseMaskedArray.copy": [
        "pandas.core.arrays.boolean.BooleanArray._simple_new",
        "pandas.core.arrays.masked.BaseMaskedArray._simple_new"
    ],
    "pandas.core.arrays.masked.BaseMaskedArray._simple_new": [],
    "pandas.core.arrays.boolean.BooleanArray._simple_new": [
        "<builtin>.super"
    ],
    "pandas.core.arrays.masked.BaseMaskedArray.tolist": [
        "pandas.core.arrays.masked.BaseMaskedArray.to_numpy"
    ],
    "pandas.core.arrays.masked.BaseMaskedArray.to_numpy": [
        "pandas.core.arrays._utils.to_numpy_dtype_inference",
        "pandas.core.dtypes.common.is_string_dtype",
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays._utils.to_numpy_dtype_inference": [
        "pandas.core.dtypes.cast.np_can_hold_element",
        "pandas.core.dtypes.common.is_numeric_dtype"
    ],
    "pandas.core.arrays.masked.BaseMaskedArray.__arrow_array__": [],
    "pandas.core.arrays.masked.BaseMaskedArray.isna": [],
    "pandas.core.arrays.base.ExtensionArray.dropna": [
        "pandas.core.arrays.masked.BaseMaskedArray.isna",
        "pandas.core.arrays.base.ExtensionArray.isna"
    ],
    "pandas._libs.tslibs.timezones.tz_compare": [],
    "pandas.core.indexes.base.Index.equals": [
        "<builtin>.isinstance",
        "<builtin>.type",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.dtypes.missing.array_equivalent",
        "pandas.core.indexes.multi.MultiIndex.equals",
        "typing.cast",
        "pandas.core.dtypes.common.is_object_dtype",
        "pandas.core.indexes.base.Index.is_",
        "<builtin>.len",
        "pandas.core.indexes.base.Index.equals",
        "pandas.core.indexes.base.Index.astype"
    ],
    "pandas.core.indexes.base.Index.is_": [
        "<builtin>.hasattr"
    ],
    "pandas.core.arrays.string_.BaseStringArray.tolist": [
        "<builtin>.list",
        "pandas.core.arrays.base.ExtensionArray.to_numpy"
    ],
    "pandas.core.arrays.base.ExtensionArray.tolist": [
        "<builtin>.list"
    ],
    "pandas.core.arrays.base.ExtensionArray.__iter__": [
        "<builtin>.len",
        "<builtin>.range"
    ],
    "pandas.core.dtypes.missing.array_equivalent": [
        "pandas.core.dtypes.common.is_string_or_object_np_dtype",
        "pandas.core.dtypes.missing._array_equivalent_float",
        "numpy.core.numeric.array_equal",
        "pandas.core.dtypes.missing._array_equivalent_datetimelike",
        "pandas.core.dtypes.missing._array_equivalent_object",
        "pandas.core.dtypes.missing.isna"
    ],
    "pandas.core.dtypes.missing._array_equivalent_object": [
        "pandas.core.dtypes.missing.isna",
        "<builtin>.isinstance",
        "<builtin>.zip"
    ],
    "pandas.core.dtypes.missing._array_equivalent_datetimelike": [
        "numpy.core.numeric.array_equal"
    ],
    "pandas.core.dtypes.missing._array_equivalent_float": [
        "<builtin>.bool"
    ],
    "pandas.core.indexes.base.Index._find_common_type_compat": [
        "pandas.core.dtypes.common.is_signed_integer_dtype",
        "pandas.core.dtypes.cast.infer_dtype_from",
        "pandas.core.dtypes.cast.common_dtype_categorical_compat",
        "pandas.core.dtypes.cast.find_result_type"
    ],
    "pandas.core.dtypes.cast.infer_dtype_from": [
        "pandas.core.dtypes.cast.infer_dtype_from_array",
        "pandas.core.dtypes.cast.infer_dtype_from_scalar"
    ],
    "pandas.core.dtypes.cast.infer_dtype_from_array": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.getattr"
    ],
    "pandas.core.dtypes.common.is_signed_integer_dtype": [
        "pandas.core.dtypes.common._is_dtype_type",
        "pandas.core.dtypes.common._is_dtype",
        "pandas.core.dtypes.common._classes_and_not_datetimelike"
    ],
    "pandas.core.dtypes.common.is_signed_integer_dtype.<lambda1>": [
        "<builtin>.isinstance"
    ],
    "pandas.core.dtypes.cast.find_result_type": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.cast.ensure_dtype_can_hold_na",
        "<builtin>.int",
        "numpy.core.iinfo",
        "pandas.core.dtypes.cast.find_common_type",
        "pandas.core.indexes.base.Index.is_integer",
        "numpy.core.numeric.result_type",
        "numpy.core.numerictypes.issubdtype",
        "numpy.core.multiarray.result_type",
        "numpy.core.getlimits.iinfo.__init__",
        "pandas.core.dtypes.cast.infer_dtype_from",
        "pandas.core.dtypes.missing.is_valid_na_for_dtype",
        "numpy.core.multiarray.min_scalar_type"
    ],
    "pandas.core.indexes.base.Index.is_integer": [
        "pandas.util._exceptions.find_stack_level",
        "<builtin>.type"
    ],
    "numpy.core.numeric.result_type": [],
    "pandas.core.dtypes.cast.common_dtype_categorical_compat": [
        "<builtin>.isinstance",
        "typing.cast",
        "<builtin>.getattr"
    ],
    "pandas.core.indexes.base.Index._get_indexer": [
        "pandas.core.indexes.base.Index._get_engine_target",
        "pandas.core.indexes.base.Index._get_fill_indexer",
        "pandas.core.indexes.base.Index._convert_tolerance",
        "pandas.core.indexes.base.Index._get_nearest_indexer"
    ],
    "pandas.core.indexes.base.Index._convert_tolerance": [
        "<builtin>.ValueError",
        "pandas.core.dtypes.common.is_numeric_dtype",
        "<builtin>.repr",
        "numpy.core.numerictypes.issubdtype",
        "<builtin>.type"
    ],
    "pandas.core.indexes.base.Index._get_engine_target": [
        "<builtin>.isinstance",
        "<builtin>.type",
        "pandas.core.dtypes.common.is_numeric_dtype"
    ],
    "pandas.core.indexes.base.Index._get_nearest_indexer": [
        "numpy.core.numeric.where",
        "pandas.core.indexes.base.Index._difference_compat",
        "pandas.core.indexes.base.Index.get_indexer",
        "pandas.core.indexes.base.Index._filter_indexer_tolerance",
        "pandas.core.indexes.base.Index._get_fill_indexer",
        "<builtin>.len",
        "numpy.core.multiarray.where"
    ],
    "pandas.core.indexes.base.Index._get_fill_indexer": [
        "<builtin>.isinstance",
        "pandas.core.indexes.multi.MultiIndex.append",
        "pandas.core.indexes.base.Index._get_fill_indexer_searchsorted",
        "pandas.core.indexes.base.Index.append",
        "pandas.core.indexes.base.Index._get_engine_target",
        "pandas.core.indexes.base.Index._filter_indexer_tolerance",
        "pandas.core.indexes.base.Index._get_fill_indexer",
        "<builtin>.ValueError",
        "<builtin>.len"
    ],
    "pandas.core.indexes.base.Index.append": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "append",
        "pandas.core.indexes.base.Index._concat",
        "<builtin>.list",
        "<builtin>.len"
    ],
    "pandas.core.indexes.base.Index._concat": [
        "pandas.core.indexes.base.Index._with_infer",
        "pandas.core.dtypes.concat.concat_compat"
    ],
    "pandas.core.dtypes.concat.concat_compat": [
        "<builtin>.isinstance",
        "numpy.core.fromnumeric.concatenate",
        "numpy.core.arrayprint.concatenate",
        "typing.cast",
        "pandas.core.dtypes.astype.astype_array",
        "pandas.core.dtypes.concat._is_nonempty",
        "pandas.core.dtypes.concat._get_result_dtype",
        "pandas.util._exceptions.find_stack_level",
        "<builtin>.len",
        "numpy.core.multiarray.concatenate",
        "<builtin>.type",
        "numpy.core.numeric.concatenate"
    ],
    "pandas.core.dtypes.concat._is_nonempty": [],
    "pandas.core.dtypes.concat._get_result_dtype": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.cast.common_dtype_categorical_compat",
        "pandas.core.dtypes.cast.np_find_common_type",
        "pandas.core.dtypes.cast.find_common_type",
        "<builtin>.any",
        "<builtin>.len"
    ],
    "pandas.core.dtypes.cast.np_find_common_type": [
        "numpy.core.numeric.result_type",
        "numpy.core.multiarray.result_type"
    ],
    "pandas.core.indexes.base.Index._get_fill_indexer_searchsorted": [
        "<builtin>.len",
        "pandas.core.indexes.base.Index._searchsorted_monotonic",
        "pandas.core.indexes.base.Index.get_indexer",
        "<builtin>.ValueError",
        "<builtin>.repr"
    ],
    "pandas.core.indexes.base.Index._searchsorted_monotonic": [
        "pandas.core.base.IndexOpsMixin.searchsorted",
        "<builtin>.len",
        "<builtin>.ValueError"
    ],
    "pandas.core.base.IndexOpsMixin.searchsorted": [],
    "pandas.core.indexes.base.Index._filter_indexer_tolerance": [
        "numpy.core.numeric.where",
        "numpy.core.multiarray.where",
        "pandas.core.indexes.base.Index._difference_compat"
    ],
    "pandas.core.indexes.base.Index._difference_compat": [
        "<builtin>.abs",
        "<builtin>.isinstance",
        "typing.cast"
    ],
    "pandas.core.indexes.base.Index.get_indexer_non_unique": [
        "pandas.core.indexes.base.Index._should_partial_index",
        "pandas.core.indexes.base.Index._maybe_cast_listlike_indexer",
        "pandas.core.indexes.base.Index._find_common_type_compat",
        "pandas.core.indexes.base.Index._get_engine_target",
        "pandas.core.indexes.base.Index._maybe_downcast_for_indexing",
        "pandas.core.indexes.base.Index._get_indexer_non_comparable",
        "pandas.core.indexes.base.Index.get_indexer_non_unique",
        "pandas.core.indexes.base.Index._should_compare",
        "pandas.core.indexes.base.ensure_index",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.indexes.multi.MultiIndex.astype"
    ],
    "pandas.core.indexes.base.Index.sort_values": [],
    "pandas.core.indexes.api.union_indexes._unique_indices.conv": [
        "<builtin>.isinstance"
    ],
    "pandas.core.indexes.base.get_unanimous_names": [
        "<builtin>.len",
        "itertools.zip_longest",
        "<builtin>.tuple"
    ],
    "itertools.zip_longest": [],
    "pandas.core.indexes.base.Index.rename": [],
    "pandas.core.indexes.base.Index.union": [
        "pandas.core.indexes.base.Index.union",
        "<builtin>.isinstance",
        "pandas.core.indexes.base.Index._find_common_type_compat",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.indexes.base.Index._validate_sort_keyword",
        "pandas.core.indexes.base._unpack_nested_dtype",
        "pandas.core.indexes.base.Index._wrap_setop_result",
        "pandas.core.indexes.base.Index._convert_can_do_setop",
        "pandas.core.indexes.base.Index._dti_setop_align_tzs",
        "pandas.core.dtypes.common.is_object_dtype",
        "pandas.core.indexes.base.Index._assert_can_do_setop",
        "pandas.core.indexes.base.Index._get_reconciled_name_object",
        "<builtin>.NotImplementedError",
        "<builtin>.len",
        "pandas.core.indexes.base.Index.equals",
        "pandas.core.indexes.base.Index.sort_values",
        "pandas.core.indexes.base.Index._union"
    ],
    "pandas.core.indexes.base.Index._validate_sort_keyword": [
        "<builtin>.ValueError"
    ],
    "pandas.core.indexes.base.Index._assert_can_do_setop": [
        "<builtin>.TypeError"
    ],
    "pandas.core.indexes.base.Index._convert_can_do_setop": [
        "<builtin>.isinstance",
        "pandas.core.ops.common.get_op_result_name"
    ],
    "pandas.core.ops.common.get_op_result_name": [
        "pandas.core.ops.common._maybe_match_name",
        "<builtin>.isinstance"
    ],
    "pandas.core.ops.common._maybe_match_name": [
        "pandas._libs.missing.is_matching_na",
        "<builtin>.hasattr"
    ],
    "pandas._libs.missing.is_matching_na": [],
    "pandas.core.indexes.base.Index._get_reconciled_name_object": [
        "pandas.core.indexes.base.Index.rename",
        "pandas.core.ops.common.get_op_result_name"
    ],
    "pandas.core.indexes.base.Index._dti_setop_align_tzs": [
        "<builtin>.isinstance"
    ],
    "pandas.core.indexes.base.Index._union": [
        "pandas.core.dtypes.concat.concat_compat",
        "pandas.core.indexes.base._maybe_try_sort",
        "pandas.core.indexes.base.Index.append",
        "<builtin>.len",
        "pandas.core.indexes.base.Index.get_indexer_non_unique",
        "<builtin>.set",
        "pandas.core.indexes.base.Index.get_indexer",
        "<builtin>.list",
        "pandas.core.algorithms.union_with_duplicates",
        "pandas.core.indexes.base.Index._outer_indexer",
        "pandas.core.algorithms.unique"
    ],
    "pandas.core.algorithms.union_with_duplicates": [
        "<builtin>.isinstance",
        "pandas",
        "pandas.core.dtypes.concat.concat_compat",
        "pandas.core.indexes.base.Index.append",
        "pandas.core.indexes.base.Index.unique",
        "numpy.core.fromnumeric.repeat",
        "pandas.core.series.Series.__init__",
        "pandas.core.algorithms.unique",
        "pandas.core.construction.ensure_wrapped_if_datetimelike"
    ],
    "pandas.core.series.Series.__init__": [
        "numpy.ma.core.MaskedConstant.copy",
        "pandas.core.indexes.api.default_index",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.indexes.base.maybe_extract_name",
        "pandas.core.arrays.base.ExtensionArray.copy",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.indexes.base.ensure_index",
        "<builtin>.NotImplementedError",
        "pandas.core.construction.sanitize_array",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.common.require_length_match",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.frame.DataFrame.reindex",
        "pandas.core.generic.NDFrame.__init__",
        "pandas.core.arrays.datetimes.DatetimeArray.astype",
        "pandas.core.internals.array_manager.SingleArrayManager.from_array",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.indexes.multi.MultiIndex.copy",
        "copy",
        "pandas.core.internals.managers.BaseBlockManager.copy",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.generic.NDFrame.astype",
        "pandas.core.dtypes.astype.astype_is_view",
        "pandas.core.common.maybe_iterable_to_list",
        "pandas._config.using_copy_on_write",
        "pandas.core.internals.array_manager.BaseArrayManager.copy",
        "<map>.copy",
        "<builtin>.AssertionError",
        "pandas.core.dtypes.missing.na_value_for_dtype",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.copy",
        "pandas.core.indexes.base.Index.copy",
        "pandas.core.arrays.interval.IntervalArray.copy",
        "<builtin>.getattr",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "<builtin>.len",
        "pandas.core.series.Series.reindex",
        "<builtin>.type",
        "pandas.core.internals.managers.SingleBlockManager.from_array",
        "pandas.core.series.Series._init_dict",
        "pandas.core.arrays.datetimelike.TimelikeOps.copy",
        "pandas.core.arrays.masked.BaseMaskedArray.astype",
        "pandas.core.generic.NDFrame.reindex",
        "<builtin>.isinstance",
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas._config.config._get_option",
        "pandas.core.arrays.masked.BaseMaskedArray.copy",
        "numpy.ma.core._arraymethod.wrapped_method",
        "pandas.core.generic.NDFrame._set_axis",
        "pandas.core.generic.NDFrame._validate_dtype",
        "pandas.util._exceptions.find_stack_level",
        "<builtin>.ValueError",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.generic.NDFrame.copy",
        "pandas.core.indexes.base.Index.reindex"
    ],
    "pandas.core.internals.array_manager.SingleArrayManager.from_array": [
        "pandas.core.internals.array_manager.SingleArrayManager.__init__"
    ],
    "pandas.core.internals.array_manager.SingleArrayManager.__init__": [
        "pandas.core.internals.array_manager.SingleArrayManager._verify_integrity",
        "pandas.core.indexes.base.ensure_index",
        "pandas.core.internals.blocks.maybe_coerce_values",
        "pandas.core.internals.blocks.extract_pandas_array",
        "<builtin>.len"
    ],
    "pandas.core.internals.blocks.maybe_coerce_values": [
        "<builtin>.issubclass",
        "<builtin>.isinstance",
        "pandas.core.arrays.datetimelike.TimelikeOps._with_freq",
        "pandas.core.construction.ensure_wrapped_if_datetimelike"
    ],
    "pandas.core.internals.blocks.extract_pandas_array": [
        "<builtin>.isinstance",
        "pandas.core.frame.DataFrame.to_numpy",
        "pandas.core.arrays.base.ExtensionArray.to_numpy",
        "numpy.core.shape_base.atleast_2d",
        "pandas.core.arrays.masked.BaseMaskedArray.to_numpy",
        "pandas.core.base.IndexOpsMixin.to_numpy",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.to_numpy",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.to_numpy"
    ],
    "numpy.core.shape_base.atleast_2d": [
        "append",
        "<builtin>.len"
    ],
    "pandas.core.internals.array_manager.SingleArrayManager._verify_integrity": [
        "<builtin>.len",
        "<builtin>.ValueError"
    ],
    "pandas.core.internals.managers.SingleBlockManager.from_array": [
        "pandas._libs.internals.BlockPlacement",
        "pandas.core.internals.blocks.new_block",
        "<builtin>.slice",
        "pandas.core.internals.blocks.maybe_coerce_values",
        "pandas.core.internals.managers.SingleBlockManager.__init__",
        "<builtin>.len"
    ],
    "pandas.core.internals.array_manager.BaseArrayManager.astype": [
        "pandas.core.internals.array_manager.BaseArrayManager.apply",
        "pandas.core.internals.array_manager.SingleArrayManager.apply"
    ],
    "pandas.core.internals.array_manager.BaseArrayManager.apply": [
        "<builtin>.isinstance",
        "<builtin>.callable",
        "pandas.core.dtypes.astype.astype_array_safe",
        "<builtin>.getattr",
        "<builtin>.enumerate",
        "<builtin>.type"
    ],
    "pandas.core.dtypes.astype.astype_array_safe": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.dtypes.astype.astype_array",
        "<builtin>.issubclass",
        "<builtin>.list",
        "<builtin>.ValueError"
    ],
    "pandas.core.internals.array_manager.SingleArrayManager.apply": [
        "pandas.core.dtypes.astype.astype_array_safe",
        "<builtin>.type",
        "<builtin>.callable",
        "<builtin>.getattr"
    ],
    "pandas.core.arrays.masked.BaseMaskedArray.reshape": [
        "pandas.core.arrays.boolean.BooleanArray._simple_new",
        "pandas.core.arrays.masked.BaseMaskedArray._simple_new"
    ],
    "pandas._libs.internals.BlockPlacement": [],
    "pandas.core.internals.blocks.new_block": [
        "pandas.core.internals.blocks.get_block_type"
    ],
    "pandas.core.internals.blocks.get_block_type": [
        "<builtin>.isinstance"
    ],
    "pandas.core.internals.managers.SingleBlockManager.__init__": [],
    "pandas.core.internals.array_manager.BaseArrayManager.copy": [
        "<builtin>.list",
        "<builtin>.type",
        "pandas.core.internals.array_manager.BaseArrayManager.copy.copy_func"
    ],
    "pandas.core.internals.array_manager.BaseArrayManager.copy.copy_func": [],
    "pandas.core.internals.managers.BaseBlockManager.copy": [
        "pandas._config.using_copy_on_write",
        "pandas.core.internals.managers.BaseBlockManager.copy.copy_func",
        "<builtin>.list",
        "pandas.core.internals.managers.BaseBlockManager.apply"
    ],
    "pandas.core.internals.managers.BaseBlockManager.copy.copy_func": [],
    "pandas.core.internals.managers.BaseBlockManager.apply": [
        "<builtin>.isinstance",
        "pandas.core.internals.blocks.extend_blocks",
        "<builtin>.callable",
        "<builtin>.getattr",
        "<builtin>.type"
    ],
    "pandas.core.internals.blocks.extend_blocks": [
        "append",
        "<builtin>.isinstance",
        "<builtin>.type",
        "extend"
    ],
    "pandas.core.indexes.base.maybe_extract_name": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.dtypes.inference.is_hashable"
    ],
    "pandas.core.dtypes.base.ExtensionDtype.type": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.dtypes.dtypes.IntervalDtype.type": [],
    "pandas.core.dtypes.dtypes.ArrowDtype.type": [
        "<builtin>.isinstance",
        "<builtin>.type",
        "<builtin>.NotImplementedError"
    ],
    "pandas.core.arrays.string_.StringDtype.type": [],
    "pandas.core.common.maybe_iterable_to_list": [
        "<builtin>.list",
        "<builtin>.isinstance",
        "typing.cast"
    ],
    "pandas.core.series.Series._init_dict": [
        "pandas.core.generic.NDFrame.values",
        "pandas.core.indexes.multi.MultiIndex.values",
        "pandas.core.generic.NDFrame.keys",
        "pandas.core.series.Series.keys",
        "<builtin>.tuple",
        "pandas.core.indexes.api.default_index",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.series.Series.values",
        "pandas.core.dtypes.missing.na_value_for_dtype",
        "<builtin>.list",
        "pandas.core.series.Series.__init__",
        "<map>.keys",
        "<map>.values",
        "<builtin>.len",
        "pandas.core.series.Series.reindex",
        "pandas.core.frame.DataFrame.values",
        "pandas.core.indexes.base.Index.values"
    ],
    "pandas.core.series.Series.reindex": [
        "<builtin>.super"
    ],
    "pandas.core.internals.managers.BaseBlockManager.astype": [
        "pandas._config.using_copy_on_write",
        "pandas.core.internals.managers.BaseBlockManager.apply"
    ],
    "pandas.core.common.require_length_match": [
        "<builtin>.len",
        "<builtin>.ValueError"
    ],
    "pandas.core.dtypes.dtypes.IntervalDtype.construct_from_string": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<str>.lower",
        "pandas.core.dtypes.dtypes.IntervalDtype.__init__",
        "<builtin>.type"
    ],
    "pandas.core.arrays.masked.BaseMaskedArray.astype": [],
    "pandas.core.dtypes.dtypes.ArrowDtype.__from_arrow__": [
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.__init__",
        "pandas.core.dtypes.dtypes.ArrowDtype.construct_array_type"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray.reshape": [
        "<builtin>.type",
        "<builtin>.NotImplementedError"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray._maybe_convert_datelike_array": [
        "pandas.core.arrays.arrow.array.ArrowExtensionArray._to_timedeltaarray",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray._to_datetimearray"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray._to_timedeltaarray": [
        "pandas.core.arrays.base.ExtensionArray.to_numpy",
        "pandas.core.arrays.masked.BaseMaskedArray.to_numpy",
        "pandas.core.base.IndexOpsMixin.to_numpy",
        "pandas.core.arrays.timedeltas",
        "pandas.core.arrays.timedeltas.TimedeltaArray._simple_new"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray._to_datetimearray": [
        "pandas.core.arrays.base.ExtensionArray.to_numpy",
        "pandas.core.arrays.datetimes.tz_to_dtype",
        "pandas.core.arrays.masked.BaseMaskedArray.to_numpy",
        "pandas.core.base.IndexOpsMixin.to_numpy",
        "pandas.core.arrays.datetimes",
        "pandas.core.arrays.datetimes.DatetimeArray._simple_new"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray.to_numpy": [
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.fillna",
        "pandas.core.arrays.base.ExtensionArray.to_numpy",
        "pandas.core.dtypes.common.is_float_dtype",
        "<map>.copy",
        "copy",
        "numpy.core.numeric.full",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.isna",
        "pandas.core.arrays.masked.BaseMaskedArray.to_numpy",
        "pandas.core.base.IndexOpsMixin.to_numpy",
        "<builtin>.list",
        "pandas.core.dtypes.cast.can_hold_element",
        "pandas.core.arrays._utils.to_numpy_dtype_inference",
        "<builtin>.len",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray._maybe_convert_datelike_array",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.to_numpy",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.to_numpy"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray.dropna": [
        "<builtin>.type"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray.__arrow_array__": [],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray.__iter__": [
        "pandas._libs.tslibs.timedeltas.Timedelta",
        "pandas._libs.tslibs.timestamps.Timestamp"
    ],
    "numpy.ma.core.MaskedArray.tolist": [
        "numpy.ma.core.MaskedArray.filled"
    ],
    "numpy.ma.core.MaskedArray.filled": [
        "numpy.ma.core._recursive_filled",
        "numpy.core.fromnumeric.choose",
        "pandas.core.indexes.base.Index.astype",
        "numpy.core.multiarray.copyto",
        "numpy.ma.core._check_fill_value"
    ],
    "numpy.ma.core._check_fill_value": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "numpy.ma.core._recursive_set_fill_value",
        "<builtin>.ValueError",
        "numpy.ma.core.default_fill_value"
    ],
    "numpy.ma.core._recursive_set_fill_value": [
        "<builtin>.zip",
        "<builtin>.tuple",
        "append",
        "numpy.core.fromnumeric.resize",
        "<builtin>.len"
    ],
    "numpy.core.fromnumeric.resize": [
        "<builtin>.isinstance",
        "numpy.core.numeric.zeros_like",
        "numpy.core.fromnumeric.ravel",
        "numpy.core.fromnumeric.reshape",
        "<builtin>.ValueError",
        "numpy.core.multiarray.concatenate"
    ],
    "numpy.core.fromnumeric.ravel": [
        "<builtin>.isinstance"
    ],
    "numpy.core.fromnumeric.reshape": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "numpy.ma.core.default_fill_value": [
        "numpy.ma.core._recursive_fill_value",
        "numpy.ma.core._get_dtype_of"
    ],
    "numpy.ma.core._get_dtype_of": [
        "<builtin>.isinstance",
        "<builtin>.hasattr"
    ],
    "numpy.ma.core._recursive_fill_value": [
        "numpy.ma.core._extremum_fill_value._scalar_fill_value",
        "<builtin>.tuple",
        "numpy.core.numeric.full",
        "numpy.ma.core.default_fill_value._scalar_fill_value",
        "numpy.ma.core._recursive_fill_value"
    ],
    "numpy.ma.core.default_fill_value._scalar_fill_value": [
        "<map>.get"
    ],
    "numpy.core.fromnumeric.choose": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "numpy.ma.core._recursive_filled": [
        "numpy.core.multiarray.copyto",
        "numpy.ma.core._recursive_filled"
    ],
    "pandas.core.internals.base.DataManager.isna": [
        "pandas.core.internals.base.DataManager.apply",
        "pandas.core.internals.managers.BaseBlockManager.apply",
        "pandas.core.internals.array_manager.SingleArrayManager.apply"
    ],
    "pandas.core.internals.base.DataManager.apply": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.base.PandasObject._constructor": [
        "<builtin>.type"
    ],
    "pandas.core.arrays.interval.IntervalArray.copy": [
        "pandas.core.arrays.interval.IntervalArray._simple_new"
    ],
    "pandas.core.arrays.period.PeriodArray.__arrow_array__": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.arrays.arrow.extension_types.ArrowPeriodType.__init__",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.isna",
        "pandas.core.arrays.arrow.extension_types"
    ],
    "pandas.core.arrays.arrow.extension_types": [
        "pandas.core.arrays.arrow.extension_types.ArrowPeriodType.__init__",
        "pandas._typing",
        "pandas.core.arrays.arrow.extension_types.patch_pyarrow",
        "pandas.core.arrays.interval",
        "pandas.core.dtypes.dtypes",
        "pandas.core.arrays.arrow.extension_types.ArrowIntervalType",
        "pandas.compat",
        "pandas.core.arrays.arrow.extension_types.ArrowPeriodType",
        "pandas.core.arrays.arrow.extension_types.ArrowIntervalType.__init__"
    ],
    "pandas.core.arrays.arrow.extension_types.ArrowPeriodType": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "pandas.core.arrays.arrow.extension_types.ArrowPeriodType.__init__": [],
    "pandas.core.arrays.arrow.extension_types.ArrowIntervalType": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "pandas.core.arrays.arrow.extension_types.ArrowIntervalType.__init__": [
        "<builtin>.str",
        "<builtin>.isinstance"
    ],
    "pandas.core.arrays.arrow.extension_types.patch_pyarrow": [
        "<builtin>.getattr",
        "pandas.core.arrays.arrow.extension_types.patch_pyarrow.ForbiddenExtensionType"
    ],
    "pandas.core.arrays.arrow.extension_types.patch_pyarrow.ForbiddenExtensionType": [
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.isna": [],
    "pandas.core.arrays.interval.IntervalArray.__arrow_array__": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.arrays.interval.IntervalArray.isna",
        "pandas.core.arrays.arrow.extension_types",
        "<builtin>.len",
        "pandas.core.arrays.arrow.extension_types.ArrowIntervalType.__init__"
    ],
    "pandas.core.arrays.interval.IntervalArray.isna": [
        "pandas.core.arrays.interval.IntervalArray.isna"
    ],
    "pandas.core.arrays.interval.IntervalArray.__iter__": [
        "<builtin>.iter"
    ],
    "pandas.core.arrays.interval.IntervalArray.astype": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas",
        "pandas.core.dtypes.common.is_float_dtype",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.arrays.interval.IntervalArray._shallow_copy",
        "pandas.core.indexes.api.Index",
        "pandas.core.arrays.interval.IntervalArray.copy",
        "pandas.core.dtypes.common.needs_i8_conversion",
        "<builtin>.type",
        "<builtin>.super"
    ],
    "pandas.core.arrays.interval.IntervalArray._shallow_copy": [
        "pandas.core.arrays.interval.IntervalArray._ensure_simple_new_inputs",
        "pandas.core.dtypes.dtypes.IntervalDtype.__init__",
        "pandas.core.arrays.interval.IntervalArray._simple_new"
    ],
    "pandas.core.arrays.interval.IntervalArray.repeat": [
        "pandas.compat.numpy.function.CompatValidator.__init__",
        "pandas.core.arrays.interval.IntervalArray._shallow_copy"
    ],
    "pandas.core.generic.NDFrame._set_axis": [
        "pandas.core.generic.NDFrame._clear_item_cache",
        "pandas.core.indexes.base.ensure_index",
        "pandas.core.series.Series._clear_item_cache",
        "pandas.core.frame.DataFrame._clear_item_cache"
    ],
    "pandas.core.series.Series._clear_item_cache": [],
    "pandas.core.generic.NDFrame._clear_item_cache": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.frame.DataFrame._clear_item_cache": [],
    "pandas.core.algorithms.unique": [
        "pandas.core.algorithms.unique_with_mask"
    ],
    "pandas.core.algorithms.unique_with_mask": [
        "<builtin>.isinstance",
        "pandas.core.indexes.base.Index.unique",
        "pandas.core.algorithms._ensure_arraylike",
        "pandas.core.algorithms._reconstruct_data",
        "pandas.core.arrays._mixins.NDArrayBackedExtensionArray.unique",
        "pandas.core.algorithms._get_hashtable_algo",
        "pandas.core.arrays.base.ExtensionArray.unique",
        "<builtin>.len"
    ],
    "pandas.core.arrays._mixins.NDArrayBackedExtensionArray.unique": [
        "pandas.core.arrays._mixins.NDArrayBackedExtensionArray.unique"
    ],
    "pandas.core.indexes.base.Index.unique": [
        "pandas.core.indexes.base.Index._validate_index_level",
        "pandas.core.indexes.base.Index._shallow_copy",
        "<builtin>.super",
        "pandas.core.indexes.base.Index._view"
    ],
    "pandas.core.indexes.base.Index._validate_index_level": [
        "<builtin>.KeyError",
        "<builtin>.IndexError",
        "<builtin>.isinstance"
    ],
    "pandas.core.indexes.base.Index._shallow_copy": [
        "pandas.core.indexes.base.Index._simple_new"
    ],
    "pandas.core.arrays.base.ExtensionArray.unique": [
        "pandas.core.arrays.masked.BaseMaskedArray._from_sequence",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray._from_sequence",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.arrays.base.ExtensionArray._from_sequence",
        "pandas.core.arrays.base.ExtensionArray.unique",
        "pandas.core.arrays.masked.BaseMaskedArray.astype",
        "pandas.core.arrays.string_arrow.ArrowStringArray._from_sequence",
        "pandas.core.arrays.interval.IntervalArray._from_sequence"
    ],
    "pandas.core.arrays.masked.BaseMaskedArray._from_sequence": [
        "pandas.core.arrays.numeric.NumericArray._coerce_to_array",
        "pandas.core.arrays.masked.BaseMaskedArray.__init__",
        "pandas.core.arrays.masked.BaseMaskedArray._coerce_to_array",
        "pandas.core.arrays.boolean.BooleanArray._coerce_to_array",
        "pandas.core.arrays.boolean.BooleanArray.__init__"
    ],
    "pandas.core.arrays.numeric.NumericArray._coerce_to_array": [
        "pandas.core.arrays.numeric._coerce_to_data_and_mask"
    ],
    "pandas.core.arrays.numeric._coerce_to_data_and_mask": [
        "<builtin>.TypeError",
        "numpy.ma.core.MaskedConstant.copy",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.arrays.base.ExtensionArray.copy",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.dtypes.common.is_integer_dtype",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.indexes.multi.MultiIndex.copy",
        "copy",
        "pandas.core.internals.managers.BaseBlockManager.copy",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.internals.array_manager.BaseArrayManager.copy",
        "<builtin>.hasattr",
        "<builtin>.int",
        "pandas.core.arrays.integer.IntegerDtype._safe_cast",
        "<map>.copy",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.dtypes.common.is_string_dtype",
        "numpy.core.ones",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.copy",
        "pandas.core.indexes.base.Index.copy",
        "pandas.core.arrays.interval.IntervalArray.copy",
        "numpy.lib.nanfunctions.nanargmax",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "<builtin>.len",
        "pandas.core.arrays.floating.FloatingDtype._safe_cast",
        "numpy.core.numeric.ones",
        "pandas.core.arrays.masked.BaseMaskedArray.astype",
        "pandas.core.arrays.floating.FloatingDtype.construct_array_type",
        "<builtin>.isinstance",
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas.core.dtypes.common.is_float_dtype",
        "pandas.core.arrays.masked.BaseMaskedArray.copy",
        "pandas.core.arrays.integer.IntegerDtype.construct_array_type",
        "pandas.core.arrays.numeric.NumericDtype._standardize_dtype",
        "numpy.ma.core._arraymethod.wrapped_method",
        "pandas.core.indexes.base.Index.astype"
    ],
    "pandas.core.arrays.numeric.NumericDtype._standardize_dtype": [
        "pandas.core.arrays.floating.FloatingDtype._get_dtype_mapping",
        "<builtin>.isinstance",
        "<str>.startswith",
        "<str>.lower",
        "<builtin>.ValueError",
        "pandas.core.arrays.numeric.NumericDtype._get_dtype_mapping",
        "pandas.core.arrays.integer.IntegerDtype._get_dtype_mapping"
    ],
    "pandas.core.arrays.integer.IntegerDtype._get_dtype_mapping": [],
    "pandas.core.arrays.floating.FloatingDtype._get_dtype_mapping": [],
    "pandas.core.arrays.numeric.NumericDtype._get_dtype_mapping": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.arrays.integer.IntegerDtype.construct_array_type": [],
    "pandas.core.arrays.floating.FloatingDtype.construct_array_type": [],
    "numpy.lib.nanfunctions.nanargmax": [
        "numpy.core.fromnumeric.all",
        "numpy.core.arrayprint.any",
        "numpy.core.fromnumeric.argmax",
        "<builtin>.ValueError",
        "numpy.lib.nanfunctions._replace_nan",
        "numpy.core.fromnumeric.any"
    ],
    "numpy.lib.nanfunctions._replace_nan": [
        "<builtin>.issubclass",
        "numpy.core.multiarray.copyto"
    ],
    "numpy.core.fromnumeric.argmax": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "pandas.core.arrays.integer.IntegerDtype._safe_cast": [
        "<builtin>.TypeError",
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.astype"
    ],
    "pandas.core.arrays.floating.FloatingDtype._safe_cast": [
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.astype"
    ],
    "pandas.core.arrays.masked.BaseMaskedArray._coerce_to_array": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.arrays.boolean.BooleanArray._coerce_to_array": [
        "pandas.core.arrays.boolean.coerce_to_array"
    ],
    "pandas.core.arrays.boolean.coerce_to_array": [
        "<builtin>.TypeError",
        "numpy.ma.core.MaskedConstant.copy",
        "numpy.core.fromnumeric.all",
        "pandas.core.arrays.base.ExtensionArray.copy",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.indexes.multi.MultiIndex.copy",
        "copy",
        "pandas.core.internals.managers.BaseBlockManager.copy",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.internals.array_manager.BaseArrayManager.copy",
        "<map>.copy",
        "typing.cast",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.copy",
        "pandas.core.indexes.base.Index.copy",
        "pandas.core.arrays.interval.IntervalArray.copy",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "pandas.core.dtypes.missing.isna",
        "<builtin>.len",
        "pandas.core.arrays.masked.BaseMaskedArray.astype",
        "<builtin>.isinstance",
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.copy",
        "numpy.ma.core._arraymethod.wrapped_method",
        "<builtin>.ValueError",
        "pandas.core.indexes.base.Index.astype"
    ],
    "pandas.core.arrays.masked.BaseMaskedArray.__init__": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays.base.ExtensionArray._from_sequence": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.arrays.masked.BaseMaskedArray.ravel": [
        "<builtin>.type"
    ],
    "numpy.core.fromnumeric.repeat": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "pandas.core.indexes.base.Index.__array_wrap__": [
        "numpy.core.fromnumeric.ndim",
        "pandas.core.dtypes.common.is_bool_dtype",
        "<builtin>.isinstance",
        "numpy.core.numeric.ndim"
    ],
    "numpy.ma.core.MaskedArray.__array_wrap__": [
        "numpy.core.arrayprint.errstate",
        "pandas.core.indexes.base.Index.view",
        "copy",
        "<map>.copy",
        "numpy.core._ufunc_config.errstate.__init__",
        "<map>.get",
        "numpy.ma.core.MaskedArray.view",
        "numpy.core.multiarray.copyto",
        "functools.reduce",
        "<builtin>.type",
        "numpy.ma.core.getmaskarray"
    ],
    "pandas.core.indexes.base._maybe_try_sort": [
        "pandas.core.algorithms.safe_sort",
        "pandas.util._exceptions.find_stack_level"
    ],
    "pandas.core.indexes.base.Index._outer_indexer": [
        "pandas.core.indexes.base.Index._get_join_target",
        "pandas.core.indexes.base.Index._from_join_target"
    ],
    "pandas.core.indexes.base.Index._get_join_target": [
        "<builtin>.isinstance",
        "pandas.core.indexes.base.Index._get_engine_target",
        "<builtin>.ValueError"
    ],
    "pandas.core.indexes.base.Index._from_join_target": [
        "<builtin>.isinstance",
        "<builtin>.type"
    ],
    "pandas.core.indexes.base.Index._wrap_setop_result": [
        "pandas.core.indexes.base.Index.rename",
        "<builtin>.isinstance",
        "pandas.core.indexes.base.Index._shallow_copy",
        "pandas.core.ops.common.get_op_result_name"
    ],
    "pandas.core.indexes.api.safe_sort_index": [
        "pandas.core.algorithms.safe_sort"
    ],
    "numpy.ma.core.MaskedConstant.copy": [],
    "numpy.core.shape_base.vstack": [
        "<builtin>.isinstance",
        "numpy.core.fromnumeric.concatenate",
        "numpy.core.shape_base._arrays_for_stack_dispatcher",
        "numpy.core.arrayprint.concatenate",
        "numpy.core.shape_base.atleast_2d",
        "numpy.core.multiarray.concatenate"
    ],
    "numpy.core.shape_base._arrays_for_stack_dispatcher": [
        "<builtin>.hasattr"
    ],
    "numpy.core.vstack": [],
    "pandas.core.internals.construction._list_of_dict_to_arrays": [
        "<builtin>.isinstance",
        "<builtin>.any",
        "<builtin>.list",
        "<builtin>.dict",
        "pandas.core.indexes.base.ensure_index",
        "<builtin>.type"
    ],
    "pandas.core.internals.construction._finalize_columns_and_data": [
        "<builtin>.list",
        "pandas.core.internals.construction._validate_or_indexify_columns",
        "pandas.core.internals.construction.convert_object_array",
        "<builtin>.ValueError",
        "<builtin>.len"
    ],
    "pandas.core.internals.construction._validate_or_indexify_columns": [
        "<builtin>.isinstance",
        "pandas.core.indexes.api.default_index",
        "<builtin>.AssertionError",
        "<builtin>.all",
        "<builtin>.ValueError",
        "<builtin>.len"
    ],
    "pandas.core.internals.construction.convert_object_array": [
        "pandas.core.internals.construction.convert_object_array.convert"
    ],
    "pandas.core.internals.construction.convert_object_array.convert": [
        "<builtin>.isinstance",
        "pandas.core.arrays.string_.StringArray._from_sequence",
        "pandas.core.dtypes.cast.maybe_infer_to_datetimelike",
        "pandas.core.arrays.string_.StringDtype.__init__",
        "pandas.core.construction.array",
        "pandas.core.dtypes.cast.maybe_cast_to_datetime",
        "pandas.core.arrays.string_.StringDtype.construct_array_type",
        "pandas.core.arrays.string_arrow.ArrowStringArray._from_sequence"
    ],
    "pandas.core.construction.array": [
        "<builtin>.TypeError",
        "pandas.core.arrays.masked.BaseMaskedArray._from_sequence",
        "numpy.ma.core.MaskedConstant.copy",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.arrays",
        "pandas.core.arrays.period.PeriodArray._from_sequence",
        "pandas.core.arrays.base.ExtensionArray.copy",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_array_type",
        "pandas.core.arrays.string_arrow.ArrowStringArray._from_sequence",
        "pandas.core.construction.extract_array",
        "pandas.core.dtypes.dtypes.PeriodDtype.construct_array_type",
        "pandas.core.arrays.string_.StringArray._from_sequence",
        "pandas.core.indexes.multi.MultiIndex.copy",
        "pandas.core.dtypes.dtypes.IntervalDtype.construct_array_type",
        "pandas.core.arrays.datetimes.DatetimeArray._from_sequence",
        "copy",
        "pandas.core.internals.managers.BaseBlockManager.copy",
        "pandas.core.dtypes.dtypes.ArrowDtype.construct_array_type",
        "pandas.core.internals.array_manager.BaseArrayManager.copy",
        "pandas.core.arrays.numpy_.NumpyExtensionArray._from_sequence",
        "<builtin>.hasattr",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray._from_sequence",
        "<map>.copy",
        "pandas.core.arrays.string_.StringDtype.__init__",
        "pandas.core.dtypes.dtypes.CategoricalDtype.construct_array_type",
        "typing.cast",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.copy",
        "pandas.core.indexes.base.Index.copy",
        "pandas.core.arrays.interval.IntervalArray.copy",
        "<builtin>.getattr",
        "pandas.core.arrays.timedeltas.TimedeltaArray._from_sequence",
        "<builtin>.len",
        "pandas._libs.tslibs.np_datetime.is_supported_dtype",
        "pandas.core.arrays.string_.StringDtype.construct_array_type",
        "pandas.core.arrays.interval.IntervalArray._from_sequence",
        "<builtin>.isinstance",
        "pandas.core.arrays.masked.BaseMaskedArray.copy",
        "pandas.core.arrays.string_",
        "numpy.ma.core._arraymethod.wrapped_method",
        "pandas.util._exceptions.find_stack_level",
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays.numpy_.NumpyExtensionArray._from_sequence": [
        "<builtin>.isinstance",
        "<builtin>.hasattr",
        "pandas.core.arrays.string_.StringArray.__init__",
        "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.__init__"
    ],
    "pandas.core.arrays.numpy_.NumpyExtensionArray.__init__": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.dtypes.NumpyEADtype.__init__",
        "<builtin>.ValueError",
        "<builtin>.type",
        "<builtin>.super"
    ],
    "pandas.core.dtypes.dtypes.NumpyEADtype.__init__": [
        "<builtin>.isinstance"
    ],
    "pandas.core.sorting.lexsort_indexer": [
        "<builtin>.isinstance",
        "numpy.core.numeric.where",
        "<builtin>.zip",
        "append",
        "pandas.core.arrays",
        "typing.cast",
        "numpy.core.multiarray.lexsort",
        "pandas.core.sorting.ensure_key_mapped",
        "<builtin>.ValueError",
        "<builtin>.len",
        "numpy.core.multiarray.where",
        "pandas.core.arrays.categorical.Categorical.__init__"
    ],
    "pandas.core.sorting.ensure_key_mapped": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.indexes.api",
        "pandas.core.sorting._ensure_key_mapped_multiindex",
        "pandas.core.indexes.base.Index.copy",
        "<builtin>.ValueError",
        "<builtin>.len",
        "<builtin>.type"
    ],
    "pandas.core.sorting._ensure_key_mapped_multiindex": [
        "<builtin>.isinstance",
        "pandas.core.indexes.base.Index._get_level_values",
        "pandas.core.indexes.base.Index._get_level_number",
        "<builtin>.range",
        "<builtin>.list",
        "pandas.core.sorting.ensure_key_mapped",
        "<builtin>.type"
    ],
    "numpy.core.multiarray.lexsort": [
        "<builtin>.isinstance"
    ],
    "numpy.ma.core.MaskedConstant.__array_wrap__": [
        "numpy.ma.core.MaskedArray.view"
    ],
    "numpy.ma.core.MaskedArray.take": [
        "<builtin>.isinstance",
        "numpy.ma.core.getmask",
        "numpy.core.fromnumeric.take",
        "numpy.core.numeric.take",
        "<builtin>.type"
    ],
    "numpy.core.fromnumeric.take": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "numpy.core.numeric.take": [],
    "pandas.core.indexes.base.Index.take": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.compat.numpy.function.CompatValidator.__init__",
        "pandas.core.algorithms.take",
        "pandas.core.indexes.base.Index._maybe_disallow_fill"
    ],
    "pandas.core.indexes.base.Index._maybe_disallow_fill": [
        "<builtin>.type",
        "<builtin>.ValueError"
    ],
    "pandas.core.algorithms.take": [
        "pandas.core.indexers.utils.validate_indices",
        "<builtin>.isinstance",
        "pandas.util._exceptions.find_stack_level",
        "pandas.core.dtypes.inference.is_array_like",
        "pandas.core.array_algos.take.take_nd"
    ],
    "pandas.core.indexers.utils.validate_indices": [
        "<builtin>.IndexError",
        "<builtin>.len",
        "<builtin>.ValueError"
    ],
    "numpy.ma.core.MaskedArray.argsort": [
        "numpy.ma.core.MaskedArray.filled",
        "numpy.ma.core.maximum_fill_value",
        "numpy.ma.core._deprecate_argsort_axis",
        "numpy.ma.core.minimum_fill_value",
        "numpy.ma.core.MaskedArray.argsort",
        "pandas.core.indexes.base.Index.argsort",
        "numpy.core.numerictypes.issubdtype"
    ],
    "numpy.ma.core._deprecate_argsort_axis": [],
    "numpy.ma.core.maximum_fill_value": [
        "numpy.ma.core._extremum_fill_value"
    ],
    "numpy.ma.core._extremum_fill_value": [
        "numpy.ma.core._recursive_fill_value",
        "numpy.ma.core._get_dtype_of"
    ],
    "numpy.ma.core._extremum_fill_value._scalar_fill_value": [
        "<builtin>.TypeError"
    ],
    "numpy.ma.core.minimum_fill_value": [
        "numpy.ma.core._extremum_fill_value"
    ],
    "<map>": [],
    "pandas.core.indexes.base.Index.argsort": [],
    "pandas.core.indexes.base.Index._get_level_number": [
        "pandas.core.indexes.base.Index._validate_index_level"
    ],
    "pandas.core.indexes.base.Index._get_level_values": [
        "pandas.core.indexes.base.Index._validate_index_level"
    ],
    "pandas.core.arrays.categorical.Categorical.from_codes": [
        "pandas.core.arrays.categorical.Categorical._validate_codes_for_dtype",
        "pandas.core.dtypes.dtypes.CategoricalDtype._from_values_or_dtype",
        "pandas.core.arrays.categorical.Categorical._simple_new",
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays.categorical.Categorical._validate_codes_for_dtype": [
        "pandas.core.dtypes.common.is_integer_dtype",
        "<builtin>.isinstance",
        "pandas.core.arrays.categorical.Categorical.isna",
        "<builtin>.ValueError",
        "<builtin>.len"
    ],
    "pandas.core.arrays.categorical.Categorical._simple_new": [
        "pandas.core.dtypes.dtypes.CategoricalDtype.__init__",
        "<builtin>.super",
        "pandas.core.dtypes.cast.coerce_indexer_dtype",
        "pandas.core.dtypes.dtypes.CategoricalDtype.update_dtype"
    ],
    "pandas.core.indexes.api.CategoricalIndex": [],
    "pandas.core.dtypes.cast.construct_2d_arraylike_from_scalar": [
        "pandas.core.dtypes.cast._maybe_box_and_unbox_datetimelike",
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "numpy.core.numeric.full",
        "<builtin>.ValueError"
    ],
    "pandas.core.internals.construction.ndarray_to_mgr": [
        "pandas.core.internals.construction._check_values_indices_shape_match",
        "<builtin>.issubclass",
        "pandas.core.indexes.base.ensure_index",
        "pandas.core.dtypes.common.is_object_dtype",
        "pandas.core.construction.sanitize_array",
        "pandas.core.internals.blocks.ensure_block_shape",
        "pandas.core.frame.DataFrame.reindex",
        "pandas.core.arrays.string_arrow.ArrowStringArray._from_sequence",
        "pandas.core.arrays.string_.StringArray._from_sequence",
        "<builtin>.any",
        "pandas.core.internals.array_manager.ArrayManager.__init__",
        "pandas.core.dtypes.common.is_1d_only_ea_dtype",
        "pandas.core.internals.blocks.new_block_2d",
        "pandas._config.using_pyarrow_string_dtype",
        "pandas.core.internals.construction._get_axes",
        "pandas.core.dtypes.cast.maybe_infer_to_datetimelike",
        "pandas.core.arrays.string_.StringDtype.__init__",
        "<builtin>.range",
        "<builtin>.list",
        "<builtin>.getattr",
        "pandas.core.internals.construction.arrays_to_mgr",
        "<builtin>.len",
        "pandas.core.series.Series.reindex",
        "pandas.core.arrays.string_.StringDtype.construct_array_type",
        "pandas.core.generic.NDFrame.reindex",
        "<builtin>.isinstance",
        "pandas._libs.internals.BlockPlacement",
        "pandas.core.internals.blocks.new_block",
        "<builtin>.zip",
        "<builtin>.slice",
        "<builtin>.enumerate",
        "pandas.core.internals.managers.create_block_manager_from_blocks",
        "pandas.core.indexes.base.Index.reindex",
        "pandas.core.construction.ensure_wrapped_if_datetimelike"
    ],
    "pandas.core.dtypes.common.is_1d_only_ea_dtype": [
        "<builtin>.isinstance"
    ],
    "pandas.core.internals.construction.arrays_to_mgr": [
        "pandas.core.internals.managers.create_block_manager_from_column_arrays",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.__iter__",
        "<builtin>.isinstance",
        "pandas.core.internals.construction._homogenize",
        "pandas.core.internals.construction._extract_index",
        "pandas.core.arrays.datetimes.DatetimeArray.__iter__",
        "pandas.core.internals.array_manager.ArrayManager.__init__",
        "pandas.core.generic.NDFrame.__iter__",
        "pandas.core.indexes.base.ensure_index",
        "pandas.core.arrays.interval.IntervalArray.__iter__",
        "pandas.core.arrays.masked.BaseMaskedArray.__iter__",
        "<builtin>.ValueError",
        "<builtin>.len",
        "pandas.core.arrays.base.ExtensionArray.__iter__",
        "pandas.core.construction.extract_array"
    ],
    "pandas.core.internals.construction._extract_index": [
        "pandas.core.indexes.api.union_indexes",
        "<builtin>.isinstance",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.__iter__",
        "pandas.core.series.Series.keys",
        "pandas.core.generic.NDFrame.keys",
        "pandas.core.arrays.datetimes.DatetimeArray.__iter__",
        "pandas.core.indexes.api.default_index",
        "append",
        "pandas.core.generic.NDFrame.__iter__",
        "<builtin>.set",
        "<builtin>.list",
        "pandas.core.indexes.base.ensure_index",
        "<builtin>.getattr",
        "pandas.core.arrays.masked.BaseMaskedArray.__iter__",
        "<builtin>.ValueError",
        "pandas.core.arrays.interval.IntervalArray.__iter__",
        "<builtin>.len",
        "pandas.core.arrays.base.ExtensionArray.__iter__"
    ],
    "pandas.core.internals.construction._homogenize": [
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.construction.sanitize_array",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.common.require_length_match",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.frame.DataFrame.reindex",
        "pandas.core.arrays.masked.BaseMaskedArray.__iter__",
        "pandas.core.arrays.datetimes.DatetimeArray.astype",
        "append",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.generic.NDFrame.astype",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.arrays.base.ExtensionArray.__iter__",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "<builtin>.dict",
        "pandas.core.arrays.interval.IntervalArray.__iter__",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "pandas.core.series.Series.reindex",
        "pandas.core.arrays.masked.BaseMaskedArray.astype",
        "pandas.core.generic.NDFrame.__iter__",
        "pandas.core.generic.NDFrame.reindex",
        "<builtin>.isinstance",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.__iter__",
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas.core.arrays.datetimes.DatetimeArray.__iter__",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.indexes.base.Index.reindex",
        "pandas.core.dtypes.cast.dict_compat"
    ],
    "pandas.core.indexes.multi.MultiIndex.astype": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.dtypes.common.is_object_dtype",
        "<builtin>.NotImplementedError",
        "pandas.core.indexes.multi.MultiIndex._view"
    ],
    "pandas.core.indexes.multi.MultiIndex._view": [
        "<builtin>.type"
    ],
    "pandas.core.dtypes.cast.dict_compat": [
        "<map>.items",
        "pandas.core.internals.managers.BaseBlockManager.items",
        "pandas.core.series.Series.items",
        "pandas.core.frame.DataFrame.items",
        "pandas.core.generic.NDFrame.items",
        "pandas.core.dtypes.cast.maybe_box_datetimelike",
        "pandas.core.internals.array_manager.BaseArrayManager.items"
    ],
    "pandas.core.arrays.numpy_.NumpyExtensionArray.to_numpy": [
        "pandas.core.arrays.numpy_.NumpyExtensionArray.isna"
    ],
    "pandas.core.arrays.numpy_.NumpyExtensionArray.isna": [
        "pandas.core.arrays.numpy_.NumpyExtensionArray.isna"
    ],
    "pandas.core.arrays._mixins.NDArrayBackedExtensionArray.view": [
        "",
        "pandas.core.arrays.string_.StringArray.__init__",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.arrays",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_array_type",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.__init__",
        "pandas.core.arrays.timedeltas.TimedeltaArray._simple_new",
        "pandas.core.dtypes.dtypes.PeriodDtype.construct_array_type",
        "pandas.core.arrays.interval.IntervalArray._simple_new",
        "pandas.core.dtypes.dtypes.IntervalDtype.construct_array_type",
        "pandas.core.dtypes.dtypes.ArrowDtype.construct_array_type",
        "pandas.core.dtypes.dtypes.CategoricalDtype.construct_array_type",
        "pandas.core.arrays.period.PeriodArray._simple_new",
        "pandas._libs.tslibs.np_datetime.is_supported_dtype",
        "pandas.core.arrays.datetimes.DatetimeArray._simple_new",
        "pandas.core.arrays.string_.StringDtype.construct_array_type",
        "pandas.core.arrays.numpy_.NumpyExtensionArray._from_backing_data",
        "<builtin>.isinstance",
        "pandas.core.arrays.string_arrow.ArrowStringArray.__init__",
        "pandas.core.arrays.period.PeriodArray.__init__",
        "<map>"
    ],
    "pandas.core.arrays.numpy_.NumpyExtensionArray._from_backing_data": [
        "<builtin>.type"
    ],
    "pandas.core.dtypes.dtypes.CategoricalDtype.construct_array_type": [
        "pandas"
    ],
    "pandas.core.arrays.period.PeriodArray._simple_new": [
        "<builtin>.isinstance",
        "pandas.core.arrays.period.PeriodArray.__init__"
    ],
    "pandas.core.arrays.string_.StringArray.__init__": [
        "<builtin>.isinstance",
        "pandas.core.arrays.string_.StringDtype.__init__",
        "pandas.core.arrays.string_.StringArray._validate",
        "<builtin>.type",
        "<builtin>.super",
        "pandas.core.construction.extract_array"
    ],
    "pandas.core.arrays.string_.StringArray._validate": [
        "<builtin>.len",
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays.string_.StringArray.__arrow_array__": [
        "pandas.core.arrays.numpy_.NumpyExtensionArray.isna"
    ],
    "pandas.core.arrays.masked.BaseMaskedArray.__iter__": [
        "<builtin>.len",
        "<builtin>.zip",
        "<builtin>.range"
    ],
    "pandas.core.arrays.numpy_.NumpyExtensionArray.astype": [
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.dtypes.astype.astype_array",
        "pandas.core.arrays.base.ExtensionArray.copy"
    ],
    "pandas.core.arrays.string_.StringArray.astype": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.arrays.base.ExtensionArray.copy",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.isna",
        "numpy.core.numerictypes.issubdtype",
        "<builtin>.super"
    ],
    "pandas.core.arrays.datetimelike.TimelikeOps.copy": [
        "<builtin>.super"
    ],
    "pandas.core.indexes.multi.MultiIndex.copy": [
        "pandas.core.indexes.base.Index._validate_names",
        "<builtin>.type",
        "copy.deepcopy"
    ],
    "pandas.core.internals.array_manager.ArrayManager.__init__": [
        "pandas.core.internals.array_manager.ArrayManager._verify_integrity",
        "pandas.core.indexes.base.ensure_index",
        "pandas.core.internals.blocks.maybe_coerce_values",
        "pandas.core.internals.blocks.extract_pandas_array"
    ],
    "pandas.core.internals.array_manager.ArrayManager._verify_integrity": [
        "<builtin>.len",
        "<builtin>.isinstance",
        "<builtin>.type",
        "<builtin>.ValueError"
    ],
    "pandas.core.internals.managers.create_block_manager_from_column_arrays": [
        "pandas.core.internals.managers.raise_construction_error",
        "pandas.core.internals.managers._form_blocks",
        "pandas.core.internals.managers.BlockManager._consolidate_inplace",
        "<builtin>.len",
        "pandas.core.internals.managers.BlockManager.__init__"
    ],
    "pandas.core.internals.managers._form_blocks": [
        "<builtin>.isinstance",
        "pandas._libs.internals.BlockPlacement",
        "pandas.core.internals.blocks.ensure_block_shape",
        "pandas.core.internals.blocks.get_block_type",
        "<builtin>.issubclass",
        "<builtin>.list",
        "pandas.core.dtypes.common.is_1d_only_ea_dtype",
        "pandas.core.internals.managers._stack_arrays",
        "<builtin>.enumerate",
        "pandas.core.internals.managers._tuples_to_blocks_no_consolidate",
        "pandas.core.construction.ensure_wrapped_if_datetimelike"
    ],
    "pandas.core.internals.managers._tuples_to_blocks_no_consolidate": [
        "<builtin>.zip",
        "pandas._libs.internals.BlockPlacement",
        "pandas.core.internals.blocks.new_block_2d",
        "pandas.core.internals.blocks.ensure_block_shape"
    ],
    "pandas.core.internals.blocks.ensure_block_shape": [
        "typing.cast",
        "pandas.core.dtypes.common.is_1d_only_ea_dtype"
    ],
    "pandas.core.internals.blocks.new_block_2d": [
        "pandas.core.internals.blocks.get_block_type",
        "pandas.core.internals.blocks.maybe_coerce_values"
    ],
    "pandas.core.internals.managers._stack_arrays": [
        "<builtin>.len",
        "<builtin>.zip",
        "<builtin>.enumerate"
    ],
    "pandas.core.internals.managers.BlockManager.__init__": [
        "pandas.core.internals.managers.BlockManager._verify_integrity",
        "<builtin>.AssertionError"
    ],
    "pandas.core.internals.managers.BlockManager._verify_integrity": [
        "<builtin>.len",
        "<builtin>.AssertionError",
        "pandas.core.internals.managers.raise_construction_error",
        "<builtin>.sum"
    ],
    "<builtin>.sum": [],
    "pandas.core.internals.managers.raise_construction_error": [
        "<builtin>.tuple",
        "<builtin>.list",
        "<builtin>.ValueError",
        "<builtin>.map",
        "<builtin>.len"
    ],
    "pandas.core.internals.managers.BlockManager._consolidate_inplace": [
        "pandas.core.internals.managers._consolidate",
        "pandas.core.internals.managers.BlockManager.is_consolidated"
    ],
    "pandas.core.internals.managers.BlockManager.is_consolidated": [
        "pandas.core.internals.managers.BlockManager._consolidate_check"
    ],
    "pandas.core.internals.managers.BlockManager._consolidate_check": [
        "<builtin>.set",
        "<builtin>.len"
    ],
    "pandas.core.internals.managers._consolidate": [
        "pandas.core.internals.blocks.extend_blocks",
        "<builtin>.tuple",
        "pandas.core.internals.managers._merge_blocks",
        "<builtin>.list",
        "<builtin>.sorted"
    ],
    "pandas.core.internals.managers._merge_blocks": [
        "<builtin>.isinstance",
        "pandas._libs.internals.BlockPlacement",
        "numpy.core.fromnumeric.concatenate",
        "numpy.core.arrayprint.concatenate",
        "typing.cast",
        "numpy.core.shape_base.vstack",
        "numpy.core.vstack",
        "numpy.core.fromnumeric.argsort",
        "pandas.core.internals.blocks.new_block_2d",
        "<builtin>.len",
        "numpy.core.multiarray.concatenate",
        "numpy.core.numeric.concatenate"
    ],
    "pandas.core.arrays.datetimes.DatetimeArray.astype": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.arrays.datetimes.DatetimeArray.to_period",
        "pandas.core.arrays.datetimelike.TimelikeOps.copy",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.astype",
        "pandas._libs.tslibs.np_datetime.astype_overflowsafe",
        "pandas._libs.tslibs.np_datetime.is_supported_dtype",
        "<builtin>.type",
        "<builtin>.super",
        "pandas._libs.tslibs.np_datetime.is_unitless"
    ],
    "pandas.core.arrays.datetimes.DatetimeArray.to_period": [
        "<builtin>.isinstance",
        "<builtin>.hasattr",
        "pandas.tseries.frequencies.get_period_alias",
        "pandas.core.arrays.period.PeriodArray._from_datetime64",
        "pandas.core.arrays",
        "pandas.util._exceptions.find_stack_level",
        "<builtin>.ValueError"
    ],
    "pandas.tseries.frequencies.get_period_alias": [],
    "pandas.core.arrays.period.PeriodArray._from_datetime64": [
        "<builtin>.isinstance",
        "pandas._libs.tslibs.dtypes.freq_to_period_freqstr",
        "pandas.core.arrays.period.dt64arr_to_periodarr",
        "pandas.core.arrays.period.PeriodArray.__init__"
    ],
    "pandas.core.arrays.period.dt64arr_to_periodarr": [
        "pandas._libs.tslibs.vectorized.dt64arr_to_periodarr",
        "<builtin>.isinstance",
        "pandas._libs.tslibs.np_datetime.py_get_unit_from_dtype",
        "<builtin>.ValueError"
    ],
    "pandas._libs.tslibs.vectorized.dt64arr_to_periodarr": [],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.astype": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._format_native_types",
        "pandas._libs.tslibs.vectorized.ints_to_pydatetime",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._box_values",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas._libs.tslibs.timedeltas.ints_to_pytimedelta",
        "typing.cast",
        "pandas.core.dtypes.common.is_string_dtype",
        "pandas.core.arrays.period.PeriodArray._format_native_types",
        "pandas.core.arrays.datetimes.DatetimeArray._format_native_types",
        "<builtin>.type",
        "<builtin>.super"
    ],
    "pandas.core.arrays.period.PeriodArray._format_native_types": [],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._format_native_types": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.arrays.datetimes.DatetimeArray._format_native_types": [],
    "pandas._libs.tslibs.timedeltas.ints_to_pytimedelta": [],
    "pandas._libs.tslibs.vectorized.ints_to_pydatetime": [],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._box_values": [],
    "pandas.core.indexes.multi.MultiIndex.view": [
        "pandas.core.indexes.multi.MultiIndex.copy"
    ],
    "pandas.core.indexes.multi.MultiIndex.dropna": [
        "numpy.core.fromnumeric.all",
        "numpy.core.arrayprint.any",
        "<builtin>.ValueError",
        "numpy.core.fromnumeric.any",
        "pandas.core.indexes.multi.MultiIndex.set_codes"
    ],
    "pandas.core.indexes.multi.MultiIndex.set_codes": [
        "pandas.core.indexes.multi.MultiIndex._view",
        "pandas.core.indexes.multi._require_listlike"
    ],
    "pandas.core.indexes.multi._require_listlike": [
        "<builtin>.len",
        "<builtin>.TypeError"
    ],
    "pandas.core.indexes.multi.MultiIndex._constructor": [
        "<builtin>.type"
    ],
    "pandas.core.arrays.datetimes.DatetimeArray.__iter__": [
        "<builtin>.len",
        "<builtin>.min",
        "pandas._libs.tslibs.vectorized.ints_to_pydatetime",
        "<builtin>.range"
    ],
    "pandas.core.internals.managers.BaseBlockManager.items": [],
    "pandas.core.internals.array_manager.BaseArrayManager.items": [],
    "pandas.core.indexes.multi.MultiIndex.repeat": [
        "pandas.compat.numpy.function.CompatValidator.__init__"
    ],
    "pandas.core.indexes.base.Index.reindex": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.hasattr",
        "pandas.core.indexes.base.Index._wrap_reindex_result",
        "pandas.core.indexes.multi.MultiIndex.equals",
        "pandas.core.indexes.base.Index.get_indexer_non_unique",
        "pandas.core.indexes.multi.MultiIndex._wrap_reindex_result",
        "pandas.core.indexes.base.ensure_has_len",
        "pandas.core.indexes.base.Index.get_indexer",
        "pandas.core.indexes.base.Index._join_level",
        "pandas.core.indexes.base.ensure_index",
        "<builtin>.ValueError",
        "<builtin>.len",
        "pandas.core.indexes.base.Index.equals"
    ],
    "pandas.core.indexes.base.ensure_has_len": [
        "<builtin>.len",
        "<builtin>.list"
    ],
    "pandas.core.indexes.multi.MultiIndex.equals": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.missing.array_equivalent",
        "numpy.core.numeric.array_equal",
        "<builtin>.range",
        "pandas.core.indexes.base.Index._should_compare",
        "pandas.core.indexes.base.Index.is_",
        "<builtin>.len"
    ],
    "pandas.core.indexes.multi.MultiIndex._is_comparable_dtype": [
        "pandas.core.dtypes.common.is_object_dtype"
    ],
    "numpy.ma.core.MaskedArray.min": [
        "numpy.ma.core.MaskedArray.filled",
        "pandas.core.indexes.base.Index.view",
        "<builtin>.isinstance",
        "numpy.core.multiarray.copyto",
        "numpy.ma.core.getmask",
        "numpy.ma.core.MaskedArray.view",
        "pandas.core.indexes.base.Index.min",
        "numpy.ma.core.minimum_fill_value",
        "numpy.ma.core._check_mask_axis",
        "numpy.ma.core.MaskedArray.min",
        "numpy.ma.core.MaskedArray.__setmask__",
        "<builtin>.type",
        "numpy.ma.core.make_mask_none"
    ],
    "numpy.ma.core._check_mask_axis": [],
    "numpy.ma.core.MaskedArray.__setmask__": [
        "<builtin>.len",
        "<builtin>.isinstance",
        "numpy.ma.core.make_mask_none",
        "<builtin>.tuple"
    ],
    "pandas.core.indexes.multi.MultiIndex.get_loc": [
        "<builtin>.isinstance",
        "pandas.core.indexes.multi.MultiIndex.get_loc_level",
        "pandas.core.indexes.multi.MultiIndex._check_indexing_error",
        "pandas.core.indexes.multi.MultiIndex.get_loc._maybe_to_slice",
        "pandas.core.indexes.multi.MultiIndex._get_level_indexer",
        "<builtin>.range",
        "<builtin>.slice",
        "<builtin>.list",
        "pandas.util._exceptions.find_stack_level",
        "pandas.core.indexes.multi.MultiIndex._get_loc_single_level_index",
        "<builtin>.enumerate",
        "<builtin>.KeyError",
        "<builtin>.len",
        "pandas.core.indexes.multi.MultiIndex.slice_locs"
    ],
    "pandas.core.indexes.multi.MultiIndex._check_indexing_error": [
        "pandas.core.dtypes.inference.is_hashable"
    ],
    "pandas.core.indexes.multi.MultiIndex._get_level_indexer": [
        "<builtin>.isinstance",
        "pandas.core.algorithms.searchsorted",
        "pandas.core.indexes.multi.MultiIndex._get_level_indexer.convert_indexer",
        "<builtin>.slice",
        "pandas.core.indexes.multi.MultiIndex._get_loc_single_level_index",
        "<builtin>.getattr",
        "<builtin>.KeyError",
        "<builtin>.len"
    ],
    "pandas.core.indexes.multi.MultiIndex._get_loc_single_level_index": [
        "pandas.core.dtypes.missing.isna"
    ],
    "pandas.core.algorithms.searchsorted": [
        "pandas.core.dtypes.common.is_integer_dtype",
        "<builtin>.isinstance",
        "numpy.core.iinfo",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.searchsorted",
        "typing.cast",
        "pandas.core.arrays.base.ExtensionArray.searchsorted",
        "pandas.core.base.IndexOpsMixin.searchsorted",
        "pandas.core.construction.array",
        "numpy.core.getlimits.iinfo.__init__",
        "pandas.core.arrays.masked.BaseMaskedArray.searchsorted",
        "pandas.core.arrays.period.PeriodArray.searchsorted",
        "pandas.core.construction.ensure_wrapped_if_datetimelike",
        "pandas.core.arrays._mixins.NDArrayBackedExtensionArray.searchsorted"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray.searchsorted": [
        "<builtin>.isinstance",
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "<builtin>.ValueError",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.astype",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.to_numpy"
    ],
    "pandas.core.arrays._mixins.NDArrayBackedExtensionArray.searchsorted": [
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._validate_setitem_value",
        "pandas.core.arrays._mixins.NDArrayBackedExtensionArray._validate_setitem_value"
    ],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._validate_setitem_value": [
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._validate_listlike",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._validate_scalar",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._unbox"
    ],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._validate_scalar": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.arrays.datetimes.DatetimeArray._unbox_scalar",
        "pandas.core.arrays.period.PeriodArray._scalar_type",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.isna",
        "pandas.core.arrays.period.PeriodArray._scalar_from_string",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._unbox_scalar",
        "pandas.core.arrays.datetimes.DatetimeArray._scalar_type",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._scalar_from_string",
        "pandas.core.arrays.period.PeriodArray._unbox_scalar",
        "pandas.core.dtypes.missing.is_valid_na_for_dtype",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._scalar_type",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._validation_error_message",
        "pandas.core.arrays.datetimes.DatetimeArray._scalar_from_string"
    ],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._validation_error_message": [
        "<builtin>.type",
        "<builtin>.hasattr",
        "<builtin>.getattr"
    ],
    "pandas.core.arrays.period.PeriodArray._scalar_type": [],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._scalar_type": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.arrays.datetimes.DatetimeArray._scalar_type": [],
    "pandas.core.arrays.period.PeriodArray._scalar_from_string": [
        "pandas._libs.tslibs.period.Period"
    ],
    "pandas._libs.tslibs.period.Period": [],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._scalar_from_string": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.arrays.datetimes.DatetimeArray._scalar_from_string": [
        "pandas._libs.tslibs.timestamps.Timestamp"
    ],
    "pandas.core.arrays.period.PeriodArray._unbox_scalar": [
        "<builtin>.isinstance",
        "pandas.core.arrays.period.PeriodArray._check_compatible_with",
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays.period.PeriodArray._check_compatible_with": [],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._unbox_scalar": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.arrays.datetimes.DatetimeArray._unbox_scalar": [
        "<builtin>.isinstance",
        "pandas.core.arrays.datetimes.DatetimeArray._check_compatible_with",
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays.datetimes.DatetimeArray._check_compatible_with": [
        "pandas.core.arrays.datetimes.DatetimeArray._assert_tzawareness_compat"
    ],
    "pandas.core.arrays.datetimes.DatetimeArray._assert_tzawareness_compat": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.getattr"
    ],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._validate_listlike": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.hasattr",
        "pandas.core.dtypes.common.is_all_strings",
        "pandas.core.construction.array",
        "pandas.core.dtypes.common.is_object_dtype",
        "<builtin>.len",
        "<builtin>.type",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._validation_error_message",
        "pandas.core.construction.extract_array"
    ],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._unbox": [
        "pandas.core.arrays.datetimes.DatetimeArray._unbox_scalar",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._check_compatible_with",
        "pandas.core.arrays.datetimes.DatetimeArray._check_compatible_with",
        "pandas.core.arrays.period.PeriodArray._unbox_scalar",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._unbox_scalar",
        "pandas.core.arrays.period.PeriodArray._check_compatible_with"
    ],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._check_compatible_with": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.arrays._mixins.NDArrayBackedExtensionArray._validate_setitem_value": [],
    "pandas.core.arrays.masked.BaseMaskedArray.searchsorted": [
        "<builtin>.isinstance",
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "<builtin>.ValueError",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.astype"
    ],
    "pandas.core.arrays.base.ExtensionArray.searchsorted": [
        "<builtin>.isinstance",
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.searchsorted",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.arrays.string_.StringArray.searchsorted",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.arrays.base.ExtensionArray.searchsorted",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.searchsorted",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.astype",
        "pandas.core.arrays.period.PeriodArray.searchsorted"
    ],
    "pandas.core.arrays.period.PeriodArray.searchsorted": [
        "pandas.core.arrays._mixins.NDArrayBackedExtensionArray.view",
        "pandas.core.indexes.base.Index.view",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._validate_setitem_value",
        "pandas.core.indexes.multi.MultiIndex.view",
        "numpy.ma.core.MaskedArray.view",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.view",
        "pandas.core.arrays.base.ExtensionArray.view"
    ],
    "pandas.core.arrays.string_.StringArray.searchsorted": [
        "<builtin>.super",
        "<builtin>.ValueError"
    ],
    "pandas.core.indexes.multi.MultiIndex._get_level_indexer.convert_indexer": [
        "pandas.core.algorithms.isin"
    ],
    "pandas.core.algorithms.isin": [
        "pandas.core.arrays.masked.BaseMaskedArray.isin",
        "<builtin>.TypeError",
        "pandas.core.algorithms.isin",
        "pandas.core.dtypes.common.needs_i8_conversion",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.isin",
        "pandas.core.dtypes.common.is_object_dtype",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.isin",
        "pandas.core.construction.extract_array",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.construction.array",
        "pandas.core.arrays.interval.IntervalArray.isin",
        "pandas.core.algorithms.isin.f",
        "pandas.core.dtypes.cast.np_find_common_type",
        "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike",
        "pandas.core.algorithms._ensure_arraylike",
        "<builtin>.list",
        "pandas.core.dtypes.missing.isna",
        "<builtin>.len",
        "<builtin>.type",
        "<builtin>.isinstance",
        "pandas.core.indexes.multi.MultiIndex.isin",
        "pandas.core.arrays.string_arrow.ArrowStringArray.isin",
        "pandas.core.arrays.base.ExtensionArray.isin",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.dtypes.common.is_signed_integer_dtype",
        "pandas.core.indexes.base.Index.isin"
    ],
    "pandas.core.arrays.base.ExtensionArray.isin": [
        "pandas.core.arrays.base.ExtensionArray.isin"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray.isin": [
        "<builtin>.len"
    ],
    "pandas.core.arrays.masked.BaseMaskedArray.isin": [
        "pandas.core.arrays.masked.BaseMaskedArray.isin",
        "<builtin>.any",
        "pandas.core.arrays",
        "pandas.core.arrays.boolean.BooleanArray.__init__"
    ],
    "pandas.core.arrays.string_arrow.ArrowStringArray.isin": [
        "<builtin>.len"
    ],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.isin": [
        "<builtin>.isinstance",
        "pandas.core.arrays.datetimes.DatetimeArray.astype",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._check_compatible_with",
        "typing.cast",
        "pandas.core.arrays.datetimes.DatetimeArray._check_compatible_with",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.astype",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.isin",
        "pandas.core.arrays.datetimelike.TimelikeOps.as_unit",
        "pandas.core.arrays.period.PeriodArray.astype",
        "<builtin>.type",
        "pandas.core.construction.ensure_wrapped_if_datetimelike",
        "pandas.core.arrays.period.PeriodArray._check_compatible_with"
    ],
    "pandas.core.arrays.datetimelike.TimelikeOps.as_unit": [
        "<builtin>.isinstance",
        "typing.cast",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__",
        "pandas._libs.tslibs.np_datetime.astype_overflowsafe",
        "<builtin>.type",
        "<builtin>.ValueError"
    ],
    "pandas.core.indexes.multi.MultiIndex.isin": [
        "<builtin>.isinstance",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.unique",
        "pandas.core.indexes.base.Index.unique",
        "pandas.core.indexes.multi.MultiIndex.unique",
        "pandas.core.indexes.multi.MultiIndex._get_level_number",
        "pandas.core.indexes.multi.MultiIndex.get_level_values",
        "<builtin>.list",
        "pandas.core.arrays._mixins.NDArrayBackedExtensionArray.unique",
        "pandas.core.indexes.multi.MultiIndex.from_tuples",
        "pandas.core.arrays.base.ExtensionArray.unique",
        "<builtin>.len"
    ],
    "pandas.core.indexes.multi.MultiIndex._get_level_number": [
        "<builtin>.IndexError",
        "index",
        "count",
        "<builtin>.ValueError",
        "<builtin>.KeyError"
    ],
    "pandas.core.indexes.multi.MultiIndex.get_level_values": [
        "pandas.core.indexes.multi.MultiIndex._get_level_number",
        "pandas.core.indexes.multi.MultiIndex._get_level_values"
    ],
    "pandas.core.indexes.multi.MultiIndex._get_level_values": [
        "pandas.core.array_algos.take.take_nd",
        "pandas.core.algorithms.unique"
    ],
    "pandas.core.indexes.multi.MultiIndex.from_tuples": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.zip",
        "typing.cast",
        "pandas.core.indexes.multi.MultiIndex.from_arrays",
        "<builtin>.list",
        "<builtin>.all",
        "<builtin>.len",
        "pandas.core.common.asarray_tuplesafe"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray.unique": [
        "<builtin>.type"
    ],
    "pandas.core.indexes.multi.MultiIndex.unique": [
        "pandas.core.indexes.multi.MultiIndex._get_level_number",
        "pandas.core.indexes.base.Index.drop_duplicates",
        "pandas.core.indexes.multi.MultiIndex._get_level_values"
    ],
    "pandas.core.indexes.base.Index.drop_duplicates": [
        "pandas.core.indexes.base.Index._view",
        "pandas.core.indexes.multi.MultiIndex._view",
        "<builtin>.super"
    ],
    "pandas.core.indexes.base.Index.isin": [
        "pandas.core.indexes.base.Index._validate_index_level",
        "pandas.core.algorithms.isin"
    ],
    "pandas.core.arrays.interval.IntervalArray.isin": [
        "numpy.lib.arraysetops.isin",
        "<builtin>.isinstance",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.dtypes.common.needs_i8_conversion",
        "pandas.core.arrays.interval.IntervalArray.isin",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.indexes.base.Index.astype"
    ],
    "numpy.lib.arraysetops.isin": [
        "numpy.lib.arraysetops.in1d"
    ],
    "numpy.lib.arraysetops.in1d": [
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.__iter__",
        "numpy.core.fromnumeric.concatenate",
        "numpy.core.arrayprint.concatenate",
        "numpy.lib.arraysetops.unique",
        "numpy.ma.core.MaskedArray.reshape",
        "numpy.core.ones",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.reshape",
        "<builtin>.len",
        "numpy.core.multiarray.concatenate",
        "numpy.core.numeric.ones",
        "numpy.core.numeric.concatenate"
    ],
    "numpy.lib.arraysetops.unique": [
        "<builtin>.TypeError",
        "numpy.core.numeric.moveaxis",
        "pandas.core.indexes.base.Index.view",
        "numpy.lib.arraysetops._unpack_tuple",
        "<builtin>.len",
        "numpy.lib.arraysetops._unique1d",
        "numpy.core._exceptions.AxisError.__init__",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.view",
        "numpy.ma.core.MaskedArray.reshape",
        "<builtin>.range",
        "numpy.lib.arraysetops.unique.reshape_uniq",
        "pandas.core.arrays.masked.BaseMaskedArray.reshape",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.reshape",
        "numpy.ma.core.MaskedArray.view",
        "numpy.core.fromnumeric.prod",
        "pandas.core.arrays.base.ExtensionArray.view"
    ],
    "numpy.lib.arraysetops._unique1d": [
        "numpy.ma.core.MaskedArray.sort",
        "numpy.core.fromnumeric.cumsum",
        "sort",
        "numpy.core.fromnumeric.searchsorted",
        "pandas.core.arrays.interval.IntervalArray.argsort",
        "numpy.core.fromnumeric.concatenate",
        "numpy.core.fromnumeric.nonzero",
        "numpy.core.arrayprint.concatenate",
        "numpy.ma.core.MaskedArray.argsort",
        "numpy.core.numeric.nonzero",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.argsort",
        "numpy.lib.function_base.diff",
        "pandas.core.indexes.base.Index.sort",
        "pandas.core.indexes.base.Index.argsort",
        "pandas.core.arrays.base.ExtensionArray.argsort",
        "numpy.core.multiarray.concatenate",
        "numpy.core.numeric.concatenate"
    ],
    "numpy.core.fromnumeric.searchsorted": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "numpy.core.fromnumeric.cumsum": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "numpy.core.numeric.nonzero": [],
    "numpy.core.fromnumeric.nonzero": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "numpy.lib.function_base.diff": [
        "numpy.core.fromnumeric.concatenate",
        "<builtin>.tuple",
        "numpy.lib.stride_tricks.broadcast_to",
        "append",
        "<builtin>.len",
        "numpy.core.arrayprint.concatenate",
        "<builtin>.slice",
        "<builtin>.range",
        "<builtin>.list",
        "<builtin>.ValueError",
        "<builtin>.repr",
        "numpy.core.multiarray.concatenate",
        "numpy.core.numeric.concatenate"
    ],
    "numpy.lib.arraysetops._unpack_tuple": [
        "<builtin>.len"
    ],
    "numpy.core._exceptions.AxisError.__init__": [],
    "numpy.lib.arraysetops.unique.reshape_uniq": [
        "numpy.core.numeric.moveaxis",
        "pandas.core.indexes.base.Index.view",
        "pandas.core.arrays.masked.BaseMaskedArray.reshape",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.reshape",
        "<builtin>.len",
        "pandas.core.arrays.base.ExtensionArray.view"
    ],
    "pandas.core.algorithms.isin.f": [
        "numpy.lib.arraysetops.isin"
    ],
    "numpy.ma.core.MaskedArray.sort": [
        "numpy.lib.shape_base.take_along_axis",
        "numpy.ma.core.MaskedArray.argsort"
    ],
    "pandas.core.indexes.base.Index.sort": [
        "<builtin>.TypeError"
    ],
    "sort": [],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray.argsort": [
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays.base.ExtensionArray.argsort": [
        "pandas.core.arrays.interval.IntervalArray.isna",
        "pandas.core.sorting.nargsort",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.isna",
        "pandas.compat.numpy.function.validate_argsort_with_ascending",
        "pandas.core.arrays.base.ExtensionArray._values_for_argsort",
        "pandas.core.arrays.masked.BaseMaskedArray.isna",
        "pandas.core.arrays.masked.BaseMaskedArray._values_for_argsort",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.isna",
        "pandas.core.arrays.base.ExtensionArray.isna"
    ],
    "pandas.compat.numpy.function.validate_argsort_with_ascending": [
        "pandas.compat.numpy.function.CompatValidator.__init__",
        "typing.cast",
        "pandas._libs.lib.is_integer"
    ],
    "pandas._libs.lib.is_integer": [],
    "pandas.core.arrays.masked.BaseMaskedArray._values_for_argsort": [],
    "pandas.core.arrays.base.ExtensionArray._values_for_argsort": [],
    "pandas.core.sorting.nargsort": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "numpy.core.fromnumeric.concatenate",
        "pandas.core.sorting.nargsort",
        "numpy.core.fromnumeric.nonzero",
        "numpy.core.arrayprint.concatenate",
        "numpy.core.numeric.nonzero",
        "pandas.core.sorting.ensure_key_mapped",
        "pandas.core.indexes.base.Index.argsort",
        "<builtin>.ValueError",
        "pandas.core.dtypes.missing.isna",
        "<builtin>.len",
        "numpy.core.multiarray.concatenate",
        "numpy.core.numeric.concatenate",
        "pandas.core.construction.extract_array"
    ],
    "pandas.core.base.IndexOpsMixin.transpose": [
        "pandas.compat.numpy.function.CompatValidator.__init__"
    ],
    "pandas.core.arrays.base.ExtensionArray.transpose": [],
    "pandas.core.arrays.interval.IntervalArray.argsort": [
        "pandas.compat.numpy.function.validate_argsort_with_ascending",
        "numpy.core.multiarray.lexsort",
        "<builtin>.super"
    ],
    "pandas.core.indexes.multi.MultiIndex.get_loc._maybe_to_slice": [
        "<builtin>.len",
        "<builtin>.isinstance"
    ],
    "pandas.core.indexes.multi.MultiIndex.get_loc_level": [
        "pandas.core.indexes.multi.MultiIndex._get_level_number",
        "<builtin>.isinstance",
        "pandas.core.indexes.multi.MultiIndex._get_loc_level"
    ],
    "pandas.core.indexes.multi.MultiIndex._get_loc_level": [
        "pandas.core.common.is_null_slice",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "<builtin>.zip",
        "<builtin>.tuple",
        "pandas.core.indexes.multi.MultiIndex._get_loc_level.maybe_mi_droplevels",
        "pandas.core.indexes.multi.MultiIndex.get_loc",
        "<builtin>.any",
        "<builtin>.AssertionError",
        "<builtin>.slice",
        "<builtin>.range",
        "pandas.core.indexes.multi.MultiIndex._get_level_indexer",
        "<builtin>.enumerate",
        "<builtin>.KeyError",
        "<builtin>.len",
        "pandas.core.common.is_full_slice",
        "pandas.core.indexes.multi.MultiIndex._get_loc_level"
    ],
    "pandas.core.indexes.multi.MultiIndex._get_loc_level.maybe_mi_droplevels": [
        "pandas.core.indexes.base.Index._drop_level_numbers",
        "<builtin>.sorted"
    ],
    "pandas.core.indexes.base.Index._drop_level_numbers": [
        "<builtin>.isinstance",
        "typing.cast",
        "pandas.core.indexes.multi",
        "<builtin>.list",
        "pandas.core.algorithms.take",
        "<builtin>.ValueError",
        "<builtin>.len"
    ],
    "pandas.core.common.is_null_slice": [
        "<builtin>.isinstance"
    ],
    "pandas.core.common.is_full_slice": [
        "<builtin>.isinstance"
    ],
    "pandas.core.indexes.multi.MultiIndex.slice_locs": [
        "<builtin>.super"
    ],
    "pandas.core.indexes.multi.MultiIndex.append": [
        "pandas.core.arrays.categorical.recode_for_categories",
        "<builtin>.isinstance",
        "numpy.core.fromnumeric.concatenate",
        "<builtin>.tuple",
        "append",
        "<builtin>.any",
        "numpy.core.arrayprint.concatenate",
        "<builtin>.range",
        "<builtin>.all",
        "pandas.core.indexes.multi.MultiIndex.from_tuples",
        "numpy.core.multiarray.concatenate",
        "numpy.core.numeric.concatenate"
    ],
    "pandas.core.indexes.base.Index._join_level": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas.core.indexes.base.Index._get_level_number",
        "typing.cast",
        "pandas.core.indexes.multi",
        "pandas.core.indexes.multi.MultiIndex._get_level_number",
        "pandas.core.indexes.base.Index._join_level._get_leaf_sorter",
        "<builtin>.list",
        "<builtin>.NotImplementedError",
        "<builtin>.len"
    ],
    "pandas.core.indexes.base.Index._join_level._get_leaf_sorter": [
        "numpy.core.shape_base.hstack",
        "numpy.ma.core.MaskedArray.nonzero",
        "pandas.core.sorting.get_group_index_sorter",
        "<builtin>.len",
        "numpy.core.hstack"
    ],
    "pandas.core.sorting.get_group_index_sorter": [
        "<builtin>.len"
    ],
    "numpy.core.hstack": [],
    "numpy.core.shape_base.hstack": [
        "<builtin>.isinstance",
        "numpy.core.fromnumeric.concatenate",
        "numpy.core.shape_base._arrays_for_stack_dispatcher",
        "numpy.core.arrayprint.concatenate",
        "numpy.core.shape_base.atleast_1d",
        "numpy.core.multiarray.concatenate"
    ],
    "numpy.ma.core.MaskedArray.nonzero": [
        "numpy.ma.core.MaskedArray.filled"
    ],
    "count": [],
    "index": [],
    "pandas.core.indexes.base.Index._wrap_reindex_result": [
        "pandas.core.indexes.multi.MultiIndex._maybe_preserve_names",
        "pandas.core.indexes.base.Index._maybe_preserve_names"
    ],
    "pandas.core.indexes.base.Index._maybe_preserve_names": [
        "numpy.ma.core.MaskedConstant.copy",
        "<map>.copy",
        "pandas.core.indexes.multi.MultiIndex.copy",
        "numpy.ma.core._arraymethod.wrapped_method",
        "pandas.core.indexes.base.Index.copy",
        "copy"
    ],
    "pandas.core.indexes.multi.MultiIndex._maybe_preserve_names": [
        "numpy.ma.core.MaskedConstant.copy",
        "<map>.copy",
        "pandas.core.indexes.multi.MultiIndex.copy",
        "numpy.ma.core._arraymethod.wrapped_method",
        "pandas.core.indexes.base.Index.copy",
        "copy"
    ],
    "pandas.core.indexes.multi.MultiIndex._wrap_reindex_result": [
        "pandas.core.indexes.multi.MultiIndex._maybe_preserve_names",
        "pandas.core.indexes.multi.MultiIndex.take",
        "<builtin>.isinstance",
        "pandas.core.indexes.multi.MultiIndex.from_tuples"
    ],
    "pandas.core.indexes.multi.MultiIndex.take": [
        "append",
        "pandas.compat.numpy.function.CompatValidator.__init__",
        "pandas.core.indexes.base.Index._maybe_disallow_fill"
    ],
    "pandas.core.internals.construction._get_axes": [
        "pandas.core.indexes.base.ensure_index",
        "pandas.core.indexes.api.default_index"
    ],
    "pandas.core.internals.construction._check_values_indices_shape_match": [
        "<builtin>.len",
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays.datetimelike.TimelikeOps._with_freq": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "pandas._libs.tslibs.offsets.to_offset",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin.view",
        "<builtin>.len"
    ],
    "pandas._libs.tslibs.offsets.to_offset": [],
    "pandas.core.internals.managers.create_block_manager_from_blocks": [
        "pandas.core.internals.managers.BlockManager._consolidate_inplace",
        "pandas.core.internals.managers.raise_construction_error",
        "pandas.core.internals.managers.BlockManager.__init__",
        "<builtin>.sum"
    ],
    "pandas.core.internals.construction.dict_to_mgr": [
        "pandas.core.series.Series.isna",
        "pandas.core.indexes.api.default_index",
        "pandas.core.series.Series.__init__",
        "pandas.core.indexes.base.ensure_index",
        "pandas.core.construction.sanitize_array",
        "pandas.core.dtypes.cast.construct_1d_arraylike_from_scalar",
        "pandas.core.dtypes.common.is_integer_dtype",
        "pandas.core.generic.NDFrame.keys",
        "pandas.core.internals.construction._extract_index",
        "pandas.core.series.Series.keys",
        "pandas.core.dtypes.common.is_1d_only_ea_dtype",
        "pandas.core.series",
        "pandas.core.common.maybe_iterable_to_list",
        "<builtin>.hasattr",
        "<builtin>.range",
        "<builtin>.list",
        "pandas.core.internals.construction.arrays_to_mgr",
        "<builtin>.len",
        "<builtin>.isinstance",
        "<map>.keys"
    ],
    "pandas.core.indexes.base.Index.values": [
        "pandas._config.using_copy_on_write",
        "<builtin>.isinstance"
    ],
    "pandas.core.series.Series.isna": [
        "pandas.core.generic.NDFrame.isna"
    ],
    "pandas.core.generic.NDFrame.isna": [
        "pandas.core.generic.NDFrame.isna"
    ],
    "pandas.core.series.Series.keys": [],
    "pandas.core.series.Series.items": [
        "<builtin>.zip",
        "<builtin>.iter"
    ],
    "pandas.core.generic.NDFrame.copy": [
        "pandas.core.generic.NDFrame._clear_item_cache",
        "pandas.core.series.Series._constructor_from_mgr",
        "pandas.core.generic.NDFrame.__finalize__",
        "pandas.core.frame.DataFrame._clear_item_cache",
        "pandas.core.frame.DataFrame._constructor_from_mgr",
        "pandas.core.series.Series._clear_item_cache"
    ],
    "pandas.core.series.Series._constructor_from_mgr": [
        "pandas.core.series.Series._constructor",
        "<builtin>.type",
        "pandas.core.generic.NDFrame._from_mgr"
    ],
    "pandas.core.generic.NDFrame._from_mgr": [
        "pandas.core.generic.NDFrame.__init__"
    ],
    "pandas.core.series.Series._constructor": [],
    "pandas.core.frame.DataFrame._constructor_from_mgr": [
        "pandas.core.frame.DataFrame._constructor",
        "<builtin>.type",
        "pandas.core.generic.NDFrame._from_mgr"
    ],
    "pandas.core.frame.DataFrame._constructor": [],
    "pandas.core.generic.NDFrame.__finalize__": [
        "<builtin>.isinstance",
        "copy.deepcopy",
        "<builtin>.set",
        "<builtin>.all",
        "<builtin>.bool",
        "<builtin>.getattr"
    ],
    "pandas.core.generic.NDFrame.astype": [
        "pandas.core.frame.DataFrame._constructor",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.dtypes.common.is_extension_array_dtype",
        "pandas.core.series.Series.__init__",
        "pandas.core.generic.NDFrame._constructor",
        "pandas.core.frame.DataFrame.items",
        "pandas.core.generic.NDFrame.items",
        "pandas.core.reshape.concat.concat",
        "append",
        "pandas.core.dtypes.inference.is_dict_like",
        "<builtin>.all",
        "pandas.core.series.Series.items",
        "pandas.core.generic.NDFrame.astype",
        "pandas._config.using_copy_on_write",
        "pandas.core.generic.NDFrame.isna",
        "pandas.core.series.Series._constructor_from_mgr",
        "typing.cast",
        "pandas.core.generic.NDFrame.__finalize__",
        "pandas.core.frame.DataFrame._constructor_from_mgr",
        "<builtin>.KeyError",
        "<builtin>.len",
        "<builtin>.isinstance",
        "pandas",
        "pandas.core.series.Series._constructor",
        "<builtin>.enumerate",
        "pandas.core.generic.NDFrame.copy"
    ],
    "pandas.core.dtypes.inference.is_dict_like": [
        "<builtin>.isinstance",
        "<builtin>.hasattr",
        "<builtin>.all"
    ],
    "pandas.core.dtypes.common.is_extension_array_dtype": [
        "<builtin>.isinstance",
        "<builtin>.getattr"
    ],
    "pandas.core.generic.NDFrame.items": [],
    "pandas.core.frame.DataFrame.items": [
        "<builtin>.hasattr",
        "pandas.core.frame.DataFrame._get_item_cache",
        "pandas.core.frame.DataFrame._ixs",
        "<builtin>.enumerate"
    ],
    "pandas.core.frame.DataFrame._ixs": [
        "pandas.core.frame.DataFrame._constructor_sliced_from_mgr",
        "<builtin>.isinstance",
        "pandas.core.frame.DataFrame._box_col_values"
    ],
    "pandas.core.frame.DataFrame._box_col_values": [
        "pandas.core.frame.DataFrame._constructor_sliced_from_mgr"
    ],
    "pandas.core.frame.DataFrame._constructor_sliced_from_mgr": [
        "<builtin>.type",
        "pandas.core.generic.NDFrame._from_mgr"
    ],
    "pandas.core.frame.DataFrame._get_item_cache": [
        "pandas._config.using_copy_on_write",
        "pandas.core.frame.DataFrame._ixs",
        "pandas._config.warn_copy_on_write"
    ],
    "pandas._config.warn_copy_on_write": [],
    "pandas.core.indexes.multi.MultiIndex.values": [],
    "pandas.core.reshape.concat.concat": [],
    "pandas.core.generic.NDFrame._constructor": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.frame.DataFrame.to_numpy": [],
    "pandas.core.series.Series.view": [
        "<builtin>.isinstance",
        "pandas.core.generic.NDFrame.__finalize__",
        "pandas.core.series.Series._constructor",
        "typing.cast"
    ],
    "pandas.core.series.Series.ravel": [
        "pandas._config.using_copy_on_write",
        "<builtin>.isinstance"
    ],
    "pandas.core.frame.DataFrame.isna": [
        "pandas.core.generic.NDFrame.__finalize__",
        "pandas.core.frame.DataFrame._constructor_from_mgr"
    ],
    "pandas.core.frame.DataFrame.dropna": [],
    "pandas.core.series.Series.dropna": [],
    "pandas.core.generic.NDFrame.__iter__": [
        "<builtin>.iter"
    ],
    "pandas.core.series.Series.repeat": [
        "pandas.compat.numpy.function.CompatValidator.__init__",
        "pandas.core.series.Series._constructor",
        "pandas.core.generic.NDFrame.__finalize__"
    ],
    "pandas.core.frame.DataFrame.reindex": [
        "<builtin>.super"
    ],
    "pandas.core.generic.NDFrame.reindex": [
        "pandas._config.using_copy_on_write",
        "<builtin>.TypeError",
        "pandas.core.generic.NDFrame._reindex_multi",
        "pandas.core.generic.NDFrame._get_axis_number",
        "pandas.core.missing.clean_reindex_fill_method",
        "pandas.core.frame.DataFrame._reindex_multi",
        "pandas.core.series.Series._needs_reindex_multi",
        "pandas.core.generic.NDFrame.__finalize__",
        "pandas.core.generic.NDFrame._get_axis",
        "<builtin>.all",
        "pandas.core.generic.NDFrame._reindex_axes",
        "pandas.core.generic.NDFrame._needs_reindex_multi",
        "pandas.core.generic.NDFrame.copy"
    ],
    "pandas.core.generic.NDFrame._get_axis_number": [
        "<builtin>.ValueError"
    ],
    "pandas.core.generic.NDFrame._get_axis": [
        "pandas.core.generic.NDFrame._get_axis_number"
    ],
    "pandas.core.series.Series._needs_reindex_multi": [],
    "pandas.core.generic.NDFrame._needs_reindex_multi": [
        "pandas.core.common.count_not_none"
    ],
    "pandas.core.common.count_not_none": [
        "<builtin>.sum"
    ],
    "pandas.core.generic.NDFrame._reindex_multi": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.frame.DataFrame._reindex_multi": [
        "pandas.core.generic.NDFrame._reindex_with_indexers",
        "pandas.core.frame.DataFrame._constructor",
        "pandas.core.array_algos.take.take_2d_multi"
    ],
    "pandas.core.generic.NDFrame._reindex_with_indexers": [
        "pandas._config.using_copy_on_write",
        "pandas.core.series.Series._constructor_from_mgr",
        "pandas.core.generic.NDFrame.__finalize__",
        "<map>.keys",
        "pandas.core.indexes.base.ensure_index",
        "pandas.core.frame.DataFrame._constructor_from_mgr",
        "pandas.core.generic.NDFrame._get_block_manager_axis",
        "<builtin>.sorted"
    ],
    "pandas.core.generic.NDFrame._get_block_manager_axis": [
        "pandas.core.generic.NDFrame._get_axis_number"
    ],
    "pandas.core.array_algos.take.take_2d_multi": [
        "pandas.core.array_algos.take._convert_wrapper",
        "pandas.core.array_algos.take._take_2d_multi_object",
        "<map>.get",
        "pandas.core.array_algos.take._convert_wrapper.wrapper",
        "<map>",
        "<builtin>.len",
        "pandas.core.dtypes.cast.maybe_promote"
    ],
    "pandas.core.array_algos.take._convert_wrapper": [],
    "pandas.core.array_algos.take._take_2d_multi_object": [
        "<builtin>.enumerate"
    ],
    "pandas.core.array_algos.take._convert_wrapper.wrapper": [
        "pandas.core.arrays.datetimes.DatetimeArray.astype",
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.astype",
        "<map>",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.generic.NDFrame.astype",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.construction.ensure_wrapped_if_datetimelike"
    ],
    "pandas.core.generic.NDFrame._reindex_axes": [
        "pandas.core.generic.NDFrame._get_axis_number",
        "pandas.core.generic.NDFrame._reindex_with_indexers",
        "pandas.core.generic.NDFrame._get_axis"
    ],
    "pandas.core.dtypes.inference.is_dataclass": [
        "<builtin>.isinstance"
    ],
    "pandas.core.internals.construction.dataclasses_to_dicts": [
        "<builtin>.map",
        "<builtin>.list"
    ],
    "pandas.core.internals.construction.treat_as_nested": [
        "<builtin>.len",
        "<builtin>.isinstance",
        "<builtin>.getattr"
    ],
    "pandas.core.internals.construction.nested_data_to_arrays": [
        "<builtin>.isinstance",
        "pandas.core.indexes.api.default_index",
        "pandas.core.internals.construction._get_names_from_index",
        "pandas.core.internals.construction.to_arrays",
        "pandas.core.indexes.base.ensure_index",
        "<builtin>.len",
        "pandas.core.dtypes.inference.is_named_tuple"
    ],
    "pandas.core.dtypes.inference.is_named_tuple": [
        "<builtin>.isinstance",
        "<builtin>.hasattr"
    ],
    "pandas.core.internals.construction._get_names_from_index": [
        "pandas.core.indexes.api.default_index",
        "<builtin>.any",
        "<builtin>.range",
        "<builtin>.list",
        "<builtin>.getattr",
        "<builtin>.enumerate",
        "<builtin>.len"
    ],
    "pandas.core.generic.NDFrame.keys": [],
    "pandas.core.internals.construction.rec_array_to_mgr": [
        "pandas.core.internals.array_manager.BaseArrayManager.copy",
        "pandas.core.internals.construction.reorder_arrays",
        "pandas.core.internals.construction.arrays_to_mgr",
        "pandas.core.indexes.api.default_index",
        "pandas.core.internals.construction.to_arrays",
        "pandas.core.indexes.base.ensure_index",
        "numpy.ma.core.getdata",
        "<builtin>.len",
        "pandas.core.internals.managers.BaseBlockManager.copy"
    ],
    "numpy.ma.core.getdata": [],
    "pandas.core.internals.construction.reorder_arrays": [
        "pandas.core.indexes.multi.MultiIndex.equals",
        "pandas.core.indexes.base.Index.equals",
        "<builtin>.enumerate"
    ],
    "numpy.ma.mrecords": [
        "numpy.ma",
        "numpy",
        "numpy.ma.mrecords.MaskedRecords",
        "numpy.core.records"
    ],
    "numpy.ma.mrecords.MaskedRecords": [
        "<builtin>.property"
    ],
    "pandas.core.frame.DataFrame.values": [],
    "pandas.core.generic.NDFrame.values": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.series.Series.values": [],
    "pandas.core.generic.NDFrame._init_mgr": [
        "numpy.ma.core.MaskedConstant.copy",
        "pandas.core.arrays.base.ExtensionArray.copy",
        "pandas.core.arrays.interval.IntervalArray.astype",
        "pandas.core.indexes.base.ensure_index",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.period.PeriodArray.astype",
        "pandas.core.arrays.datetimes.DatetimeArray.astype",
        "pandas.core.arrays.string_arrow.ArrowStringArray.astype",
        "pandas.core.internals.base.DataManager.reindex_axis",
        "pandas.core.arrays.base.ExtensionArray.astype",
        "<map>.items",
        "pandas.core.indexes.multi.MultiIndex.copy",
        "copy",
        "pandas.core.internals.managers.BaseBlockManager.copy",
        "pandas.core.generic.NDFrame.astype",
        "pandas.core.indexes.multi.MultiIndex.astype",
        "pandas.core.internals.array_manager.BaseArrayManager.copy",
        "<map>.copy",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.indexes.base.Index.copy",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray.copy",
        "pandas.core.arrays.interval.IntervalArray.copy",
        "pandas.core.arrays.numpy_.NumpyExtensionArray.astype",
        "<builtin>.len",
        "pandas.core.arrays.masked.BaseMaskedArray.astype",
        "pandas.core.indexes.base.Index.astype",
        "pandas.core.arrays.datetimelike.TimelikeOps.copy",
        "<builtin>.isinstance",
        "pandas.core.arrays.string_.StringArray.astype",
        "pandas.core.arrays.masked.BaseMaskedArray.copy",
        "numpy.ma.core._arraymethod.wrapped_method",
        "pandas.core.generic.NDFrame._get_block_manager_axis",
        "pandas.core.generic.NDFrame.copy"
    ],
    "pandas.core.internals.base.DataManager.reindex_axis": [
        "pandas.core.internals.base.DataManager.reindex_indexer",
        "pandas.core.internals.managers.BaseBlockManager.reindex_indexer",
        "pandas.core.internals.array_manager.BaseArrayManager.reindex_indexer"
    ],
    "pandas.core.internals.managers.BaseBlockManager.reindex_indexer": [
        "pandas._config.using_copy_on_write",
        "<builtin>.isinstance",
        "<builtin>.IndexError",
        "<builtin>.list",
        "pandas.core.internals.managers.BaseBlockManager._slice_take_blocks_ax0",
        "pandas.core.internals.managers.BaseBlockManager.copy",
        "<builtin>.type"
    ],
    "pandas.core.internals.managers.BaseBlockManager._slice_take_blocks_ax0": [
        "pandas._config.using_copy_on_write",
        "pandas._libs.internals.BlockPlacement",
        "<builtin>.isinstance",
        "<builtin>.zip",
        "append",
        "pandas.core.internals.managers._preprocess_slice_or_indexer",
        "<builtin>.slice",
        "<builtin>.max",
        "<builtin>.enumerate",
        "<builtin>.len"
    ],
    "pandas.core.internals.managers._preprocess_slice_or_indexer": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.getattr",
        "<builtin>.len",
        "<builtin>.type"
    ],
    "pandas.core.internals.array_manager.BaseArrayManager.reindex_indexer": [
        "pandas.core.internals.array_manager.BaseArrayManager._reindex_indexer",
        "pandas.core.internals.array_manager.SingleArrayManager._normalize_axis",
        "pandas.core.internals.array_manager.BaseArrayManager._normalize_axis"
    ],
    "pandas.core.internals.array_manager.BaseArrayManager._normalize_axis": [],
    "pandas.core.internals.array_manager.SingleArrayManager._normalize_axis": [],
    "pandas.core.internals.array_manager.BaseArrayManager._reindex_indexer": [
        "pandas.core.internals.array_manager.BaseArrayManager.copy",
        "append",
        "pandas.core.array_algos.take.take_1d",
        "<builtin>.IndexError",
        "<builtin>.list",
        "pandas.core.internals.array_manager.BaseArrayManager._make_na_array",
        "<builtin>.len",
        "<builtin>.type"
    ],
    "pandas.core.array_algos.take.take_1d": [
        "pandas.core.array_algos.take._get_take_nd_function.func",
        "<builtin>.isinstance",
        "pandas.core.array_algos.take._take_preprocess_indexer_and_fill_value",
        "pandas.core.array_algos.take._get_take_nd_function"
    ],
    "pandas.core.array_algos.take._take_preprocess_indexer_and_fill_value": [
        "pandas.core.dtypes.cast.maybe_promote",
        "<builtin>.bool"
    ],
    "pandas.core.array_algos.take._get_take_nd_function": [
        "pandas.core.array_algos.take._get_take_nd_function_cached"
    ],
    "pandas.core.array_algos.take._get_take_nd_function_cached": [
        "<map>.get",
        "pandas.core.array_algos.take._convert_wrapper"
    ],
    "pandas.core.array_algos.take._get_take_nd_function.func": [
        "pandas.core.array_algos.take._take_nd_object"
    ],
    "pandas.core.array_algos.take._take_nd_object": [
        "<builtin>.slice",
        "<builtin>.tuple"
    ],
    "pandas.core.internals.array_manager.BaseArrayManager._make_na_array": [
        "pandas.core.internals.managers.make_na_array",
        "pandas.core.dtypes.cast.infer_dtype_from_scalar",
        "pandas.core.internals.array_manager.NullArrayProxy.__init__"
    ],
    "pandas.core.internals.array_manager.NullArrayProxy.__init__": [],
    "pandas.core.internals.managers.make_na_array": [
        "<builtin>.isinstance",
        "numpy.core.numeric.full",
        "typing.cast",
        "numpy.core.ones",
        "pandas.core.dtypes.common.is_1d_only_ea_dtype",
        "numpy.core.numeric.ones",
        "pandas._libs.tslibs.timestamps.Timestamp",
        "pandas.core.construction.ensure_wrapped_if_datetimelike"
    ],
    "pandas.core.internals.base.DataManager.reindex_indexer": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.internals.construction.mgr_to_mgr": [
        "<builtin>.isinstance",
        "pandas.core.internals.construction.arrays_to_mgr",
        "<map>.copy",
        "pandas.core.internals.array_manager.SingleArrayManager.__init__",
        "pandas.core.internals.managers.SingleBlockManager.internal_values",
        "pandas.core.internals.managers.BlockManager.iget_values",
        "<builtin>.len",
        "pandas.core.internals.array_manager.ArrayManager.__init__",
        "<builtin>.range",
        "pandas.core.internals.array_manager.ArrayManager.iget_values",
        "pandas.core.internals.array_manager.SingleArrayManager.internal_values",
        "<builtin>.ValueError",
        "copy",
        "pandas.core.internals.managers.SingleBlockManager.from_array"
    ],
    "pandas.core.internals.managers.SingleBlockManager.internal_values": [],
    "pandas.core.internals.array_manager.SingleArrayManager.internal_values": [],
    "pandas.core.internals.array_manager.ArrayManager.iget_values": [],
    "pandas.core.internals.managers.BlockManager.iget_values": []
}