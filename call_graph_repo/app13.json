{"handler": [], "numpy": ["numpy.core.getlimits._register_known_types", "<builtin>.len", "numpy._pytesttester.PytestTester.__init__", "warnings.catch_warnings.__init__", "<builtin>.str", "<builtin>.ImportError", "extend", "numpy._sanity_check", "<builtin>.RuntimeError", "<builtin>.int", "<map>.update", "warnings.filterwarnings", "<builtin>.tuple", "numpy._mac_os_check", "remove", "<builtin>.getattr"], "warnings": ["<builtin>.hasattr", "warnings.simplefilter", "warnings._processoptions", "warnings.filterwarnings"], "warnings._processoptions": ["warnings._setoption", "<builtin>.print"], "warnings._setoption": ["<builtin>.len", "re.escape", "<builtin>.int", "warnings._getcategory", "warnings._getaction", "warnings.filterwarnings"], "<builtin>.len": [], "warnings._getaction": [], "warnings._getcategory": ["<builtin>.issubclass", "<builtin>.__import__", "<builtin>.getattr"], "<builtin>.__import__": [], "<builtin>.getattr": [], "<builtin>.issubclass": [], "re": ["functools.lru_cache.decorating_function", "functools.lru_cache", "<builtin>.globals", "copyreg.pickle", "<builtin>.type", "sre_compile.compile", "<builtin>.chr"], "enum": ["<builtin>.object"], "types": ["types._cell_factory", "types._ag", "<builtin>.globals", "types._c", "<builtin>.type", "<builtin>.object", "types._g"], "<builtin>.type": [], "types._cell_factory": [], "types._g": [], "types._c": [], "types._ag": [], "<builtin>.object": [], "types._GeneratorWrapper": ["<builtin>.property"], "<builtin>.property": [], "<builtin>.globals": [], "enum.EnumMeta": ["<builtin>.classmethod", "<builtin>.property", "<builtin>.staticmethod"], "<builtin>.classmethod": [], "<builtin>.staticmethod": [], "enum.Enum": ["<builtin>.classmethod", "types.DynamicClassAttribute.__init__"], "types.DynamicClassAttribute.__init__": ["<builtin>.bool", "<builtin>.getattr"], "<builtin>.bool": [], "enum.Flag": ["<builtin>.classmethod"], "enum.IntFlag": ["<builtin>.classmethod"], "sre_compile": ["<builtin>.tuple"], "sre_parse": ["<builtin>.frozenset"], "sre_constants": ["sre_constants._makecodes"], "sre_constants._makecodes": ["<builtin>.globals", "<str>.split", "<builtin>.enumerate", "<str>.strip"], "<str>.strip": [], "<str>.split": [], "<builtin>.enumerate": [], "<builtin>.frozenset": [], "sre_parse.State": ["<builtin>.property"], "sre_parse.Tokenizer": ["<builtin>.property"], "<builtin>.tuple": [], "functools": ["<builtin>.object", "collections.namedtuple"], "abc": [], "_py_abc": [], "_weakrefset": [], "_weakrefset.WeakSet": ["<builtin>.classmethod"], "collections": [], "keyword": ["<builtin>.frozenset"], "operator": [], "reprlib": ["reprlib.Repr.__init__"], "reprlib.Repr.__init__": [], "collections.OrderedDict": ["<builtin>.classmethod", "<builtin>.object", "reprlib.recursive_repr", "reprlib.recursive_repr.decorating_function"], "reprlib.recursive_repr": [], "reprlib.recursive_repr.decorating_function": ["<builtin>.set", "<builtin>.getattr"], "<builtin>.set": [], "collections.Counter": ["<builtin>.classmethod"], "collections.ChainMap": ["<builtin>.classmethod", "reprlib.recursive_repr", "reprlib.recursive_repr.decorating_function", "<builtin>.property"], "collections.UserDict": ["<builtin>.classmethod"], "functools.partial": ["reprlib.recursive_repr", "reprlib.recursive_repr.decorating_function"], "functools.partialmethod": ["<builtin>.classmethod", "<builtin>.property"], "collections.namedtuple": ["<builtin>.isinstance", "<builtin>.enumerate", "<str>.split", "<str>.join", "<builtin>.tuple", "<builtin>.list", "<builtin>.zip", "<builtin>.map", "<builtin>.len", "collections.<lambda1>", "<builtin>.eval", "<builtin>.classmethod", "<builtin>.dict", "<builtin>.str", "<builtin>.reversed", "<str>.replace", "<builtin>.type", "<builtin>.ValueError", "<builtin>.set", "<builtin>.TypeError"], "<builtin>.isinstance": [], "<builtin>.map": [], "<builtin>.list": [], "<builtin>.str": [], "<builtin>.TypeError": [], "<builtin>.ValueError": [], "<builtin>.reversed": [], "<builtin>.zip": [], "<builtin>.dict": [], "<str>.join": [], "<builtin>.eval": [], "collections.<lambda1>": ["operator.itemgetter.__init__", "<builtin>.property"], "operator.itemgetter.__init__": [], "functools.singledispatchmethod": ["<builtin>.property"], "functools.cached_property": ["<builtin>.classmethod"], "<builtin>.chr": [], "sre_compile.compile": ["sre_compile._code", "<builtin>.print", "sre_parse.parse", "sre_compile.isstring", "sre_compile.dis", "<builtin>.tuple", "<map>.items"], "sre_compile.isstring": ["<builtin>.isinstance"], "sre_parse.parse": ["sre_parse.Tokenizer.error", "sre_parse.SubPattern.dump", "sre_parse.fix_flags", "sre_parse.Tokenizer.seek", "sre_parse.State.__init__", "sre_constants.error.__init__", "sre_parse.Tokenizer.__init__", "sre_parse._parse_sub"], "sre_parse.Tokenizer.__init__": ["<builtin>.isinstance", "sre_parse.Tokenizer.__next", "<builtin>.str"], "sre_parse.Tokenizer.__next": ["sre_parse.Tokenizer.error", "<builtin>.len"], "sre_parse.Tokenizer.error": ["sre_parse.Tokenizer.error", "sre_parse.Tokenizer.tell"], "sre_parse.Tokenizer.tell": ["<builtin>.len"], "sre_parse.State.__init__": [], "sre_parse._parse_sub": ["", "<builtin>.len", "sre_parse.SubPattern.__init__", "sre_parse.SubPattern.append", "extend", "sre_parse.Tokenizer.tell", "sre_parse.Tokenizer.match", "append"], "sre_parse.Tokenizer.match": ["sre_parse.Tokenizer.__next"], "sre_parse.SubPattern.__init__": [], "extend": [], "append": [], "sre_parse.SubPattern.append": ["append"], "sre_parse.Tokenizer.seek": ["sre_parse.Tokenizer.__next"], "sre_parse.fix_flags": ["<builtin>.isinstance", "<builtin>.ValueError"], "sre_constants.error.__init__": ["<builtin>.super", "<builtin>.isinstance", "<str>.count", "<str>.rfind"], "<str>.count": [], "<str>.rfind": [], "<builtin>.super": [], "sre_parse.SubPattern.dump": ["<builtin>.enumerate", "<builtin>.isinstance", "<builtin>.print", "<builtin>.str"], "<builtin>.print": [], "sre_compile._code": ["sre_compile._compile_info", "append", "sre_compile._compile"], "sre_compile._compile_info": ["", "<builtin>.len", "sre_compile._compile_charset", "sre_compile._get_charset_prefix", "extend", "sre_compile._optimize_charset", "sre_compile._get_literal_prefix", "sre_parse.SubPattern.getwidth"], "sre_parse.SubPattern.getwidth": ["<builtin>.min", "<builtin>.max"], "<builtin>.min": [], "<builtin>.max": [], "sre_compile._get_literal_prefix": ["", "<builtin>.len", "sre_compile._combine_flags", "sre_compile._get_iscased", "extend", "sre_compile._get_literal_prefix"], "sre_compile._get_iscased": [], "sre_compile._combine_flags": [], "sre_compile._get_charset_prefix": ["", "<builtin>.any", "sre_compile._get_iscased", "sre_compile._combine_flags", "<builtin>.range", "<builtin>.map"], "<builtin>.range": [], "<builtin>.any": [], "sre_compile._optimize_charset": ["sre_compile._bytes_to_codes", "<builtin>.len", "<builtin>.bytearray", "<builtin>.any", "<builtin>.bytes", "sre_compile._mk_bitmap", "append", "<builtin>.range", "<builtin>.map"], "<builtin>.bytearray": [], "sre_compile._mk_bitmap": ["<builtin>.len", "<builtin>.range"], "<builtin>.bytes": [], "sre_compile._bytes_to_codes": ["<builtin>.len", "<builtin>.memoryview"], "<builtin>.memoryview": [], "sre_compile._compile_charset": ["", "extend", "sre_constants.error.__init__"], "sre_compile._compile": ["", "sre_compile._compile_charset", "sre_compile._compile", "sre_compile._optimize_charset", "sre_constants.error.__init__", "sre_compile._simple", "sre_compile._combine_flags"], "sre_compile._simple": ["sre_compile._simple", "<builtin>.len"], "sre_compile.dis": ["<builtin>.len", "<builtin>.set", "sre_compile.dis.dis_", "<builtin>.str"], "sre_compile.dis.dis_": ["<builtin>.str", "sre_compile.dis.dis_.print_", "sre_compile.dis.dis_.print_2", "<builtin>.ValueError", "<builtin>.bin", "sre_compile.dis.dis_", "sre_compile._hex_code", "<builtin>.list", "<builtin>.chr", "<builtin>.range", "<builtin>.map"], "<builtin>.bin": [], "sre_compile.dis.dis_.print_": ["<builtin>.print"], "sre_compile.dis.dis_.print_2": ["<builtin>.print"], "sre_compile._hex_code": [], "<map>.items": [], "functools.lru_cache": ["<builtin>.isinstance", "functools.update_wrapper", "functools._lru_cache_wrapper", "<builtin>.callable", "<builtin>.TypeError"], "<builtin>.callable": [], "functools._lru_cache_wrapper": ["<builtin>.object"], "functools.update_wrapper": ["<builtin>.getattr"], "functools.lru_cache.decorating_function": ["functools._lru_cache_wrapper", "functools.update_wrapper"], "copyreg": ["<builtin>.type", "copyreg.pickle"], "copyreg.pickle": ["<builtin>.callable", "<builtin>.TypeError", "copyreg.constructor"], "copyreg.constructor": ["<builtin>.callable", "<builtin>.TypeError"], "re.escape": ["<builtin>.isinstance", "<builtin>.str"], "<builtin>.int": [], "warnings.filterwarnings": ["<builtin>.isinstance", "warnings._add_filter", "re.compile", "<builtin>.issubclass"], "re.compile": ["re._compile"], "re._compile": ["<builtin>.len", "<builtin>.isinstance", "<builtin>.next", "sre_compile.isstring", "<builtin>.ValueError", "<builtin>.type", "sre_compile.compile", "<builtin>.TypeError", "<builtin>.iter"], "<builtin>.iter": [], "<builtin>.next": [], "warnings._add_filter": ["warnings._filters_mutated", "append", "insert", "remove"], "remove": [], "insert": [], "warnings._filters_mutated": [], "<builtin>.hasattr": [], "warnings.simplefilter": ["<builtin>.isinstance", "warnings._add_filter"], "numpy._globals": ["<builtin>.RuntimeError", "<builtin>.globals"], "<builtin>.RuntimeError": [], "numpy.__config__": ["genericpath.isdir", "ntpath.join", "os.add_dll_directory", "posixpath.dirname", "ntpath.dirname", "posixpath.join"], "os": ["<builtin>.globals", "os._exists", "os._fscodec", "os._Environ.__init__", "extend", "<builtin>.ImportError", "<builtin>.type", "os._add", "os._createenviron", "<builtin>.set", "append"], "stat": [], "<builtin>.ImportError": [], "ntpath": ["<builtin>.hasattr"], "genericpath": [], "posixpath": [], "os._exists": ["<builtin>.globals"], "os._add": [], "os._createenviron": ["os._createenviron.encodekey", "os._Environ.__init__"], "os._createenviron.encodekey": ["os._createenviron.encode"], "os._createenviron.encode": ["<builtin>.type", "<builtin>.isinstance", "<builtin>.TypeError"], "os._Environ.__init__": [], "os._fscodec": [], "os.PathLike": ["<builtin>.classmethod", "abc.abstractmethod"], "abc.abstractmethod": [], "ntpath.dirname": ["ntpath.split"], "ntpath.split": ["ntpath.splitdrive", "<builtin>.len", "ntpath._get_bothseps", "os._fspath"], "os._fspath": ["<builtin>.isinstance", "<builtin>.hasattr", "<str>.format", "<builtin>.type", "<builtin>.TypeError"], "<str>.format": [], "ntpath._get_bothseps": ["<builtin>.isinstance"], "ntpath.splitdrive": ["<builtin>.len", "<builtin>.isinstance", "os._fspath"], "posixpath.dirname": ["<builtin>.len", "os._fspath", "posixpath._get_sep"], "posixpath._get_sep": ["<builtin>.isinstance"], "ntpath.join": ["<builtin>.isinstance", "os._fspath", "ntpath.splitdrive", "genericpath._check_arg_types", "<builtin>.map"], "genericpath._check_arg_types": ["<builtin>.isinstance", "<builtin>.TypeError"], "posixpath.join": ["<builtin>.map", "os._fspath", "genericpath._check_arg_types", "posixpath._get_sep"], "genericpath.isdir": ["stat.S_ISDIR"], "stat.S_ISDIR": ["stat.S_IFMT"], "stat.S_IFMT": [], "os.add_dll_directory": ["os._AddedDllDirectory.__init__"], "os._AddedDllDirectory.__init__": [], "numpy._distributor_init": [], "numpy.core": ["<builtin>.ImportError", "<builtin>.hasattr", "copyreg.pickle", "<builtin>.type", "numpy._pytesttester.PytestTester.__init__", "append"], "numpy.version": ["numpy._version.get_versions"], "__future__": ["__future__._Feature.__init__"], "__future__._Feature.__init__": [], "numpy._version": [], "json": [], "codecs": ["<builtin>.SystemError"], "<builtin>.SystemError": [], "encodings": [], "numpy._version.get_versions": ["json.loads"], "json.loads": ["json.detect_encoding", "<builtin>.isinstance", "<builtin>.TypeError", "<str>.startswith"], "json.detect_encoding": ["<builtin>.len"], "<str>.startswith": [], "numpy.core.multiarray": [], "numpy.core.overrides": ["<builtin>.bool", "collections.namedtuple", "<builtin>.int"], "numpy.compat._inspect": [], "numpy.core.umath": [], "numpy.core.numerictypes": ["numpy.core.overrides.set_module", "<builtin>.sorted", "<builtin>.len", "<builtin>.globals", "numpy.core.overrides.set_module.decorator", "numpy.core.numerictypes._register_types", "<builtin>.tuple", "numpy.core.numerictypes._construct_lookups", "append"], "numbers": [], "numbers.Complex": ["abc.abstractmethod", "<builtin>.property"], "numbers.Real": ["abc.abstractmethod", "<builtin>.property"], "numbers.Rational": ["abc.abstractmethod", "<builtin>.property"], "numbers.Integral": ["abc.abstractmethod", "<builtin>.property"], "numpy.core._string_helpers": ["<builtin>.chr", "<builtin>.range"], "numpy.core._type_aliases": ["numpy.core._string_helpers.english_lower", "<builtin>.isinstance", "numpy.core._type_aliases._set_array_types", "numpy.core._type_aliases._set_up_aliases", "numpy.core._type_aliases._add_aliases", "<map>.items", "<builtin>.list", "numpy.core._type_aliases._add_types", "numpy.core._type_aliases._add_integer_aliases"], "numpy.compat": ["extend"], "numpy.compat._pep440": ["re.compile", "collections.namedtuple"], "numpy.compat._pep440.LegacyVersion": ["<builtin>.property"], "numpy.compat._pep440.Version": ["re.compile", "<builtin>.property"], "numpy.compat.py3k": [], "pathlib": ["functools.lru_cache.decorating_function", "<builtin>.hasattr", "functools.lru_cache"], "fnmatch": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "io": [], "urllib.parse": ["urllib.parse._fix_result_transcoding", "re.compile", "collections.namedtuple", "<builtin>.frozenset", "<builtin>.bytes"], "urllib.parse._NetlocResultMixinBase": ["<builtin>.classmethod", "<builtin>.property"], "urllib.parse._NetlocResultMixinStr": ["<builtin>.property"], "urllib.parse._NetlocResultMixinBytes": ["<builtin>.property"], "urllib.parse._fix_result_transcoding": [], "pathlib._WindowsFlavour": ["<builtin>.set"], "pathlib._NormalAccessor": ["<builtin>.hasattr", "<builtin>.staticmethod"], "pathlib.PurePath": ["<builtin>.classmethod", "<builtin>.property", "operator.attrgetter.__init__"], "operator.attrgetter.__init__": ["<builtin>.isinstance", "<str>.split", "<builtin>.tuple", "<builtin>.TypeError", "<builtin>.map"], "pathlib.Path": ["<builtin>.classmethod"], "pickle": ["extend", "append"], "struct": [], "_compat_pickle": ["<map>.update", "<builtin>.dict", "<map>.items", "<builtin>.len"], "<map>.update": [], "pickle._Pickler": ["<builtin>.type"], "numpy.core._dtype": [], "numpy.core._string_helpers.english_lower": [], "numpy.core._type_aliases._add_types": ["<map>.items"], "numpy.core._type_aliases._add_aliases": ["numpy.core._type_aliases.bitname", "<map>.items"], "numpy.core._type_aliases.bitname": ["numpy.core._dtype._kind_name", "numpy.core._type_aliases._bits_of"], "numpy.core._type_aliases._bits_of": ["<builtin>.ValueError", "<builtin>.next", "<map>.values"], "<map>.values": [], "numpy.core._dtype._kind_name": ["<builtin>.RuntimeError"], "numpy.core._type_aliases._add_integer_aliases": ["<builtin>.zip", "<builtin>.set"], "numpy.core._type_aliases._set_up_aliases": [], "numpy.core._type_aliases._set_array_types": ["<builtin>.len", "numpy.core._type_aliases._add_array_type"], "numpy.core._type_aliases._add_array_type": [], "numpy.core.overrides.set_module": [], "numpy.core.overrides.set_module.decorator": [], "numpy.core.numerictypes._construct_lookups": ["<builtin>.len"], "<builtin>.sorted": [], "numpy.core.numerictypes._register_types": [], "numpy.core.numeric": ["numpy.core.overrides.set_module", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.set_array_function_like_doc", "<builtin>.type", "numpy.core.numeric.extend_all"], "numpy.core.shape_base": ["<builtin>.getattr"], "numpy.core.fromnumeric": [], "numpy.core._methods": ["<map>.update"], "contextlib": [], "contextlib.AbstractContextManager": ["<builtin>.classmethod", "abc.abstractmethod"], "contextlib.AbstractAsyncContextManager": ["<builtin>.classmethod", "abc.abstractmethod"], "contextlib._BaseExitStack": ["<builtin>.staticmethod"], "contextlib.AsyncExitStack": ["<builtin>.staticmethod"], "numpy.core._exceptions": [], "numpy.core._exceptions._ArrayMemoryError": ["<builtin>.property", "<builtin>.staticmethod"], "numpy.core._ufunc_config": ["numpy.core.overrides.set_module", "numpy.core._ufunc_config._setdef", "numpy.core.overrides.set_module.decorator", "<map>.items"], "collections.abc": [], "numpy.core._ufunc_config._setdef": [], "numpy.core.overrides.set_array_function_like_doc": [], "numpy.core.arrayprint": ["numpy.core.overrides.set_module", "contextlib.contextmanager", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.set_module.decorator", "<builtin>.issubclass", "numpy.core.arrayprint._recursive_guard.decorating_function", "numpy.core.overrides.array_function_dispatch", "numpy.core.arrayprint._recursive_guard", "append", "<builtin>.getattr"], "contextlib.contextmanager": ["functools.wraps"], "functools.wraps": [], "numpy.core.arrayprint._recursive_guard": [], "numpy.core.arrayprint._recursive_guard.decorating_function": ["<builtin>.set", "functools.wraps"], "numpy.core.overrides.array_function_dispatch": [], "numpy.core.overrides.array_function_dispatch.decorator": [], "numpy.core.arrayprint.StructuredVoidFormat": ["<builtin>.classmethod"], "numpy.core._asarray": ["numpy.core.overrides.set_module", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.set_array_function_like_doc", "numpy.core.overrides.array_function_dispatch"], "numpy.core.numeric.extend_all": ["<builtin>.set", "<builtin>.getattr"], "numpy.core.defchararray": ["numpy.core.overrides.set_module", "numpy.core.overrides.set_module.decorator"], "numpy.core.records": ["numpy.core.overrides.set_module", "numpy.core.overrides.set_module.decorator"], "numpy.core.memmap": [], "numpy.core.function_base": [], "numpy.core._machar": [], "numpy.core.getlimits": ["<builtin>.dict"], "numpy.core.getlimits.MachArLike": ["<builtin>.property"], "numpy.core.getlimits.finfo": ["<builtin>.property"], "numpy.core.getlimits.iinfo": ["<builtin>.property"], "numpy.core.einsumfunc": ["numpy.core.overrides.array_function_dispatch.decorator", "<builtin>.set", "numpy.core.overrides.array_function_dispatch"], "numpy.core._add_newdocs": ["numpy.core._add_newdocs.refer_to_array_attribute", "<str>.replace", "numpy.core.function_base.add_newdoc"], "numpy.core.function_base.add_newdoc": ["<builtin>.isinstance", "<builtin>.globals", "<str>.strip", "numpy.core.function_base._add_docstring", "<builtin>.__import__", "<builtin>.getattr"], "numpy.core.function_base._add_docstring": ["warnings.warn", "numpy.core.function_base._needs_add_docstring"], "numpy.core.function_base._needs_add_docstring": ["<builtin>.isinstance"], "warnings.warn": ["<builtin>.isinstance", "warnings._is_internal_frame", "warnings.warn_explicit", "warnings._next_external_frame", "<builtin>.type", "<builtin>.issubclass", "<builtin>.TypeError", "<builtin>.range"], "warnings._is_internal_frame": [], "warnings._next_external_frame": ["warnings._is_internal_frame"], "warnings.warn_explicit": ["warnings._showwarnmsg", "<builtin>.isinstance", "<map>.get", "<builtin>.str", "<builtin>.RuntimeError", "linecache.getlines", "<builtin>.int", "<map>.clear", "<str>.lower", "warnings.WarningMessage.__init__", "<builtin>.issubclass"], "<str>.lower": [], "<map>.get": [], "<map>.clear": [], "linecache": [], "tokenize": ["<builtin>.any", "re.compile", "functools.lru_cache", "tokenize.group", "collections.namedtuple", "tokenize.maybe", "<builtin>.set", "<builtin>.sorted", "tokenize._all_string_prefixes", "<builtin>.map"], "token": ["extend", "<builtin>.isinstance", "<builtin>.globals"], "<str>.replace": [], "tokenize.TokenInfo": ["<builtin>.property"], "tokenize.maybe": ["tokenize.group"], "tokenize.group": [], "tokenize._all_string_prefixes": [], "linecache.getlines": ["linecache.updatecache", "<builtin>.len", "linecache.clearcache"], "linecache.updatecache": ["<builtin>.len", "<str>.endswith", "<map>.pop", "ntpath.isabs", "ntpath.join", "<str>.startswith", "linecache.lazycache", "posixpath.join", "tokenize.open", "posixpath.isabs"], "<map>.pop": [], "<str>.endswith": [], "linecache.lazycache": ["<builtin>.len", "<str>.endswith", "<builtin>.getattr", "<str>.startswith"], "ntpath.isabs": ["<builtin>.len", "<builtin>.isinstance", "os._fspath", "ntpath.splitdrive", "ntpath._get_bothseps"], "posixpath.isabs": ["os._fspath", "posixpath._get_sep"], "tokenize.open": ["tokenize.detect_encoding"], "tokenize.detect_encoding": ["tokenize.detect_encoding.read_or_stop", "tokenize.detect_encoding.find_cookie"], "tokenize.detect_encoding.read_or_stop": [], "tokenize.detect_encoding.find_cookie": ["<builtin>.SyntaxError", "tokenize._get_normal_name"], "<builtin>.SyntaxError": [], "tokenize._get_normal_name": [], "linecache.clearcache": ["<map>.clear"], "warnings.WarningMessage.__init__": [], "warnings._showwarnmsg": ["warnings._showwarnmsg_impl"], "warnings._showwarnmsg_impl": ["warnings._formatwarnmsg"], "warnings._formatwarnmsg": ["warnings._formatwarnmsg_impl"], "warnings._formatwarnmsg_impl": ["linecache.getline"], "linecache.getline": ["<builtin>.len", "linecache.getlines"], "tracemalloc": [], "tracemalloc.Frame": ["<builtin>.property"], "tracemalloc.Traceback": ["<builtin>.property"], "tracemalloc.Trace": ["<builtin>.property"], "tracemalloc.Filter": ["<builtin>.property"], "tracemalloc.DomainFilter": ["<builtin>.property"], "tracemalloc.Snapshot": ["<builtin>.staticmethod"], "numpy.core._add_newdocs.refer_to_array_attribute": [], "numpy.core._add_newdocs_scalars": ["numpy.core._add_newdocs_scalars.numeric_type_aliases", "numpy.core.function_base.add_newdoc", "numpy.core._add_newdocs_scalars.add_newdoc_for_scalar_type"], "platform": ["collections.namedtuple", "re.compile"], "subprocess": ["<builtin>.hasattr", "subprocess._use_posix_spawn", "<builtin>.getattr"], "signal": ["signal._wraps.decorator", "<builtin>.globals", "signal._wraps"], "signal._wraps": [], "signal._wraps.decorator": [], "threading": ["threading._MainThread.__init__", "<builtin>.hasattr", "collections.namedtuple", "threading.RLock", "<builtin>.set", "append", "_weakrefset.WeakSet.__init__"], "threading.Barrier": ["<builtin>.property"], "threading.RLock": ["threading._RLock.__init__"], "threading._RLock.__init__": [], "_weakrefset.WeakSet.__init__": ["<builtin>.set", "_weakrefset.WeakSet.update"], "_weakrefset.WeakSet.update": ["_weakrefset.WeakSet._commit_removals", "_weakrefset.WeakSet.add"], "_weakrefset.WeakSet._commit_removals": [], "_weakrefset.WeakSet.add": ["_weakrefset.WeakSet._commit_removals"], "threading.Thread": ["<builtin>.property"], "traceback": [], "traceback.FrameSummary": ["<builtin>.property"], "traceback.StackSummary": ["<builtin>.classmethod"], "traceback.TracebackException": ["<builtin>.classmethod"], "threading._MainThread.__init__": ["threading.Thread.__init__", "threading.Thread._set_ident", "threading.Thread._set_tstate_lock", "threading.Thread._set_native_id", "threading.Event.set"], "threading.Thread.__init__": ["_weakrefset.WeakSet.add", "threading.current_thread", "<builtin>.str", "threading._newname", "threading._make_invoke_excepthook", "threading.Event.__init__"], "threading._newname": [], "threading.current_thread": ["threading._DummyThread.__init__"], "threading._DummyThread.__init__": ["threading.Thread.__init__", "threading.Thread._set_ident", "threading._newname", "threading.Thread._set_native_id"], "threading.Thread._set_ident": [], "threading.Thread._set_native_id": [], "threading.Event.__init__": ["threading.Condition.__init__"], "threading.Condition.__init__": ["threading.RLock"], "threading._make_invoke_excepthook": ["<builtin>.RuntimeError"], "threading.Thread._set_tstate_lock": [], "threading.Event.set": [], "_threading_local": ["contextlib.contextmanager"], "weakref": [], "weakref.finalize": ["<builtin>.classmethod", "<builtin>.property"], "selectors": ["<builtin>.hasattr", "selectors._can_use", "collections.namedtuple"], "selectors.BaseSelector": ["abc.abstractmethod"], "selectors._can_use": ["<builtin>.getattr"], "subprocess.CalledProcessError": ["<builtin>.property"], "subprocess.TimeoutExpired": ["<builtin>.property"], "subprocess.CompletedProcess": ["<builtin>.classmethod"], "subprocess._use_posix_spawn": ["<builtin>.len", "<builtin>.hasattr", "<builtin>.tuple", "<builtin>.map"], "subprocess.Popen": ["<builtin>.classmethod", "<builtin>.property"], "platform._Processor": ["<builtin>.classmethod"], "platform.uname_result": ["functools.cached_property.__init__", "<builtin>.classmethod"], "functools.cached_property.__init__": [], "numpy.core._add_newdocs_scalars.numeric_type_aliases": ["numpy.core._add_newdocs_scalars.numeric_type_aliases.type_aliases_gen", "<builtin>.list"], "numpy.core._add_newdocs_scalars.numeric_type_aliases.type_aliases_gen": ["<builtin>.getattr"], "numpy.core._add_newdocs_scalars.add_newdoc_for_scalar_type": ["<str>.strip", "numpy.core.function_base.add_newdoc", "platform.system", "platform.machine", "<builtin>.getattr"], "platform.system": ["platform.uname"], "platform.uname": ["platform._syscmd_ver", "<builtin>.any", "platform._get_machine_win32", "platform.win32_ver", "platform._node", "platform.java_ver", "<builtin>.map"], "platform._node": [], "socket": ["extend", "<builtin>.hasattr", "<builtin>.object", "append", "<builtin>.getattr"], "socket.socket": ["<builtin>.hasattr", "<builtin>.property"], "socket.SocketIO": ["<builtin>.property"], "platform.win32_ver": ["<builtin>.map", "platform._syscmd_ver", "<str>.split", "<map>.get", "<builtin>.getattr"], "platform._syscmd_ver": ["platform._norm_version", "subprocess.check_output"], "subprocess.check_output": ["<builtin>.ValueError", "subprocess.run"], "subprocess.run": ["subprocess.Popen.__exit__", "subprocess.Popen.communicate", "subprocess.CalledProcessError.__init__", "subprocess.CompletedProcess.__init__", "<builtin>.ValueError", "subprocess.Popen.wait", "subprocess.Popen.poll", "subprocess.Popen.__init__", "subprocess.Popen.kill", "subprocess.Popen.__enter__"], "subprocess.Popen.__init__": ["<builtin>.isinstance", "<builtin>.bool", "<builtin>.hasattr", "<builtin>.ValueError", "subprocess._cleanup", "warnings.warn", "subprocess.Popen._get_handles", "<builtin>.type", "<builtin>.filter", "subprocess.Popen._execute_child", "append", "<builtin>.TypeError"], "subprocess._cleanup": ["remove"], "subprocess.Popen._get_handles": ["<builtin>.isinstance", "subprocess.Popen._get_devnull", "<builtin>.hasattr"], "subprocess.Popen._get_devnull": ["<builtin>.hasattr"], "subprocess.Popen._execute_child": ["<builtin>.isinstance", "subprocess.Popen._posix_spawn", "ntpath.join", "<builtin>.tuple", "posixpath.join", "<builtin>.list", "<builtin>.map", "<builtin>.len", "<builtin>.bytearray", "subprocess.Popen._handle_exitstatus", "ntpath.dirname", "<builtin>.bytes", "<builtin>.sorted", "<builtin>.hasattr", "<builtin>.int", "posixpath.dirname", "subprocess.Popen._close_pipe_fds", "<builtin>.getattr", "<builtin>.ValueError", "os.get_exec_path", "<builtin>.issubclass", "<builtin>.set", "append", "<builtin>.TypeError"], "subprocess.Popen._posix_spawn": ["append", "subprocess.Popen._close_pipe_fds", "<builtin>.getattr"], "subprocess.Popen._close_pipe_fds": ["<builtin>.getattr"], "os.get_exec_path": ["<str>.split", "warnings.catch_warnings.__init__"], "warnings.catch_warnings.__init__": [], "subprocess.Popen._handle_exitstatus": [], "<builtin>.filter": [], "subprocess.Popen.__enter__": [], "subprocess.Popen.__exit__": [], "subprocess.Popen.communicate": ["<builtin>.min", "subprocess.Popen._wait", "subprocess.Popen._communicate", "<builtin>.ValueError", "subprocess.Popen._stdin_write", "subprocess.Popen.wait", "subprocess.Popen._remaining_time"], "subprocess.Popen._communicate": ["<builtin>.RuntimeError", "subprocess.Popen._save_input", "subprocess.Popen._check_timeout", "subprocess.Popen._translate_newlines", "subprocess.Popen.wait", "selectors.SelectSelector.__init__", "<builtin>.memoryview", "subprocess.Popen._remaining_time"], "subprocess.Popen._save_input": [], "selectors.SelectSelector.__init__": ["<builtin>.super", "<builtin>.set"], "subprocess.Popen._remaining_time": [], "subprocess.Popen._check_timeout": ["subprocess.TimeoutExpired.__init__"], "subprocess.TimeoutExpired.__init__": [], "subprocess.Popen.wait": ["subprocess.Popen._wait", "<builtin>.min", "subprocess.Popen._remaining_time"], "subprocess.Popen._wait": ["<builtin>.min", "subprocess.Popen._try_wait", "subprocess.Popen._handle_exitstatus", "subprocess.TimeoutExpired.__init__", "subprocess.Popen._remaining_time"], "subprocess.Popen._try_wait": [], "subprocess.Popen._translate_newlines": [], "subprocess.Popen._stdin_write": [], "subprocess.Popen.kill": ["subprocess.Popen.send_signal"], "subprocess.Popen.send_signal": ["subprocess.Popen.poll"], "subprocess.Popen.poll": ["subprocess.Popen._internal_poll"], "subprocess.Popen._internal_poll": ["subprocess.Popen._handle_exitstatus"], "subprocess.CalledProcessError.__init__": [], "subprocess.CompletedProcess.__init__": [], "platform._norm_version": ["<builtin>.list", "<str>.split", "<builtin>.map"], "platform._get_machine_win32": [], "platform.java_ver": ["platform._java_getprop"], "platform._java_getprop": [], "platform.machine": ["platform.uname"], "numpy.core._dtype_ctypes": [], "numpy.core._internal": ["platform.python_implementation", "<map>.keys", "re.compile"], "ast": ["<builtin>.type", "<builtin>.hasattr", "<builtin>.repr", "<builtin>.property"], "<builtin>.repr": [], "ast._Unparser": ["<builtin>.frozenset", "<builtin>.property", "contextlib.contextmanager"], "ctypes": ["ctypes.CFUNCTYPE", "ctypes.LibraryLoader.__init__", "<builtin>.Exception", "ctypes._check_size", "<builtin>.int", "ctypes.PYFUNCTYPE", "ctypes._reset_cache"], "<builtin>.Exception": [], "ctypes._check_size": ["<builtin>.SystemError"], "ctypes.LibraryLoader": ["<builtin>.classmethod"], "ctypes.LibraryLoader.__init__": [], "ctypes.CFUNCTYPE": ["<builtin>.ValueError"], "ctypes.PYFUNCTYPE": [], "ctypes._endian": ["<builtin>.type"], "ctypes._reset_cache": ["<map>.clear"], "platform.python_implementation": ["platform._sys_version"], "platform._sys_version": ["<builtin>.len", "<map>.get", "<builtin>.hasattr", "<builtin>.ValueError", "<builtin>.repr"], "numpy.core._internal._ctypes": ["<builtin>.property"], "<map>.keys": [], "numpy.core._internal._Stream": ["<builtin>.property"], "numpy._pytesttester": [], "numpy._pytesttester.PytestTester.__init__": [], "numpy.lib": ["numpy._pytesttester.PytestTester.__init__"], "numpy.lib.mixins": [], "numpy.lib.mixins.NDArrayOperatorsMixin": ["numpy.lib.mixins._binary_method", "numpy.lib.mixins._numeric_methods", "numpy.lib.mixins._reflected_binary_method", "numpy.lib.mixins._unary_method"], "numpy.lib.mixins._binary_method": [], "numpy.lib.mixins._numeric_methods": ["numpy.lib.mixins._binary_method", "numpy.lib.mixins._reflected_binary_method", "numpy.lib.mixins._inplace_binary_method"], "numpy.lib.mixins._reflected_binary_method": [], "numpy.lib.mixins._inplace_binary_method": [], "numpy.lib.mixins._unary_method": [], "numpy.lib.scimath": ["numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.array_function_dispatch"], "numpy.lib.type_check": ["numpy.core.overrides.set_module", "numpy.core.overrides.set_module.decorator"], "numpy.lib.ufunclike": ["numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.array_function_dispatch", "numpy.lib.ufunclike._deprecate_out_named_y"], "numpy.lib.ufunclike._deprecate_out_named_y": ["functools.wraps"], "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y": ["numpy.lib.ufunclike._fix_out_named_y", "numpy.lib.ufunclike._deprecate_out_named_y"], "numpy.lib.ufunclike._fix_out_named_y": ["functools.wraps"], "numpy.lib.index_tricks": ["numpy.core.overrides.set_module", "numpy.lib.index_tricks.MGridClass.__init__", "numpy.lib.index_tricks.CClass.__init__", "numpy.core.overrides.set_module.decorator", "numpy.lib.index_tricks.IndexExpression.__init__", "numpy.lib.index_tricks.OGridClass.__init__", "numpy.lib.index_tricks.RClass.__init__"], "numpy.matrixlib": ["numpy._pytesttester.PytestTester.__init__"], "numpy.matrixlib.defmatrix": ["numpy.core.overrides.set_module", "numpy.core.overrides.set_module.decorator"], "numpy.linalg": ["numpy._pytesttester.PytestTester.__init__"], "numpy.linalg.linalg": ["numpy.linalg.linalg._determine_error_states"], "numpy.lib.twodim_base": ["numpy.core.overrides.set_module", "numpy.core.getlimits.iinfo.__init__", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.set_array_function_like_doc"], "numpy.lib.stride_tricks": ["numpy.core.overrides.set_module", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.array_function_dispatch"], "numpy.core.getlimits.iinfo.__init__": ["<builtin>.type", "<builtin>.ValueError"], "numpy.linalg.linalg._determine_error_states": ["numpy.core._ufunc_config.errstate.__init__"], "numpy.core._ufunc_config.errstate.__init__": [], "numpy.matrixlib.defmatrix.matrix": ["<builtin>.property"], "numpy.lib.function_base": ["numpy.core.overrides.set_module", "numpy.core.overrides.set_module.decorator", "<builtin>.dict"], "numpy.lib.histograms": [], "numpy.lib.index_tricks.MGridClass.__init__": ["<builtin>.super"], "numpy.lib.index_tricks.OGridClass.__init__": ["<builtin>.super"], "numpy.lib.index_tricks.AxisConcatenator": ["<builtin>.staticmethod"], "numpy.lib.index_tricks.RClass.__init__": ["numpy.lib.index_tricks.AxisConcatenator.__init__"], "numpy.lib.index_tricks.AxisConcatenator.__init__": [], "numpy.lib.index_tricks.CClass.__init__": ["numpy.lib.index_tricks.AxisConcatenator.__init__"], "numpy.lib.index_tricks.IndexExpression.__init__": [], "numpy.lib.nanfunctions": [], "numpy.lib.shape_base": [], "numpy.lib.polynomial": ["warnings.simplefilter", "re.compile"], "numpy.lib.polynomial.poly1d": ["<builtin>.property"], "numpy.lib.utils": ["numpy.core.overrides.set_module", "numpy.core.overrides.set_module.decorator", "re.compile"], "textwrap": ["re.compile"], "textwrap.TextWrapper": ["re.compile", "<builtin>.ord", "re.escape"], "<builtin>.ord": [], "numpy.lib.arraysetops": [], "numpy.lib.npyio": ["numpy.core.overrides.set_module", "<builtin>.sorted", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.set_array_function_like_doc"], "numpy.lib.format": ["<builtin>.len"], "numpy.lib._datasource": ["numpy.lib._datasource._FileOpeners.__init__"], "numpy.lib._datasource._FileOpeners.__init__": [], "numpy.lib._iotools": [], "numpy.lib._iotools.NameValidator": ["<builtin>.set"], "numpy.lib._iotools.StringConverter": ["<builtin>.classmethod", "extend", "append"], "numpy.lib.arrayterator": [], "numpy.lib.arrayterator.Arrayterator": ["<builtin>.property"], "numpy.lib.arraypad": ["numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.array_function_dispatch"], "numpy.lib._version": [], "numpy.fft": ["copy", "numpy._pytesttester.PytestTester.__init__"], "numpy.fft._pocketfft": [], "numpy.fft.helper": ["numpy.core.overrides.set_module", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.array_function_dispatch"], "copy": [], "numpy.polynomial": ["numpy._pytesttester.PytestTester.__init__"], "numpy.polynomial.polynomial": [], "numpy.polynomial.polyutils": [], "numpy.polynomial._polybase": [], "numpy.polynomial._polybase.ABCPolyBase": ["<builtin>.classmethod", "abc.abstractmethod", "<builtin>.property", "<builtin>.staticmethod"], "numpy.polynomial.polynomial.Polynomial": ["<builtin>.classmethod", "<builtin>.staticmethod"], "numpy.polynomial.chebyshev": [], "numpy.polynomial.chebyshev.Chebyshev": ["<builtin>.classmethod", "<builtin>.staticmethod"], "numpy.polynomial.legendre": [], "numpy.polynomial.legendre.Legendre": ["<builtin>.staticmethod"], "numpy.polynomial.hermite": [], "numpy.polynomial.hermite.Hermite": ["<builtin>.staticmethod"], "numpy.polynomial.hermite_e": [], "numpy.polynomial.hermite_e.HermiteE": ["<builtin>.staticmethod"], "numpy.polynomial.laguerre": [], "numpy.polynomial.laguerre.Laguerre": ["<builtin>.staticmethod"], "numpy.random": ["numpy._pytesttester.PytestTester.__init__"], "numpy.random._pickle": [], "numpy.ctypeslib": ["numpy.core._internal._getintp_ctype", "numpy.ctypeslib._get_scalar_type_map"], "numpy.core._internal._getintp_ctype": ["numpy.core._internal.dummy_ctype.__init__"], "numpy.core._internal.dummy_ctype.__init__": [], "numpy.ctypeslib._ndptr": ["<builtin>.classmethod"], "numpy.ctypeslib._concrete_ndptr": ["<builtin>.property"], "numpy.ctypeslib._get_scalar_type_map": [], "numpy.ma": ["numpy._pytesttester.PytestTester.__init__"], "numpy.ma.core": ["numpy.ma.core._convert2ma.__init__", "numpy.ma.core._DomainCheckInterval.__init__", "<builtin>.dict", "textwrap.dedent", "numpy.ma.core.doc_note", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._frommethod.__init__", "<builtin>.complex", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._DomainGreater.__init__"], "inspect": ["<builtin>.globals", "<builtin>.hasattr", "collections.namedtuple", "<builtin>.object", "<builtin>.type", "<map>.items"], "dis": ["collections.namedtuple"], "opcode": ["opcode.jrel_op", "opcode.def_op", "opcode.jabs_op", "opcode.name_op", "append", "<builtin>.range"], "opcode.def_op": [], "opcode.name_op": ["append", "opcode.def_op"], "opcode.jrel_op": ["append", "opcode.def_op"], "opcode.jabs_op": ["append", "opcode.def_op"], "dis.Bytecode": ["<builtin>.classmethod"], "importlib.machinery": [], "inspect._ParameterKind": ["<builtin>.property"], "inspect.Parameter": ["<builtin>.property"], "inspect.BoundArguments": ["<builtin>.property"], "inspect.Signature": ["<builtin>.classmethod", "<builtin>.property"], "<builtin>.complex": [], "numpy.ma.core._MaskedUnaryOperation.__init__": ["<builtin>.super"], "numpy.ma.core._DomainGreaterEqual.__init__": [], "numpy.ma.core._DomainGreater.__init__": [], "numpy.ma.core._DomainTan.__init__": [], "numpy.ma.core._DomainCheckInterval.__init__": [], "numpy.ma.core._MaskedBinaryOperation.__init__": ["<builtin>.super"], "numpy.ma.core._DomainSafeDivide.__init__": [], "numpy.ma.core._DomainedBinaryOperation.__init__": ["<builtin>.super"], "numpy.ma.core._MaskedPrintOption.__init__": [], "textwrap.dedent": ["<builtin>.zip", "<builtin>.enumerate", "re.sub"], "re.sub": ["re._compile"], "numpy.ma.core.MaskedArray": ["numpy.ma.core._arraymethod", "<builtin>.property"], "numpy.ma.core._arraymethod": ["<builtin>.getattr"], "numpy.ma.core.mvoid": ["<builtin>.property"], "numpy.ma.core.MaskedConstant": ["<builtin>.classmethod"], "numpy.ma.core._frommethod.__init__": ["numpy.ma.core._frommethod.getdoc"], "numpy.ma.core._frommethod.getdoc": ["numpy.ma.core.get_object_signature", "<builtin>.getattr"], "numpy.ma.core.get_object_signature": ["numpy.compat._inspect.formatargspec", "numpy.compat._inspect.getargspec"], "numpy.compat._inspect.getargspec": ["numpy.compat._inspect.isfunction", "numpy.compat._inspect.ismethod", "numpy.compat._inspect.getargs", "<builtin>.TypeError"], "numpy.compat._inspect.ismethod": ["<builtin>.isinstance"], "numpy.compat._inspect.isfunction": ["<builtin>.isinstance"], "numpy.compat._inspect.getargs": ["numpy.compat._inspect.iscode", "<builtin>.TypeError", "<builtin>.range", "<builtin>.list"], "numpy.compat._inspect.iscode": ["<builtin>.isinstance"], "numpy.compat._inspect.formatargspec": ["<builtin>.len", "numpy.compat._inspect.<lambda3>", "numpy.compat._inspect.strseq", "append", "<builtin>.range"], "numpy.compat._inspect.strseq": ["<builtin>.type", "numpy.compat._inspect.strseq", "numpy.compat._inspect.joinseq"], "numpy.compat._inspect.joinseq": ["<builtin>.len"], "numpy.compat._inspect.<lambda3>": ["<builtin>.repr"], "numpy.ma.core._extrema_operation.__init__": ["<builtin>.super"], "numpy.ma.core.doc_note": ["re.split", "inspect.cleandoc"], "inspect.cleandoc": ["<str>.expandtabs"], "re.split": ["re._compile"], "<str>.expandtabs": [], "numpy.ma.core._convert2ma.__init__": ["numpy.ma.core._convert2ma.getdoc", "<builtin>.getattr"], "numpy.ma.core._convert2ma.getdoc": ["numpy.ma.core.get_object_signature", "numpy.ma.core._convert2ma._replace_return_type", "<builtin>.getattr"], "numpy.ma.core._convert2ma._replace_return_type": ["<builtin>.RuntimeError"], "numpy.ma.extras": ["numpy.ma.extras.mr_class.__init__", "numpy.ma.core.doc_note"], "numpy.ma.extras.MAxisConcatenator": ["<builtin>.classmethod", "<builtin>.staticmethod"], "numpy.ma.extras.mr_class.__init__": ["numpy.lib.index_tricks.AxisConcatenator.__init__"], "numpy.core.getlimits._register_known_types": ["numpy.core.getlimits.MachArLike.__init__", "numpy.core.getlimits._register_type", "numpy.core._ufunc_config.errstate.__init__"], "numpy.core.getlimits.MachArLike.__init__": ["numpy.core.getlimits.MachArLike._float_to_str", "numpy.core.getlimits.MachArLike._float_conv", "numpy.core.getlimits.MachArLike._float_to_float", "<builtin>.int"], "numpy.core.getlimits.MachArLike._float_to_float": ["numpy.core.getlimits._fr1", "numpy.core.getlimits.MachArLike._float_conv"], "numpy.core.getlimits.MachArLike._float_conv": [], "numpy.core.getlimits._fr1": [], "numpy.core.getlimits.MachArLike._float_to_str": ["numpy.core.getlimits._fr0"], "numpy.core.getlimits._fr0": [], "numpy.core.getlimits._register_type": [], "numpy._sanity_check": ["<builtin>.abs", "<builtin>.RuntimeError", "<builtin>.AssertionError"], "<builtin>.abs": [], "<builtin>.AssertionError": [], "numpy._mac_os_check": [], "handler.handle": ["<builtin>.print", "<builtin>.range"]}