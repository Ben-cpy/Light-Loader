{
    "handler": [
        "requests",
        "skimage.segmentation",
        "skimage.io",
        "numpy"
    ],
    "skimage.io": [
        "skimage.io.sift",
        "skimage.io._update_doc",
        "skimage.io._image_stack",
        "skimage.io.manage_plugins.reset_plugins",
        "skimage.io.manage_plugins",
        "skimage.io.collection"
    ],
    "skimage.io.manage_plugins": [
        "skimage.io.manage_plugins._clear_plugins",
        "skimage.io.manage_plugins._scan_plugins",
        "skimage.io.collection",
        "skimage.io.manage_plugins.find_available_plugins"
    ],
    "skimage.io.collection": [
        "numpy",
        "tifffile",
        "PIL.Image",
        "skimage.io.collection.MultiImage",
        "skimage.io.collection.ImageCollection"
    ],
    "numpy": [
        "extend",
        "<builtin>.getattr",
        "<builtin>.ImportError",
        "<map>.update",
        "numpy.version",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.compat",
        "numpy.matrixlib",
        "<builtin>.str",
        "numpy._globals",
        "<builtin>.int",
        "<builtin>.len",
        "numpy.random",
        "numpy.polynomial",
        "numpy.ctypeslib",
        "<builtin>.tuple",
        "numpy.ma",
        "numpy.lib",
        "numpy.fft",
        "numpy.__config__",
        "numpy._mac_os_check",
        "numpy.core",
        "<builtin>.RuntimeError",
        "numpy.core.getlimits._register_known_types",
        "remove",
        "_multiarray_umath._set_madvise_hugepage",
        "numpy._distributor_init",
        "numpy.linalg",
        "numpy._pytesttester",
        "numpy._sanity_check"
    ],
    "numpy._globals": [
        "numpy._globals.ModuleDeprecationWarning",
        "<builtin>.globals",
        "numpy._globals._CopyMode",
        "numpy._globals._NoValueType",
        "<builtin>.RuntimeError",
        "numpy._globals.VisibleDeprecationWarning"
    ],
    "<builtin>.globals": [],
    "<builtin>.RuntimeError": [],
    "numpy._globals.ModuleDeprecationWarning": [],
    "numpy._globals.VisibleDeprecationWarning": [],
    "numpy._globals._NoValueType": [],
    "numpy._globals._CopyMode": [],
    "numpy.__config__": [],
    "<builtin>.ImportError": [],
    "numpy._distributor_init": [],
    "numpy.core": [
        "numpy.core.einsumfunc",
        "numpy.core.fromnumeric",
        "<builtin>.hasattr",
        "<builtin>.ImportError",
        "numpy.core.numeric",
        "append",
        "numpy.version",
        "numpy.core.numerictypes",
        "numpy.core.defchararray",
        "numpy.core._internal",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.core._add_newdocs_scalars",
        "numpy.core._dtype_ctypes",
        "numpy.core.function_base",
        "numpy.core.getlimits",
        "numpy.core.records",
        "numpy.core._add_newdocs",
        "numpy.core._machar",
        "numpy.core.shape_base",
        "numpy.core.multiarray",
        "numpy.core._methods",
        "<str>.format",
        "numpy.core.umath",
        "numpy._pytesttester",
        "<builtin>.type",
        "numpy.core._dtype",
        "numpy.core.memmap"
    ],
    "numpy.version": [
        "numpy._version",
        "numpy._version.get_versions"
    ],
    "numpy._version": [],
    "numpy._version.get_versions": [],
    "append": [],
    "numpy.core.multiarray": [
        "numpy.core.overrides"
    ],
    "numpy.core.overrides": [
        "<builtin>.bool",
        "<builtin>.int",
        "numpy.core._multiarray_umath.add_docstring",
        "numpy.compat._inspect"
    ],
    "numpy.compat._inspect": [],
    "<builtin>.int": [],
    "<builtin>.bool": [],
    "numpy.core._multiarray_umath.add_docstring": [],
    "numpy.core.umath": [],
    "<builtin>.hasattr": [],
    "<str>.format": [],
    "numpy.core.numerictypes": [
        "<builtin>.sorted",
        "numpy.core.overrides.set_module",
        "append",
        "numpy.core.numerictypes._construct_lookups",
        "numpy.core._string_helpers",
        "<builtin>.globals",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module.decorator",
        "<builtin>.tuple",
        "numpy.core._type_aliases",
        "numpy.core.numerictypes._register_types",
        "numpy.compat",
        "<builtin>.len",
        "numpy.core._dtype",
        "numpy.core.multiarray",
        "numpy.core.numerictypes._typedict"
    ],
    "numpy.core._string_helpers": [
        "<str>.join",
        "<builtin>.chr",
        "<builtin>.range"
    ],
    "<builtin>.chr": [],
    "<builtin>.range": [],
    "<str>.join": [],
    "numpy.core._type_aliases": [
        "numpy.core._type_aliases._set_up_aliases",
        "numpy.core._type_aliases._set_array_types",
        "numpy.core._type_aliases._add_types",
        "numpy.core._type_aliases._add_integer_aliases",
        "<builtin>.isinstance",
        "numpy.core._string_helpers",
        "<map>.items",
        "numpy.core._type_aliases._add_aliases",
        "numpy.compat",
        "<builtin>.list",
        "numpy.core._dtype",
        "numpy.core.multiarray",
        "numpy.core._string_helpers.english_lower"
    ],
    "numpy.compat": [
        "numpy.compat._pep440",
        "extend",
        "numpy.compat.py3k",
        "numpy.compat._inspect"
    ],
    "numpy.compat._pep440": [
        "numpy.compat._pep440.LegacyVersion",
        "numpy.compat._pep440.Version",
        "numpy.compat._pep440._BaseVersion",
        "numpy.compat._pep440.NegativeInfinity",
        "numpy.compat._pep440.Infinity",
        "numpy.compat._pep440.InvalidVersion"
    ],
    "numpy.compat._pep440.Infinity": [],
    "numpy.compat._pep440.NegativeInfinity": [],
    "numpy.compat._pep440.InvalidVersion": [],
    "numpy.compat._pep440._BaseVersion": [],
    "numpy.compat._pep440.LegacyVersion": [
        "<builtin>.property"
    ],
    "<builtin>.property": [],
    "numpy.compat._pep440.Version": [
        "<builtin>.property"
    ],
    "numpy.compat.py3k": [
        "numpy.compat.py3k.contextlib_nullcontext"
    ],
    "numpy.compat.py3k.contextlib_nullcontext": [],
    "extend": [],
    "numpy.core._dtype": [
        "numpy"
    ],
    "numpy.core._string_helpers.english_lower": [],
    "<builtin>.isinstance": [],
    "<map>.items": [],
    "numpy.core._type_aliases._add_types": [
        "<map>.items"
    ],
    "<builtin>.list": [],
    "numpy.core._type_aliases._add_aliases": [
        "<map>.items",
        "numpy.core._type_aliases.bitname"
    ],
    "numpy.core._type_aliases.bitname": [
        "numpy.core._type_aliases._bits_of",
        "numpy.core._dtype._kind_name"
    ],
    "numpy.core._type_aliases._bits_of": [
        "<builtin>.ValueError",
        "<builtin>.next",
        "<map>.values"
    ],
    "<map>.values": [],
    "<builtin>.next": [],
    "<builtin>.ValueError": [],
    "numpy.core._dtype._kind_name": [
        "<builtin>.RuntimeError",
        "<str>.format"
    ],
    "numpy.core._type_aliases._add_integer_aliases": [
        "<builtin>.set",
        "<builtin>.zip"
    ],
    "<builtin>.set": [],
    "<builtin>.zip": [],
    "numpy.core._type_aliases._set_up_aliases": [],
    "numpy.core._type_aliases._set_array_types": [
        "numpy.core._type_aliases._add_array_type",
        "<builtin>.len"
    ],
    "numpy.core._type_aliases._add_array_type": [],
    "<builtin>.len": [],
    "numpy.core.overrides.set_module": [],
    "numpy.core.overrides.set_module.decorator": [],
    "numpy.core.numerictypes._typedict": [],
    "numpy.core.numerictypes._construct_lookups": [
        "<builtin>.len"
    ],
    "<builtin>.sorted": [],
    "<builtin>.tuple": [],
    "numpy.core.numerictypes._register_types": [],
    "numpy.core.numeric": [
        "numpy.core.arrayprint",
        "numpy",
        "numpy.core.numeric.ComplexWarning",
        "numpy.core.overrides.set_module",
        "numpy.core.umath",
        "numpy.core._ufunc_config",
        "numpy.core.fromnumeric",
        "numpy.core.numerictypes",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.numeric.extend_all",
        "numpy.core.shape_base",
        "numpy.core._exceptions",
        "<builtin>.type",
        "numpy.core.overrides.set_array_function_like_doc",
        "numpy.core.multiarray",
        "numpy.core._asarray"
    ],
    "numpy.core.shape_base": [
        "numpy.core.numeric",
        "<builtin>.getattr",
        "numpy.core.fromnumeric",
        "numpy.core.overrides",
        "numpy.core.multiarray"
    ],
    "numpy.core.fromnumeric": [
        "numpy",
        "numpy.core.umath",
        "numpy.core.numerictypes",
        "numpy.core.overrides",
        "numpy.core.multiarray",
        "numpy.core._methods"
    ],
    "numpy.core._methods": [
        "<map>.update",
        "numpy.core.umath",
        "numpy.core.numerictypes",
        "numpy.core._exceptions",
        "numpy.compat",
        "numpy.core.multiarray",
        "numpy._globals"
    ],
    "numpy.core._exceptions": [
        "numpy.core._exceptions._ArrayMemoryError",
        "numpy.core._exceptions._UFuncCastingError",
        "numpy.core._exceptions._UFuncBinaryResolutionError",
        "numpy.core._exceptions.AxisError",
        "numpy.core._exceptions.UFuncTypeError",
        "numpy.core._exceptions.TooHardError",
        "numpy.core._exceptions._UFuncOutputCastingError",
        "numpy.core.overrides",
        "numpy.core._exceptions._UFuncNoLoopError",
        "numpy.core._exceptions._UFuncInputCastingError"
    ],
    "numpy.core._exceptions.UFuncTypeError": [],
    "numpy.core._exceptions._UFuncBinaryResolutionError": [],
    "numpy.core._exceptions._UFuncNoLoopError": [],
    "numpy.core._exceptions._UFuncCastingError": [],
    "numpy.core._exceptions._UFuncInputCastingError": [],
    "numpy.core._exceptions._UFuncOutputCastingError": [],
    "numpy.core._exceptions.TooHardError": [],
    "numpy.core._exceptions.AxisError": [],
    "numpy.core._exceptions._ArrayMemoryError": [
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "<builtin>.staticmethod": [],
    "<map>.update": [],
    "<builtin>.getattr": [],
    "numpy.core._ufunc_config": [
        "numpy.core.overrides.set_module",
        "numpy.core.umath",
        "numpy.core._ufunc_config.errstate",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module.decorator",
        "<map>.items",
        "numpy.core._ufunc_config._unspecified",
        "numpy.core._ufunc_config._setdef"
    ],
    "numpy.core._ufunc_config._unspecified": [],
    "numpy.core._ufunc_config.errstate": [],
    "numpy.core._ufunc_config._setdef": [],
    "<builtin>.type": [],
    "numpy.core.numeric.ComplexWarning": [],
    "numpy.core.overrides.set_array_function_like_doc": [],
    "numpy.core.arrayprint": [
        "<builtin>.getattr",
        "numpy.core.overrides.set_module",
        "<builtin>.issubclass",
        "numpy.core.fromnumeric",
        "numpy.core.arrayprint.TimedeltaFormat",
        "numpy.core.numeric",
        "append",
        "numpy.core.numerictypes",
        "numpy.core.arrayprint.FloatingFormat",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.arrayprint.StructuredVoidFormat",
        "numpy",
        "numpy.core.arrayprint._TimelikeFormat",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.arrayprint.BoolFormat",
        "numpy.core.arrayprint.IntegerFormat",
        "numpy.core.arrayprint.ComplexFloatingFormat",
        "numpy.core.multiarray",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy.core.arrayprint._recursive_guard.decorating_function",
        "numpy.core.arrayprint.DatetimeFormat",
        "numpy.core.umath",
        "numpy.core.arrayprint.SubArrayFormat",
        "numpy.core.arrayprint._recursive_guard"
    ],
    "numpy.core.arrayprint._recursive_guard": [],
    "numpy.core.arrayprint._recursive_guard.decorating_function": [
        "<builtin>.set"
    ],
    "numpy.core.overrides.array_function_dispatch": [],
    "numpy.core.overrides.array_function_dispatch.decorator": [
        "numpy.core._multiarray_umath.add_docstring"
    ],
    "numpy.core.arrayprint.FloatingFormat": [],
    "numpy.core.arrayprint.IntegerFormat": [],
    "numpy.core.arrayprint.BoolFormat": [],
    "numpy.core.arrayprint.ComplexFloatingFormat": [],
    "numpy.core.arrayprint._TimelikeFormat": [],
    "numpy.core.arrayprint.DatetimeFormat": [],
    "numpy.core.arrayprint.TimedeltaFormat": [],
    "numpy.core.arrayprint.SubArrayFormat": [],
    "numpy.core.arrayprint.StructuredVoidFormat": [
        "<builtin>.classmethod"
    ],
    "<builtin>.classmethod": [],
    "<builtin>.issubclass": [],
    "numpy.core._asarray": [
        "numpy.core.overrides.set_module",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.overrides.set_array_function_like_doc",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.multiarray",
        "numpy.core.overrides.array_function_dispatch.decorator"
    ],
    "numpy.core.numeric.extend_all": [
        "append",
        "<builtin>.set",
        "<builtin>.getattr"
    ],
    "numpy.core.defchararray": [
        "numpy.core.numeric",
        "numpy",
        "numpy.core.overrides.set_module",
        "numpy.core.defchararray.chararray",
        "numpy.core.numerictypes",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module.decorator",
        "numpy.compat",
        "numpy.core.multiarray"
    ],
    "numpy.core.defchararray.chararray": [],
    "numpy.core.records": [
        "numpy.core.numeric",
        "numpy.core.arrayprint",
        "numpy.core.overrides.set_module",
        "numpy.core.records.record",
        "numpy.core.numerictypes",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.records.format_parser",
        "numpy.compat",
        "numpy.core.records.recarray"
    ],
    "numpy.core.records.format_parser": [],
    "numpy.core.records.record": [],
    "numpy.core.records.recarray": [],
    "numpy.core.memmap": [
        "numpy.core.numeric",
        "numpy.core.memmap.memmap",
        "numpy",
        "numpy.core.overrides",
        "numpy.compat"
    ],
    "numpy.core.memmap.memmap": [],
    "numpy.core.function_base": [
        "numpy.core.numeric",
        "numpy.core.multiarray",
        "numpy.core.overrides"
    ],
    "numpy.core._machar": [
        "numpy.core.fromnumeric",
        "numpy.core._machar.MachAr",
        "numpy.core._ufunc_config",
        "numpy.core.overrides"
    ],
    "numpy.core._machar.MachAr": [],
    "numpy.core.getlimits": [
        "numpy.core.numeric",
        "numpy.core.getlimits.MachArLike",
        "numpy.core.umath",
        "<builtin>.dict",
        "numpy.core.numerictypes",
        "numpy.core.overrides",
        "numpy.core.getlimits.finfo",
        "numpy.core.getlimits.iinfo",
        "numpy.core._machar"
    ],
    "numpy.core.getlimits.MachArLike": [
        "<builtin>.property"
    ],
    "<builtin>.dict": [],
    "numpy.core.getlimits.finfo": [
        "<builtin>.property"
    ],
    "numpy.core.getlimits.iinfo": [
        "<builtin>.property"
    ],
    "numpy.core.einsumfunc": [
        "numpy.core.numeric",
        "numpy.core.overrides",
        "<builtin>.set",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.multiarray",
        "numpy.core.overrides.array_function_dispatch.decorator"
    ],
    "numpy.core._add_newdocs": [
        "numpy.core.function_base.add_newdoc",
        "numpy.core.function_base",
        "<str>.replace",
        "numpy.core.overrides",
        "numpy.core._add_newdocs.refer_to_array_attribute"
    ],
    "numpy.core.function_base.add_newdoc": [
        "<builtin>.getattr",
        "<builtin>.isinstance",
        "<builtin>.globals",
        "numpy.core.function_base._add_docstring",
        "<str>.strip",
        "<builtin>.__import__"
    ],
    "<builtin>.__import__": [],
    "numpy.core.function_base._add_docstring": [
        "numpy.core.function_base._needs_add_docstring"
    ],
    "numpy.core.function_base._needs_add_docstring": [
        "<builtin>.isinstance"
    ],
    "<str>.strip": [],
    "<str>.replace": [],
    "numpy.core._add_newdocs.refer_to_array_attribute": [],
    "numpy.core._add_newdocs_scalars": [
        "numpy.core.function_base.add_newdoc",
        "numpy.core.function_base",
        "numpy.core.numerictypes",
        "numpy.core._add_newdocs_scalars.add_newdoc_for_scalar_type",
        "numpy.core",
        "numpy.core._add_newdocs_scalars.numeric_type_aliases"
    ],
    "numpy.core._add_newdocs_scalars.numeric_type_aliases": [
        "numpy.core._add_newdocs_scalars.numeric_type_aliases.type_aliases_gen",
        "<builtin>.list"
    ],
    "numpy.core._add_newdocs_scalars.numeric_type_aliases.type_aliases_gen": [
        "<builtin>.getattr"
    ],
    "numpy.core._add_newdocs_scalars.add_newdoc_for_scalar_type": [
        "<str>.strip",
        "<builtin>.getattr",
        "numpy.core.function_base.add_newdoc"
    ],
    "numpy.core._dtype_ctypes": [
        "numpy"
    ],
    "numpy.core._internal": [
        "<map>.keys",
        "numpy.core._internal._ctypes",
        "numpy.core._internal.dummy_ctype",
        "numpy.core._internal._Stream",
        "numpy.core.multiarray",
        "numpy.core._internal._missing_ctypes"
    ],
    "numpy.core._internal.dummy_ctype": [],
    "numpy.core._internal._missing_ctypes": [
        "numpy.core._internal._missing_ctypes.c_void_p"
    ],
    "numpy.core._internal._missing_ctypes.c_void_p": [],
    "numpy.core._internal._ctypes": [
        "<builtin>.property"
    ],
    "<map>.keys": [],
    "numpy.core._internal._Stream": [
        "<builtin>.property"
    ],
    "numpy._pytesttester": [
        "numpy._pytesttester.PytestTester"
    ],
    "numpy._pytesttester.PytestTester": [],
    "numpy._pytesttester.PytestTester.__init__": [],
    "numpy.lib": [
        "numpy.lib.type_check",
        "numpy.lib.npyio",
        "numpy.lib.function_base",
        "numpy.lib.nanfunctions",
        "numpy.lib.histograms",
        "numpy.lib.mixins",
        "numpy.lib.twodim_base",
        "numpy.version",
        "numpy.lib._version",
        "numpy.lib.arrayterator",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.lib.ufunclike",
        "numpy.lib.index_tricks",
        "numpy.lib.polynomial",
        "numpy.lib.arraysetops",
        "numpy.lib.scimath",
        "numpy.lib.arraypad",
        "numpy._pytesttester",
        "numpy.lib.shape_base",
        "numpy.lib.stride_tricks",
        "numpy.lib.utils"
    ],
    "numpy.lib.mixins": [
        "numpy.core.umath",
        "numpy.lib.mixins.NDArrayOperatorsMixin"
    ],
    "numpy.lib.mixins.NDArrayOperatorsMixin": [
        "numpy.lib.mixins._binary_method",
        "numpy.lib.mixins._numeric_methods",
        "numpy.lib.mixins._unary_method",
        "numpy.lib.mixins._reflected_binary_method"
    ],
    "numpy.lib.mixins._binary_method": [],
    "numpy.lib.mixins._numeric_methods": [
        "numpy.lib.mixins._binary_method",
        "numpy.lib.mixins._inplace_binary_method",
        "numpy.lib.mixins._reflected_binary_method"
    ],
    "numpy.lib.mixins._reflected_binary_method": [],
    "numpy.lib.mixins._inplace_binary_method": [],
    "numpy.lib.mixins._unary_method": [],
    "numpy.lib.scimath": [
        "numpy.core.numeric",
        "numpy.lib.type_check",
        "numpy.core.numerictypes",
        "numpy.core.overrides",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.overrides.array_function_dispatch.decorator"
    ],
    "numpy.lib.type_check": [
        "numpy.core.numeric",
        "numpy.core.overrides.set_module",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module.decorator",
        "numpy.lib.ufunclike"
    ],
    "numpy.lib.ufunclike": [
        "numpy.core.numeric",
        "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y",
        "numpy.lib.ufunclike._deprecate_out_named_y",
        "numpy.core.overrides",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.overrides.array_function_dispatch.decorator"
    ],
    "numpy.lib.ufunclike._deprecate_out_named_y": [],
    "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y": [
        "numpy.lib.ufunclike._fix_out_named_y",
        "numpy.lib.ufunclike._deprecate_out_named_y"
    ],
    "numpy.lib.ufunclike._fix_out_named_y": [],
    "numpy.lib.index_tricks": [
        "numpy.lib.function_base",
        "numpy.core.overrides.set_module",
        "numpy.lib.index_tricks.AxisConcatenator",
        "numpy.lib.index_tricks.ndenumerate",
        "numpy.core.numeric",
        "numpy.lib.index_tricks.MGridClass",
        "numpy.lib.index_tricks.RClass",
        "numpy.core.numerictypes",
        "numpy.matrixlib",
        "numpy.lib.index_tricks.OGridClass.__init__",
        "numpy.lib.index_tricks.RClass.__init__",
        "numpy.lib.index_tricks.CClass.__init__",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.multiarray",
        "numpy.core",
        "numpy.lib.index_tricks.MGridClass.__init__",
        "numpy.lib.index_tricks.IndexExpression.__init__",
        "numpy.lib.index_tricks.nd_grid",
        "numpy.lib.index_tricks.IndexExpression",
        "numpy.lib.index_tricks.CClass",
        "numpy.lib.index_tricks.ndindex",
        "numpy.lib.index_tricks.OGridClass",
        "numpy.lib.stride_tricks"
    ],
    "numpy.matrixlib": [
        "numpy.matrixlib.defmatrix",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy._pytesttester"
    ],
    "numpy.matrixlib.defmatrix": [
        "numpy.core.numeric",
        "numpy.core.overrides.set_module",
        "numpy.linalg",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module.decorator",
        "numpy.matrixlib.defmatrix.matrix"
    ],
    "numpy.linalg": [
        "numpy._pytesttester",
        "numpy.linalg.linalg",
        "numpy._pytesttester.PytestTester.__init__"
    ],
    "numpy.linalg.linalg": [
        "numpy.linalg.linalg.LinAlgError",
        "numpy.core.overrides",
        "numpy.lib.twodim_base",
        "numpy.core.multiarray",
        "numpy.linalg.linalg._determine_error_states",
        "numpy.core"
    ],
    "numpy.lib.twodim_base": [
        "numpy.core.numeric",
        "numpy.core.overrides.set_module",
        "numpy.core.getlimits.iinfo.__init__",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.overrides.set_array_function_like_doc",
        "numpy.lib.stride_tricks",
        "numpy.core"
    ],
    "numpy.lib.stride_tricks": [
        "numpy.core.numeric",
        "numpy",
        "numpy.core.overrides.set_module",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.lib.stride_tricks.DummyArray",
        "numpy.core.overrides.array_function_dispatch.decorator"
    ],
    "numpy.lib.stride_tricks.DummyArray": [],
    "numpy.core.getlimits.iinfo.__init__": [
        "<builtin>.ValueError",
        "<builtin>.type"
    ],
    "numpy.linalg.linalg.LinAlgError": [],
    "numpy.linalg.linalg._determine_error_states": [
        "numpy.core.arrayprint.errstate",
        "numpy.core._ufunc_config.errstate.__init__"
    ],
    "numpy.core._ufunc_config.errstate.__init__": [],
    "numpy.core.arrayprint.errstate": [],
    "numpy.matrixlib.defmatrix.matrix": [
        "<builtin>.property"
    ],
    "numpy.lib.function_base": [
        "numpy.core.numeric",
        "numpy",
        "numpy.core.overrides.set_module",
        "numpy.core.function_base",
        "numpy.core.umath",
        "numpy.core.fromnumeric",
        "numpy.lib.histograms",
        "numpy.lib.function_base.vectorize",
        "numpy.core.numerictypes",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module.decorator",
        "numpy.lib.twodim_base",
        "<builtin>.dict",
        "numpy.core.multiarray",
        "numpy.core"
    ],
    "numpy.lib.histograms": [
        "numpy",
        "numpy.core.overrides"
    ],
    "numpy.lib.function_base.vectorize": [],
    "numpy.lib.index_tricks.nd_grid": [],
    "numpy.lib.index_tricks.MGridClass": [],
    "numpy.lib.index_tricks.MGridClass.__init__": [
        "<builtin>.super"
    ],
    "<builtin>.super": [],
    "numpy.lib.index_tricks.OGridClass": [],
    "numpy.lib.index_tricks.OGridClass.__init__": [
        "<builtin>.super"
    ],
    "numpy.lib.index_tricks.AxisConcatenator": [
        "<builtin>.staticmethod"
    ],
    "numpy.lib.index_tricks.RClass": [],
    "numpy.lib.index_tricks.RClass.__init__": [
        "numpy.lib.index_tricks.AxisConcatenator.__init__"
    ],
    "numpy.lib.index_tricks.AxisConcatenator.__init__": [],
    "numpy.lib.index_tricks.CClass": [],
    "numpy.lib.index_tricks.CClass.__init__": [
        "numpy.lib.index_tricks.AxisConcatenator.__init__"
    ],
    "numpy.lib.index_tricks.ndenumerate": [],
    "numpy.lib.index_tricks.ndindex": [],
    "numpy.lib.index_tricks.IndexExpression": [],
    "numpy.lib.index_tricks.IndexExpression.__init__": [],
    "numpy.lib.nanfunctions": [
        "numpy",
        "numpy.lib.function_base",
        "numpy.core.overrides"
    ],
    "numpy.lib.shape_base": [
        "numpy.core.numeric",
        "numpy.core.fromnumeric",
        "numpy.core.overrides",
        "numpy.matrixlib.defmatrix",
        "numpy.core.shape_base",
        "numpy.core.multiarray",
        "numpy.lib.index_tricks",
        "numpy.core"
    ],
    "numpy.lib.polynomial": [
        "numpy.core.numeric",
        "numpy.lib.type_check",
        "numpy.lib.function_base",
        "numpy.linalg",
        "numpy.lib.polynomial.poly1d",
        "numpy.core.overrides",
        "numpy.lib.twodim_base",
        "numpy.lib.polynomial.RankWarning",
        "numpy.core"
    ],
    "numpy.lib.polynomial.RankWarning": [],
    "numpy.lib.polynomial.poly1d": [
        "<builtin>.property"
    ],
    "numpy.lib.utils": [
        "numpy",
        "numpy.core.overrides.set_module",
        "numpy.lib.utils._Deprecate",
        "numpy.core.numerictypes",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core"
    ],
    "numpy.lib.utils._Deprecate": [],
    "numpy.lib.arraysetops": [
        "numpy",
        "numpy.core.overrides"
    ],
    "numpy.lib.npyio": [
        "numpy.lib.npyio.BagObj",
        "<builtin>.sorted",
        "numpy",
        "numpy.core.overrides.set_module",
        "numpy.lib._iotools",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module.decorator",
        "numpy.lib._datasource",
        "numpy.compat",
        "numpy.lib.format",
        "numpy.lib.npyio.NpzFile",
        "numpy.core.overrides.set_array_function_like_doc",
        "numpy.core.multiarray"
    ],
    "numpy.lib.format": [
        "numpy.compat",
        "numpy",
        "numpy.lib.utils",
        "<builtin>.len"
    ],
    "numpy.lib._datasource": [
        "numpy.lib._datasource._FileOpeners.__init__",
        "numpy.core.overrides",
        "numpy.lib._datasource.DataSource",
        "numpy.lib._datasource.Repository",
        "numpy.lib._datasource._FileOpeners"
    ],
    "numpy.lib._datasource._FileOpeners": [],
    "numpy.lib._datasource._FileOpeners.__init__": [],
    "numpy.lib._datasource.DataSource": [],
    "numpy.lib._datasource.Repository": [],
    "numpy.lib._iotools": [
        "numpy.core.numeric",
        "numpy",
        "numpy.lib._iotools.NameValidator",
        "numpy.lib._iotools.ConverterError",
        "numpy.lib._iotools.LineSplitter",
        "numpy.compat",
        "numpy.lib._iotools.ConversionWarning",
        "numpy.lib._iotools.ConverterLockError",
        "numpy.lib._iotools.StringConverter"
    ],
    "numpy.lib._iotools.LineSplitter": [],
    "numpy.lib._iotools.NameValidator": [
        "<builtin>.set"
    ],
    "numpy.lib._iotools.ConverterError": [],
    "numpy.lib._iotools.ConverterLockError": [],
    "numpy.lib._iotools.ConversionWarning": [],
    "numpy.lib._iotools.StringConverter": [
        "append",
        "<builtin>.classmethod",
        "extend"
    ],
    "numpy.lib.npyio.BagObj": [],
    "numpy.lib.npyio.NpzFile": [],
    "numpy.lib.arrayterator": [
        "numpy.lib.arrayterator.Arrayterator"
    ],
    "numpy.lib.arrayterator.Arrayterator": [
        "<builtin>.property"
    ],
    "numpy.lib.arraypad": [
        "numpy",
        "numpy.lib.index_tricks",
        "numpy.core.overrides",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.overrides.array_function_dispatch.decorator"
    ],
    "numpy.lib._version": [
        "numpy.lib._version.NumpyVersion"
    ],
    "numpy.lib._version.NumpyVersion": [],
    "numpy.fft": [
        "numpy.fft.helper",
        "numpy._pytesttester",
        "copy",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.fft._pocketfft"
    ],
    "numpy.fft._pocketfft": [
        "numpy.core.multiarray",
        "numpy.core",
        "numpy.core.overrides"
    ],
    "numpy.fft.helper": [
        "numpy.core.overrides.set_module",
        "numpy.core.overrides",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy.core"
    ],
    "copy": [],
    "numpy.polynomial": [
        "numpy.polynomial.legendre",
        "numpy.polynomial.chebyshev",
        "numpy.polynomial.laguerre",
        "numpy._pytesttester",
        "numpy.polynomial.polynomial",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.polynomial.hermite_e",
        "numpy.polynomial.hermite"
    ],
    "numpy.polynomial.polynomial": [
        "numpy",
        "numpy.polynomial.polynomial.Polynomial",
        "numpy.linalg",
        "numpy.polynomial.polyutils",
        "numpy.polynomial._polybase",
        "numpy.core.multiarray"
    ],
    "numpy.polynomial.polyutils": [
        "numpy",
        "numpy.polynomial.polyutils.RankWarning"
    ],
    "numpy.polynomial.polyutils.RankWarning": [],
    "numpy.polynomial._polybase": [
        "numpy.polynomial.polyutils",
        "numpy",
        "numpy.polynomial._polybase.ABCPolyBase"
    ],
    "numpy.polynomial._polybase.ABCPolyBase": [
        "<builtin>.staticmethod",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "numpy.polynomial.polynomial.Polynomial": [
        "<builtin>.staticmethod",
        "<builtin>.classmethod"
    ],
    "numpy.polynomial.chebyshev": [
        "numpy",
        "numpy.linalg",
        "numpy.polynomial.polyutils",
        "numpy.polynomial._polybase",
        "numpy.core.multiarray",
        "numpy.polynomial.chebyshev.Chebyshev"
    ],
    "numpy.polynomial.chebyshev.Chebyshev": [
        "<builtin>.staticmethod",
        "<builtin>.classmethod"
    ],
    "numpy.polynomial.legendre": [
        "numpy",
        "numpy.linalg",
        "numpy.polynomial.polyutils",
        "numpy.polynomial._polybase",
        "numpy.polynomial.legendre.Legendre",
        "numpy.core.multiarray"
    ],
    "numpy.polynomial.legendre.Legendre": [
        "<builtin>.staticmethod"
    ],
    "numpy.polynomial.hermite": [
        "numpy.polynomial.hermite.Hermite",
        "numpy",
        "numpy.linalg",
        "numpy.polynomial.polyutils",
        "numpy.polynomial._polybase",
        "numpy.core.multiarray"
    ],
    "numpy.polynomial.hermite.Hermite": [
        "<builtin>.staticmethod"
    ],
    "numpy.polynomial.hermite_e": [
        "numpy",
        "numpy.linalg",
        "numpy.polynomial.polyutils",
        "numpy.polynomial._polybase",
        "numpy.core.multiarray",
        "numpy.polynomial.hermite_e.HermiteE"
    ],
    "numpy.polynomial.hermite_e.HermiteE": [
        "<builtin>.staticmethod"
    ],
    "numpy.polynomial.laguerre": [
        "numpy",
        "numpy.linalg",
        "numpy.polynomial.laguerre.Laguerre",
        "numpy.polynomial.polyutils",
        "numpy.polynomial._polybase",
        "numpy.core.multiarray"
    ],
    "numpy.polynomial.laguerre.Laguerre": [
        "<builtin>.staticmethod"
    ],
    "numpy.random": [
        "numpy._pytesttester",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.random._pickle"
    ],
    "numpy.random._pickle": [],
    "numpy.ctypeslib": [
        "numpy",
        "numpy.ctypeslib._concrete_ndptr",
        "numpy.core._internal",
        "numpy.ctypeslib._ndptr",
        "numpy.ctypeslib._get_scalar_type_map",
        "numpy.core.multiarray",
        "numpy.core._internal._getintp_ctype"
    ],
    "numpy.core._internal._getintp_ctype": [
        "numpy.core._internal.dummy_ctype.__init__",
        "numpy"
    ],
    "numpy.core._internal.dummy_ctype.__init__": [],
    "numpy.ctypeslib._ndptr": [
        "<builtin>.classmethod"
    ],
    "numpy.ctypeslib._concrete_ndptr": [
        "<builtin>.property"
    ],
    "numpy.ctypeslib._get_scalar_type_map": [],
    "numpy.ma": [
        "numpy._pytesttester",
        "numpy.ma.extras",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.ma.core"
    ],
    "numpy.ma.core": [
        "numpy.ma.core._MaskedBinaryOperation.__init__",
        "numpy.ma.core._MaskedBinaryOperation",
        "numpy.ma.core.MAError",
        "numpy.lib.function_base",
        "numpy.ma.core._DomainGreater",
        "numpy.ma.core._DomainCheckInterval.__init__",
        "numpy.ma.core._MaskedPrintOption",
        "numpy.ma.core._DomainedBinaryOperation.__init__",
        "numpy.ma.core.mvoid",
        "numpy.ma.core._convert2ma.__init__",
        "numpy.ma.core._MaskedPrintOption.__init__",
        "<builtin>.dict",
        "numpy.ma.core._frommethod",
        "numpy.ma.core._DomainedBinaryOperation",
        "numpy.core.numeric",
        "numpy.ma.core._convert2ma",
        "numpy.ma.core._MaskedUFunc",
        "numpy.ma.core._DomainGreaterEqual.__init__",
        "numpy.ma.core._extrema_operation",
        "numpy.ma.core.MaskedArrayFutureWarning",
        "numpy.ma.core._DomainSafeDivide.__init__",
        "numpy.core.numerictypes",
        "numpy.ma.core.MaskError",
        "numpy.ma.core.doc_note",
        "numpy.compat",
        "numpy",
        "numpy.ma.core._MaskedUnaryOperation.__init__",
        "numpy.ma.core._extrema_operation.__init__",
        "numpy.ma.core.MaskedArray",
        "numpy.ma.core._DomainTan",
        "numpy.ma.core.MaskedIterator",
        "numpy.ma.core._DomainGreater.__init__",
        "numpy.core.umath",
        "numpy.ma.core._DomainSafeDivide",
        "numpy.ma.core._DomainGreaterEqual",
        "numpy.ma.core._frommethod.__init__",
        "numpy.ma.core._DomainTan.__init__",
        "numpy.ma.core.MaskedConstant",
        "numpy.ma.core._DomainCheckInterval",
        "<builtin>.complex",
        "numpy.ma.core._MaskedUnaryOperation"
    ],
    "numpy.ma.core.MaskedArrayFutureWarning": [],
    "numpy.ma.core.MAError": [],
    "numpy.ma.core.MaskError": [],
    "<builtin>.complex": [],
    "numpy.ma.core._DomainCheckInterval": [],
    "numpy.ma.core._DomainTan": [],
    "numpy.ma.core._DomainSafeDivide": [],
    "numpy.ma.core._DomainGreater": [],
    "numpy.ma.core._DomainGreaterEqual": [],
    "numpy.ma.core._MaskedUFunc": [],
    "numpy.ma.core._MaskedUnaryOperation": [],
    "numpy.ma.core._MaskedBinaryOperation": [],
    "numpy.ma.core._DomainedBinaryOperation": [],
    "numpy.ma.core._MaskedUnaryOperation.__init__": [
        "<builtin>.super"
    ],
    "numpy.ma.core._DomainGreaterEqual.__init__": [],
    "numpy.ma.core._DomainGreater.__init__": [],
    "numpy.ma.core._DomainTan.__init__": [],
    "numpy.ma.core._DomainCheckInterval.__init__": [],
    "numpy.ma.core._MaskedBinaryOperation.__init__": [
        "<builtin>.super"
    ],
    "numpy.ma.core._DomainSafeDivide.__init__": [],
    "numpy.ma.core._DomainedBinaryOperation.__init__": [
        "<builtin>.super"
    ],
    "numpy.ma.core._MaskedPrintOption": [],
    "numpy.ma.core._MaskedPrintOption.__init__": [],
    "numpy.ma.core.MaskedIterator": [],
    "numpy.ma.core.MaskedArray": [
        "numpy.ma.core._arraymethod",
        "<builtin>.property"
    ],
    "numpy.ma.core._arraymethod": [
        "<builtin>.getattr"
    ],
    "numpy.ma.core.mvoid": [
        "<builtin>.property"
    ],
    "numpy.ma.core.MaskedConstant": [
        "<builtin>.classmethod"
    ],
    "numpy.ma.core._extrema_operation": [],
    "numpy.ma.core._frommethod": [],
    "numpy.ma.core._frommethod.__init__": [
        "numpy.ma.core._frommethod.getdoc"
    ],
    "numpy.ma.core._frommethod.getdoc": [
        "numpy.ma.core.get_object_signature",
        "<builtin>.getattr"
    ],
    "numpy.ma.core.get_object_signature": [
        "numpy.compat._inspect.getargspec",
        "numpy.compat._inspect.formatargspec"
    ],
    "numpy.compat._inspect.getargspec": [
        "numpy.compat._inspect.getargs",
        "numpy.compat._inspect.ismethod",
        "<builtin>.TypeError",
        "numpy.compat._inspect.isfunction"
    ],
    "numpy.compat._inspect.ismethod": [
        "<builtin>.isinstance"
    ],
    "numpy.compat._inspect.isfunction": [
        "<builtin>.isinstance"
    ],
    "<builtin>.TypeError": [],
    "numpy.compat._inspect.getargs": [
        "numpy.compat._inspect.iscode",
        "<builtin>.TypeError",
        "<builtin>.list",
        "<builtin>.range"
    ],
    "numpy.compat._inspect.iscode": [
        "<builtin>.isinstance"
    ],
    "numpy.compat._inspect.formatargspec": [
        "append",
        "<builtin>.range",
        "numpy.compat._inspect.<lambda3>",
        "numpy.compat._inspect.strseq",
        "<builtin>.len"
    ],
    "numpy.compat._inspect.strseq": [
        "numpy.compat._inspect.strseq",
        "<builtin>.type",
        "numpy.compat._inspect.joinseq"
    ],
    "numpy.compat._inspect.joinseq": [
        "<builtin>.len"
    ],
    "numpy.compat._inspect.<lambda3>": [
        "<builtin>.repr"
    ],
    "<builtin>.repr": [],
    "numpy.ma.core._extrema_operation.__init__": [
        "<builtin>.super"
    ],
    "numpy.ma.core.doc_note": [],
    "numpy.ma.core._convert2ma": [],
    "numpy.ma.core._convert2ma.__init__": [
        "<builtin>.getattr",
        "numpy.ma.core._convert2ma.getdoc"
    ],
    "numpy.ma.core._convert2ma.getdoc": [
        "numpy.ma.core.get_object_signature",
        "<builtin>.getattr",
        "numpy.ma.core._convert2ma._replace_return_type"
    ],
    "numpy.ma.core._convert2ma._replace_return_type": [
        "<builtin>.RuntimeError"
    ],
    "numpy.ma.extras": [
        "numpy.core.numeric",
        "numpy.ma.extras.mr_class.__init__",
        "numpy",
        "numpy.lib.function_base",
        "numpy.ma.extras.mr_class",
        "numpy.ma.core",
        "numpy.ma.extras._fromnxfunction_args",
        "numpy.ma.extras._fromnxfunction_allargs",
        "numpy.ma.extras.MAxisConcatenator",
        "numpy.ma.core.doc_note",
        "numpy.ma.extras._fromnxfunction",
        "numpy.ma.extras._fromnxfunction_seq",
        "numpy.core.multiarray",
        "numpy.lib.index_tricks",
        "numpy.ma.extras._fromnxfunction_single"
    ],
    "numpy.ma.extras._fromnxfunction": [],
    "numpy.ma.extras._fromnxfunction_single": [],
    "numpy.ma.extras._fromnxfunction_seq": [],
    "numpy.ma.extras._fromnxfunction_args": [],
    "numpy.ma.extras._fromnxfunction_allargs": [],
    "numpy.ma.extras.MAxisConcatenator": [
        "<builtin>.staticmethod",
        "<builtin>.classmethod"
    ],
    "numpy.ma.extras.mr_class": [],
    "numpy.ma.extras.mr_class.__init__": [
        "numpy.lib.index_tricks.AxisConcatenator.__init__"
    ],
    "numpy.core.getlimits._register_known_types": [
        "numpy.core.getlimits._register_type",
        "numpy.core._ufunc_config.errstate.__init__",
        "numpy.core.arrayprint.errstate",
        "numpy.core.getlimits.MachArLike.__init__"
    ],
    "numpy.core.getlimits.MachArLike.__init__": [
        "numpy.core.getlimits.MachArLike._float_conv",
        "numpy.core.getlimits.MachArLike._float_to_str",
        "<builtin>.int",
        "numpy.core.getlimits.MachArLike._float_to_float"
    ],
    "numpy.core.getlimits.MachArLike._float_to_float": [
        "numpy.core.getlimits.MachArLike._float_conv",
        "numpy.core.getlimits._fr1"
    ],
    "numpy.core.getlimits.MachArLike._float_conv": [],
    "numpy.core.getlimits._fr1": [],
    "numpy.core.getlimits.MachArLike._float_to_str": [
        "numpy.core.getlimits._fr0"
    ],
    "numpy.core.getlimits._fr0": [],
    "numpy.core.getlimits._register_type": [],
    "remove": [],
    "numpy._sanity_check": [
        "<builtin>.abs",
        "<builtin>.AssertionError",
        "<builtin>.RuntimeError"
    ],
    "<builtin>.abs": [],
    "<builtin>.AssertionError": [],
    "numpy._mac_os_check": [],
    "<builtin>.str": [],
    "_multiarray_umath._set_madvise_hugepage": [],
    "PIL.Image": [
        "PIL.ImageMode",
        "<builtin>.getattr",
        "PIL.ExifTags",
        "PIL.ImageFile",
        "PIL._util",
        "<builtin>.hasattr",
        "<builtin>.ImportError",
        "PIL.TiffTags",
        "PIL.PyAccess",
        "<builtin>.setattr",
        "PIL.Image._apply_env_variables",
        "PIL.Image._E",
        "PIL.Image.Transpose",
        "PIL.Image.ImageTransformHandler",
        "<builtin>.str",
        "<builtin>.int",
        "PIL.Image.Image",
        "PIL._deprecate",
        "PIL.Image.Quantize",
        "PIL.Image.DecompressionBombError",
        "PIL.Image.DecompressionBombWarning",
        "PIL._util.DeferredError.new",
        "PIL.Image.Resampling",
        "PIL.Image.SupportsArrayInterface",
        "PIL.Image.SupportsGetData",
        "PIL.Image.Dither",
        "PIL.Image.Exif",
        "PIL._typing",
        "PIL.Image.Transform",
        "PIL.Image.Palette",
        "PIL.Image.ImagePointHandler",
        "PIL._binary"
    ],
    "PIL.ExifTags": [
        "PIL.ExifTags.Base",
        "PIL.ExifTags.GPS",
        "PIL.ExifTags.LightSource",
        "PIL.ExifTags.Interop",
        "PIL.ExifTags.IFD"
    ],
    "PIL.ExifTags.Base": [],
    "PIL.ExifTags.GPS": [],
    "PIL.ExifTags.Interop": [],
    "PIL.ExifTags.IFD": [],
    "PIL.ExifTags.LightSource": [],
    "PIL.ImageMode": [
        "PIL._deprecate",
        "functools.lru_cache",
        "PIL.ImageMode.ModeDescriptor"
    ],
    "PIL._deprecate": [],
    "PIL.ImageMode.ModeDescriptor": [],
    "functools.lru_cache": [],
    "PIL.TiffTags": [
        "PIL.TiffTags._TagInfo",
        "PIL.TiffTags._populate",
        "PIL.TiffTags.TagInfo"
    ],
    "PIL.TiffTags._TagInfo": [],
    "PIL.TiffTags.TagInfo": [],
    "PIL.TiffTags._populate": [
        "<map>.items",
        "<map>.values",
        "<builtin>.len"
    ],
    "PIL._binary": [],
    "PIL._typing": [
        "typing.TypeVar",
        "PIL._typing.TypeGuard",
        "PIL._typing.SupportsRead",
        "numpy.typing"
    ],
    "numpy.typing": [
        "numpy._pytesttester",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy._typing._add_docstring",
        "numpy._typing"
    ],
    "numpy._typing": [
        "numpy._typing._64Bit",
        "numpy._typing._128Bit",
        "numpy._typing._256Bit",
        "numpy._typing._generic_alias",
        "numpy._typing._8Bit",
        "numpy._typing._shape",
        "numpy._typing._96Bit",
        "numpy",
        "numpy._typing._16Bit",
        "numpy._typing.NBitBase",
        "numpy._typing._char_codes",
        "numpy.core.overrides",
        "numpy._typing._nbit",
        "numpy._typing._32Bit",
        "numpy._typing._nested_sequence",
        "numpy._typing._dtype_like",
        "numpy._typing._scalars",
        "numpy._typing._array_like",
        "numpy._typing._80Bit"
    ],
    "numpy._typing.NBitBase": [],
    "numpy._typing._256Bit": [],
    "numpy._typing._128Bit": [],
    "numpy._typing._96Bit": [],
    "numpy._typing._80Bit": [],
    "numpy._typing._64Bit": [],
    "numpy._typing._32Bit": [],
    "numpy._typing._16Bit": [],
    "numpy._typing._8Bit": [],
    "numpy._typing._nested_sequence": [
        "numpy._typing._nested_sequence._NestedSequence",
        "typing.TypeVar"
    ],
    "typing.TypeVar": [],
    "numpy._typing._nested_sequence._NestedSequence": [
        "typing.overload"
    ],
    "typing.overload": [],
    "numpy._typing._nbit": [],
    "numpy._typing._char_codes": [],
    "numpy._typing._scalars": [
        "numpy"
    ],
    "numpy._typing._shape": [],
    "numpy._typing._dtype_like": [
        "numpy._typing._generic_alias",
        "numpy",
        "numpy._typing._dtype_like._SupportsDType",
        "numpy._typing._dtype_like._DTypeDictBase",
        "numpy._typing._char_codes",
        "numpy._typing._shape",
        "typing.TypeVar",
        "numpy._typing._dtype_like._DTypeDict"
    ],
    "numpy._typing._generic_alias": [
        "numpy._typing._generic_alias._GenericAlias.__init__",
        "typing.TypeVar",
        "numpy",
        "numpy._typing._generic_alias._GenericAlias"
    ],
    "numpy._typing._generic_alias._GenericAlias": [
        "<builtin>.frozenset",
        "<builtin>.property"
    ],
    "<builtin>.frozenset": [],
    "numpy._typing._generic_alias._GenericAlias.__init__": [
        "<builtin>.isinstance",
        "numpy._typing._generic_alias._parse_parameters",
        "<builtin>.tuple"
    ],
    "numpy._typing._generic_alias._parse_parameters": [
        "<builtin>.hasattr",
        "<builtin>.isinstance"
    ],
    "numpy._typing._dtype_like._DTypeDictBase": [],
    "numpy._typing._dtype_like._DTypeDict": [],
    "numpy._typing._dtype_like._SupportsDType": [
        "<builtin>.property"
    ],
    "numpy._typing._array_like": [
        "numpy._typing._array_like._UnknownType",
        "numpy",
        "typing.TypeVar",
        "numpy._typing._array_like._SupportsArrayFunc",
        "numpy._typing._array_like._SupportsArray",
        "numpy._typing._nested_sequence"
    ],
    "numpy._typing._array_like._SupportsArray": [],
    "numpy._typing._array_like._SupportsArrayFunc": [],
    "numpy._typing._array_like._UnknownType": [],
    "numpy._typing._add_docstring": [
        "<builtin>.repr",
        "numpy._typing._generic_alias",
        "numpy._typing._add_docstring.add_newdoc",
        "numpy._typing._add_docstring._parse_docstrings"
    ],
    "numpy._typing._add_docstring.add_newdoc": [
        "append"
    ],
    "numpy._typing._add_docstring._parse_docstrings": [
        "append",
        "pop"
    ],
    "pop": [],
    "PIL._typing.TypeGuard": [],
    "PIL._typing.SupportsRead": [],
    "PIL._util": [
        "PIL._util.DeferredError",
        "PIL._typing"
    ],
    "PIL._util.DeferredError": [
        "<builtin>.staticmethod"
    ],
    "PIL.Image.DecompressionBombWarning": [],
    "PIL.Image.DecompressionBombError": [],
    "PIL._util.DeferredError.new": [
        "PIL._util.DeferredError.__init__"
    ],
    "PIL._util.DeferredError.__init__": [],
    "PIL.Image.Transpose": [],
    "PIL.Image.Transform": [],
    "PIL.Image.Resampling": [],
    "PIL.Image.Dither": [],
    "PIL.Image.Palette": [],
    "PIL.Image.Quantize": [],
    "<builtin>.setattr": [],
    "PIL.ImageFile": [
        "PIL._deprecate",
        "PIL.ImageFile.PyCodec",
        "PIL.ImageFile.PyDecoder",
        "PIL.ImageFile.ImageFile",
        "PIL.ImageFile.PyCodecState",
        "PIL._util",
        "PIL.ImageFile.StubHandler",
        "PIL.ImageFile.Parser",
        "PIL.Image",
        "PIL.ImageFile._Tile",
        "PIL.ImageFile.StubImageFile",
        "PIL.ImageFile.PyEncoder"
    ],
    "PIL.ImageFile._Tile": [],
    "PIL.ImageFile.ImageFile": [],
    "PIL.ImageFile.StubHandler": [],
    "PIL.ImageFile.StubImageFile": [],
    "PIL.ImageFile.Parser": [],
    "PIL.ImageFile.PyCodecState": [],
    "PIL.ImageFile.PyCodec": [],
    "PIL.ImageFile.PyDecoder": [
        "<builtin>.property"
    ],
    "PIL.ImageFile.PyEncoder": [
        "<builtin>.property"
    ],
    "PIL.PyAccess": [
        "PIL._deprecate",
        "PIL.PyAccess._PyAccessF",
        "PIL.PyAccess._PyAccess8",
        "PIL.PyAccess._PyAccess32_4",
        "PIL.PyAccess.PyAccess",
        "PIL.PyAccess._PyAccessI16_L",
        "PIL.PyAccess._PyAccess32_2",
        "cffi.FFI",
        "PIL._util",
        "PIL.PyAccess._PyAccessI32_N",
        "PIL.PyAccess._PyAccessI32_Swap",
        "PIL._util.DeferredError.new",
        "PIL.Image",
        "PIL.PyAccess._PyAccess32_3",
        "PIL.PyAccess._PyAccessI16_B",
        "PIL.PyAccess._PyAccessI16_N"
    ],
    "cffi.FFI": [],
    "PIL.PyAccess.PyAccess": [],
    "PIL.PyAccess._PyAccess32_2": [],
    "PIL.PyAccess._PyAccess32_3": [],
    "PIL.PyAccess._PyAccess32_4": [],
    "PIL.PyAccess._PyAccess8": [],
    "PIL.PyAccess._PyAccessI16_N": [],
    "PIL.PyAccess._PyAccessI16_L": [],
    "PIL.PyAccess._PyAccessI16_B": [],
    "PIL.PyAccess._PyAccessI32_N": [],
    "PIL.PyAccess._PyAccessI32_Swap": [],
    "PIL.PyAccess._PyAccessF": [],
    "PIL.Image._E": [],
    "PIL.Image.SupportsGetData": [],
    "PIL.Image.Image": [
        "<builtin>.property",
        "PIL.ImageFilter"
    ],
    "PIL.ImageFilter": [
        "PIL.ImageFilter.MaxFilter",
        "PIL.ImageFilter.EDGE_ENHANCE_MORE",
        "PIL.ImageFilter.ModeFilter",
        "PIL.ImageFilter.RankFilter",
        "PIL.ImageFilter.GaussianBlur",
        "PIL.ImageFilter.DETAIL",
        "PIL.ImageFilter.EMBOSS",
        "PIL.ImageFilter.FIND_EDGES",
        "PIL.ImageFilter.BoxBlur",
        "PIL.ImageFilter.BuiltinFilter",
        "PIL.ImageFilter.EDGE_ENHANCE",
        "PIL.ImageFilter.SMOOTH",
        "PIL.ImageFilter.SMOOTH_MORE",
        "PIL.ImageFilter.MinFilter",
        "PIL.ImageFilter.BLUR",
        "PIL.ImageFilter.Filter",
        "PIL.ImageFilter.MultibandFilter",
        "PIL.ImageFilter.MedianFilter",
        "PIL._typing",
        "PIL.ImageFilter.Color3DLUT",
        "PIL.ImageFilter.UnsharpMask",
        "PIL.ImageFilter.Kernel",
        "PIL.ImageFilter.SHARPEN",
        "PIL.ImageFilter.CONTOUR"
    ],
    "PIL.ImageFilter.Filter": [],
    "PIL.ImageFilter.MultibandFilter": [],
    "PIL.ImageFilter.BuiltinFilter": [],
    "PIL.ImageFilter.Kernel": [],
    "PIL.ImageFilter.RankFilter": [],
    "PIL.ImageFilter.MedianFilter": [],
    "PIL.ImageFilter.MinFilter": [],
    "PIL.ImageFilter.MaxFilter": [],
    "PIL.ImageFilter.ModeFilter": [],
    "PIL.ImageFilter.GaussianBlur": [],
    "PIL.ImageFilter.BoxBlur": [],
    "PIL.ImageFilter.UnsharpMask": [],
    "PIL.ImageFilter.BLUR": [],
    "PIL.ImageFilter.CONTOUR": [],
    "PIL.ImageFilter.DETAIL": [],
    "PIL.ImageFilter.EDGE_ENHANCE": [],
    "PIL.ImageFilter.EDGE_ENHANCE_MORE": [],
    "PIL.ImageFilter.EMBOSS": [],
    "PIL.ImageFilter.FIND_EDGES": [],
    "PIL.ImageFilter.SHARPEN": [],
    "PIL.ImageFilter.SMOOTH": [],
    "PIL.ImageFilter.SMOOTH_MORE": [],
    "PIL.ImageFilter.Color3DLUT": [
        "<builtin>.staticmethod",
        "<builtin>.classmethod"
    ],
    "PIL.Image.ImagePointHandler": [],
    "PIL.Image.ImageTransformHandler": [],
    "PIL.Image.SupportsArrayInterface": [
        "<builtin>.property"
    ],
    "PIL.Image._apply_env_variables": [
        "<builtin>.int",
        "<builtin>.len"
    ],
    "PIL.Image.Exif": [],
    "tifffile": [
        "tifffile.tifffile"
    ],
    "tifffile.tifffile": [
        "tifffile.tifffile.TiffPage",
        "tifffile.tifffile.DATATYPE",
        "tifffile.tifffile.ZarrFileSequenceStore",
        "tifffile.tifffile.TiffFileError",
        "tifffile.tifffile.lazyattr",
        "tifffile.tifffile.COMPRESSION",
        "tifffile.tifffile.TiffTag",
        "tifffile.tifffile.TiffTagRegistry",
        "typing.overload",
        "tifffile.tifffile._TIFF",
        "tifffile.tifffile.TiffFrame",
        "tifffile.tifffile.TiffPageSeries",
        "tifffile.tifffile.Timer",
        "tifffile.tifffile.CompressionCodec",
        "tifffile.tifffile.EXTRASAMPLE",
        "tifffile.tifffile.NullContext",
        "tifffile.tifffile.PredictorCodec",
        "tifffile.tifffile.FILLORDER",
        "tifffile.tifffile.FILETYPE",
        "tifffile.tifffile.OFILETYPE",
        "tifffile._imagecodecs",
        "tifffile.tifffile.TiffFile",
        "tifffile.tifffile.TiffSequence",
        "tifffile.tifffile.OmeXmlError",
        "tifffile.tifffile.OmeXml",
        "tifffile.tifffile.PREDICTOR",
        "numpy",
        "tifffile.tifffile.CHUNKMODE",
        "tifffile.tifffile.TiffFormat",
        "tifffile.tifffile.FileHandle",
        "tifffile.tifffile.TiffWriter",
        "tifffile.tifffile.ZarrTiffStore",
        "tifffile.tifffile.FileCache",
        "tifffile.tifffile.TiffTags",
        "tifffile.tifffile.FileSequence",
        "tifffile.tifffile.PLANARCONFIG",
        "tifffile.tifffile.SAMPLEFORMAT",
        "tifffile.tifffile.ORIENTATION",
        "tifffile.tifffile.ZarrStore",
        "tifffile.tifffile.TiffPages",
        "tifffile.tifffile.StoredShape",
        "numpy.typing",
        "tifffile.tifffile.PHOTOMETRIC",
        "tifffile.tifffile.RESUNIT",
        "tifffile.tifffile.TiledSequence"
    ],
    "tifffile._imagecodecs": [
        "numpy",
        "typing.overload"
    ],
    "tifffile.tifffile.TiffFileError": [],
    "tifffile.tifffile.TiffWriter": [
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "tifffile.tifffile.TiffFile": [
        "<builtin>.property",
        "functools.cached_property"
    ],
    "functools.cached_property": [],
    "tifffile.tifffile.TiffFormat": [
        "<builtin>.property"
    ],
    "tifffile.tifffile.TiffPages": [
        "<builtin>.property",
        "typing.overload"
    ],
    "tifffile.tifffile.TiffPage": [
        "<builtin>.property",
        "functools.cached_property"
    ],
    "tifffile.tifffile.TiffFrame": [
        "<builtin>.property"
    ],
    "tifffile.tifffile.TiffTag": [
        "<builtin>.classmethod",
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "tifffile.tifffile.TiffTags": [],
    "tifffile.tifffile.TiffTagRegistry": [
        "typing.overload"
    ],
    "tifffile.tifffile.TiffPageSeries": [
        "<builtin>.property",
        "functools.cached_property",
        "typing.overload"
    ],
    "tifffile.tifffile.ZarrStore": [
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "tifffile.tifffile.ZarrTiffStore": [
        "<builtin>.staticmethod"
    ],
    "tifffile.tifffile.ZarrFileSequenceStore": [],
    "tifffile.tifffile.FileSequence": [
        "<builtin>.property",
        "typing.overload"
    ],
    "tifffile.tifffile.TiffSequence": [],
    "tifffile.tifffile.TiledSequence": [
        "<builtin>.property"
    ],
    "tifffile.tifffile.FileHandle": [
        "<builtin>.property"
    ],
    "tifffile.tifffile.FileCache": [],
    "tifffile.tifffile.StoredShape": [
        "<builtin>.property",
        "typing.overload"
    ],
    "tifffile.tifffile.NullContext": [],
    "tifffile.tifffile.Timer": [
        "<builtin>.staticmethod"
    ],
    "tifffile.tifffile.OmeXmlError": [],
    "tifffile.tifffile.OmeXml": [
        "<builtin>.staticmethod"
    ],
    "tifffile.tifffile.CompressionCodec": [],
    "tifffile.tifffile.PredictorCodec": [],
    "tifffile.tifffile.DATATYPE": [],
    "tifffile.tifffile.COMPRESSION": [],
    "tifffile.tifffile.PREDICTOR": [],
    "tifffile.tifffile.PHOTOMETRIC": [],
    "tifffile.tifffile.FILETYPE": [],
    "tifffile.tifffile.OFILETYPE": [],
    "tifffile.tifffile.FILLORDER": [],
    "tifffile.tifffile.ORIENTATION": [],
    "tifffile.tifffile.PLANARCONFIG": [],
    "tifffile.tifffile.RESUNIT": [],
    "tifffile.tifffile.EXTRASAMPLE": [],
    "tifffile.tifffile.SAMPLEFORMAT": [],
    "tifffile.tifffile.CHUNKMODE": [],
    "tifffile.tifffile._TIFF": [
        "<builtin>.property",
        "functools.cached_property"
    ],
    "tifffile.tifffile.lazyattr": [],
    "skimage.io.collection.ImageCollection": [
        "<builtin>.property"
    ],
    "skimage.io.collection.MultiImage": [
        "<builtin>.property"
    ],
    "skimage.io.manage_plugins._clear_plugins": [],
    "skimage.io.manage_plugins._scan_plugins": [
        "glob.glob",
        "skimage.io.manage_plugins._parse_config_file",
        "<builtin>.print"
    ],
    "glob.glob": [],
    "skimage.io.manage_plugins._parse_config_file": [
        "configparser.ConfigParser"
    ],
    "configparser.ConfigParser": [],
    "<builtin>.print": [],
    "skimage.io.manage_plugins.find_available_plugins": [
        "<builtin>.set"
    ],
    "skimage.io.sift": [
        "numpy"
    ],
    "skimage.io._image_stack": [
        "numpy"
    ],
    "skimage.io.manage_plugins.reset_plugins": [
        "skimage.io.manage_plugins._clear_plugins",
        "skimage.io.manage_plugins._load_preferred_plugins"
    ],
    "skimage.io.manage_plugins._load_preferred_plugins": [
        "<map>.keys",
        "skimage.io.manage_plugins._set_plugin"
    ],
    "skimage.io.manage_plugins._set_plugin": [
        "skimage.io.manage_plugins.use_plugin"
    ],
    "skimage.io.manage_plugins.use_plugin": [
        "skimage.io.manage_plugins._load",
        "<builtin>.RuntimeError"
    ],
    "skimage.io.manage_plugins._load": [
        "<builtin>.getattr",
        "<builtin>.ValueError",
        "<builtin>.print",
        "<builtin>.hasattr",
        "skimage.io.manage_plugins.find_available_plugins",
        "skimage.io.manage_plugins._inject_imread_collection_if_needed",
        "<builtin>.__import__"
    ],
    "skimage.io.manage_plugins._inject_imread_collection_if_needed": [
        "<builtin>.hasattr",
        "<builtin>.setattr",
        "<builtin>.getattr",
        "skimage.io.collection.imread_collection_wrapper"
    ],
    "skimage.io.collection.imread_collection_wrapper": [],
    "skimage.io._update_doc": [
        "<builtin>.max",
        "skimage.io._format_plugin_info_table",
        "extend",
        "skimage.io.manage_plugins.plugin_info",
        "textwrap.wrap",
        "<builtin>.zip",
        "<builtin>.len"
    ],
    "skimage.io.manage_plugins.plugin_info": [
        "<builtin>.ValueError"
    ],
    "<builtin>.max": [],
    "skimage.io._format_plugin_info_table": [
        "skimage.io._separator"
    ],
    "skimage.io._separator": [],
    "textwrap.wrap": [],
    "requests": [
        "charset_normalizer",
        "requests.utils",
        "<builtin>.getattr",
        "requests.__version__",
        "requests.sessions",
        "requests.models",
        "urllib3.exceptions",
        "urllib3.contrib.pyopenssl",
        "requests.packages",
        "requests.check_compatibility",
        "requests.api",
        "urllib3.contrib.pyopenssl.inject_into_urllib3",
        "requests.status_codes",
        "urllib3",
        "requests.exceptions",
        "requests._check_cryptography",
        "logging.NullHandler"
    ],
    "urllib3": [
        "urllib3.poolmanager.PoolManager.__init__",
        "urllib3.exceptions",
        "urllib3._version",
        "urllib3.contrib.emscripten",
        "urllib3.poolmanager",
        "urllib3.util.request",
        "urllib3.contrib.emscripten.inject_into_urllib3",
        "urllib3.util.timeout",
        "urllib3.filepost",
        "urllib3.response",
        "urllib3.connectionpool",
        "urllib3.util.retry",
        "logging.NullHandler",
        "urllib3._base_connection"
    ],
    "urllib3.exceptions": [
        "urllib3.exceptions.NameResolutionError",
        "urllib3.exceptions.MaxRetryError",
        "urllib3.exceptions.PoolError",
        "urllib3.exceptions.InsecurePlatformWarning",
        "urllib3.exceptions.TimeoutError",
        "urllib3.exceptions.NotOpenSSLWarning",
        "urllib3.exceptions.SecurityWarning",
        "urllib3.connectionpool",
        "urllib3.util.retry",
        "urllib3.exceptions.DecodeError",
        "urllib3.exceptions.ProxySchemeUnknown",
        "urllib3.exceptions.ProxyError",
        "urllib3.connection",
        "urllib3.exceptions.InvalidChunkLength",
        "urllib3.exceptions.ResponseNotChunked",
        "urllib3.exceptions.RequestError",
        "urllib3.exceptions.ResponseError",
        "urllib3.exceptions.LocationParseError",
        "urllib3.exceptions.HTTPWarning",
        "urllib3.exceptions.InsecureRequestWarning",
        "urllib3.exceptions.ClosedPoolError",
        "urllib3.exceptions.BodyNotHttplibCompatible",
        "urllib3.exceptions.DependencyWarning",
        "urllib3.exceptions.TimeoutStateError",
        "urllib3.exceptions.EmptyPoolError",
        "urllib3.exceptions.SystemTimeWarning",
        "urllib3.exceptions.LocationValueError",
        "urllib3.response",
        "urllib3.exceptions.ProtocolError",
        "urllib3.exceptions.URLSchemeUnknown",
        "urllib3.exceptions.HostChangedError",
        "urllib3.exceptions.InvalidHeader",
        "urllib3.exceptions.UnrewindableBodyError",
        "urllib3.exceptions.ProxySchemeUnsupported",
        "urllib3.exceptions.ReadTimeoutError",
        "urllib3.exceptions.HeaderParsingError",
        "urllib3.exceptions.FullPoolError",
        "urllib3.exceptions.NewConnectionError",
        "urllib3.exceptions.IncompleteRead",
        "urllib3.exceptions.HTTPError",
        "urllib3.exceptions.SSLError",
        "urllib3.exceptions.ConnectTimeoutError"
    ],
    "urllib3.connection": [
        "urllib3.util.connection",
        "<builtin>.hasattr",
        "urllib3.util.ssl_",
        "urllib3.util.url",
        "urllib3.util.request",
        "urllib3.connection.HTTPSConnection",
        "urllib3.connection._WrappedAndVerifiedSocket",
        "urllib3.util.timeout",
        "urllib3.util",
        "urllib3.util.ssltransport",
        "urllib3.connection.DummyConnection",
        "urllib3.util.wait",
        "urllib3.util.response",
        "urllib3.response",
        "urllib3._base_connection",
        "urllib3.util.ssl_match_hostname",
        "urllib3._version",
        "urllib3.exceptions",
        "urllib3.util.util",
        "urllib3.connection.BaseSSLError",
        "urllib3.connection.HTTPConnection"
    ],
    "urllib3.response": [
        "urllib3.response.HTTPResponse",
        "urllib3.response.DeflateDecoder",
        "urllib3.response.GzipDecoder",
        "urllib3.exceptions",
        "urllib3.response.ZstdDecoder",
        "urllib3.connection",
        "urllib3.response.GzipDecoderState",
        "urllib3.response.BrotliDecoder",
        "urllib3.response.BytesQueueBuffer",
        "urllib3.util.response",
        "urllib3.util",
        "urllib3.response.MultiDecoder",
        "urllib3.response.BaseHTTPResponse",
        "urllib3.response.ContentDecoder",
        "urllib3.connectionpool",
        "urllib3.util.retry",
        "urllib3._base_connection"
    ],
    "urllib3._base_connection": [
        "urllib3._base_connection.ProxyConfig",
        "urllib3.util.url",
        "urllib3.util.connection",
        "urllib3._base_connection.BaseHTTPSConnection",
        "urllib3._base_connection._ResponseOptions",
        "urllib3.util.timeout",
        "urllib3._base_connection.BaseHTTPConnection",
        "urllib3.response"
    ],
    "urllib3.util.connection": [
        "urllib3.exceptions",
        "urllib3.util.timeout",
        "urllib3.util.connection._has_ipv6",
        "urllib3._base_connection"
    ],
    "urllib3.util.timeout": [
        "urllib3.exceptions",
        "urllib3.util.timeout.Timeout",
        "urllib3.util.timeout._TYPE_DEFAULT"
    ],
    "urllib3.util.timeout._TYPE_DEFAULT": [],
    "urllib3.util.timeout.Timeout": [
        "<builtin>.staticmethod",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "urllib3.util.connection._has_ipv6": [],
    "urllib3.util.url": [
        "urllib3.exceptions",
        "urllib3.util.url.Url",
        "urllib3.util.util",
        "<builtin>.set"
    ],
    "urllib3.util.util": [],
    "urllib3.util.url.Url": [
        "<builtin>.property"
    ],
    "urllib3._base_connection.ProxyConfig": [],
    "urllib3._base_connection._ResponseOptions": [],
    "urllib3._base_connection.BaseHTTPConnection": [
        "<builtin>.property"
    ],
    "urllib3._base_connection.BaseHTTPSConnection": [],
    "urllib3.util": [
        "urllib3.util.url",
        "urllib3.util.connection",
        "urllib3.util.request",
        "urllib3.util.wait",
        "urllib3.util.ssl_",
        "urllib3.util.response",
        "urllib3.util.timeout",
        "urllib3.util.retry"
    ],
    "urllib3.util.request": [
        "urllib3.exceptions",
        "urllib3.util.util",
        "<builtin>.frozenset",
        "urllib3.util.request.ChunksAndContentLength",
        "urllib3.util.request._TYPE_FAILEDTELL"
    ],
    "urllib3.util.request._TYPE_FAILEDTELL": [],
    "urllib3.util.request.ChunksAndContentLength": [],
    "urllib3.util.response": [
        "urllib3.exceptions"
    ],
    "urllib3.util.retry": [
        "urllib3.exceptions",
        "urllib3.util.util",
        "urllib3.util.retry.RequestHistory",
        "urllib3.util.retry.Retry",
        "urllib3.util.retry.Retry.__init__",
        "urllib3.response",
        "urllib3.connectionpool"
    ],
    "urllib3.connectionpool": [
        "urllib3.connectionpool.HTTPConnectionPool",
        "urllib3.util.url",
        "urllib3.util.connection",
        "urllib3.util.ssl_match_hostname",
        "urllib3.exceptions",
        "urllib3.connectionpool.ConnectionPool",
        "urllib3.connection",
        "urllib3.util.proxy",
        "urllib3.util.request",
        "urllib3.util.util",
        "urllib3.util.timeout",
        "urllib3._request_methods",
        "urllib3.connectionpool.HTTPSConnectionPool",
        "urllib3.response",
        "urllib3.util.retry",
        "urllib3._base_connection"
    ],
    "urllib3._request_methods": [
        "urllib3.response",
        "urllib3.filepost",
        "urllib3._request_methods.RequestMethods",
        "urllib3._base_connection"
    ],
    "urllib3.filepost": [
        "urllib3.fields"
    ],
    "urllib3.fields": [
        "urllib3.fields.RequestField"
    ],
    "urllib3.fields.RequestField": [
        "<builtin>.classmethod"
    ],
    "urllib3._request_methods.RequestMethods": [],
    "urllib3.util.proxy": [
        "urllib3.connection",
        "urllib3.util.url"
    ],
    "urllib3.util.ssl_match_hostname": [
        "urllib3.util.ssl_match_hostname.CertificateError",
        "urllib3.util.ssl_"
    ],
    "urllib3.util.ssl_": [
        "<builtin>.getattr",
        "urllib3.util.url",
        "urllib3.util.ssltransport",
        "urllib3.exceptions",
        "urllib3.util.ssl_._is_has_never_check_common_name_reliable",
        "urllib3.util.ssl_._TYPE_PEER_CERT_RET_DICT"
    ],
    "urllib3.util.ssltransport": [
        "urllib3.exceptions",
        "urllib3.util.ssl_",
        "urllib3.util.ssltransport.SSLTransport"
    ],
    "urllib3.util.ssltransport.SSLTransport": [
        "<builtin>.staticmethod"
    ],
    "urllib3.util.ssl_._TYPE_PEER_CERT_RET_DICT": [],
    "urllib3.util.ssl_._is_has_never_check_common_name_reliable": [
        "urllib3.util.ssl_._is_bpo_43522_fixed"
    ],
    "urllib3.util.ssl_._is_bpo_43522_fixed": [],
    "urllib3.util.ssl_match_hostname.CertificateError": [],
    "urllib3.connectionpool.ConnectionPool": [],
    "urllib3.connectionpool.HTTPConnectionPool": [],
    "urllib3.connectionpool.HTTPSConnectionPool": [],
    "urllib3.util.retry.RequestHistory": [],
    "urllib3.util.retry.Retry": [
        "<builtin>.frozenset",
        "<builtin>.classmethod"
    ],
    "urllib3.util.retry.Retry.__init__": [
        "<builtin>.frozenset",
        "<builtin>.set"
    ],
    "urllib3.util.wait": [],
    "urllib3.response.ContentDecoder": [],
    "urllib3.response.DeflateDecoder": [],
    "urllib3.response.GzipDecoderState": [],
    "urllib3.response.GzipDecoder": [],
    "urllib3.response.BrotliDecoder": [],
    "urllib3.response.ZstdDecoder": [],
    "urllib3.response.MultiDecoder": [],
    "urllib3.response.BytesQueueBuffer": [],
    "urllib3.response.BaseHTTPResponse": [
        "<builtin>.property"
    ],
    "urllib3.response.HTTPResponse": [
        "<builtin>.property",
        "contextlib.contextmanager"
    ],
    "contextlib.contextmanager": [],
    "urllib3.connection.BaseSSLError": [],
    "urllib3._version": [],
    "urllib3.connection.HTTPConnection": [
        "<builtin>.property"
    ],
    "urllib3.connection.HTTPSConnection": [],
    "urllib3.connection._WrappedAndVerifiedSocket": [],
    "urllib3.connection.DummyConnection": [],
    "urllib3.exceptions.HTTPError": [],
    "urllib3.exceptions.HTTPWarning": [],
    "urllib3.exceptions.PoolError": [],
    "urllib3.exceptions.RequestError": [],
    "urllib3.exceptions.SSLError": [],
    "urllib3.exceptions.ProxyError": [],
    "urllib3.exceptions.DecodeError": [],
    "urllib3.exceptions.ProtocolError": [],
    "urllib3.exceptions.MaxRetryError": [],
    "urllib3.exceptions.HostChangedError": [],
    "urllib3.exceptions.TimeoutStateError": [],
    "urllib3.exceptions.TimeoutError": [],
    "urllib3.exceptions.ReadTimeoutError": [],
    "urllib3.exceptions.ConnectTimeoutError": [],
    "urllib3.exceptions.NewConnectionError": [
        "<builtin>.property"
    ],
    "urllib3.exceptions.NameResolutionError": [],
    "urllib3.exceptions.EmptyPoolError": [],
    "urllib3.exceptions.FullPoolError": [],
    "urllib3.exceptions.ClosedPoolError": [],
    "urllib3.exceptions.LocationValueError": [],
    "urllib3.exceptions.LocationParseError": [],
    "urllib3.exceptions.URLSchemeUnknown": [],
    "urllib3.exceptions.ResponseError": [],
    "urllib3.exceptions.SecurityWarning": [],
    "urllib3.exceptions.InsecureRequestWarning": [],
    "urllib3.exceptions.NotOpenSSLWarning": [],
    "urllib3.exceptions.SystemTimeWarning": [],
    "urllib3.exceptions.InsecurePlatformWarning": [],
    "urllib3.exceptions.DependencyWarning": [],
    "urllib3.exceptions.ResponseNotChunked": [],
    "urllib3.exceptions.BodyNotHttplibCompatible": [],
    "urllib3.exceptions.IncompleteRead": [],
    "urllib3.exceptions.InvalidChunkLength": [],
    "urllib3.exceptions.InvalidHeader": [],
    "urllib3.exceptions.ProxySchemeUnknown": [],
    "urllib3.exceptions.ProxySchemeUnsupported": [],
    "urllib3.exceptions.HeaderParsingError": [],
    "urllib3.exceptions.UnrewindableBodyError": [],
    "urllib3.poolmanager": [
        "urllib3.util.url",
        "urllib3.util.connection",
        "urllib3.exceptions",
        "urllib3.connection",
        "urllib3.util.proxy",
        "urllib3.poolmanager.ProxyManager",
        "urllib3.poolmanager.PoolManager",
        "urllib3.util.timeout",
        "urllib3._request_methods",
        "urllib3.poolmanager.PoolKey",
        "urllib3.response",
        "urllib3.connectionpool",
        "urllib3.util.retry"
    ],
    "urllib3.poolmanager.PoolKey": [],
    "urllib3.poolmanager.PoolManager": [],
    "urllib3.poolmanager.ProxyManager": [],
    "logging.NullHandler": [],
    "urllib3.poolmanager.PoolManager.__init__": [
        "_collections.RecentlyUsedContainer",
        "<builtin>.super",
        "<map>.copy"
    ],
    "_collections.RecentlyUsedContainer": [],
    "<map>.copy": [],
    "urllib3.contrib.emscripten": [
        "urllib3.connection",
        "urllib3.connectionpool",
        "urllib3.contrib.emscripten.connection"
    ],
    "urllib3.contrib.emscripten.connection": [
        "urllib3.contrib.emscripten.request",
        "urllib3.contrib.emscripten.connection.EmscriptenHTTPConnection.__init__",
        "urllib3.util.url",
        "urllib3.util.connection",
        "urllib3.contrib.emscripten.connection.EmscriptenHTTPSConnection",
        "urllib3.exceptions",
        "urllib3.connection",
        "urllib3.contrib.emscripten.connection.EmscriptenHTTPConnection",
        "urllib3.contrib.emscripten.connection.EmscriptenHTTPSConnection.__init__",
        "urllib3.util.timeout",
        "urllib3.contrib.emscripten.fetch",
        "urllib3.response",
        "urllib3.contrib.emscripten.response",
        "urllib3._base_connection"
    ],
    "urllib3.contrib.emscripten.fetch": [
        "urllib3.contrib.emscripten.request",
        "urllib3.contrib.emscripten.fetch.is_cross_origin_isolated",
        "urllib3.contrib.emscripten.fetch.is_in_browser_main_thread",
        "urllib3.contrib.emscripten.fetch._RequestError",
        "urllib3.contrib.emscripten.fetch._TimeoutError",
        "urllib3.contrib.emscripten.fetch._ReadStream",
        "urllib3.contrib.emscripten.fetch._StreamingError",
        "importlib.resources.files",
        "urllib3.contrib.emscripten.fetch._StreamingFetcher",
        "urllib3.contrib.emscripten.fetch._StreamingFetcher.__init__",
        "urllib3.contrib.emscripten.fetch.is_in_node",
        "urllib3.contrib.emscripten.response",
        "urllib3.contrib.emscripten.fetch.is_worker_available"
    ],
    "urllib3.contrib.emscripten.request": [
        "urllib3.contrib.emscripten.request.EmscriptenRequest",
        "urllib3._base_connection"
    ],
    "urllib3.contrib.emscripten.request.EmscriptenRequest": [
        "dataclasses.field"
    ],
    "dataclasses.field": [],
    "urllib3.contrib.emscripten.response": [
        "urllib3.contrib.emscripten.request",
        "urllib3.exceptions",
        "urllib3.contrib.emscripten.response.EmscriptenHttpResponseWrapper",
        "urllib3.response",
        "urllib3.util.retry",
        "urllib3.contrib.emscripten.response.EmscriptenResponse",
        "urllib3._base_connection"
    ],
    "urllib3.contrib.emscripten.response.EmscriptenResponse": [],
    "urllib3.contrib.emscripten.response.EmscriptenHttpResponseWrapper": [
        "<builtin>.property",
        "contextlib.contextmanager"
    ],
    "importlib.resources.files": [],
    "urllib3.contrib.emscripten.fetch._RequestError": [],
    "urllib3.contrib.emscripten.fetch._StreamingError": [],
    "urllib3.contrib.emscripten.fetch._TimeoutError": [],
    "urllib3.contrib.emscripten.fetch._ReadStream": [
        "<builtin>.property"
    ],
    "urllib3.contrib.emscripten.fetch._StreamingFetcher": [],
    "urllib3.contrib.emscripten.fetch.is_worker_available": [
        "<builtin>.hasattr"
    ],
    "urllib3.contrib.emscripten.fetch.is_cross_origin_isolated": [
        "<builtin>.hasattr"
    ],
    "urllib3.contrib.emscripten.fetch.is_in_browser_main_thread": [
        "<builtin>.hasattr"
    ],
    "urllib3.contrib.emscripten.fetch.is_in_node": [
        "<builtin>.hasattr"
    ],
    "urllib3.contrib.emscripten.fetch._StreamingFetcher.__init__": [
        "urllib3.contrib.emscripten.fetch._obj_from_dict"
    ],
    "urllib3.contrib.emscripten.fetch._obj_from_dict": [
        "pyodide.ffi.to_js"
    ],
    "pyodide.ffi.to_js": [],
    "urllib3.contrib.emscripten.connection.EmscriptenHTTPConnection": [
        "<builtin>.property"
    ],
    "urllib3.contrib.emscripten.connection.EmscriptenHTTPSConnection": [],
    "urllib3.contrib.emscripten.connection.EmscriptenHTTPConnection.__init__": [
        "<builtin>.isinstance"
    ],
    "urllib3.contrib.emscripten.connection.EmscriptenHTTPSConnection.__init__": [
        "<builtin>.super"
    ],
    "urllib3.contrib.emscripten.inject_into_urllib3": [],
    "requests.exceptions": [
        "requests.exceptions.URLRequired",
        "requests.exceptions.RequestException",
        "requests.exceptions.UnrewindableBodyError",
        "requests.exceptions.FileModeWarning",
        "requests.exceptions.JSONDecodeError",
        "requests.exceptions.InvalidURL",
        "requests.compat",
        "requests.exceptions.ProxyError",
        "requests.exceptions.MissingSchema",
        "requests.exceptions.InvalidProxyURL",
        "requests.exceptions.InvalidJSONError",
        "requests.exceptions.InvalidSchema",
        "requests.exceptions.TooManyRedirects",
        "requests.exceptions.RequestsWarning",
        "requests.exceptions.RequestsDependencyWarning",
        "requests.exceptions.ChunkedEncodingError",
        "requests.exceptions.StreamConsumedError",
        "requests.exceptions.HTTPError",
        "requests.exceptions.ConnectionError",
        "requests.exceptions.InvalidHeader",
        "requests.exceptions.ReadTimeout",
        "requests.exceptions.RetryError",
        "requests.exceptions.ContentDecodingError",
        "urllib3.exceptions",
        "requests.exceptions.SSLError",
        "requests.exceptions.Timeout",
        "requests.exceptions.ConnectTimeout"
    ],
    "requests.compat": [
        "requests.compat._resolve_char_detection"
    ],
    "requests.compat._resolve_char_detection": [],
    "requests.exceptions.RequestException": [],
    "requests.exceptions.InvalidJSONError": [],
    "requests.exceptions.JSONDecodeError": [],
    "requests.exceptions.HTTPError": [],
    "requests.exceptions.ConnectionError": [],
    "requests.exceptions.ProxyError": [],
    "requests.exceptions.SSLError": [],
    "requests.exceptions.Timeout": [],
    "requests.exceptions.ConnectTimeout": [],
    "requests.exceptions.ReadTimeout": [],
    "requests.exceptions.URLRequired": [],
    "requests.exceptions.TooManyRedirects": [],
    "requests.exceptions.MissingSchema": [],
    "requests.exceptions.InvalidSchema": [],
    "requests.exceptions.InvalidURL": [],
    "requests.exceptions.InvalidHeader": [],
    "requests.exceptions.InvalidProxyURL": [],
    "requests.exceptions.ChunkedEncodingError": [],
    "requests.exceptions.ContentDecodingError": [],
    "requests.exceptions.StreamConsumedError": [],
    "requests.exceptions.RetryError": [],
    "requests.exceptions.UnrewindableBodyError": [],
    "requests.exceptions.RequestsWarning": [],
    "requests.exceptions.FileModeWarning": [],
    "requests.exceptions.RequestsDependencyWarning": [],
    "charset_normalizer": [
        "charset_normalizer.utils",
        "charset_normalizer.version",
        "charset_normalizer.models",
        "charset_normalizer.api",
        "charset_normalizer.legacy"
    ],
    "charset_normalizer.api": [
        "charset_normalizer.constant",
        "charset_normalizer.md",
        "charset_normalizer.utils",
        "charset_normalizer.models",
        "charset_normalizer.cd"
    ],
    "charset_normalizer.cd": [
        "charset_normalizer.constant",
        "charset_normalizer.md",
        "charset_normalizer.utils",
        "charset_normalizer.models",
        "functools.lru_cache"
    ],
    "charset_normalizer.constant": [
        "<builtin>.sorted",
        "<builtin>.set",
        "re.compile",
        "<builtin>.range",
        "<builtin>.list",
        "<builtin>.filter",
        "<builtin>.int",
        "<builtin>.len"
    ],
    "re.compile": [],
    "<builtin>.filter": [],
    "charset_normalizer.md": [
        "charset_normalizer.md.SuspiciousDuplicateAccentPlugin",
        "charset_normalizer.md.MessDetectorPlugin",
        "charset_normalizer.constant",
        "charset_normalizer.md.SuspiciousRange",
        "charset_normalizer.md.ArabicIsolatedFormPlugin",
        "charset_normalizer.utils",
        "charset_normalizer.md.TooManyAccentuatedPlugin",
        "charset_normalizer.md.SuperWeirdWordPlugin",
        "charset_normalizer.md.UnprintablePlugin",
        "charset_normalizer.md.TooManySymbolOrPunctuationPlugin",
        "charset_normalizer.md.CjkInvalidStopPlugin",
        "charset_normalizer.md.ArchaicUpperLowerPlugin",
        "functools.lru_cache"
    ],
    "charset_normalizer.utils": [
        "charset_normalizer.constant",
        "<builtin>.len",
        "functools.lru_cache"
    ],
    "charset_normalizer.md.MessDetectorPlugin": [
        "<builtin>.property"
    ],
    "charset_normalizer.md.TooManySymbolOrPunctuationPlugin": [
        "<builtin>.property"
    ],
    "charset_normalizer.md.TooManyAccentuatedPlugin": [
        "<builtin>.property"
    ],
    "charset_normalizer.md.UnprintablePlugin": [
        "<builtin>.property"
    ],
    "charset_normalizer.md.SuspiciousDuplicateAccentPlugin": [
        "<builtin>.property"
    ],
    "charset_normalizer.md.SuspiciousRange": [
        "<builtin>.property"
    ],
    "charset_normalizer.md.SuperWeirdWordPlugin": [
        "<builtin>.property"
    ],
    "charset_normalizer.md.CjkInvalidStopPlugin": [
        "<builtin>.property"
    ],
    "charset_normalizer.md.ArchaicUpperLowerPlugin": [
        "<builtin>.property"
    ],
    "charset_normalizer.md.ArabicIsolatedFormPlugin": [
        "<builtin>.property"
    ],
    "charset_normalizer.models": [
        "charset_normalizer.constant",
        "charset_normalizer.utils",
        "charset_normalizer.models.CharsetMatches",
        "charset_normalizer.models.CliDetectionResult",
        "charset_normalizer.models.CharsetMatch"
    ],
    "charset_normalizer.models.CharsetMatch": [
        "<builtin>.property"
    ],
    "charset_normalizer.models.CharsetMatches": [],
    "charset_normalizer.models.CliDetectionResult": [
        "<builtin>.property"
    ],
    "charset_normalizer.legacy": [
        "charset_normalizer.constant",
        "charset_normalizer.api"
    ],
    "charset_normalizer.version": [
        "<str>.split"
    ],
    "<str>.split": [],
    "requests.check_compatibility": [
        "<builtin>.int",
        "<str>.split",
        "<builtin>.len"
    ],
    "urllib3.contrib.pyopenssl": [
        "<builtin>.getattr",
        "urllib3.contrib.pyopenssl.PyOpenSSLContext",
        "urllib3.contrib.pyopenssl.WrappedSocket",
        "<builtin>.hasattr",
        "<map>.items",
        "urllib3.contrib.pyopenssl.UnsupportedExtension",
        "urllib3"
    ],
    "urllib3.contrib.pyopenssl.UnsupportedExtension": [],
    "urllib3.contrib.pyopenssl.WrappedSocket": [],
    "urllib3.contrib.pyopenssl.PyOpenSSLContext": [
        "<builtin>.property"
    ],
    "urllib3.contrib.pyopenssl.inject_into_urllib3": [
        "urllib3.contrib.pyopenssl._validate_dependencies_met"
    ],
    "urllib3.contrib.pyopenssl._validate_dependencies_met": [
        "<builtin>.ImportError",
        "<builtin>.getattr",
        "OpenSSL.crypto.X509"
    ],
    "OpenSSL.crypto.X509": [],
    "requests._check_cryptography": [
        "<builtin>.map",
        "<builtin>.list"
    ],
    "<builtin>.map": [],
    "requests.packages": [
        "<builtin>.locals",
        "requests.compat",
        "<builtin>.list",
        "<builtin>.__import__"
    ],
    "<builtin>.locals": [],
    "requests.utils": [
        "<str>.encode",
        "requests.__version__",
        "requests._internal_utils",
        "certifi.core.where",
        "urllib3.util.request.make_headers",
        "requests.cookies",
        "requests.certs",
        "<builtin>.frozenset",
        "urllib3.util",
        "requests.compat",
        "requests.structures",
        "requests.exceptions"
    ],
    "requests.certs": [
        "certifi"
    ],
    "certifi": [
        "certifi.core"
    ],
    "certifi.core": [],
    "requests.__version__": [],
    "requests._internal_utils": [
        "requests.compat"
    ],
    "requests.cookies": [
        "requests._internal_utils",
        "requests.cookies.MockRequest",
        "requests.cookies.RequestsCookieJar",
        "requests.compat",
        "requests.cookies.MockResponse",
        "requests.cookies.CookieConflictError"
    ],
    "requests.cookies.MockRequest": [
        "<builtin>.property"
    ],
    "requests.cookies.MockResponse": [],
    "requests.cookies.CookieConflictError": [],
    "requests.cookies.RequestsCookieJar": [],
    "requests.structures": [
        "requests.structures.CaseInsensitiveDict",
        "requests.compat",
        "requests.structures.LookupDict"
    ],
    "requests.structures.CaseInsensitiveDict": [],
    "requests.structures.LookupDict": [],
    "certifi.core.where": [],
    "urllib3.util.request.make_headers": [
        "<builtin>.isinstance",
        "base64.b64encode"
    ],
    "base64.b64encode": [],
    "<str>.encode": [],
    "requests.api": [
        "requests.sessions"
    ],
    "requests.sessions": [
        "requests.utils",
        "requests.adapters",
        "requests._internal_utils",
        "requests.models",
        "requests.sessions.SessionRedirectMixin",
        "requests.cookies",
        "requests.compat",
        "requests.hooks",
        "requests.status_codes",
        "requests.structures",
        "requests.sessions.Session",
        "requests.auth",
        "requests.exceptions"
    ],
    "requests.adapters": [
        "requests.utils",
        "urllib3.util.ssl_.create_urllib3_context",
        "requests.models",
        "urllib3.exceptions",
        "requests.cookies",
        "urllib3.poolmanager",
        "requests.adapters.HTTPAdapter",
        "urllib3.util.ssl_",
        "urllib3.util",
        "requests.compat",
        "requests.structures",
        "requests.utils.extract_zipped_paths",
        "requests.adapters.BaseAdapter",
        "requests.auth",
        "requests.exceptions",
        "urllib3.contrib.socks",
        "urllib3.util.retry"
    ],
    "requests.auth": [
        "requests.utils",
        "requests.auth.HTTPBasicAuth",
        "requests._internal_utils",
        "requests.cookies",
        "requests.auth.HTTPDigestAuth",
        "requests.auth.HTTPProxyAuth",
        "requests.compat",
        "requests.auth.AuthBase"
    ],
    "requests.auth.AuthBase": [],
    "requests.auth.HTTPBasicAuth": [],
    "requests.auth.HTTPProxyAuth": [],
    "requests.auth.HTTPDigestAuth": [],
    "requests.models": [
        "requests.models.Response",
        "requests.utils",
        "requests._internal_utils",
        "requests.models.RequestEncodingMixin",
        "urllib3.exceptions",
        "requests.cookies",
        "requests.models.Request",
        "urllib3.fields",
        "urllib3.util",
        "urllib3.filepost",
        "requests.compat",
        "requests.hooks",
        "requests.status_codes",
        "requests.structures",
        "requests.auth",
        "requests.exceptions",
        "requests.models.RequestHooksMixin",
        "requests.models.PreparedRequest"
    ],
    "requests.hooks": [],
    "requests.status_codes": [
        "requests.structures",
        "requests.structures.LookupDict.__init__",
        "requests.status_codes._init"
    ],
    "requests.structures.LookupDict.__init__": [
        "<builtin>.super"
    ],
    "requests.status_codes._init": [
        "<map>.items",
        "<builtin>.setattr",
        "requests.status_codes._init.doc",
        "<builtin>.sorted"
    ],
    "requests.status_codes._init.doc": [],
    "requests.models.RequestEncodingMixin": [
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "requests.models.RequestHooksMixin": [],
    "requests.models.Request": [],
    "requests.models.PreparedRequest": [
        "<builtin>.staticmethod"
    ],
    "requests.models.Response": [
        "<builtin>.property"
    ],
    "urllib3.contrib.socks": [
        "urllib3.util.url",
        "urllib3.contrib.socks.SOCKSHTTPSConnection",
        "urllib3.exceptions",
        "urllib3.contrib.socks.SOCKSHTTPSConnectionPool",
        "urllib3.connection",
        "urllib3.poolmanager",
        "urllib3.contrib.socks.SOCKSHTTPConnectionPool",
        "urllib3.contrib.socks.SOCKSProxyManager",
        "urllib3.contrib.socks.SOCKSConnection",
        "urllib3.contrib.socks._TYPE_SOCKS_OPTIONS",
        "urllib3.connectionpool"
    ],
    "urllib3.contrib.socks._TYPE_SOCKS_OPTIONS": [],
    "urllib3.contrib.socks.SOCKSConnection": [],
    "urllib3.contrib.socks.SOCKSHTTPSConnection": [],
    "urllib3.contrib.socks.SOCKSHTTPConnectionPool": [],
    "urllib3.contrib.socks.SOCKSHTTPSConnectionPool": [],
    "urllib3.contrib.socks.SOCKSProxyManager": [],
    "urllib3.util.ssl_.create_urllib3_context": [
        "<builtin>.getattr",
        "ssl.SSLContext",
        "<builtin>.ValueError",
        "<builtin>.hasattr",
        "<builtin>.TypeError"
    ],
    "ssl.SSLContext": [],
    "requests.utils.extract_zipped_paths": [
        "requests.utils.atomic_open",
        "<str>.split"
    ],
    "requests.utils.atomic_open": [],
    "requests.adapters.BaseAdapter": [],
    "requests.adapters.HTTPAdapter": [],
    "requests.sessions.SessionRedirectMixin": [],
    "requests.sessions.Session": [],
    "skimage.segmentation": [
        "skimage.segmentation.slic_superpixels",
        "skimage.morphology",
        "skimage.segmentation.boundaries",
        "skimage.segmentation._felzenszwalb",
        "skimage.segmentation._clear_border",
        "skimage.segmentation._join",
        "skimage.segmentation.active_contour_model",
        "skimage.segmentation.random_walker_segmentation",
        "skimage.segmentation.morphsnakes",
        "skimage.segmentation._expand_labels",
        "skimage.segmentation._chan_vese",
        "skimage.segmentation._watershed",
        "skimage.segmentation._quickshift"
    ],
    "skimage.segmentation._expand_labels": [
        "scipy.ndimage",
        "numpy"
    ],
    "scipy.ndimage": [
        "scipy._lib._testutils",
        "<builtin>.dir",
        "scipy.ndimage._filters",
        "scipy.ndimage.fourier",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.ndimage.morphology",
        "scipy.ndimage.filters",
        "scipy.ndimage._fourier",
        "scipy.ndimage._measurements",
        "scipy.ndimage._interpolation",
        "scipy.ndimage.measurements",
        "scipy.ndimage.interpolation",
        "scipy.ndimage._morphology"
    ],
    "scipy.ndimage._filters": [
        "scipy._lib._util",
        "numpy",
        "scipy.ndimage._ni_support",
        "scipy.ndimage._ni_docstrings",
        "scipy._lib.doccer.filldoc.decorate"
    ],
    "scipy._lib._util": [
        "scipy._lib._util.MapWrapper",
        "numpy",
        "numpy.random",
        "collections.namedtuple",
        "scipy._lib._util._RichResult",
        "scipy._lib._util._FunctionWrapper",
        "typing.TypeVar",
        "scipy._lib._util.Generator",
        "contextlib.contextmanager",
        "numpy.lib._version.NumpyVersion.__init__",
        "scipy._lib._array_api"
    ],
    "scipy._lib._array_api": [
        "scipy._lib.array_api_compat.numpy",
        "scipy._lib.array_api_compat",
        "numpy",
        "numpy.typing"
    ],
    "scipy._lib.array_api_compat": [
        "scipy._lib.array_api_compat.common"
    ],
    "scipy._lib.array_api_compat.common": [
        "scipy._lib.array_api_compat.common._helpers"
    ],
    "scipy._lib.array_api_compat.common._helpers": [
        "scipy._lib.array_api_compat.common._typing",
        "scipy._lib.array_api_compat.common._helpers._dask_device"
    ],
    "scipy._lib.array_api_compat.common._typing": [
        "typing.TypeVar",
        "scipy._lib.array_api_compat.common._typing.NestedSequence"
    ],
    "scipy._lib.array_api_compat.common._typing.NestedSequence": [],
    "scipy._lib.array_api_compat.common._helpers._dask_device": [],
    "scipy._lib.array_api_compat.numpy": [
        "numpy",
        "scipy._lib.array_api_compat.numpy._aliases",
        "scipy._lib.array_api_compat.numpy.linalg",
        "scipy._lib.array_api_compat.common._helpers",
        "<builtin>.__import__"
    ],
    "scipy._lib.array_api_compat.numpy._aliases": [
        "functools.partial",
        "numpy",
        "scipy._lib.array_api_compat._internal.get_xp.inner",
        "scipy._lib.array_api_compat.common._aliases",
        "scipy._lib.array_api_compat._internal.get_xp",
        "<builtin>.hasattr",
        "scipy._lib.array_api_compat._internal"
    ],
    "scipy._lib.array_api_compat.common._aliases": [
        "scipy._lib.array_api_compat.common._typing",
        "numpy",
        "scipy._lib.array_api_compat.common._aliases.UniqueInverseResult",
        "scipy._lib.array_api_compat.common._aliases.UniqueCountsResult",
        "scipy._lib.array_api_compat.common._helpers",
        "scipy._lib.array_api_compat.common._aliases.UniqueAllResult"
    ],
    "scipy._lib.array_api_compat.common._aliases.UniqueAllResult": [],
    "scipy._lib.array_api_compat.common._aliases.UniqueCountsResult": [],
    "scipy._lib.array_api_compat.common._aliases.UniqueInverseResult": [],
    "scipy._lib.array_api_compat._internal": [],
    "functools.partial": [],
    "scipy._lib.array_api_compat._internal.get_xp": [],
    "scipy._lib.array_api_compat._internal.get_xp.inner": [
        "functools.wraps",
        "inspect.signature"
    ],
    "functools.wraps": [],
    "inspect.signature": [],
    "scipy._lib.array_api_compat.numpy.linalg": [
        "numpy",
        "scipy._lib.array_api_compat._internal.get_xp.inner",
        "numpy.linalg",
        "scipy._lib.array_api_compat.common._linalg",
        "scipy._lib.array_api_compat._internal.get_xp",
        "<builtin>.hasattr",
        "scipy._lib.array_api_compat._internal",
        "scipy._lib.array_api_compat.numpy._aliases"
    ],
    "scipy._lib.array_api_compat.common._linalg": [
        "scipy._lib.array_api_compat.common._linalg.EighResult",
        "numpy.core.numeric",
        "scipy._lib.array_api_compat.common._typing",
        "numpy",
        "scipy._lib.array_api_compat.common._aliases",
        "scipy._lib.array_api_compat._internal",
        "scipy._lib.array_api_compat.common._linalg.QRResult",
        "scipy._lib.array_api_compat.common._linalg.SlogdetResult",
        "scipy._lib.array_api_compat.common._linalg.SVDResult"
    ],
    "scipy._lib.array_api_compat.common._linalg.EighResult": [],
    "scipy._lib.array_api_compat.common._linalg.QRResult": [],
    "scipy._lib.array_api_compat.common._linalg.SlogdetResult": [],
    "scipy._lib.array_api_compat.common._linalg.SVDResult": [],
    "numpy.lib._version.NumpyVersion.__init__": [
        "<builtin>.ValueError",
        "<builtin>.bool",
        "<builtin>.int",
        "<builtin>.len"
    ],
    "scipy._lib._util.Generator": [],
    "collections.namedtuple": [],
    "scipy._lib._util._FunctionWrapper": [],
    "scipy._lib._util.MapWrapper": [],
    "scipy._lib._util._RichResult": [],
    "scipy.ndimage._ni_support": [
        "numpy"
    ],
    "scipy.ndimage._ni_docstrings": [
        "scipy._lib.doccer",
        "scipy._lib.doccer.filldoc"
    ],
    "scipy._lib.doccer": [],
    "scipy._lib.doccer.filldoc": [
        "scipy._lib.doccer.unindent_dict"
    ],
    "scipy._lib.doccer.unindent_dict": [
        "<map>.items",
        "scipy._lib.doccer.unindent_string"
    ],
    "scipy._lib.doccer.unindent_string": [
        "scipy._lib.doccer.indentcount_lines"
    ],
    "scipy._lib.doccer.indentcount_lines": [
        "<builtin>.min",
        "<builtin>.len"
    ],
    "<builtin>.min": [],
    "scipy._lib.doccer.filldoc.decorate": [
        "scipy._lib.doccer.docformat"
    ],
    "scipy._lib.doccer.docformat": [
        "append",
        "<map>.items",
        "scipy._lib.doccer.indentcount_lines",
        "<builtin>.len"
    ],
    "scipy.ndimage._fourier": [
        "scipy._lib._util",
        "numpy",
        "scipy.ndimage._ni_support"
    ],
    "scipy.ndimage._interpolation": [
        "scipy._lib._util",
        "numpy",
        "scipy.ndimage._ni_support",
        "scipy.ndimage._ni_docstrings",
        "scipy.special",
        "scipy._lib.doccer.filldoc.decorate"
    ],
    "scipy.special": [
        "scipy.special._logsumexp",
        "scipy._lib._testutils",
        "scipy.special._sf_error",
        "scipy.special._lambertw",
        "scipy.special.spfun_stats",
        "scipy.special._ellip_harm",
        "scipy.special.add_newdocs",
        "scipy.special._load_libsf_error_state",
        "scipy.special._spfun_stats",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.special.sf_error",
        "scipy.special._spherical_bessel",
        "scipy.special._basic",
        "scipy.special._orthogonal",
        "scipy.special.basic",
        "scipy.special.orthogonal",
        "scipy.special._support_alternative_backends",
        "scipy.special.specfun"
    ],
    "scipy.special._load_libsf_error_state": [],
    "scipy.special._sf_error": [
        "scipy.special._sf_error.SpecialFunctionWarning",
        "scipy.special._sf_error.SpecialFunctionError"
    ],
    "scipy.special._sf_error.SpecialFunctionWarning": [],
    "scipy.special._sf_error.SpecialFunctionError": [],
    "scipy.special._support_alternative_backends": [
        "numpy",
        "<builtin>.getattr",
        "scipy",
        "<map>.items",
        "<builtin>.list",
        "scipy.special._support_alternative_backends.support_alternative_backends",
        "scipy._lib._array_api"
    ],
    "scipy": [
        "scipy.version",
        "numpy",
        "scipy._lib._testutils",
        "scipy._lib._ccallback",
        "scipy._lib._pep440",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.__config__",
        "scipy._distributor_init",
        "<builtin>.ImportError",
        "scipy._lib._pep440.Version.__init__",
        "scipy._lib._pep440.parse"
    ],
    "scipy.__config__": [
        "<str>.lower",
        "<builtin>.bool",
        "scipy.__config__._cleanup",
        "scipy.__config__.DisplayModes"
    ],
    "scipy.__config__.DisplayModes": [],
    "<str>.lower": [],
    "scipy.__config__._cleanup": [
        "<map>.items",
        "<builtin>.isinstance",
        "scipy.__config__._cleanup"
    ],
    "scipy.version": [],
    "scipy._distributor_init": [],
    "scipy._lib._pep440": [
        "scipy._lib._pep440.Version",
        "scipy._lib._pep440._BaseVersion",
        "scipy._lib._pep440.LegacyVersion",
        "scipy._lib._pep440.NegativeInfinity",
        "scipy._lib._pep440.InvalidVersion",
        "scipy._lib._pep440.Infinity"
    ],
    "scipy._lib._pep440.Infinity": [],
    "scipy._lib._pep440.NegativeInfinity": [],
    "scipy._lib._pep440.InvalidVersion": [],
    "scipy._lib._pep440._BaseVersion": [],
    "scipy._lib._pep440.LegacyVersion": [
        "<builtin>.property"
    ],
    "scipy._lib._pep440.Version": [
        "<builtin>.property"
    ],
    "scipy._lib._pep440.parse": [
        "scipy._lib._pep440.Version.__init__",
        "scipy._lib._pep440.LegacyVersion.__init__"
    ],
    "scipy._lib._pep440.Version.__init__": [
        "scipy._lib._pep440._parse_local_version",
        "scipy._lib._pep440._cmpkey",
        "scipy._lib._pep440._parse_letter_version",
        "<builtin>.tuple",
        "<builtin>.int"
    ],
    "scipy._lib._pep440._parse_letter_version": [
        "<builtin>.int"
    ],
    "scipy._lib._pep440._parse_local_version": [
        "<builtin>.int",
        "<builtin>.tuple"
    ],
    "scipy._lib._pep440._cmpkey": [
        "<builtin>.isinstance",
        "<builtin>.reversed",
        "<builtin>.list",
        "<builtin>.tuple"
    ],
    "<builtin>.reversed": [],
    "scipy._lib._pep440.LegacyVersion.__init__": [
        "<builtin>.str",
        "scipy._lib._pep440._legacy_cmpkey"
    ],
    "scipy._lib._pep440._legacy_cmpkey": [
        "append",
        "<builtin>.tuple",
        "pop",
        "scipy._lib._pep440._parse_version_parts",
        "<str>.startswith"
    ],
    "scipy._lib._pep440._parse_version_parts": [
        "<map>.get"
    ],
    "<map>.get": [],
    "<str>.startswith": [],
    "scipy._lib._ccallback": [
        "scipy._lib._ccallback.LowLevelCallable",
        "scipy._lib._ccallback.CData"
    ],
    "scipy._lib._ccallback.CData": [],
    "scipy._lib._ccallback.LowLevelCallable": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "scipy._lib._testutils": [
        "scipy._lib._testutils.FPUModeChangeWarning",
        "scipy._lib._testutils.PytestTester",
        "numpy",
        "scipy",
        "scipy._lib._testutils._TestPythranFunc"
    ],
    "scipy._lib._testutils.FPUModeChangeWarning": [],
    "scipy._lib._testutils.PytestTester": [],
    "scipy._lib._testutils._TestPythranFunc": [],
    "scipy._lib._testutils.PytestTester.__init__": [],
    "scipy.special._support_alternative_backends.support_alternative_backends": [
        "<builtin>.getattr"
    ],
    "scipy.special._basic": [
        "numpy"
    ],
    "scipy.special._logsumexp": [
        "scipy._lib._util",
        "numpy"
    ],
    "scipy.special._orthogonal": [
        "<map>.keys",
        "numpy",
        "append",
        "scipy.special._orthogonal.orthopoly1d",
        "<builtin>.globals",
        "scipy.linalg",
        "<map>.items",
        "scipy.special",
        "<builtin>.list"
    ],
    "scipy.linalg": [
        "scipy.linalg._solvers",
        "scipy.linalg._decomp_svd",
        "scipy.linalg._decomp_lu",
        "scipy.linalg.decomp_cholesky",
        "scipy.linalg.blas",
        "scipy.linalg._special_matrices",
        "scipy.linalg._decomp_qr",
        "scipy.linalg._decomp_schur",
        "<builtin>.dir",
        "scipy.linalg._decomp",
        "scipy.linalg._misc",
        "scipy.linalg.decomp_qr",
        "scipy.linalg.decomp",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.linalg._decomp_ldl",
        "scipy.linalg.lapack",
        "scipy.linalg._decomp_qz",
        "scipy.linalg.misc",
        "scipy._lib._testutils",
        "scipy.linalg._decomp_cossin",
        "scipy.linalg._matfuncs",
        "scipy.linalg._sketches",
        "scipy.linalg._procrustes",
        "scipy.linalg.decomp_svd",
        "scipy.linalg._decomp_cholesky",
        "scipy.linalg.decomp_schur",
        "scipy.linalg.basic",
        "scipy.linalg._basic",
        "scipy.linalg.special_matrices",
        "scipy.linalg.decomp_lu",
        "scipy.linalg._decomp_polar",
        "scipy.linalg.matfuncs"
    ],
    "scipy.linalg._misc": [
        "numpy",
        "numpy.linalg",
        "scipy.linalg.lapack",
        "scipy.linalg._misc.LinAlgWarning",
        "scipy.linalg.blas"
    ],
    "scipy.linalg.blas": [
        "scipy.linalg",
        "scipy.linalg.blas._memoize_get_funcs",
        "numpy"
    ],
    "scipy.linalg.blas._memoize_get_funcs": [],
    "scipy.linalg.lapack": [
        "scipy.linalg.blas._memoize_get_funcs",
        "numpy",
        "numpy.core.iinfo",
        "numpy.core.getlimits.iinfo.__init__",
        "scipy.linalg",
        "re.compile",
        "scipy.linalg.blas"
    ],
    "numpy.core.iinfo": [],
    "scipy.linalg._misc.LinAlgWarning": [],
    "scipy.linalg._basic": [
        "numpy",
        "scipy.linalg._decomp",
        "scipy.linalg._misc",
        "scipy.linalg._decomp_svd",
        "numpy.core.multiarray.can_cast",
        "scipy.linalg.lapack"
    ],
    "scipy.linalg._decomp": [
        "scipy._lib._util",
        "scipy.linalg._misc",
        "numpy",
        "scipy.linalg.lapack"
    ],
    "scipy.linalg._decomp_svd": [
        "scipy.linalg._misc",
        "numpy",
        "scipy.linalg.lapack",
        "scipy.linalg._decomp"
    ],
    "numpy.core.multiarray.can_cast": [],
    "scipy.linalg._decomp_lu": [
        "numpy.core.multiarray.can_cast",
        "scipy.linalg._misc",
        "numpy",
        "scipy.linalg.lapack"
    ],
    "scipy.linalg._decomp_ldl": [
        "scipy._lib._util",
        "scipy.linalg.lapack",
        "numpy",
        "scipy.linalg._decomp"
    ],
    "scipy.linalg._decomp_cholesky": [
        "scipy.linalg._misc",
        "numpy",
        "scipy.linalg.lapack"
    ],
    "scipy.linalg._decomp_qr": [
        "scipy.linalg._misc",
        "scipy.linalg.lapack",
        "numpy"
    ],
    "scipy.linalg._decomp_qz": [
        "scipy.linalg._misc",
        "numpy",
        "scipy.linalg.lapack"
    ],
    "scipy.linalg._decomp_schur": [
        "numpy",
        "scipy.linalg._decomp",
        "numpy.linalg",
        "scipy.linalg._misc",
        "numpy.core.finfo",
        "scipy.linalg.lapack"
    ],
    "numpy.core.finfo": [],
    "scipy.linalg._decomp_polar": [
        "scipy.linalg",
        "numpy"
    ],
    "scipy.linalg._matfuncs": [
        "numpy",
        "scipy.linalg._decomp_schur",
        "scipy.linalg._misc",
        "numpy.core.finfo",
        "scipy.linalg._decomp_svd",
        "scipy.linalg",
        "scipy.linalg._matfuncs_sqrtm",
        "scipy.linalg._basic",
        "scipy.linalg._expm_frechet"
    ],
    "scipy.linalg._expm_frechet": [
        "scipy.linalg",
        "numpy"
    ],
    "scipy.linalg._matfuncs_sqrtm": [
        "scipy._lib._util",
        "numpy",
        "scipy.linalg._decomp_schur",
        "scipy.linalg._misc",
        "scipy.linalg._matfuncs_sqrtm.SqrtmError",
        "scipy.linalg.lapack"
    ],
    "scipy.linalg._matfuncs_sqrtm.SqrtmError": [],
    "scipy.linalg._special_matrices": [
        "numpy.lib.stride_tricks",
        "numpy"
    ],
    "scipy.linalg._solvers": [
        "scipy.linalg._special_matrices",
        "scipy.linalg._decomp_qr",
        "numpy",
        "scipy.linalg._decomp_schur",
        "scipy.linalg._decomp",
        "numpy.linalg",
        "scipy.linalg._decomp_lu",
        "scipy.linalg.lapack",
        "scipy.linalg._basic",
        "scipy.linalg._decomp_qz"
    ],
    "scipy.linalg._procrustes": [
        "numpy",
        "scipy.linalg._decomp_svd"
    ],
    "scipy.linalg._sketches": [
        "scipy._lib._util",
        "numpy",
        "scipy.sparse"
    ],
    "scipy.sparse": [
        "scipy.sparse._bsr",
        "scipy.sparse.coo",
        "scipy.sparse.extract",
        "scipy.sparse._base",
        "scipy.sparse._extract",
        "scipy.sparse.compressed",
        "scipy.sparse._matrix_io",
        "<builtin>.dir",
        "scipy.sparse.sputils",
        "scipy.sparse.dok",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.sparse._dia",
        "scipy.sparse._csc",
        "scipy.sparse.base",
        "scipy._lib._testutils",
        "scipy.sparse.construct",
        "scipy.sparse.sparsetools",
        "scipy.sparse.csgraph",
        "scipy.sparse.bsr",
        "scipy.sparse._dok",
        "scipy.sparse.csc",
        "scipy.sparse._coo",
        "scipy.sparse._construct",
        "scipy.sparse._csr",
        "scipy.sparse._matrix",
        "scipy.sparse._lil",
        "scipy.sparse.csr",
        "scipy.sparse.dia",
        "scipy.sparse.data",
        "scipy.sparse.lil"
    ],
    "scipy.sparse._base": [
        "scipy.sparse._base._spbase",
        "numpy",
        "scipy.sparse._matrix",
        "scipy.sparse._base.sparray",
        "<builtin>.frozenset",
        "scipy.sparse._base.SparseWarning",
        "scipy.sparse._base.SparseFormatWarning",
        "scipy.sparse._sputils",
        "scipy.sparse._base.SparseEfficiencyWarning"
    ],
    "scipy.sparse._sputils": [
        "scipy._lib._util",
        "numpy",
        "scipy.sparse"
    ],
    "scipy.sparse._matrix": [
        "scipy.sparse._matrix.spmatrix"
    ],
    "scipy.sparse._matrix.spmatrix": [
        "<builtin>.property"
    ],
    "scipy.sparse._base.SparseWarning": [],
    "scipy.sparse._base.SparseFormatWarning": [],
    "scipy.sparse._base.SparseEfficiencyWarning": [],
    "scipy.sparse._base._spbase": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "scipy.sparse._base.sparray": [],
    "scipy.sparse._csr": [
        "numpy",
        "scipy.sparse._csr.csr_array",
        "scipy.sparse._matrix",
        "scipy.sparse._base",
        "scipy.sparse._csr.csr_matrix",
        "scipy.sparse._csr._csr_base",
        "scipy.sparse._compressed",
        "scipy.sparse._sputils"
    ],
    "scipy.sparse._compressed": [
        "scipy._lib._util",
        "scipy.sparse._index",
        "numpy",
        "scipy.sparse._base",
        "scipy.sparse._compressed._cs_matrix",
        "scipy.sparse._data",
        "scipy.sparse._sputils"
    ],
    "scipy.sparse._data": [
        "numpy",
        "scipy.sparse._data._create_method",
        "scipy.sparse._base",
        "<builtin>.setattr",
        "scipy.sparse._data._minmax_mixin",
        "scipy.sparse._sputils",
        "scipy.sparse._data._data_matrix"
    ],
    "scipy.sparse._data._data_matrix": [
        "<builtin>.property"
    ],
    "scipy.sparse._data._create_method": [],
    "scipy.sparse._data._minmax_mixin": [],
    "scipy.sparse._index": [
        "scipy.sparse._index.IndexMixin",
        "numpy",
        "scipy.sparse._sputils",
        "numpy.typing"
    ],
    "scipy.sparse._index.IndexMixin": [],
    "scipy.sparse._compressed._cs_matrix": [
        "<builtin>.property"
    ],
    "scipy.sparse._csr._csr_base": [
        "<builtin>.staticmethod"
    ],
    "scipy.sparse._csr.csr_array": [],
    "scipy.sparse._csr.csr_matrix": [],
    "scipy.sparse._csc": [
        "numpy",
        "scipy.sparse._matrix",
        "scipy.sparse._base",
        "scipy.sparse._csc.csc_array",
        "scipy.sparse._csc.csc_matrix",
        "scipy.sparse._compressed",
        "scipy.sparse._csc._csc_base",
        "scipy.sparse._sputils"
    ],
    "scipy.sparse._csc._csc_base": [
        "<builtin>.staticmethod"
    ],
    "scipy.sparse._csc.csc_array": [],
    "scipy.sparse._csc.csc_matrix": [],
    "scipy.sparse._lil": [
        "scipy.sparse._index",
        "scipy.sparse._lil._lil_base",
        "numpy",
        "scipy.sparse._matrix",
        "scipy.sparse._base",
        "scipy.sparse._lil.lil_array",
        "scipy.sparse._lil.lil_matrix",
        "scipy.sparse._sputils"
    ],
    "scipy.sparse._lil._lil_base": [],
    "scipy.sparse._lil.lil_array": [],
    "scipy.sparse._lil.lil_matrix": [],
    "scipy.sparse._dok": [
        "scipy.sparse._index",
        "scipy.sparse._dok._dok_base",
        "numpy",
        "scipy.sparse._dok.dok_matrix",
        "scipy.sparse._matrix",
        "scipy.sparse._base",
        "scipy.sparse._dok.dok_array",
        "scipy.sparse._sputils"
    ],
    "scipy.sparse._dok._dok_base": [
        "<builtin>.classmethod"
    ],
    "scipy.sparse._dok.dok_array": [],
    "scipy.sparse._dok.dok_matrix": [
        "<builtin>.property"
    ],
    "scipy.sparse._coo": [
        "scipy._lib._util",
        "numpy",
        "scipy.sparse._matrix",
        "scipy.sparse._base",
        "scipy.sparse._coo.coo_matrix",
        "scipy.sparse._data",
        "scipy.sparse._coo.coo_array",
        "scipy.sparse._sputils",
        "scipy.sparse._coo._coo_base"
    ],
    "scipy.sparse._coo._coo_base": [
        "<builtin>.property"
    ],
    "scipy.sparse._coo.coo_array": [],
    "scipy.sparse._coo.coo_matrix": [],
    "scipy.sparse._dia": [
        "scipy._lib._util",
        "numpy",
        "scipy.sparse._dia.dia_matrix",
        "scipy.sparse._matrix",
        "scipy.sparse._base",
        "scipy.sparse._dia.dia_array",
        "scipy.sparse._data",
        "scipy.sparse._dia._dia_base",
        "scipy.sparse._sputils"
    ],
    "scipy.sparse._dia._dia_base": [],
    "scipy.sparse._dia.dia_array": [],
    "scipy.sparse._dia.dia_matrix": [],
    "scipy.sparse._bsr": [
        "scipy._lib._util",
        "numpy",
        "scipy.sparse._bsr._bsr_base",
        "scipy.sparse._matrix",
        "scipy.sparse._base",
        "scipy.sparse._data",
        "scipy.sparse._bsr.bsr_array",
        "scipy.sparse._compressed",
        "scipy.sparse._sputils",
        "scipy.sparse._bsr.bsr_matrix"
    ],
    "scipy.sparse._bsr._bsr_base": [
        "<builtin>.property"
    ],
    "scipy.sparse._bsr.bsr_array": [],
    "scipy.sparse._bsr.bsr_matrix": [],
    "scipy.sparse._construct": [
        "scipy._lib._util",
        "scipy.sparse._bsr",
        "scipy.sparse._csc",
        "numpy",
        "scipy.sparse._csr",
        "scipy.sparse._base",
        "scipy.sparse._dia",
        "scipy.sparse._coo",
        "scipy.sparse._sputils"
    ],
    "scipy.sparse._extract": [
        "scipy.sparse._base",
        "scipy.sparse._coo"
    ],
    "scipy.sparse._matrix_io": [
        "<builtin>.dict",
        "numpy",
        "scipy"
    ],
    "scipy.sparse.csgraph": [
        "scipy.sparse.csgraph._laplacian",
        "scipy._lib._testutils",
        "scipy._lib._testutils.PytestTester.__init__"
    ],
    "scipy.sparse.csgraph._laplacian": [
        "scipy.sparse.linalg",
        "numpy",
        "scipy.sparse",
        "scipy.sparse._sputils"
    ],
    "scipy.sparse.linalg": [
        "scipy.sparse.linalg._onenormest",
        "scipy.sparse.linalg._special_sparse_arrays",
        "scipy._lib._testutils",
        "<builtin>.dir",
        "scipy.sparse.linalg._eigen",
        "scipy.sparse.linalg._interface",
        "scipy.sparse.linalg.isolve",
        "scipy.sparse.linalg._dsolve",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.sparse.linalg._expm_multiply",
        "scipy.sparse.linalg.interface",
        "scipy.sparse.linalg.dsolve",
        "scipy.sparse.linalg._norm",
        "scipy.sparse.linalg._matfuncs",
        "scipy.sparse.linalg._isolve",
        "scipy.sparse.linalg.matfuncs",
        "scipy.sparse.linalg.eigen"
    ],
    "scipy.sparse.linalg._isolve": [
        "scipy.sparse.linalg._isolve.iterative",
        "scipy._lib._testutils",
        "scipy.sparse.linalg._isolve.lsqr",
        "scipy.sparse.linalg._isolve.lgmres",
        "scipy.sparse.linalg._isolve.tfqmr",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.sparse.linalg._isolve.lsmr",
        "scipy.sparse.linalg._isolve.minres",
        "scipy.sparse.linalg._isolve._gcrotmk"
    ],
    "scipy.sparse.linalg._isolve.iterative": [
        "scipy.linalg",
        "scipy.sparse.linalg._isolve.utils",
        "numpy",
        "scipy.sparse.linalg._interface"
    ],
    "scipy.sparse.linalg._interface": [
        "scipy.sparse.linalg._interface._CustomLinearOperator",
        "numpy",
        "scipy.sparse.linalg._interface._AdjointMatrixOperator",
        "scipy.sparse.linalg._interface.LinearOperator",
        "scipy.sparse.linalg._interface.MatrixLinearOperator",
        "scipy.sparse.linalg._interface.IdentityOperator",
        "scipy.sparse.linalg._interface._SumLinearOperator",
        "scipy.sparse.linalg._interface._AdjointLinearOperator",
        "scipy.sparse.linalg._interface._TransposedLinearOperator",
        "scipy.sparse",
        "scipy.sparse.linalg._interface._PowerLinearOperator",
        "scipy.sparse.linalg._interface._ProductLinearOperator",
        "scipy.sparse.linalg._interface._ScaledLinearOperator",
        "scipy.sparse._sputils"
    ],
    "scipy.sparse.linalg._interface.LinearOperator": [
        "<builtin>.property"
    ],
    "scipy.sparse.linalg._interface._CustomLinearOperator": [],
    "scipy.sparse.linalg._interface._AdjointLinearOperator": [],
    "scipy.sparse.linalg._interface._TransposedLinearOperator": [],
    "scipy.sparse.linalg._interface._SumLinearOperator": [],
    "scipy.sparse.linalg._interface._ProductLinearOperator": [],
    "scipy.sparse.linalg._interface._ScaledLinearOperator": [],
    "scipy.sparse.linalg._interface._PowerLinearOperator": [],
    "scipy.sparse.linalg._interface.MatrixLinearOperator": [],
    "scipy.sparse.linalg._interface._AdjointMatrixOperator": [
        "<builtin>.property"
    ],
    "scipy.sparse.linalg._interface.IdentityOperator": [],
    "scipy.sparse.linalg._isolve.utils": [
        "numpy",
        "scipy.sparse.linalg._interface"
    ],
    "scipy.sparse.linalg._isolve.minres": [
        "numpy.linalg",
        "scipy.sparse.linalg._isolve.utils",
        "numpy"
    ],
    "scipy.sparse.linalg._isolve.lgmres": [
        "scipy.sparse.linalg._isolve.iterative",
        "numpy",
        "numpy.linalg",
        "scipy.sparse.linalg._isolve.utils",
        "scipy.linalg",
        "scipy.sparse.linalg._isolve._gcrotmk"
    ],
    "scipy.sparse.linalg._isolve._gcrotmk": [
        "scipy.sparse.linalg._isolve.iterative",
        "numpy",
        "numpy.linalg",
        "scipy.sparse.linalg._isolve.utils",
        "scipy.linalg"
    ],
    "scipy.sparse.linalg._isolve.lsqr": [
        "numpy.core.finfo",
        "numpy",
        "scipy.sparse.linalg._interface"
    ],
    "scipy.sparse.linalg._isolve.lsmr": [
        "scipy.sparse.linalg._isolve.lsqr",
        "numpy.linalg",
        "numpy",
        "scipy.sparse.linalg._interface"
    ],
    "scipy.sparse.linalg._isolve.tfqmr": [
        "scipy.sparse.linalg._isolve.iterative",
        "scipy.sparse.linalg._isolve.utils",
        "numpy"
    ],
    "scipy.sparse.linalg._dsolve": [
        "scipy._lib._testutils",
        "scipy.sparse.linalg._dsolve._add_newdocs",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.sparse.linalg._dsolve.linsolve"
    ],
    "scipy.sparse.linalg._dsolve.linsolve": [
        "scipy.sparse.linalg._dsolve.linsolve.MatrixRankWarning",
        "numpy",
        "scipy.linalg",
        "scipy.sparse",
        "<builtin>.dict",
        "scipy.sparse._sputils"
    ],
    "scipy.sparse.linalg._dsolve.linsolve.MatrixRankWarning": [],
    "scipy.sparse.linalg._dsolve._add_newdocs": [
        "numpy.core.function_base.add_newdoc",
        "numpy.lib"
    ],
    "scipy.sparse.linalg._eigen": [
        "scipy._lib._testutils",
        "scipy.sparse.linalg._eigen.lobpcg",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.sparse.linalg._eigen._svds",
        "scipy.sparse.linalg._eigen.arpack"
    ],
    "scipy.sparse.linalg._eigen.arpack": [
        "scipy.sparse.linalg._eigen.arpack.arpack"
    ],
    "scipy.sparse.linalg._eigen.arpack.arpack": [
        "scipy.sparse.linalg._eigen.arpack.arpack._ArpackParams",
        "scipy.sparse",
        "scipy.sparse.linalg._eigen.arpack.arpack.IterOpInv",
        "scipy.sparse.linalg._eigen.arpack.arpack.ArpackNoConvergence",
        "scipy.sparse.linalg._eigen.arpack.arpack.LuInv",
        "scipy.sparse._sputils",
        "scipy._lib._util",
        "scipy.sparse.linalg._interface",
        "scipy.sparse.linalg._eigen.arpack.arpack.ArpackError",
        "scipy._lib._threadsafety",
        "scipy.sparse.linalg._eigen.arpack.arpack._SymmetricArpackParams",
        "scipy.sparse.linalg._eigen.arpack.arpack.IterInv",
        "numpy",
        "scipy._lib._threadsafety.ReentrancyLock.__init__",
        "scipy.linalg",
        "scipy.sparse.linalg._eigen.arpack.arpack._UnsymmetricArpackParams",
        "scipy.sparse.linalg._eigen.arpack.arpack.SpLuInv",
        "<map>.copy",
        "scipy.sparse.linalg"
    ],
    "scipy._lib._threadsafety": [
        "scipy._lib.decorator",
        "scipy._lib._threadsafety.ReentrancyError",
        "scipy._lib._threadsafety.ReentrancyLock"
    ],
    "scipy._lib.decorator": [
        "scipy._lib.decorator.FunctionMaker",
        "scipy._lib.decorator.ContextManager",
        "inspect.getfullargspec",
        "scipy._lib.decorator.decorator",
        "<builtin>.len"
    ],
    "scipy._lib.decorator.FunctionMaker": [
        "<builtin>.classmethod"
    ],
    "scipy._lib.decorator.ContextManager": [],
    "inspect.getfullargspec": [],
    "scipy._lib.decorator.decorator": [
        "scipy._lib.decorator.get_init",
        "scipy._lib.decorator.decorate",
        "scipy._lib.decorator.FunctionMaker.create"
    ],
    "scipy._lib.decorator.decorate": [
        "<builtin>.hasattr",
        "scipy._lib.decorator.FunctionMaker.create"
    ],
    "scipy._lib.decorator.FunctionMaker.create": [
        "<builtin>.isinstance",
        "scipy._lib.decorator.FunctionMaker.make",
        "scipy._lib.decorator.FunctionMaker.__init__",
        "<str>.split",
        "<str>.splitlines",
        "<str>.strip"
    ],
    "scipy._lib.decorator.FunctionMaker.__init__": [
        "<builtin>.getattr",
        "<builtin>.setattr",
        "inspect.getfullargspec",
        "<builtin>.enumerate",
        "<builtin>.hasattr",
        "<builtin>.list",
        "<builtin>.TypeError"
    ],
    "<builtin>.enumerate": [],
    "<str>.splitlines": [],
    "scipy._lib.decorator.FunctionMaker.make": [
        "<builtin>.compile",
        "<builtin>.exec",
        "<str>.endswith",
        "<builtin>.next",
        "<builtin>.print",
        "<builtin>.SyntaxError",
        "<builtin>.NameError",
        "<builtin>.set",
        "scipy._lib.decorator.FunctionMaker.update",
        "<str>.split",
        "<builtin>.vars"
    ],
    "<builtin>.vars": [],
    "<builtin>.SyntaxError": [],
    "<builtin>.NameError": [],
    "<str>.endswith": [],
    "<builtin>.compile": [],
    "<builtin>.exec": [],
    "scipy._lib.decorator.FunctionMaker.update": [
        "<builtin>.getattr"
    ],
    "scipy._lib.decorator.get_init": [],
    "scipy._lib._threadsafety.ReentrancyError": [],
    "scipy._lib._threadsafety.ReentrancyLock": [],
    "scipy.sparse.linalg._eigen.arpack.arpack.ArpackError": [],
    "scipy.sparse.linalg._eigen.arpack.arpack.ArpackNoConvergence": [],
    "scipy.sparse.linalg._eigen.arpack.arpack._ArpackParams": [],
    "scipy.sparse.linalg._eigen.arpack.arpack._SymmetricArpackParams": [],
    "scipy.sparse.linalg._eigen.arpack.arpack._UnsymmetricArpackParams": [],
    "scipy.sparse.linalg._eigen.arpack.arpack.SpLuInv": [],
    "scipy.sparse.linalg._eigen.arpack.arpack.LuInv": [],
    "scipy.sparse.linalg._eigen.arpack.arpack.IterInv": [],
    "scipy.sparse.linalg._eigen.arpack.arpack.IterOpInv": [
        "<builtin>.property"
    ],
    "scipy._lib._threadsafety.ReentrancyLock.__init__": [],
    "scipy.sparse.linalg._eigen.lobpcg": [
        "scipy._lib._testutils",
        "<builtin>.dir",
        "scipy.sparse.linalg._eigen.lobpcg.lobpcg",
        "scipy._lib._testutils.PytestTester.__init__"
    ],
    "scipy.sparse.linalg._eigen.lobpcg.lobpcg": [
        "scipy.linalg",
        "scipy.sparse.linalg",
        "numpy",
        "scipy.sparse"
    ],
    "<builtin>.dir": [],
    "scipy.sparse.linalg._eigen._svds": [
        "scipy._lib._util",
        "scipy.sparse.linalg._svdp",
        "numpy",
        "scipy.sparse.linalg._eigen.lobpcg.lobpcg",
        "scipy.sparse.linalg._interface",
        "scipy.linalg"
    ],
    "scipy.sparse.linalg._svdp": [
        "scipy._lib._util",
        "numpy",
        "scipy.linalg",
        "scipy.sparse.linalg",
        "scipy.sparse.linalg._svdp._AProd"
    ],
    "scipy.sparse.linalg._svdp._AProd": [
        "<builtin>.property"
    ],
    "scipy.sparse.linalg._matfuncs": [
        "scipy.sparse._construct",
        "numpy",
        "scipy.sparse.linalg._interface",
        "scipy.sparse._base",
        "scipy.sparse.linalg._matfuncs._ExpmPadeHelper",
        "scipy.sparse.linalg._expm_multiply",
        "scipy.sparse.linalg",
        "scipy.sparse",
        "scipy.sparse.linalg._matfuncs.ProductOperator",
        "scipy.linalg._basic",
        "scipy.sparse._sputils",
        "scipy.sparse.linalg._matfuncs.MatrixPowerOperator"
    ],
    "scipy.sparse.linalg._expm_multiply": [
        "scipy.sparse.linalg._onenormest",
        "scipy.linalg._decomp_qr",
        "numpy",
        "scipy.sparse.linalg._interface",
        "scipy.linalg",
        "scipy.sparse.linalg._expm_multiply.LazyOperatorNormInfo",
        "scipy.sparse.linalg",
        "scipy.sparse._sputils"
    ],
    "scipy.sparse.linalg._onenormest": [
        "scipy.sparse.linalg",
        "scipy.sparse.linalg._onenormest._blocked_elementwise",
        "numpy"
    ],
    "scipy.sparse.linalg._onenormest._blocked_elementwise": [],
    "scipy.sparse.linalg._expm_multiply.LazyOperatorNormInfo": [],
    "scipy.sparse.linalg._matfuncs.MatrixPowerOperator": [
        "<builtin>.property"
    ],
    "scipy.sparse.linalg._matfuncs.ProductOperator": [
        "<builtin>.property"
    ],
    "scipy.sparse.linalg._matfuncs._ExpmPadeHelper": [
        "<builtin>.property"
    ],
    "scipy.sparse.linalg._norm": [
        "scipy.sparse.linalg",
        "numpy",
        "scipy.sparse"
    ],
    "scipy.sparse.linalg._special_sparse_arrays": [
        "numpy",
        "scipy.sparse.linalg._special_sparse_arrays.Sakurai",
        "scipy.sparse.linalg._special_sparse_arrays.LaplacianNd",
        "scipy.sparse.linalg",
        "scipy.sparse",
        "scipy.sparse.linalg._special_sparse_arrays.MikotaM",
        "scipy.sparse.linalg._special_sparse_arrays.MikotaK",
        "scipy.sparse.linalg._special_sparse_arrays.MikotaPair"
    ],
    "scipy.sparse.linalg._special_sparse_arrays.LaplacianNd": [],
    "scipy.sparse.linalg._special_sparse_arrays.Sakurai": [],
    "scipy.sparse.linalg._special_sparse_arrays.MikotaM": [],
    "scipy.sparse.linalg._special_sparse_arrays.MikotaK": [],
    "scipy.sparse.linalg._special_sparse_arrays.MikotaPair": [],
    "scipy.sparse.linalg.isolve": [
        "scipy._lib.deprecation"
    ],
    "scipy._lib.deprecation": [
        "scipy._lib.deprecation._DeprecationHelperStr",
        "<builtin>.object"
    ],
    "<builtin>.object": [],
    "scipy._lib.deprecation._DeprecationHelperStr": [],
    "scipy.sparse.linalg.dsolve": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.linalg.interface": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.linalg.eigen": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.linalg.matfuncs": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.base": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.bsr": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.compressed": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.construct": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.coo": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.csc": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.csr": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.data": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.dia": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.dok": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.extract": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.lil": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.sparsetools": [
        "scipy._lib.deprecation"
    ],
    "scipy.sparse.sputils": [
        "scipy._lib.deprecation"
    ],
    "scipy.linalg._decomp_cossin": [
        "scipy._lib._util",
        "scipy.linalg.lapack",
        "scipy.linalg",
        "numpy"
    ],
    "scipy.linalg.decomp": [
        "scipy._lib.deprecation"
    ],
    "scipy.linalg.decomp_cholesky": [
        "scipy._lib.deprecation"
    ],
    "scipy.linalg.decomp_lu": [
        "scipy._lib.deprecation"
    ],
    "scipy.linalg.decomp_qr": [
        "scipy._lib.deprecation"
    ],
    "scipy.linalg.decomp_svd": [
        "scipy._lib.deprecation"
    ],
    "scipy.linalg.decomp_schur": [
        "scipy._lib.deprecation"
    ],
    "scipy.linalg.basic": [
        "scipy._lib.deprecation"
    ],
    "scipy.linalg.misc": [
        "scipy._lib.deprecation"
    ],
    "scipy.linalg.special_matrices": [
        "scipy._lib.deprecation"
    ],
    "scipy.linalg.matfuncs": [
        "scipy._lib.deprecation"
    ],
    "scipy.special._orthogonal.orthopoly1d": [],
    "scipy.special._spfun_stats": [
        "scipy.special",
        "numpy"
    ],
    "scipy.special._ellip_harm": [
        "numpy",
        "numpy.lib.function_base.vectorize.__init__"
    ],
    "numpy.lib.function_base.vectorize.__init__": [
        "numpy.lib.function_base._parse_gufunc_signature",
        "numpy.lib.function_base.iterable",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "<builtin>.set"
    ],
    "numpy.lib.function_base.iterable": [
        "<builtin>.iter"
    ],
    "<builtin>.iter": [],
    "numpy.lib.function_base._parse_gufunc_signature": [
        "<builtin>.ValueError",
        "<builtin>.tuple"
    ],
    "scipy.special._lambertw": [
        "numpy"
    ],
    "scipy.special._spherical_bessel": [
        "numpy"
    ],
    "scipy.special.add_newdocs": [
        "scipy._lib.deprecation"
    ],
    "scipy.special.basic": [
        "scipy._lib.deprecation"
    ],
    "scipy.special.orthogonal": [
        "scipy._lib.deprecation",
        "<map>.keys",
        "<builtin>.list"
    ],
    "scipy.special.specfun": [
        "scipy._lib.deprecation"
    ],
    "scipy.special.sf_error": [
        "scipy._lib.deprecation"
    ],
    "scipy.special.spfun_stats": [
        "scipy._lib.deprecation"
    ],
    "scipy.ndimage._measurements": [
        "numpy",
        "scipy.ndimage._ni_support",
        "scipy.ndimage._morphology"
    ],
    "scipy.ndimage._morphology": [
        "numpy",
        "scipy.ndimage._ni_support",
        "scipy.ndimage._filters"
    ],
    "scipy.ndimage.filters": [
        "scipy._lib.deprecation"
    ],
    "scipy.ndimage.fourier": [
        "scipy._lib.deprecation"
    ],
    "scipy.ndimage.interpolation": [
        "scipy._lib.deprecation"
    ],
    "scipy.ndimage.measurements": [
        "scipy._lib.deprecation"
    ],
    "scipy.ndimage.morphology": [
        "scipy._lib.deprecation"
    ],
    "skimage.segmentation.random_walker_segmentation": [
        "numpy",
        "scipy.ndimage",
        "scipy.sparse.linalg",
        "scipy.sparse",
        "skimage._shared.utils.channel_as_last_axis.__init__",
        "skimage._shared.utils",
        "skimage.util"
    ],
    "skimage._shared.utils": [
        "numpy",
        "skimage._shared.utils.channel_as_last_axis",
        "skimage._shared.utils.deprecate_func",
        "skimage._shared.utils.remove_arg",
        "skimage._shared.utils.deprecate_kwarg",
        "skimage._shared.utils._DecoratorBaseClass",
        "skimage._shared.utils.change_default_value"
    ],
    "skimage._shared.utils._DecoratorBaseClass": [],
    "skimage._shared.utils.change_default_value": [],
    "skimage._shared.utils.remove_arg": [],
    "skimage._shared.utils.deprecate_kwarg": [],
    "skimage._shared.utils.channel_as_last_axis": [],
    "skimage._shared.utils.deprecate_func": [],
    "skimage.util": [
        "skimage.util.compare",
        "skimage.util.arraycrop",
        "skimage.util._slice_along_axes",
        "numpy",
        "skimage.util._montage",
        "skimage.util.unique",
        "skimage.util.apply_parallel",
        "skimage.util._regular_grid",
        "skimage.util.noise",
        "skimage.util._label",
        "skimage.util.dtype",
        "skimage.util._invert",
        "skimage.util.shape",
        "skimage.util._map_array"
    ],
    "skimage.util.dtype": [
        "<map>.keys",
        "<map>.update",
        "numpy",
        "numpy.core.iinfo",
        "numpy.core.getlimits.iinfo.__init__",
        "<builtin>.list"
    ],
    "skimage.util._slice_along_axes": [],
    "skimage.util._invert": [
        "numpy",
        "skimage.util.dtype"
    ],
    "skimage.util._label": [
        "numpy"
    ],
    "skimage.util._montage": [
        "skimage._shared.utils",
        "numpy",
        "skimage._shared.utils.channel_as_last_axis.__init__",
        "skimage"
    ],
    "skimage": [
        "skimage._raise_build_error",
        "lazy_loader",
        "skimage.util.lookfor",
        "skimage._shared.tester.PytestTester.__init__",
        "skimage.data",
        "skimage._shared.version_requirements",
        "skimage._shared.version_requirements.ensure_python_version",
        "skimage.util.dtype",
        "skimage._shared.tester",
        "lazy_loader.attach_stub"
    ],
    "skimage._shared.version_requirements": [],
    "skimage._shared.version_requirements.ensure_python_version": [
        "<builtin>.str",
        "<builtin>.isinstance",
        "<builtin>.ImportError",
        "platform.python_version"
    ],
    "platform.python_version": [],
    "lazy_loader": [
        "lazy_loader._StubVisitor",
        "lazy_loader.DelayedImportErrorModule"
    ],
    "lazy_loader.DelayedImportErrorModule": [],
    "lazy_loader._StubVisitor": [],
    "lazy_loader.attach_stub": [
        "<builtin>.ValueError",
        "<builtin>.open",
        "lazy_loader.attach",
        "lazy_loader._StubVisitor.__init__"
    ],
    "<builtin>.open": [],
    "lazy_loader._StubVisitor.__init__": [
        "<builtin>.set"
    ],
    "lazy_loader.attach": [
        "<builtin>.sorted",
        "lazy_loader.attach.__getattr__",
        "<map>.items",
        "<builtin>.set",
        "<builtin>.list"
    ],
    "lazy_loader.attach.__getattr__": [
        "<builtin>.AttributeError",
        "<builtin>.getattr"
    ],
    "<builtin>.AttributeError": [],
    "skimage._raise_build_error": [
        "<builtin>.ImportError"
    ],
    "skimage.util.lookfor": [
        "numpy"
    ],
    "skimage.data": [
        "lazy_loader",
        "lazy_loader.attach_stub"
    ],
    "skimage._shared.tester": [
        "skimage._shared.tester.PytestTester"
    ],
    "skimage._shared.tester.PytestTester": [],
    "skimage._shared.tester.PytestTester.__init__": [],
    "skimage._shared.utils.channel_as_last_axis.__init__": [
        "<builtin>.set"
    ],
    "skimage.util._map_array": [
        "skimage.util._map_array.ArrayMap",
        "numpy"
    ],
    "skimage.util._map_array.ArrayMap": [
        "<builtin>.property"
    ],
    "skimage.util._regular_grid": [
        "numpy"
    ],
    "skimage.util.apply_parallel": [
        "numpy"
    ],
    "skimage.util.arraycrop": [
        "numpy"
    ],
    "skimage.util.compare": [
        "numpy",
        "skimage.util.dtype"
    ],
    "skimage.util.noise": [
        "skimage._shared.utils",
        "skimage._shared.utils.deprecate_kwarg.__init__",
        "numpy",
        "skimage.util.dtype"
    ],
    "skimage._shared.utils.deprecate_kwarg.__init__": [],
    "skimage.util.shape": [
        "numpy.lib.stride_tricks",
        "numpy"
    ],
    "skimage.util.unique": [
        "numpy"
    ],
    "skimage.segmentation.active_contour_model": [
        "numpy",
        "skimage.filters",
        "scipy.interpolate",
        "skimage._shared.utils",
        "skimage.util"
    ],
    "scipy.interpolate": [
        "scipy.interpolate.fitpack",
        "scipy.interpolate._ndgriddata",
        "scipy.interpolate.rbf",
        "scipy.interpolate._ndbspline",
        "scipy.interpolate._polyint",
        "scipy.interpolate.ndgriddata",
        "scipy.interpolate._rgi",
        "scipy.interpolate.interpolate",
        "<builtin>.dir",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.interpolate.fitpack2",
        "scipy.interpolate._rbfinterp",
        "scipy._lib._testutils",
        "scipy.interpolate._interpolate",
        "scipy.interpolate._cubic",
        "scipy.interpolate.polyint",
        "scipy.interpolate._fitpack_py",
        "scipy.interpolate._fitpack2",
        "scipy.interpolate._pade",
        "scipy.interpolate._bsplines",
        "scipy.interpolate._rbf"
    ],
    "scipy.interpolate._interpolate": [
        "scipy._lib._util",
        "numpy",
        "scipy.interpolate._fitpack_py",
        "scipy.interpolate._interpolate.BPoly",
        "scipy.interpolate._interpolate._PPolyBase",
        "scipy.interpolate._interpolate.NdPPoly",
        "scipy.special",
        "scipy.interpolate._interpolate.interp1d",
        "scipy.interpolate._bsplines",
        "scipy.interpolate._polyint",
        "scipy.interpolate._interpolate.interp2d",
        "scipy.interpolate._interpolate.PPoly"
    ],
    "scipy.interpolate._fitpack_py": [
        "scipy.interpolate._fitpack_impl",
        "scipy.interpolate._bsplines",
        "numpy"
    ],
    "scipy.interpolate._fitpack_impl": [
        "numpy"
    ],
    "scipy.interpolate._bsplines": [
        "scipy._lib._util",
        "scipy.interpolate._fitpack_impl",
        "numpy",
        "scipy.interpolate._bsplines.BSpline",
        "scipy.linalg",
        "scipy.special",
        "scipy.optimize",
        "scipy.sparse"
    ],
    "scipy.optimize": [
        "scipy.optimize._root",
        "scipy.optimize._basinhopping",
        "scipy.optimize._constraints",
        "scipy.optimize.nonlin",
        "scipy.optimize.slsqp",
        "scipy.optimize._linprog",
        "scipy.optimize.minpack",
        "scipy.optimize.minpack2",
        "scipy.optimize.optimize",
        "<builtin>.dir",
        "scipy.optimize._slsqp_py",
        "scipy.optimize._hessian_update_strategy",
        "scipy.optimize._minimize",
        "scipy.optimize._shgo",
        "scipy.optimize._optimize",
        "scipy.optimize.linesearch",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.optimize._direct_py",
        "scipy.optimize.zeros",
        "scipy.optimize.lbfgsb",
        "scipy.optimize._tnc",
        "scipy.optimize._qap",
        "scipy._lib._testutils",
        "scipy.optimize._lsq.lsq_linear",
        "scipy.optimize._lbfgsb_py",
        "scipy.optimize._minpack_py",
        "scipy.optimize._zeros_py",
        "scipy.optimize._isotonic",
        "scipy.optimize._dual_annealing",
        "scipy.optimize._differentialevolution",
        "scipy.optimize.cobyla",
        "scipy.optimize._cobyla_py",
        "scipy.optimize._nnls",
        "scipy.optimize._nonlin",
        "scipy.optimize._lsq.least_squares",
        "scipy.optimize.moduleTNC",
        "scipy.optimize._milp",
        "scipy.optimize.tnc",
        "scipy.optimize._root_scalar"
    ],
    "scipy.optimize._optimize": [
        "scipy._lib._util",
        "numpy",
        "scipy.optimize._optimize.OptimizeResult",
        "scipy.optimize._optimize._LineSearchError",
        "scipy.optimize._optimize.OptimizeWarning",
        "numpy.core.finfo",
        "scipy.optimize._optimize._Brute_Wrapper",
        "scipy.linalg",
        "scipy.optimize._linesearch",
        "scipy.optimize._differentiable_functions",
        "scipy.sparse.linalg",
        "scipy.optimize._optimize._MaxFuncCallError",
        "scipy.optimize._optimize.BracketError",
        "scipy.optimize._optimize.MemoizeJac",
        "scipy.optimize._optimize.Brent",
        "scipy.optimize._numdiff"
    ],
    "scipy.optimize._linesearch": [
        "numpy",
        "scipy.optimize._linesearch.LineSearchWarning",
        "scipy.optimize._dcsrch"
    ],
    "scipy.optimize._dcsrch": [
        "numpy",
        "scipy.optimize._dcsrch.DCSRCH"
    ],
    "scipy.optimize._dcsrch.DCSRCH": [],
    "scipy.optimize._linesearch.LineSearchWarning": [],
    "scipy.optimize._numdiff": [
        "numpy",
        "numpy.linalg",
        "scipy.sparse.linalg",
        "scipy.sparse",
        "scipy._lib._array_api"
    ],
    "scipy.optimize._differentiable_functions": [
        "scipy.optimize._differentiable_functions.LinearVectorFunction",
        "scipy.optimize._differentiable_functions.ScalarFunction",
        "numpy",
        "scipy.optimize._hessian_update_strategy",
        "scipy.optimize._differentiable_functions.VectorFunction",
        "scipy.optimize._differentiable_functions.IdentityVectorFunction",
        "scipy.sparse.linalg",
        "scipy.sparse",
        "scipy._lib._array_api",
        "scipy.optimize._numdiff"
    ],
    "scipy.optimize._hessian_update_strategy": [
        "scipy.optimize._hessian_update_strategy.FullHessianUpdateStrategy",
        "numpy",
        "scipy.optimize._hessian_update_strategy.HessianUpdateStrategy",
        "numpy.linalg",
        "scipy.optimize._hessian_update_strategy.BFGS",
        "scipy.linalg",
        "scipy.optimize._hessian_update_strategy.SR1"
    ],
    "scipy.optimize._hessian_update_strategy.HessianUpdateStrategy": [],
    "scipy.optimize._hessian_update_strategy.FullHessianUpdateStrategy": [
        "scipy.linalg.blas.get_blas_funcs"
    ],
    "scipy.linalg.blas.get_blas_funcs": [
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "scipy.linalg.blas._get_funcs",
        "<builtin>.RuntimeError"
    ],
    "scipy.linalg.blas._get_funcs": [
        "<builtin>.getattr",
        "<builtin>.ValueError",
        "scipy.linalg.blas.find_best_blas_type",
        "<builtin>.isinstance",
        "append",
        "<map>.get"
    ],
    "scipy.linalg.blas.find_best_blas_type": [
        "<map>.get",
        "<builtin>.max",
        "<builtin>.len"
    ],
    "scipy.optimize._hessian_update_strategy.BFGS": [],
    "scipy.optimize._hessian_update_strategy.SR1": [],
    "scipy.optimize._differentiable_functions.ScalarFunction": [
        "<builtin>.property"
    ],
    "scipy.optimize._differentiable_functions.VectorFunction": [],
    "scipy.optimize._differentiable_functions.LinearVectorFunction": [],
    "scipy.optimize._differentiable_functions.IdentityVectorFunction": [],
    "scipy.optimize._optimize.MemoizeJac": [],
    "scipy.optimize._optimize.OptimizeResult": [],
    "scipy.optimize._optimize.OptimizeWarning": [],
    "scipy.optimize._optimize._MaxFuncCallError": [],
    "scipy.optimize._optimize._LineSearchError": [],
    "scipy.optimize._optimize.Brent": [],
    "scipy.optimize._optimize.BracketError": [],
    "scipy.optimize._optimize._Brute_Wrapper": [],
    "scipy.optimize._minimize": [
        "scipy.optimize._trustregion_krylov",
        "numpy",
        "scipy.optimize._cobyqa_py",
        "scipy.optimize._lbfgsb_py",
        "scipy.optimize._slsqp_py",
        "scipy.optimize._trustregion_exact",
        "scipy.optimize._optimize",
        "scipy.optimize._constraints",
        "scipy.optimize._trustregion_constr",
        "scipy.optimize._trustregion_ncg",
        "scipy.optimize._differentiable_functions",
        "scipy.optimize._cobyla_py",
        "scipy.optimize._trustregion_dogleg",
        "scipy.optimize._tnc"
    ],
    "scipy.optimize._trustregion_dogleg": [
        "scipy.linalg",
        "scipy.optimize._trustregion",
        "scipy.optimize._trustregion_dogleg.DoglegSubproblem",
        "numpy"
    ],
    "scipy.optimize._trustregion": [
        "scipy.optimize._trustregion.BaseQuadraticSubproblem",
        "numpy",
        "scipy.optimize._hessian_update_strategy",
        "scipy.optimize._optimize",
        "scipy.linalg",
        "scipy.optimize._differentiable_functions"
    ],
    "scipy.optimize._trustregion.BaseQuadraticSubproblem": [
        "<builtin>.property"
    ],
    "scipy.optimize._trustregion_dogleg.DoglegSubproblem": [],
    "scipy.optimize._trustregion_ncg": [
        "scipy.linalg",
        "scipy.optimize._trustregion",
        "numpy",
        "scipy.optimize._trustregion_ncg.CGSteihaugSubproblem"
    ],
    "scipy.optimize._trustregion_ncg.CGSteihaugSubproblem": [],
    "scipy.optimize._trustregion_krylov": [
        "scipy.optimize._trustregion",
        "scipy.optimize._trlib"
    ],
    "scipy.optimize._trlib": [],
    "scipy.optimize._trustregion_exact": [
        "scipy.linalg",
        "scipy.optimize._trustregion_exact.IterativeSubproblem",
        "scipy.optimize._trustregion",
        "numpy"
    ],
    "scipy.optimize._trustregion_exact.IterativeSubproblem": [
        "numpy.core.finfo"
    ],
    "scipy.optimize._trustregion_constr": [
        "scipy.optimize._trustregion_constr.minimize_trustregion_constr"
    ],
    "scipy.optimize._trustregion_constr.minimize_trustregion_constr": [
        "scipy.optimize._trustregion_constr.report",
        "numpy",
        "scipy.optimize._trustregion_constr.tr_interior_point",
        "scipy.optimize._trustregion_constr.minimize_trustregion_constr.LagrangianHessian",
        "scipy.optimize._hessian_update_strategy",
        "scipy.optimize._optimize",
        "scipy.optimize._constraints",
        "scipy.optimize._differentiable_functions",
        "scipy.sparse.linalg",
        "scipy.optimize._trustregion_constr.equality_constrained_sqp",
        "scipy.optimize._trustregion_constr.canonical_constraint",
        "scipy.optimize._trustregion_constr.minimize_trustregion_constr.HessianLinearOperator"
    ],
    "scipy.optimize._constraints": [
        "numpy",
        "scipy.optimize._constraints.LinearConstraint",
        "scipy.optimize._hessian_update_strategy",
        "scipy.optimize._optimize",
        "scipy.optimize._differentiable_functions",
        "scipy.sparse",
        "scipy.optimize._constraints.PreparedConstraint",
        "scipy.optimize._constraints.Bounds",
        "scipy.optimize._constraints.NonlinearConstraint"
    ],
    "scipy.optimize._constraints.NonlinearConstraint": [
        "scipy.optimize._hessian_update_strategy.BFGS.__init__"
    ],
    "scipy.optimize._hessian_update_strategy.BFGS.__init__": [
        "<builtin>.ValueError",
        "<builtin>.super"
    ],
    "scipy.optimize._constraints.LinearConstraint": [],
    "scipy.optimize._constraints.Bounds": [],
    "scipy.optimize._constraints.PreparedConstraint": [],
    "scipy.optimize._trustregion_constr.equality_constrained_sqp": [
        "numpy",
        "numpy.linalg",
        "scipy.optimize._trustregion_constr.qp_subproblem",
        "scipy.optimize._trustregion_constr.projections",
        "scipy.sparse"
    ],
    "scipy.optimize._trustregion_constr.projections": [
        "scipy.linalg",
        "scipy.sparse.linalg",
        "scipy.sparse",
        "numpy"
    ],
    "scipy.optimize._trustregion_constr.qp_subproblem": [
        "numpy.linalg",
        "scipy.sparse.linalg",
        "scipy.sparse",
        "numpy"
    ],
    "scipy.optimize._trustregion_constr.canonical_constraint": [
        "scipy.optimize._trustregion_constr.canonical_constraint.CanonicalConstraint",
        "numpy",
        "scipy.sparse"
    ],
    "scipy.optimize._trustregion_constr.canonical_constraint.CanonicalConstraint": [
        "<builtin>.classmethod"
    ],
    "scipy.optimize._trustregion_constr.tr_interior_point": [
        "numpy",
        "scipy.optimize._trustregion_constr.tr_interior_point.BarrierSubproblem",
        "scipy.sparse.linalg",
        "scipy.sparse",
        "scipy.optimize._trustregion_constr.equality_constrained_sqp"
    ],
    "scipy.optimize._trustregion_constr.tr_interior_point.BarrierSubproblem": [],
    "scipy.optimize._trustregion_constr.report": [
        "scipy.optimize._trustregion_constr.report.SQPReport",
        "scipy.optimize._trustregion_constr.report.ReportBase",
        "scipy.optimize._trustregion_constr.report.IPReport",
        "scipy.optimize._trustregion_constr.report.BasicReport"
    ],
    "scipy.optimize._trustregion_constr.report.ReportBase": [
        "<builtin>.classmethod"
    ],
    "scipy.optimize._trustregion_constr.report.BasicReport": [],
    "scipy.optimize._trustregion_constr.report.SQPReport": [],
    "scipy.optimize._trustregion_constr.report.IPReport": [],
    "scipy.optimize._trustregion_constr.minimize_trustregion_constr.HessianLinearOperator": [],
    "scipy.optimize._trustregion_constr.minimize_trustregion_constr.LagrangianHessian": [],
    "scipy.optimize._lbfgsb_py": [
        "scipy.optimize._lbfgsb_py.LbfgsInvHessProduct",
        "numpy",
        "scipy.optimize._optimize",
        "scipy.optimize._constraints",
        "scipy.sparse.linalg"
    ],
    "scipy.optimize._lbfgsb_py.LbfgsInvHessProduct": [],
    "scipy.optimize._tnc": [
        "scipy.optimize._constraints",
        "scipy._lib._array_api",
        "scipy.optimize._optimize",
        "numpy"
    ],
    "scipy.optimize._cobyla_py": [
        "threading.RLock",
        "numpy",
        "scipy.optimize._optimize",
        "scipy.optimize._cobyla_py.synchronized"
    ],
    "threading.RLock": [],
    "scipy.optimize._cobyla_py.synchronized": [],
    "scipy.optimize._cobyqa_py": [
        "numpy",
        "scipy.optimize._optimize"
    ],
    "scipy.optimize._slsqp_py": [
        "numpy",
        "numpy.linalg",
        "scipy.optimize._optimize",
        "numpy.lib.polynomial.finfo",
        "scipy.optimize._constraints",
        "scipy._lib._array_api",
        "scipy.optimize._numdiff"
    ],
    "numpy.lib.polynomial.finfo": [],
    "scipy.optimize._root": [
        "numpy",
        "scipy.optimize._minpack_py",
        "scipy.optimize._optimize",
        "scipy.optimize._spectral",
        "scipy.optimize._nonlin"
    ],
    "scipy.optimize._minpack_py": [
        "scipy._lib._util",
        "numpy",
        "scipy.optimize._minimize",
        "scipy.optimize._lsq.least_squares",
        "scipy.optimize._optimize",
        "scipy.linalg"
    ],
    "scipy.optimize._lsq.least_squares": [
        "numpy",
        "numpy.linalg",
        "scipy.optimize._minimize",
        "scipy.optimize._lsq.common",
        "scipy.optimize._lsq.trf",
        "scipy.optimize",
        "scipy.sparse.linalg",
        "scipy.sparse",
        "<builtin>.dict",
        "scipy.optimize._lsq.dogbox",
        "scipy.optimize._numdiff"
    ],
    "scipy.optimize._lsq.trf": [
        "numpy",
        "numpy.linalg",
        "scipy.optimize._lsq.common",
        "scipy.linalg",
        "scipy.optimize",
        "scipy.sparse.linalg"
    ],
    "scipy.optimize._lsq.common": [
        "numpy",
        "numpy.linalg",
        "numpy.core.finfo",
        "scipy.linalg",
        "scipy.sparse.linalg",
        "scipy.sparse"
    ],
    "scipy.optimize._lsq.dogbox": [
        "numpy",
        "numpy.linalg",
        "scipy.optimize._lsq.common",
        "scipy.optimize",
        "scipy.sparse.linalg"
    ],
    "scipy.optimize._spectral": [
        "numpy",
        "scipy.optimize._optimize",
        "scipy.optimize._spectral._NoConvergence",
        "scipy.optimize._linesearch",
        "scipy.optimize"
    ],
    "scipy.optimize._spectral._NoConvergence": [],
    "scipy.optimize._nonlin": [
        "scipy.optimize._nonlin.LinearMixing",
        "scipy.sparse",
        "scipy.optimize._nonlin.BroydenFirst",
        "<builtin>.dict",
        "scipy.optimize._nonlin._nonlin_wrapper",
        "scipy.optimize._nonlin.DiagBroyden",
        "scipy._lib._util",
        "scipy.optimize._nonlin.BroydenSecond",
        "scipy.optimize._nonlin.NoConvergence",
        "scipy.optimize._nonlin.TerminationCondition",
        "<str>.strip",
        "numpy",
        "scipy.optimize._nonlin.GenericBroyden",
        "scipy.optimize._nonlin.Jacobian",
        "scipy.optimize._nonlin.KrylovJacobian",
        "scipy.linalg",
        "scipy.optimize._nonlin.InverseJacobian",
        "scipy.optimize._nonlin._set_doc",
        "scipy.optimize._nonlin.ExcitingMixing",
        "scipy.optimize._linesearch",
        "scipy.optimize._nonlin.Anderson",
        "scipy.sparse.linalg",
        "scipy.optimize._nonlin.LowRankMatrix"
    ],
    "scipy.optimize._nonlin.NoConvergence": [],
    "scipy.optimize._nonlin._set_doc": [],
    "scipy.optimize._nonlin.TerminationCondition": [],
    "scipy.optimize._nonlin.Jacobian": [],
    "scipy.optimize._nonlin.InverseJacobian": [
        "<builtin>.property"
    ],
    "scipy.optimize._nonlin.GenericBroyden": [],
    "scipy.optimize._nonlin.LowRankMatrix": [
        "<builtin>.staticmethod"
    ],
    "scipy.optimize._nonlin.BroydenFirst": [],
    "scipy.optimize._nonlin.BroydenSecond": [],
    "scipy.optimize._nonlin.Anderson": [],
    "scipy.optimize._nonlin.DiagBroyden": [],
    "scipy.optimize._nonlin.LinearMixing": [],
    "scipy.optimize._nonlin.ExcitingMixing": [],
    "scipy.optimize._nonlin.KrylovJacobian": [],
    "scipy.optimize._nonlin._nonlin_wrapper": [
        "scipy.optimize._nonlin._set_doc",
        "<map>.update",
        "<builtin>.ValueError",
        "<builtin>.list",
        "<builtin>.zip",
        "<builtin>.dict",
        "scipy._lib._util.getfullargspec_no_self",
        "<builtin>.exec",
        "<builtin>.len"
    ],
    "scipy._lib._util.getfullargspec_no_self": [
        "<builtin>.tuple"
    ],
    "scipy.optimize._root_scalar": [
        "scipy.optimize._zeros_py",
        "numpy",
        "scipy.optimize._root_scalar.MemoizeDer",
        "scipy.optimize._numdiff"
    ],
    "scipy.optimize._zeros_py": [
        "numpy",
        "numpy.core.finfo",
        "scipy.optimize._optimize",
        "scipy.optimize._zeros_py.TOMS748Solver",
        "scipy.optimize._zeros_py.RootResults"
    ],
    "scipy.optimize._zeros_py.RootResults": [],
    "scipy.optimize._zeros_py.TOMS748Solver": [],
    "scipy.optimize._root_scalar.MemoizeDer": [],
    "scipy.optimize._nnls": [
        "scipy.linalg",
        "numpy"
    ],
    "scipy.optimize._basinhopping": [
        "scipy._lib._util",
        "scipy.optimize._basinhopping.MinimizerWrapper",
        "numpy",
        "scipy.optimize._basinhopping.BasinHoppingRunner",
        "scipy.optimize._basinhopping.RandomDisplacement",
        "scipy.optimize._basinhopping.Metropolis",
        "scipy.optimize",
        "scipy.optimize._basinhopping.AdaptiveStepsize",
        "scipy.optimize._basinhopping.Storage"
    ],
    "scipy.optimize._basinhopping.Storage": [],
    "scipy.optimize._basinhopping.BasinHoppingRunner": [],
    "scipy.optimize._basinhopping.AdaptiveStepsize": [],
    "scipy.optimize._basinhopping.RandomDisplacement": [],
    "scipy.optimize._basinhopping.MinimizerWrapper": [],
    "scipy.optimize._basinhopping.Metropolis": [],
    "scipy.optimize._linprog": [
        "scipy.optimize._linprog_highs",
        "scipy.optimize._linprog_simplex",
        "numpy",
        "scipy.optimize._linprog_ip",
        "scipy.optimize._optimize",
        "scipy.optimize._linprog_util",
        "scipy.optimize._linprog_doc",
        "scipy.optimize._linprog_rs"
    ],
    "scipy.optimize._linprog_highs": [
        "numpy",
        "scipy.sparse",
        "scipy.optimize._optimize"
    ],
    "scipy.optimize._linprog_ip": [
        "numpy",
        "scipy.optimize._optimize",
        "scipy",
        "scipy.linalg",
        "scipy.optimize._linprog_util",
        "scipy.sparse"
    ],
    "scipy.optimize._linprog_util": [
        "numpy",
        "collections.namedtuple",
        "scipy.optimize._remove_redundancy",
        "scipy.optimize._optimize",
        "scipy.sparse"
    ],
    "scipy.optimize._remove_redundancy": [
        "scipy.linalg.interpolative",
        "numpy",
        "scipy",
        "scipy.linalg",
        "scipy.linalg.blas"
    ],
    "scipy.linalg.interpolative": [
        "<builtin>.ValueError",
        "scipy.linalg._interpolative_backend",
        "<builtin>.TypeError",
        "numpy"
    ],
    "scipy.linalg._interpolative_backend": [
        "numpy",
        "<builtin>.RuntimeError"
    ],
    "scipy.optimize._linprog_simplex": [
        "numpy",
        "scipy.optimize._optimize",
        "scipy.optimize._linprog_util"
    ],
    "scipy.optimize._linprog_rs": [
        "numpy",
        "numpy.linalg",
        "scipy.optimize._optimize",
        "scipy.optimize._linprog_util",
        "scipy.linalg"
    ],
    "scipy.optimize._linprog_doc": [],
    "scipy.optimize._differentialevolution": [
        "scipy._lib._util",
        "numpy",
        "numpy.core.finfo",
        "scipy.optimize._differentialevolution._ConstraintWrapper",
        "scipy.optimize._optimize",
        "scipy.optimize._constraints",
        "scipy.optimize",
        "scipy.sparse",
        "scipy.optimize._differentialevolution.DifferentialEvolutionSolver"
    ],
    "scipy.optimize._differentialevolution.DifferentialEvolutionSolver": [
        "<builtin>.property"
    ],
    "scipy.optimize._differentialevolution._ConstraintWrapper": [],
    "scipy.optimize._lsq.lsq_linear": [
        "numpy",
        "numpy.linalg",
        "scipy.optimize._minimize",
        "scipy.optimize._lsq.common",
        "scipy.optimize",
        "scipy.sparse.linalg",
        "scipy.sparse",
        "scipy.optimize._lsq.trf_linear",
        "scipy.optimize._lsq.bvls"
    ],
    "scipy.optimize._lsq.trf_linear": [
        "numpy",
        "numpy.linalg",
        "scipy.optimize._lsq.common",
        "scipy.linalg",
        "scipy.optimize",
        "scipy.sparse.linalg"
    ],
    "scipy.optimize._lsq.bvls": [
        "numpy.linalg",
        "scipy.optimize",
        "numpy",
        "scipy.optimize._lsq.common"
    ],
    "scipy.optimize._isotonic": [
        "numpy",
        "scipy.optimize._optimize",
        "numpy.typing"
    ],
    "scipy.optimize._shgo": [
        "scipy._lib._util",
        "numpy",
        "scipy.spatial",
        "scipy.optimize._minimize",
        "scipy.optimize._optimize",
        "scipy.optimize._constraints",
        "scipy.optimize",
        "scipy.optimize._shgo.SHGO",
        "scipy.optimize._shgo.LMapCache",
        "scipy.optimize._shgo_lib._complex",
        "scipy.optimize._shgo.LMap"
    ],
    "scipy.spatial": [
        "scipy.spatial._kdtree",
        "scipy._lib._testutils",
        "scipy.spatial._plotutils",
        "<builtin>.dir",
        "scipy.spatial.qhull",
        "scipy.spatial._spherical_voronoi",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.spatial.kdtree",
        "scipy.spatial.transform",
        "scipy.spatial.distance",
        "scipy.spatial._geometric_slerp",
        "scipy.spatial._procrustes",
        "scipy.spatial.ckdtree"
    ],
    "scipy.spatial._kdtree": [
        "scipy.spatial._kdtree.Rectangle",
        "numpy",
        "scipy.spatial._kdtree.KDTree"
    ],
    "scipy.spatial._kdtree.Rectangle": [],
    "scipy.spatial._kdtree.KDTree": [
        "scipy.spatial._kdtree.KDTree.leafnode",
        "scipy.spatial._kdtree.KDTree.node",
        "<builtin>.property",
        "scipy.spatial._kdtree.KDTree.innernode"
    ],
    "scipy.spatial._kdtree.KDTree.node": [
        "<builtin>.staticmethod"
    ],
    "scipy.spatial._kdtree.KDTree.leafnode": [
        "<builtin>.property"
    ],
    "scipy.spatial._kdtree.KDTree.innernode": [
        "<builtin>.property"
    ],
    "scipy.spatial._spherical_voronoi": [
        "scipy.spatial._spherical_voronoi.SphericalVoronoi",
        "numpy",
        "scipy.spatial",
        "scipy"
    ],
    "scipy.spatial._spherical_voronoi.SphericalVoronoi": [],
    "scipy.spatial._plotutils": [
        "scipy.spatial._plotutils._held_figure",
        "scipy._lib.decorator",
        "numpy",
        "scipy._lib.decorator.decorator"
    ],
    "scipy.spatial._plotutils._held_figure": [
        "scipy.spatial._plotutils.convex_hull_plot_2d",
        "scipy.spatial._plotutils.delaunay_plot_2d",
        "<builtin>.getattr",
        "scipy.spatial._plotutils.voronoi_plot_2d"
    ],
    "scipy.spatial._plotutils.delaunay_plot_2d": [
        "<builtin>.ValueError",
        "scipy.spatial._plotutils._adjust_bounds"
    ],
    "scipy.spatial._plotutils._adjust_bounds": [
        "numpy.core.fromnumeric.ptp"
    ],
    "numpy.core.fromnumeric.ptp": [
        "numpy.core._methods._ptp",
        "<builtin>.type"
    ],
    "numpy.core._methods._ptp": [],
    "scipy.spatial._plotutils.convex_hull_plot_2d": [
        "<builtin>.ValueError",
        "scipy.spatial._plotutils._adjust_bounds",
        "matplotlib.collections.LineCollection"
    ],
    "matplotlib.collections.LineCollection": [],
    "scipy.spatial._plotutils.voronoi_plot_2d": [
        "numpy.core.fromnumeric.ptp",
        "<builtin>.ValueError",
        "numpy.core.multiarray.dot",
        "append",
        "numpy.core.numeric.dot",
        "numpy.core.fromnumeric.all",
        "<builtin>.zip",
        "numpy.linalg.linalg.norm",
        "<builtin>.abs",
        "scipy.spatial._plotutils._adjust_bounds",
        "matplotlib.collections.LineCollection",
        "numpy.core.dot"
    ],
    "numpy.core.fromnumeric.all": [
        "numpy.core.fromnumeric._wrapreduction"
    ],
    "numpy.core.fromnumeric._wrapreduction": [
        "<builtin>.getattr",
        "<builtin>.type"
    ],
    "numpy.linalg.linalg.norm": [
        "<builtin>.issubclass",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "numpy.linalg.linalg.isComplexType",
        "<builtin>.tuple",
        "<builtin>.range",
        "<builtin>.list",
        "numpy.linalg.linalg._multi_svd_norm",
        "<builtin>.abs",
        "<builtin>.int",
        "<builtin>.TypeError",
        "<builtin>.len"
    ],
    "numpy.linalg.linalg.isComplexType": [
        "<builtin>.issubclass"
    ],
    "numpy.linalg.linalg._multi_svd_norm": [
        "numpy.core.numeric.moveaxis",
        "numpy.core.fromnumeric.amax",
        "numpy.core.fromnumeric.amin",
        "numpy.core.fromnumeric.sum",
        "numpy.linalg.linalg.svd"
    ],
    "numpy.core.numeric.moveaxis": [
        "<builtin>.sorted",
        "numpy.core.numeric.normalize_axis_tuple",
        "<builtin>.ValueError",
        "<builtin>.range",
        "<builtin>.zip",
        "<builtin>.len"
    ],
    "numpy.core.numeric.normalize_axis_tuple": [
        "<builtin>.ValueError",
        "<builtin>.tuple",
        "<builtin>.set",
        "<builtin>.type",
        "<builtin>.len"
    ],
    "numpy.linalg.linalg.svd": [
        "numpy.linalg.linalg.transpose",
        "numpy.linalg.linalg._commonType",
        "numpy",
        "numpy.core.fromnumeric.argsort",
        "numpy.linalg.linalg.get_linalg_error_extobj",
        "numpy.linalg.linalg._assert_stacked_2d",
        "numpy.linalg.linalg.eigvalsh",
        "numpy.core.fromnumeric.sort",
        "numpy.lib.shape_base.take_along_axis",
        "numpy.linalg.linalg.isComplexType",
        "numpy.linalg.linalg.eigh",
        "numpy.linalg.linalg._realType",
        "numpy.linalg.linalg._makearray",
        "<builtin>.abs"
    ],
    "numpy.linalg.linalg._makearray": [
        "<builtin>.getattr"
    ],
    "numpy.linalg.linalg.eigvalsh": [
        "numpy.linalg.linalg._commonType",
        "<str>.upper",
        "<builtin>.ValueError",
        "numpy.linalg.linalg.get_linalg_error_extobj",
        "numpy.linalg.linalg._assert_stacked_2d",
        "numpy.linalg.linalg._assert_stacked_square",
        "numpy.linalg.linalg.isComplexType",
        "numpy.linalg.linalg._realType",
        "numpy.linalg.linalg._makearray"
    ],
    "<str>.upper": [],
    "numpy.linalg.linalg.get_linalg_error_extobj": [
        "<builtin>.list"
    ],
    "numpy.linalg.linalg._assert_stacked_2d": [],
    "numpy.linalg.linalg._assert_stacked_square": [],
    "numpy.linalg.linalg._commonType": [
        "<builtin>.issubclass",
        "numpy.linalg.linalg._realType",
        "<builtin>.TypeError",
        "numpy.linalg.linalg.isComplexType"
    ],
    "numpy.linalg.linalg._realType": [
        "<map>.get"
    ],
    "numpy.core.fromnumeric.sort": [],
    "numpy.linalg.linalg.eigh": [
        "numpy.linalg.linalg._commonType",
        "<str>.upper",
        "<builtin>.ValueError",
        "numpy.linalg.linalg.get_linalg_error_extobj",
        "numpy.linalg.linalg._assert_stacked_2d",
        "numpy.linalg.linalg._assert_stacked_square",
        "numpy.linalg.linalg.isComplexType",
        "numpy.linalg.linalg._realType",
        "numpy.linalg.linalg._makearray"
    ],
    "numpy.core.fromnumeric.argsort": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "numpy.core.fromnumeric._wrapfunc": [
        "numpy.core.fromnumeric._wrapit",
        "<builtin>.getattr"
    ],
    "numpy.core.fromnumeric._wrapit": [
        "",
        "<builtin>.isinstance",
        "<builtin>.getattr"
    ],
    "numpy.lib.shape_base.take_along_axis": [
        "numpy.lib.shape_base._make_along_axis_idx",
        "<builtin>.len"
    ],
    "numpy.lib.shape_base._make_along_axis_idx": [
        "<builtin>.IndexError",
        "<builtin>.ValueError",
        "append",
        "<builtin>.tuple",
        "<builtin>.range",
        "<builtin>.list",
        "<builtin>.zip",
        "numpy.core.numerictypes.issubdtype",
        "<builtin>.len"
    ],
    "numpy.core.numerictypes.issubdtype": [
        "numpy.core.numerictypes.issubclass_",
        "<builtin>.issubclass"
    ],
    "numpy.core.numerictypes.issubclass_": [
        "<builtin>.issubclass"
    ],
    "<builtin>.IndexError": [],
    "numpy.linalg.linalg.transpose": [
        "numpy.core.fromnumeric.swapaxes"
    ],
    "numpy.core.fromnumeric.swapaxes": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "numpy.core.fromnumeric.sum": [
        "<builtin>.isinstance",
        "numpy.core.fromnumeric.sum",
        "numpy.core.fromnumeric._wrapreduction"
    ],
    "numpy.core.fromnumeric.amin": [
        "numpy.core.fromnumeric._wrapreduction"
    ],
    "numpy.core.fromnumeric.amax": [
        "numpy.core.fromnumeric._wrapreduction"
    ],
    "numpy.core.multiarray.dot": [],
    "numpy.core.numeric.dot": [],
    "numpy.core.dot": [],
    "scipy.spatial._procrustes": [
        "scipy.linalg",
        "numpy"
    ],
    "scipy.spatial._geometric_slerp": [
        "scipy.spatial.distance",
        "numpy",
        "numpy.typing"
    ],
    "scipy.spatial.distance": [
        "scipy._lib._util",
        "numpy",
        "functools.partial",
        "scipy.spatial.distance.PDistMetricWrapper",
        "scipy.linalg",
        "scipy.spatial.distance.CDistMetricWrapper",
        "scipy.special",
        "<builtin>.list",
        "scipy.spatial.distance.MetricInfo"
    ],
    "scipy.spatial.distance.CDistMetricWrapper": [],
    "scipy.spatial.distance.PDistMetricWrapper": [],
    "scipy.spatial.distance.MetricInfo": [],
    "scipy.spatial.ckdtree": [
        "scipy._lib.deprecation"
    ],
    "scipy.spatial.kdtree": [
        "scipy._lib.deprecation"
    ],
    "scipy.spatial.qhull": [
        "scipy._lib.deprecation"
    ],
    "scipy.spatial.transform": [
        "scipy.spatial.transform._rotation_spline",
        "scipy._lib._testutils",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.spatial.transform.rotation"
    ],
    "scipy.spatial.transform._rotation_spline": [
        "scipy.linalg",
        "scipy.spatial.transform._rotation_spline.RotationSpline",
        "numpy"
    ],
    "scipy.spatial.transform._rotation_spline.RotationSpline": [],
    "scipy.spatial.transform.rotation": [
        "scipy._lib.deprecation"
    ],
    "scipy.optimize._shgo_lib._complex": [
        "scipy.optimize._shgo_lib._complex.Complex",
        "numpy",
        "scipy.optimize._shgo_lib._vertex"
    ],
    "scipy.optimize._shgo_lib._vertex": [
        "scipy._lib._util",
        "scipy.optimize._shgo_lib._vertex.ConstraintWrapper",
        "scipy.optimize._shgo_lib._vertex.VertexVectorField",
        "numpy",
        "scipy.optimize._shgo_lib._vertex.VertexCacheField",
        "scipy.optimize._shgo_lib._vertex.VertexCacheIndex",
        "scipy.optimize._shgo_lib._vertex.VertexBase",
        "scipy.optimize._shgo_lib._vertex.VertexScalarField",
        "scipy.optimize._shgo_lib._vertex.FieldWrapper",
        "scipy.optimize._shgo_lib._vertex.VertexCacheBase",
        "scipy.optimize._shgo_lib._vertex.VertexCube"
    ],
    "scipy.optimize._shgo_lib._vertex.VertexBase": [
        "abc.abstractmethod"
    ],
    "abc.abstractmethod": [],
    "scipy.optimize._shgo_lib._vertex.VertexScalarField": [],
    "scipy.optimize._shgo_lib._vertex.VertexVectorField": [],
    "scipy.optimize._shgo_lib._vertex.VertexCacheBase": [],
    "scipy.optimize._shgo_lib._vertex.VertexCube": [],
    "scipy.optimize._shgo_lib._vertex.VertexCacheIndex": [],
    "scipy.optimize._shgo_lib._vertex.VertexCacheField": [],
    "scipy.optimize._shgo_lib._vertex.ConstraintWrapper": [],
    "scipy.optimize._shgo_lib._vertex.FieldWrapper": [],
    "scipy.optimize._shgo_lib._complex.Complex": [
        "functools.cache"
    ],
    "functools.cache": [],
    "scipy.optimize._shgo.SHGO": [],
    "scipy.optimize._shgo.LMap": [],
    "scipy.optimize._shgo.LMapCache": [],
    "scipy.optimize._dual_annealing": [
        "scipy._lib._util",
        "numpy",
        "scipy.optimize._dual_annealing.ObjectiveFunWrapper",
        "scipy.optimize._dual_annealing.LocalSearchWrapper",
        "scipy.optimize._dual_annealing.EnergyState",
        "scipy.optimize._constraints",
        "scipy.optimize._dual_annealing.VisitingDistribution",
        "scipy.special",
        "scipy.optimize",
        "scipy.optimize._dual_annealing.StrategyChain"
    ],
    "scipy.optimize._dual_annealing.VisitingDistribution": [],
    "scipy.optimize._dual_annealing.EnergyState": [],
    "scipy.optimize._dual_annealing.StrategyChain": [],
    "scipy.optimize._dual_annealing.ObjectiveFunWrapper": [],
    "scipy.optimize._dual_annealing.LocalSearchWrapper": [],
    "scipy.optimize._qap": [
        "scipy._lib._util",
        "numpy",
        "scipy.optimize._optimize"
    ],
    "scipy.optimize._direct_py": [
        "scipy.optimize._constraints",
        "scipy.optimize",
        "numpy",
        "numpy.typing"
    ],
    "scipy.optimize._milp": [
        "scipy._lib._util",
        "scipy.optimize._linprog_highs",
        "numpy",
        "scipy.optimize._optimize",
        "scipy.optimize._constraints",
        "scipy.sparse"
    ],
    "scipy.optimize.cobyla": [
        "scipy._lib.deprecation"
    ],
    "scipy.optimize.lbfgsb": [
        "scipy._lib.deprecation"
    ],
    "scipy.optimize.linesearch": [
        "scipy._lib.deprecation"
    ],
    "scipy.optimize.minpack": [
        "scipy._lib.deprecation"
    ],
    "scipy.optimize.minpack2": [
        "scipy._lib.deprecation"
    ],
    "scipy.optimize.moduleTNC": [
        "scipy._lib.deprecation"
    ],
    "scipy.optimize.nonlin": [
        "scipy._lib.deprecation"
    ],
    "scipy.optimize.optimize": [
        "scipy._lib.deprecation"
    ],
    "scipy.optimize.slsqp": [
        "scipy._lib.deprecation"
    ],
    "scipy.optimize.tnc": [
        "scipy._lib.deprecation"
    ],
    "scipy.optimize.zeros": [
        "scipy._lib.deprecation"
    ],
    "scipy.interpolate._bsplines.BSpline": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "scipy.interpolate._polyint": [
        "scipy._lib._util",
        "numpy",
        "scipy.interpolate._polyint._Interpolator1D",
        "scipy.interpolate._polyint.BarycentricInterpolator",
        "scipy.interpolate._polyint.KroghInterpolator",
        "scipy.special",
        "scipy.interpolate._polyint._Interpolator1DWithDerivatives"
    ],
    "scipy.interpolate._polyint._Interpolator1D": [],
    "scipy.interpolate._polyint._Interpolator1DWithDerivatives": [],
    "scipy.interpolate._polyint.KroghInterpolator": [],
    "scipy.interpolate._polyint.BarycentricInterpolator": [],
    "scipy.interpolate._interpolate.interp2d": [],
    "scipy.interpolate._interpolate.interp1d": [
        "<builtin>.property"
    ],
    "scipy.interpolate._interpolate._PPolyBase": [
        "<builtin>.classmethod"
    ],
    "scipy.interpolate._interpolate.PPoly": [
        "<builtin>.classmethod"
    ],
    "scipy.interpolate._interpolate.BPoly": [
        "<builtin>.classmethod",
        "<builtin>.staticmethod"
    ],
    "scipy.interpolate._interpolate.NdPPoly": [
        "<builtin>.classmethod"
    ],
    "scipy.interpolate._fitpack2": [
        "scipy.interpolate._fitpack_impl",
        "scipy.interpolate._fitpack2.LSQUnivariateSpline",
        "scipy.interpolate._fitpack2.BivariateSpline",
        "scipy.interpolate._fitpack2.SmoothBivariateSpline",
        "numpy",
        "scipy.interpolate._fitpack2._BivariateSplineBase",
        "scipy.interpolate._fitpack2._DerivedBivariateSpline",
        "scipy.interpolate._fitpack2.RectBivariateSpline",
        "scipy.interpolate._fitpack2.LSQBivariateSpline",
        "<map>.copy",
        "scipy.interpolate._fitpack2.SmoothSphereBivariateSpline",
        "scipy.interpolate._fitpack2.LSQSphereBivariateSpline",
        "scipy.interpolate._fitpack2.SphereBivariateSpline",
        "scipy.interpolate._fitpack2.UnivariateSpline",
        "scipy.interpolate._fitpack2.InterpolatedUnivariateSpline",
        "scipy.interpolate._fitpack2.RectSphereBivariateSpline"
    ],
    "scipy.interpolate._fitpack2.UnivariateSpline": [
        "<builtin>.staticmethod",
        "<builtin>.classmethod"
    ],
    "scipy.interpolate._fitpack2.InterpolatedUnivariateSpline": [],
    "scipy.interpolate._fitpack2.LSQUnivariateSpline": [],
    "scipy.interpolate._fitpack2._BivariateSplineBase": [
        "<builtin>.classmethod"
    ],
    "scipy.interpolate._fitpack2.BivariateSpline": [
        "<builtin>.staticmethod"
    ],
    "scipy.interpolate._fitpack2._DerivedBivariateSpline": [
        "<builtin>.property"
    ],
    "scipy.interpolate._fitpack2.SmoothBivariateSpline": [],
    "scipy.interpolate._fitpack2.LSQBivariateSpline": [],
    "scipy.interpolate._fitpack2.RectBivariateSpline": [],
    "scipy.interpolate._fitpack2.SphereBivariateSpline": [],
    "scipy.interpolate._fitpack2.SmoothSphereBivariateSpline": [],
    "scipy.interpolate._fitpack2.LSQSphereBivariateSpline": [],
    "scipy.interpolate._fitpack2.RectSphereBivariateSpline": [],
    "scipy.interpolate._rbf": [
        "scipy.interpolate._rbf.Rbf",
        "numpy",
        "scipy.linalg",
        "scipy.spatial.distance",
        "scipy.special"
    ],
    "scipy.interpolate._rbf.Rbf": [
        "<builtin>.property"
    ],
    "scipy.interpolate._rbfinterp": [
        "scipy.interpolate._rbfinterp.RBFInterpolator",
        "numpy",
        "scipy.spatial",
        "numpy.linalg",
        "scipy.special",
        "scipy.linalg.lapack"
    ],
    "scipy.interpolate._rbfinterp.RBFInterpolator": [],
    "scipy.interpolate._cubic": [
        "numpy",
        "scipy.interpolate._cubic.CubicHermiteSpline",
        "scipy.interpolate._cubic.Akima1DInterpolator",
        "scipy.interpolate._cubic.CubicSpline",
        "scipy.linalg",
        "scipy.interpolate._cubic.PchipInterpolator",
        "scipy.interpolate._polyint"
    ],
    "scipy.interpolate._cubic.CubicHermiteSpline": [],
    "scipy.interpolate._cubic.PchipInterpolator": [
        "<builtin>.staticmethod"
    ],
    "scipy.interpolate._cubic.Akima1DInterpolator": [
        "<builtin>.classmethod"
    ],
    "scipy.interpolate._cubic.CubicSpline": [
        "<builtin>.staticmethod"
    ],
    "scipy.interpolate._ndgriddata": [
        "numpy",
        "scipy.spatial",
        "scipy.interpolate._ndgriddata.NearestNDInterpolator"
    ],
    "scipy.interpolate._ndgriddata.NearestNDInterpolator": [],
    "scipy.interpolate._pade": [
        "scipy.linalg",
        "numpy"
    ],
    "scipy.interpolate._rgi": [
        "numpy",
        "scipy.interpolate._fitpack2",
        "scipy.interpolate._cubic",
        "scipy.sparse.linalg",
        "scipy.interpolate._bsplines",
        "scipy.interpolate._ndbspline",
        "scipy.interpolate._rgi.RegularGridInterpolator"
    ],
    "scipy.interpolate._ndbspline": [
        "scipy.interpolate._ndbspline.NdBSpline",
        "numpy",
        "scipy.sparse.linalg",
        "scipy.sparse",
        "scipy.interpolate._bsplines"
    ],
    "scipy.interpolate._ndbspline.NdBSpline": [
        "<builtin>.classmethod"
    ],
    "scipy.interpolate._rgi.RegularGridInterpolator": [
        "<map>.keys",
        "<builtin>.staticmethod",
        "<builtin>.list"
    ],
    "scipy.interpolate.fitpack": [
        "scipy._lib.deprecation"
    ],
    "scipy.interpolate.fitpack2": [
        "scipy._lib.deprecation"
    ],
    "scipy.interpolate.interpolate": [
        "scipy._lib.deprecation"
    ],
    "scipy.interpolate.ndgriddata": [
        "scipy._lib.deprecation"
    ],
    "scipy.interpolate.polyint": [
        "scipy._lib.deprecation"
    ],
    "scipy.interpolate.rbf": [
        "scipy._lib.deprecation"
    ],
    "skimage.filters": [
        "lazy_loader",
        "lazy_loader.attach_stub"
    ],
    "skimage.segmentation._felzenszwalb": [
        "skimage._shared.utils",
        "numpy",
        "skimage._shared.utils.channel_as_last_axis.__init__"
    ],
    "skimage.segmentation.slic_superpixels": [
        "scipy.cluster.vq",
        "numpy",
        "numpy.random",
        "skimage._shared.filters",
        "scipy.spatial.distance",
        "skimage._shared.utils.channel_as_last_axis.__init__",
        "skimage._shared.utils",
        "skimage.util",
        "skimage.color"
    ],
    "scipy.cluster.vq": [
        "scipy._lib._util",
        "numpy",
        "scipy._lib._array_api",
        "scipy.spatial.distance",
        "scipy.cluster.vq.ClusterError"
    ],
    "scipy.cluster.vq.ClusterError": [],
    "skimage._shared.filters": [
        "skimage._shared.utils",
        "scipy.ndimage",
        "numpy"
    ],
    "skimage.color": [
        "lazy_loader",
        "lazy_loader.attach_stub"
    ],
    "skimage.segmentation._quickshift": [
        "numpy",
        "skimage._shared.filters",
        "skimage._shared.utils.deprecate_kwarg.__init__",
        "skimage._shared.utils",
        "skimage.util",
        "skimage.color"
    ],
    "skimage.segmentation.boundaries": [
        "skimage.morphology",
        "numpy",
        "scipy.ndimage",
        "skimage._shared.utils",
        "skimage.util",
        "skimage.color"
    ],
    "skimage.morphology": [
        "skimage.morphology.grayreconstruct",
        "skimage.morphology._flood_fill",
        "skimage.measure._label",
        "skimage.morphology._skeletonize",
        "skimage.morphology.gray",
        "skimage.morphology.footprints",
        "skimage.morphology.binary",
        "skimage.morphology.misc",
        "skimage.morphology.convex_hull",
        "skimage.morphology.extrema",
        "skimage.morphology.max_tree",
        "skimage.morphology.isotropic"
    ],
    "skimage.morphology.binary": [
        "numpy",
        "skimage.morphology.misc.default_footprint",
        "skimage.morphology.footprints",
        "skimage.morphology.misc",
        "scipy.ndimage"
    ],
    "skimage.morphology.footprints": [
        "skimage.morphology",
        "numpy",
        "numpy.lib.npyio.load",
        "skimage"
    ],
    "numpy.lib.npyio.load": [
        "numpy.lib.format.open_memmap",
        "<builtin>.ValueError",
        "<builtin>.open",
        "<builtin>.min",
        "numpy.lib.npyio.NpzFile.__init__",
        "<builtin>.hasattr",
        "numpy.lib.format.read_array",
        "<builtin>.dict",
        "<builtin>.len"
    ],
    "numpy.lib.format.read_array": [
        "numpy.lib.format._read_bytes",
        "<builtin>.ValueError",
        "<builtin>.int",
        "<builtin>.min",
        "numpy.lib.format._read_array_header",
        "numpy.lib.format._check_version",
        "<builtin>.range",
        "numpy.lib.format.read_magic",
        "numpy.compat.py3k.isfileobj",
        "<builtin>.UnicodeError",
        "<builtin>.len"
    ],
    "numpy.lib.format.read_magic": [
        "numpy.lib.format._read_bytes",
        "<builtin>.ValueError"
    ],
    "numpy.lib.format._read_bytes": [
        "<builtin>.ValueError",
        "<builtin>.len",
        "<builtin>.bytes"
    ],
    "<builtin>.bytes": [],
    "numpy.lib.format._check_version": [
        "<builtin>.ValueError"
    ],
    "numpy.lib.format._read_array_header": [
        "numpy.lib.format._read_bytes",
        "<builtin>.sorted",
        "<builtin>.all",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "numpy.lib.format.descr_to_dtype",
        "numpy.lib.format._filter_header",
        "numpy.lib.utils.safe_eval",
        "<map>.get",
        "<builtin>.len"
    ],
    "numpy.lib.format._filter_header": [
        "io.StringIO",
        "append"
    ],
    "io.StringIO": [],
    "numpy.lib.utils.safe_eval": [],
    "<builtin>.all": [],
    "numpy.lib.format.descr_to_dtype": [
        "append",
        "numpy.lib.format.descr_to_dtype",
        "<builtin>.isinstance",
        "<builtin>.len"
    ],
    "numpy.compat.py3k.isfileobj": [
        "<builtin>.isinstance"
    ],
    "<builtin>.UnicodeError": [],
    "numpy.lib.format.open_memmap": [
        "numpy.lib.format.dtype_to_descr",
        "<builtin>.ValueError",
        "<builtin>.dict",
        "<builtin>.open",
        "numpy.lib.format._read_array_header",
        "numpy.lib.format._write_array_header",
        "numpy.lib.format._check_version",
        "numpy.lib.format.read_magic",
        "numpy.compat.py3k.isfileobj",
        "numpy.core.memmap"
    ],
    "numpy.lib.format.dtype_to_descr": [
        "numpy.lib.format._has_metadata"
    ],
    "numpy.lib.format._has_metadata": [
        "numpy.lib.format._has_metadata",
        "<builtin>.any"
    ],
    "<builtin>.any": [],
    "numpy.lib.format._write_array_header": [
        "append",
        "<builtin>.sorted",
        "numpy.lib.format._wrap_header_guess_version",
        "numpy.lib.format._wrap_header"
    ],
    "numpy.lib.format._wrap_header": [
        "<builtin>.ValueError",
        "numpy.lib.format.magic",
        "<builtin>.len"
    ],
    "numpy.lib.format.magic": [
        "<builtin>.ValueError",
        "<builtin>.bytes"
    ],
    "numpy.lib.format._wrap_header_guess_version": [
        "numpy.lib.format._wrap_header"
    ],
    "numpy.lib.npyio.NpzFile.__init__": [
        "numpy.lib.npyio.BagObj.__init__",
        "numpy.lib.npyio.zipfile_factory"
    ],
    "numpy.lib.npyio.zipfile_factory": [
        "<builtin>.hasattr"
    ],
    "numpy.lib.npyio.BagObj.__init__": [],
    "skimage.morphology.misc": [
        "skimage._shared.utils",
        "scipy.ndimage",
        "numpy"
    ],
    "skimage.morphology.misc.default_footprint": [],
    "skimage.morphology.gray": [
        "numpy",
        "skimage.morphology.misc.default_footprint",
        "skimage.morphology.footprints",
        "skimage.morphology.gray.pad_for_eccentric_footprints",
        "skimage.morphology.misc",
        "scipy.ndimage",
        "skimage.util"
    ],
    "skimage.morphology.gray.pad_for_eccentric_footprints": [],
    "skimage.morphology.isotropic": [
        "scipy.ndimage",
        "numpy"
    ],
    "skimage.measure._label": [
        "scipy.ndimage"
    ],
    "skimage.morphology._skeletonize": [
        "numpy",
        "skimage._shared.utils.deprecate_kwarg.__init__",
        "scipy.ndimage",
        "skimage._shared.utils",
        "skimage.util",
        "scipy.ndimage._morphology.generate_binary_structure"
    ],
    "scipy.ndimage._morphology.generate_binary_structure": [
        "numpy.core.numeric.indices"
    ],
    "numpy.core.numeric.indices": [
        "<builtin>.enumerate",
        "<builtin>.len",
        "<builtin>.tuple"
    ],
    "skimage.morphology.convex_hull": [
        "numpy",
        "scipy.spatial",
        "skimage.measure._label",
        "skimage._shared.utils",
        "skimage.measure.pnpoly",
        "skimage.util"
    ],
    "skimage.measure.pnpoly": [],
    "skimage.morphology.grayreconstruct": [
        "skimage._shared.utils",
        "numpy",
        "skimage.filters._rank_order"
    ],
    "skimage.filters._rank_order": [
        "numpy"
    ],
    "skimage.morphology.extrema": [
        "skimage.morphology.grayreconstruct",
        "numpy",
        "skimage.morphology._util",
        "skimage._shared.utils",
        "skimage.util"
    ],
    "skimage.morphology._util": [
        "scipy.ndimage",
        "numpy"
    ],
    "skimage.morphology._flood_fill": [
        "skimage.util",
        "numpy",
        "skimage.morphology._util"
    ],
    "skimage.morphology.max_tree": [
        "skimage.util",
        "numpy",
        "skimage.morphology._util"
    ],
    "skimage.segmentation._clear_border": [
        "skimage.measure",
        "numpy"
    ],
    "skimage.measure": [
        "lazy_loader",
        "lazy_loader.attach_stub"
    ],
    "skimage.segmentation._join": [
        "skimage.util._map_array",
        "numpy"
    ],
    "skimage.segmentation._watershed": [
        "numpy",
        "scipy.ndimage",
        "skimage.morphology.extrema",
        "skimage.morphology._util",
        "skimage.util"
    ],
    "skimage.segmentation._chan_vese": [
        "skimage._shared.utils",
        "scipy.ndimage",
        "numpy"
    ],
    "skimage.segmentation.morphsnakes": [
        "numpy",
        "numpy.lib.function_base.rot90",
        "numpy.lib.twodim_base.eye",
        "skimage.segmentation.morphsnakes._fcycle",
        "numpy.lib.twodim_base.flipud",
        "scipy.ndimage",
        "<builtin>.range",
        "skimage._shared.utils",
        "skimage.segmentation.morphsnakes._fcycle.__init__"
    ],
    "skimage.segmentation.morphsnakes._fcycle": [],
    "numpy.lib.twodim_base.eye": [],
    "numpy.lib.twodim_base.flipud": [
        "<builtin>.ValueError"
    ],
    "numpy.lib.function_base.rot90": [
        "numpy.lib.function_base.flip",
        "<builtin>.ValueError",
        "<builtin>.tuple",
        "numpy.core.fromnumeric.transpose",
        "<builtin>.len"
    ],
    "numpy.lib.function_base.flip": [
        "<builtin>.hasattr",
        "numpy.core.numeric.normalize_axis_tuple",
        "<builtin>.tuple"
    ],
    "numpy.core.fromnumeric.transpose": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "skimage.segmentation.morphsnakes._fcycle.__init__": [
        "itertools.cycle"
    ],
    "itertools.cycle": [],
    "handler.handle": [
        "requests.api.get",
        "skimage.segmentation._felzenszwalb.felzenszwalb",
        "numpy.lib.arraysetops.unique",
        "skimage.segmentation.boundaries.mark_boundaries",
        "<builtin>.len"
    ],
    "requests.api.get": [
        "requests.api.request"
    ],
    "requests.api.request": [
        "requests.sessions.Session.__init__"
    ],
    "requests.sessions.Session.__init__": [
        "requests.cookies.cookiejar_from_dict",
        "collections.OrderedDict",
        "requests.sessions.Session.mount",
        "requests.utils.default_headers",
        "requests.hooks.default_hooks",
        "requests.adapters.HTTPAdapter.__init__"
    ],
    "requests.utils.default_headers": [
        "requests.utils.default_user_agent",
        "requests.structures.CaseInsensitiveDict.__init__"
    ],
    "requests.utils.default_user_agent": [],
    "requests.structures.CaseInsensitiveDict.__init__": [
        "collections.OrderedDict"
    ],
    "collections.OrderedDict": [],
    "requests.hooks.default_hooks": [],
    "requests.cookies.cookiejar_from_dict": [
        "requests.cookies.RequestsCookieJar.set_cookie",
        "requests.cookies.create_cookie"
    ],
    "requests.cookies.create_cookie": [
        "<map>.update",
        "<builtin>.set",
        "<builtin>.list",
        "<builtin>.bool",
        "<builtin>.TypeError",
        "<str>.startswith"
    ],
    "requests.cookies.RequestsCookieJar.set_cookie": [
        "<builtin>.hasattr",
        "<builtin>.super"
    ],
    "requests.adapters.HTTPAdapter.__init__": [
        "<builtin>.super",
        "urllib3.util.retry.Retry.__init__",
        "urllib3.util.retry.Retry.from_int",
        "requests.adapters.HTTPAdapter.init_poolmanager"
    ],
    "urllib3.util.retry.Retry.from_int": [
        "<builtin>.isinstance",
        "<builtin>.bool",
        "urllib3.util.retry.Retry.__init__"
    ],
    "requests.adapters.HTTPAdapter.init_poolmanager": [
        "urllib3.poolmanager.PoolManager.__init__"
    ],
    "requests.sessions.Session.mount": [
        "<builtin>.len"
    ],
    "skimage.segmentation._felzenszwalb.felzenszwalb": [
        "<builtin>.ValueError",
        "numpy.core.atleast_3d",
        "numpy.core.shape_base.atleast_3d",
        "_felzenszwalb_cy._felzenszwalb_cython"
    ],
    "numpy.core.atleast_3d": [],
    "numpy.core.shape_base.atleast_3d": [
        "append",
        "<builtin>.len"
    ],
    "_felzenszwalb_cy._felzenszwalb_cython": [],
    "numpy.lib.arraysetops.unique": [
        "numpy.core.fromnumeric.prod",
        "numpy.core.numeric.moveaxis",
        "numpy.lib.arraysetops._unpack_tuple",
        "<builtin>.range",
        "numpy.lib.arraysetops.unique.reshape_uniq",
        "numpy.lib.arraysetops._unique1d",
        "numpy.core._exceptions.AxisError.__init__",
        "<builtin>.TypeError",
        "<builtin>.len"
    ],
    "numpy.lib.arraysetops._unique1d": [
        "numpy.lib.function_base.diff",
        "numpy.core.fromnumeric.searchsorted",
        "numpy.core.multiarray.concatenate",
        "numpy.core.numeric.concatenate",
        "numpy.core.fromnumeric.cumsum",
        "numpy.core.fromnumeric.nonzero",
        "numpy.core.fromnumeric.concatenate",
        "numpy.core.arrayprint.concatenate",
        "numpy.core.numeric.nonzero"
    ],
    "numpy.core.fromnumeric.searchsorted": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "numpy.core.fromnumeric.cumsum": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "numpy.core.numeric.nonzero": [],
    "numpy.core.fromnumeric.nonzero": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "numpy.core.fromnumeric.concatenate": [],
    "numpy.core.arrayprint.concatenate": [],
    "numpy.core.multiarray.concatenate": [
        "append",
        "<builtin>.list"
    ],
    "numpy.core.numeric.concatenate": [],
    "numpy.lib.function_base.diff": [
        "<builtin>.ValueError",
        "<builtin>.repr",
        "append",
        "numpy.core.multiarray.concatenate",
        "numpy.lib.stride_tricks.broadcast_to",
        "<builtin>.tuple",
        "numpy.core.numeric.concatenate",
        "<builtin>.list",
        "<builtin>.range",
        "numpy.core.fromnumeric.concatenate",
        "<builtin>.slice",
        "numpy.core.arrayprint.concatenate",
        "<builtin>.len"
    ],
    "numpy.lib.stride_tricks.broadcast_to": [
        "numpy.lib.stride_tricks._broadcast_to"
    ],
    "numpy.lib.stride_tricks._broadcast_to": [
        "numpy.lib.function_base.iterable",
        "<builtin>.ValueError",
        "<builtin>.any",
        "<builtin>.tuple",
        "numpy.lib.stride_tricks._maybe_view_as_subclass"
    ],
    "numpy.lib.stride_tricks._maybe_view_as_subclass": [
        "<builtin>.type"
    ],
    "<builtin>.slice": [],
    "numpy.lib.arraysetops._unpack_tuple": [
        "<builtin>.len"
    ],
    "numpy.core._exceptions.AxisError.__init__": [],
    "numpy.core.fromnumeric.prod": [
        "numpy.core.fromnumeric._wrapreduction"
    ],
    "numpy.lib.arraysetops.unique.reshape_uniq": [
        "numpy.core.numeric.moveaxis",
        "<builtin>.len"
    ],
    "skimage.segmentation.boundaries.mark_boundaries": [
        "skimage.morphology.gray.dilation",
        "skimage.segmentation.boundaries.find_boundaries",
        "skimage.util.dtype.img_as_float",
        "scipy.ndimage._interpolation.zoom",
        "skimage.morphology.footprints.square",
        "skimage._shared.utils._supported_float_type"
    ],
    "skimage._shared.utils._supported_float_type": [
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "numpy.core.numeric.result_type",
        "numpy.core.multiarray.result_type",
        "<map>.get",
        "skimage._shared.utils._supported_float_type"
    ],
    "numpy.core.numeric.result_type": [],
    "numpy.core.multiarray.result_type": [],
    "skimage.util.dtype.img_as_float": [
        "skimage.util.dtype._convert"
    ],
    "skimage.util.dtype._convert": [
        "numpy.core.iinfo",
        "<builtin>.ValueError",
        "numpy.core.getlimits.iinfo.__init__",
        "numpy.core.fromnumeric.amax",
        "skimage.util.dtype._scale",
        "numpy.core.fromnumeric.amin",
        "numpy.core.fromnumeric.clip",
        "skimage.util.dtype._dtype_bits",
        "numpy.core.numerictypes.obj2sctype",
        "numpy.core.numerictypes.issubdtype",
        "skimage.util.dtype._dtype_itemsize"
    ],
    "numpy.core.numerictypes.obj2sctype": [
        "<builtin>.issubclass",
        "<builtin>.isinstance"
    ],
    "skimage.util.dtype._dtype_itemsize": [
        "<builtin>.next"
    ],
    "numpy.core.fromnumeric.clip": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "skimage.util.dtype._scale": [
        "warnings.warn",
        "skimage.util.dtype._dtype_bits",
        "<builtin>.int"
    ],
    "skimage.util.dtype._dtype_bits": [
        "<builtin>.str",
        "<builtin>.next"
    ],
    "warnings.warn": [],
    "scipy.ndimage._interpolation.zoom": [
        "numpy.lib.type_check.imag",
        "<builtin>.round",
        "scipy.ndimage._interpolation._prepad_for_spline_filter",
        "scipy.ndimage._ni_support._normalize_sequence",
        "numpy.core.numeric.ones_like",
        "numpy.lib.type_check.iscomplexobj",
        "scipy.ndimage._ni_support._get_output",
        "scipy.ndimage._interpolation.zoom",
        "<builtin>.tuple",
        "numpy.lib.type_check.real",
        "<builtin>.zip",
        "<builtin>.dict",
        "scipy.ndimage._interpolation.spline_filter",
        "scipy.ndimage._interpolation",
        "<builtin>.int",
        "<builtin>.RuntimeError",
        "scipy.ndimage._ni_support._extend_mode_to_code"
    ],
    "scipy.ndimage._ni_support._normalize_sequence": [
        "<builtin>.isinstance",
        "<builtin>.RuntimeError",
        "<builtin>.list",
        "<builtin>.len"
    ],
    "<builtin>.round": [],
    "numpy.lib.type_check.iscomplexobj": [
        "<builtin>.issubclass"
    ],
    "scipy.ndimage._ni_support._get_output": [
        "<builtin>.issubclass",
        "<builtin>.isinstance",
        "<builtin>.RuntimeError"
    ],
    "numpy.lib.type_check.real": [],
    "numpy.lib.type_check.imag": [],
    "scipy.ndimage._interpolation._prepad_for_spline_filter": [
        "numpy.lib.arraypad.pad"
    ],
    "numpy.lib.arraypad.pad": [
        "numpy.lib.index_tricks.ndindex.__init__",
        "<builtin>.ValueError",
        "numpy.lib.arraypad._get_linear_ramps",
        "<builtin>.set",
        "numpy.lib.arraypad._set_wrap_both",
        "numpy.lib.arraypad._get_edges",
        "numpy.lib.arraypad._get_stats",
        "numpy.lib.arraypad._pad_simple",
        "<builtin>.TypeError",
        "numpy.lib.arraypad._set_reflect_both",
        "numpy.lib.arraypad._view_roi",
        "numpy.lib.index_tricks.ndindex.__iter__",
        "<builtin>.callable",
        "numpy.core.numeric.moveaxis",
        "numpy.lib.arraypad._set_pad_area",
        "<builtin>.zip",
        "numpy.lib.index_tricks.ndindex.__next__",
        "numpy.lib.arraypad._as_pairs",
        "<builtin>.any",
        "<builtin>.range"
    ],
    "numpy.lib.arraypad._as_pairs": [
        "<builtin>.ValueError",
        "numpy.core.fromnumeric.round_",
        "numpy.lib.stride_tricks.broadcast_to"
    ],
    "numpy.core.fromnumeric.round_": [
        "numpy.core.fromnumeric.around"
    ],
    "numpy.core.fromnumeric.around": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "<builtin>.callable": [],
    "numpy.lib.arraypad._pad_simple": [
        "<builtin>.slice",
        "<builtin>.zip",
        "<builtin>.tuple"
    ],
    "numpy.lib.index_tricks.ndindex.__init__": [
        "numpy.core.numeric.zeros_like",
        "<builtin>.isinstance",
        "numpy.lib.stride_tricks.as_strided",
        "<builtin>.len"
    ],
    "numpy.core.numeric.zeros_like": [
        "numpy.core.multiarray.empty_like",
        "numpy.core.multiarray.copyto"
    ],
    "numpy.core.multiarray.empty_like": [],
    "numpy.core.multiarray.copyto": [],
    "numpy.lib.stride_tricks.as_strided": [
        "numpy.lib.stride_tricks.DummyArray.__init__",
        "numpy.lib.stride_tricks._maybe_view_as_subclass",
        "<builtin>.tuple",
        "<builtin>.dict"
    ],
    "numpy.lib.stride_tricks.DummyArray.__init__": [],
    "numpy.lib.index_tricks.ndindex.__iter__": [],
    "numpy.lib.index_tricks.ndindex.__next__": [
        "<builtin>.next"
    ],
    "numpy.lib.arraypad._view_roi": [
        "<builtin>.slice"
    ],
    "numpy.lib.arraypad._set_wrap_both": [
        "numpy.lib.arraypad._slice_at_axis",
        "<builtin>.slice",
        "<builtin>.min"
    ],
    "numpy.lib.arraypad._slice_at_axis": [
        "<builtin>.slice"
    ],
    "numpy.lib.arraypad._get_edges": [
        "numpy.lib.arraypad._slice_at_axis",
        "<builtin>.slice"
    ],
    "numpy.lib.arraypad._set_pad_area": [
        "numpy.lib.arraypad._slice_at_axis",
        "<builtin>.slice"
    ],
    "numpy.lib.arraypad._set_reflect_both": [
        "numpy.lib.arraypad._slice_at_axis",
        "<builtin>.slice",
        "<builtin>.min"
    ],
    "numpy.lib.arraypad._get_stats": [
        "numpy.lib.arraypad._round_if_needed",
        "<builtin>.ValueError",
        "numpy.core.fromnumeric.amax",
        "numpy.lib.arraypad._slice_at_axis",
        "numpy.core.fromnumeric.amin",
        "numpy.core.fromnumeric.mean",
        "<builtin>.slice",
        "numpy.lib.function_base.median"
    ],
    "numpy.core.fromnumeric.mean": [
        "<builtin>.type",
        "numpy.core._methods._mean"
    ],
    "numpy.core._methods._mean": [
        "<builtin>.issubclass",
        "<builtin>.hasattr",
        "<builtin>.isinstance",
        "numpy.core._methods._count_reduce_items"
    ],
    "numpy.core._methods._count_reduce_items": [
        "<builtin>.isinstance",
        "<builtin>.tuple",
        "numpy.lib.stride_tricks.broadcast_to",
        "<builtin>.range",
        "numpy.lib.stride_tricks"
    ],
    "numpy.lib.function_base.median": [
        "numpy.lib.function_base._ureduce"
    ],
    "numpy.lib.function_base._ureduce": [
        "<builtin>.sorted",
        "numpy.core.numeric.normalize_axis_tuple",
        "numpy.lib.function_base._median",
        "<builtin>.tuple",
        "<builtin>.enumerate",
        "<builtin>.set",
        "<builtin>.list",
        "<builtin>.range",
        "<builtin>.len"
    ],
    "numpy.lib.function_base._median": [
        "numpy.lib.utils._median_nancheck",
        "append",
        "<builtin>.tuple",
        "numpy.core.fromnumeric.partition",
        "numpy.core.fromnumeric.mean",
        "numpy.core.numerictypes.issubdtype",
        "<builtin>.slice"
    ],
    "numpy.core.fromnumeric.partition": [],
    "numpy.lib.utils._median_nancheck": [
        "numpy.core.numeric.count_nonzero",
        "<builtin>.isinstance",
        "numpy.ma.core.isMaskedArray"
    ],
    "numpy.ma.core.isMaskedArray": [
        "<builtin>.isinstance"
    ],
    "numpy.core.numeric.count_nonzero": [
        "numpy.core.numerictypes.issubdtype"
    ],
    "numpy.lib.arraypad._round_if_needed": [
        "numpy.core.numerictypes.issubdtype"
    ],
    "numpy.lib.arraypad._get_linear_ramps": [
        "numpy.core.function_base.linspace",
        "numpy.lib.arraypad._slice_at_axis",
        "<builtin>.zip",
        "numpy.lib.arraypad._get_edges",
        "numpy.core.linspace",
        "<builtin>.slice"
    ],
    "numpy.core.linspace": [],
    "numpy.core.function_base.linspace": [
        "numpy.core.numeric.moveaxis",
        "<builtin>.ValueError",
        "numpy.core.fromnumeric.any",
        "numpy.core.fromnumeric.ndim",
        "numpy.core.numeric.isscalar",
        "<builtin>.float",
        "numpy.core.multiarray.result_type",
        "numpy.core.numerictypes.issubdtype"
    ],
    "<builtin>.float": [],
    "numpy.core.fromnumeric.ndim": [],
    "numpy.core.numeric.isscalar": [
        "<builtin>.isinstance",
        "<builtin>.type"
    ],
    "numpy.core.fromnumeric.any": [
        "numpy.core.fromnumeric._wrapreduction"
    ],
    "scipy.ndimage._interpolation.spline_filter": [
        "scipy.ndimage._interpolation.spline_filter1d",
        "numpy.lib.type_check.iscomplexobj",
        "scipy.ndimage._ni_support._get_output",
        "<builtin>.range",
        "scipy.ndimage._interpolation.spline_filter",
        "<builtin>.RuntimeError"
    ],
    "scipy.ndimage._interpolation.spline_filter1d": [
        "scipy.ndimage._interpolation.spline_filter1d",
        "numpy.lib.type_check.iscomplexobj",
        "scipy.ndimage._ni_support._get_output",
        "<builtin>.RuntimeError",
        "scipy.ndimage._ni_support._extend_mode_to_code",
        "scipy._lib._util.normalize_axis_index"
    ],
    "scipy.ndimage._ni_support._extend_mode_to_code": [
        "<builtin>.RuntimeError"
    ],
    "scipy._lib._util.normalize_axis_index": [
        "numpy.core.numeric.AxisError",
        "numpy.exceptions.AxisError"
    ],
    "numpy.core.numeric.AxisError": [],
    "numpy.exceptions.AxisError": [],
    "numpy.core.numeric.ones_like": [
        "numpy.core.multiarray.empty_like",
        "numpy.core.multiarray.copyto"
    ],
    "skimage.segmentation.boundaries.find_boundaries": [
        "skimage.morphology.gray.dilation",
        "numpy.core.iinfo",
        "numpy.core.getlimits.iinfo.__init__",
        "skimage.segmentation.boundaries._find_boundaries_subpixel",
        "skimage.morphology.gray.erosion",
        "scipy.ndimage._morphology.generate_binary_structure"
    ],
    "skimage.segmentation.boundaries._find_boundaries_subpixel": [
        "numpy.lib.index_tricks.ndindex.__iter__",
        "numpy.lib.index_tricks.ndindex.__next__",
        "numpy.lib.index_tricks.ndindex.__init__",
        "numpy.lib.arraysetops.unique",
        "numpy.core.iinfo",
        "numpy.core.numeric.zeros_like",
        "numpy.core.numeric.ones",
        "numpy.core.getlimits.iinfo.__init__",
        "skimage.util.shape.view_as_windows",
        "numpy.lib.arraypad.pad",
        "numpy.core.ones",
        "<builtin>.slice",
        "<builtin>.len"
    ],
    "numpy.core.numeric.ones": [
        "numpy.core.multiarray.copyto"
    ],
    "numpy.core.ones": [],
    "skimage.util.shape.view_as_windows": [
        "numpy.lib.stride_tricks.as_strided",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "<builtin>.tuple",
        "<builtin>.list",
        "<builtin>.TypeError",
        "<builtin>.slice",
        "<builtin>.len"
    ],
    "skimage.morphology.gray.dilation": [
        "skimage.morphology.gray._iterate_gray_func",
        "skimage.morphology.gray._invert_footprint",
        "numpy.core.multiarray.empty_like",
        "<builtin>.tuple",
        "skimage.morphology.footprints._footprint_is_sequence",
        "skimage.morphology.gray._shift_footprint",
        "scipy.ndimage._morphology.grey_dilation"
    ],
    "skimage.morphology.footprints._footprint_is_sequence": [
        "<builtin>.all",
        "<builtin>.ValueError",
        "skimage.morphology.footprints._footprint_is_sequence._validate_sequence_element",
        "<builtin>.isinstance",
        "<builtin>.hasattr"
    ],
    "skimage.morphology.footprints._footprint_is_sequence._validate_sequence_element": [
        "<builtin>.hasattr",
        "<builtin>.isinstance",
        "<builtin>.len"
    ],
    "skimage.morphology.gray._shift_footprint": [
        "numpy.core.shape_base.vstack",
        "numpy.core.vstack",
        "numpy.core.shape_base.hstack",
        "numpy.core.hstack"
    ],
    "numpy.core.shape_base.vstack": [
        "<builtin>.isinstance",
        "numpy.core.multiarray.concatenate",
        "numpy.core.shape_base._arrays_for_stack_dispatcher",
        "numpy.core.shape_base.atleast_2d",
        "numpy.core.arrayprint.concatenate",
        "numpy.core.fromnumeric.concatenate"
    ],
    "numpy.core.shape_base._arrays_for_stack_dispatcher": [
        "<builtin>.hasattr"
    ],
    "numpy.core.shape_base.atleast_2d": [
        "append",
        "<builtin>.len"
    ],
    "numpy.core.vstack": [],
    "numpy.core.shape_base.hstack": [
        "<builtin>.isinstance",
        "numpy.core.multiarray.concatenate",
        "numpy.core.shape_base._arrays_for_stack_dispatcher",
        "numpy.core.fromnumeric.concatenate",
        "numpy.core.shape_base.atleast_1d",
        "numpy.core.arrayprint.concatenate"
    ],
    "numpy.core.shape_base.atleast_1d": [
        "append",
        "<builtin>.len"
    ],
    "numpy.core.hstack": [],
    "skimage.morphology.gray._invert_footprint": [
        "<builtin>.slice"
    ],
    "skimage.morphology.gray._iterate_gray_func": [
        "scipy.ndimage._morphology.grey_erosion",
        "<builtin>.range",
        "scipy.ndimage._morphology.grey_dilation"
    ],
    "scipy.ndimage._morphology.grey_dilation": [
        "<builtin>.ValueError",
        "scipy.ndimage._ni_support._normalize_sequence",
        "scipy.ndimage._filters._min_or_max_filter",
        "<builtin>.tuple",
        "<builtin>.range",
        "numpy.core.numeric.isscalar",
        "numpy.core.isscalar",
        "<builtin>.slice",
        "<builtin>.len"
    ],
    "numpy.core.isscalar": [],
    "scipy.ndimage._filters._min_or_max_filter": [
        "<builtin>.ValueError",
        "scipy.ndimage._ni_support._normalize_sequence",
        "numpy.lib.type_check.iscomplexobj",
        "scipy.ndimage._ni_support._get_output",
        "copy",
        "numpy.core.ones",
        "<builtin>.int",
        "<builtin>.TypeError",
        "numpy.lib.shape_base.expand_dims",
        "scipy.ndimage._ni_support._extend_mode_to_code",
        "numpy.core.multiarray.may_share_memory",
        "<builtin>.len",
        "scipy.ndimage._filters.minimum_filter1d",
        "numpy.core.numeric.ones",
        "<builtin>.tuple",
        "<builtin>.zip",
        "<builtin>.RuntimeError",
        "scipy.ndimage._filters.maximum_filter1d",
        "<builtin>.isinstance",
        "<builtin>.range",
        "scipy.ndimage._ni_support._check_axes"
    ],
    "numpy.core.multiarray.may_share_memory": [],
    "scipy.ndimage._ni_support._check_axes": [
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "<builtin>.tuple",
        "<builtin>.set",
        "<builtin>.range",
        "numpy.core.numeric.isscalar",
        "numpy.core.isscalar",
        "<builtin>.len"
    ],
    "numpy.lib.shape_base.expand_dims": [
        "numpy.core.numeric.normalize_axis_tuple",
        "<builtin>.isinstance",
        "<builtin>.next",
        "<builtin>.iter",
        "<builtin>.type",
        "<builtin>.range",
        "<builtin>.len"
    ],
    "scipy.ndimage._filters.minimum_filter1d": [
        "<builtin>.ValueError",
        "numpy.lib.type_check.iscomplexobj",
        "scipy.ndimage._ni_support._get_output",
        "<builtin>.TypeError",
        "<builtin>.RuntimeError",
        "scipy.ndimage._ni_support._extend_mode_to_code",
        "scipy._lib._util.normalize_axis_index"
    ],
    "scipy.ndimage._filters.maximum_filter1d": [
        "<builtin>.ValueError",
        "numpy.lib.type_check.iscomplexobj",
        "scipy.ndimage._ni_support._get_output",
        "<builtin>.TypeError",
        "<builtin>.RuntimeError",
        "scipy.ndimage._ni_support._extend_mode_to_code",
        "scipy._lib._util.normalize_axis_index"
    ],
    "skimage.morphology.gray.erosion": [
        "skimage.morphology.gray._iterate_gray_func",
        "numpy.core.multiarray.empty_like",
        "scipy.ndimage._morphology.grey_erosion",
        "<builtin>.tuple",
        "skimage.morphology.footprints._footprint_is_sequence",
        "skimage.morphology.gray._shift_footprint"
    ],
    "scipy.ndimage._morphology.grey_erosion": [
        "<builtin>.ValueError",
        "scipy.ndimage._filters._min_or_max_filter"
    ],
    "skimage.morphology.footprints.square": [
        "skimage.morphology.footprints._decompose_size",
        "<builtin>.ValueError",
        "numpy.core.numeric.ones",
        "<builtin>.tuple",
        "numpy.core.ones"
    ],
    "skimage.morphology.footprints._decompose_size": [
        "<builtin>.ValueError"
    ]
}