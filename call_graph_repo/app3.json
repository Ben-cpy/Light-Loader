{"handler": [], "numpy": ["<builtin>.tuple", "numpy.core.getlimits._register_known_types", "<builtin>.getattr", "<builtin>.RuntimeError", "extend", "<map>.update", "remove", "numpy._pytesttester.PytestTester.__init__", "numpy._mac_os_check", "numpy._sanity_check", "<builtin>.len", "warnings.catch_warnings.__init__", "<builtin>.int", "<builtin>.str", "warnings.filterwarnings", "<builtin>.ImportError"], "warnings": ["warnings._processoptions", "warnings.filterwarnings", "warnings.simplefilter", "<builtin>.hasattr"], "warnings._processoptions": ["warnings._setoption", "<builtin>.print"], "warnings._setoption": ["warnings._getcategory", "warnings.filterwarnings", "<builtin>.len", "<builtin>.int", "re.escape", "warnings._getaction"], "<builtin>.len": [], "warnings._getaction": [], "warnings._getcategory": ["<builtin>.issubclass", "<builtin>.__import__", "<builtin>.getattr"], "<builtin>.__import__": [], "<builtin>.getattr": [], "<builtin>.issubclass": [], "re": ["<builtin>.chr", "sre_compile.compile", "functools.lru_cache.decorating_function", "functools.lru_cache", "<builtin>.type", "<builtin>.globals", "copyreg.pickle"], "enum": ["<builtin>.object"], "types": ["types._g", "types._c", "types._ag", "<builtin>.object", "<builtin>.type", "<builtin>.globals", "types._cell_factory"], "<builtin>.type": [], "types._cell_factory": [], "types._g": [], "types._c": [], "types._ag": [], "<builtin>.object": [], "types._GeneratorWrapper": ["<builtin>.property"], "<builtin>.property": [], "<builtin>.globals": [], "enum.EnumMeta": ["<builtin>.property", "<builtin>.classmethod", "<builtin>.staticmethod"], "<builtin>.classmethod": [], "<builtin>.staticmethod": [], "enum.Enum": ["types.DynamicClassAttribute.__init__", "<builtin>.classmethod"], "types.DynamicClassAttribute.__init__": ["<builtin>.bool", "<builtin>.getattr"], "<builtin>.bool": [], "enum.Flag": ["<builtin>.classmethod"], "enum.IntFlag": ["<builtin>.classmethod"], "sre_compile": ["<builtin>.tuple"], "sre_parse": ["<builtin>.frozenset"], "sre_constants": ["sre_constants._makecodes"], "sre_constants._makecodes": ["<str>.strip", "<builtin>.globals", "<str>.split", "<builtin>.enumerate"], "<str>.strip": [], "<str>.split": [], "<builtin>.enumerate": [], "<builtin>.frozenset": [], "sre_parse.State": ["<builtin>.property"], "sre_parse.Tokenizer": ["<builtin>.property"], "<builtin>.tuple": [], "functools": ["collections.namedtuple", "<builtin>.object"], "abc": [], "_py_abc": [], "_weakrefset": [], "_weakrefset.WeakSet": ["<builtin>.classmethod"], "collections": [], "keyword": ["<builtin>.frozenset"], "operator": [], "reprlib": ["reprlib.Repr.__init__"], "reprlib.Repr.__init__": [], "collections.OrderedDict": ["reprlib.recursive_repr", "<builtin>.classmethod", "<builtin>.object", "reprlib.recursive_repr.decorating_function"], "reprlib.recursive_repr": [], "reprlib.recursive_repr.decorating_function": ["<builtin>.set", "<builtin>.getattr"], "<builtin>.set": [], "collections.Counter": ["<builtin>.classmethod"], "collections.ChainMap": ["reprlib.recursive_repr", "<builtin>.property", "<builtin>.classmethod", "reprlib.recursive_repr.decorating_function"], "collections.UserDict": ["<builtin>.classmethod"], "functools.partial": ["reprlib.recursive_repr", "reprlib.recursive_repr.decorating_function"], "functools.partialmethod": ["<builtin>.property", "<builtin>.classmethod"], "collections.namedtuple": ["<str>.join", "<builtin>.dict", "<builtin>.reversed", "<builtin>.isinstance", "<builtin>.str", "<builtin>.tuple", "<builtin>.enumerate", "<str>.split", "<builtin>.zip", "<builtin>.ValueError", "<builtin>.len", "<builtin>.eval", "<builtin>.list", "<builtin>.classmethod", "<builtin>.type", "<str>.replace", "<builtin>.TypeError", "<builtin>.map", "<builtin>.set", "collections.<lambda1>"], "<builtin>.isinstance": [], "<builtin>.map": [], "<builtin>.list": [], "<builtin>.str": [], "<builtin>.TypeError": [], "<builtin>.ValueError": [], "<builtin>.reversed": [], "<builtin>.zip": [], "<builtin>.dict": [], "<str>.join": [], "<builtin>.eval": [], "collections.<lambda1>": ["operator.itemgetter.__init__", "<builtin>.property"], "operator.itemgetter.__init__": [], "functools.singledispatchmethod": ["<builtin>.property"], "functools.cached_property": ["<builtin>.classmethod"], "<builtin>.chr": [], "sre_compile.compile": ["sre_compile.dis", "sre_compile.isstring", "<builtin>.tuple", "sre_parse.parse", "<builtin>.print", "<map>.items", "sre_compile._code"], "sre_compile.isstring": ["<builtin>.isinstance"], "sre_parse.parse": ["sre_parse.State.__init__", "sre_parse.Tokenizer.__init__", "sre_parse.Tokenizer.error", "sre_parse.SubPattern.dump", "sre_parse._parse_sub", "sre_constants.error.__init__", "sre_parse.Tokenizer.seek", "sre_parse.fix_flags"], "sre_parse.Tokenizer.__init__": ["<builtin>.isinstance", "<builtin>.str", "sre_parse.Tokenizer.__next"], "sre_parse.Tokenizer.__next": ["<builtin>.len", "sre_parse.Tokenizer.error"], "sre_parse.Tokenizer.error": ["sre_parse.Tokenizer.tell", "sre_parse.Tokenizer.error"], "sre_parse.Tokenizer.tell": ["<builtin>.len"], "sre_parse.State.__init__": [], "sre_parse._parse_sub": ["", "sre_parse.Tokenizer.tell", "extend", "append", "sre_parse.SubPattern.append", "sre_parse.Tokenizer.match", "<builtin>.len", "sre_parse.SubPattern.__init__"], "sre_parse.Tokenizer.match": ["sre_parse.Tokenizer.__next"], "sre_parse.SubPattern.__init__": [], "extend": [], "append": [], "sre_parse.SubPattern.append": ["append"], "sre_parse.Tokenizer.seek": ["sre_parse.Tokenizer.__next"], "sre_parse.fix_flags": ["<builtin>.ValueError", "<builtin>.isinstance"], "sre_constants.error.__init__": ["<builtin>.isinstance", "<str>.count", "<str>.rfind", "<builtin>.super"], "<str>.count": [], "<str>.rfind": [], "<builtin>.super": [], "sre_parse.SubPattern.dump": ["<builtin>.isinstance", "<builtin>.str", "<builtin>.enumerate", "<builtin>.print"], "<builtin>.print": [], "sre_compile._code": ["sre_compile._compile_info", "append", "sre_compile._compile"], "sre_compile._compile_info": ["", "sre_parse.SubPattern.getwidth", "extend", "sre_compile._get_charset_prefix", "sre_compile._optimize_charset", "sre_compile._compile_charset", "<builtin>.len", "sre_compile._get_literal_prefix"], "sre_parse.SubPattern.getwidth": ["<builtin>.max", "<builtin>.min"], "<builtin>.min": [], "<builtin>.max": [], "sre_compile._get_literal_prefix": ["sre_compile._get_iscased", "", "extend", "sre_compile._combine_flags", "<builtin>.len", "sre_compile._get_literal_prefix"], "sre_compile._get_iscased": [], "sre_compile._combine_flags": [], "sre_compile._get_charset_prefix": ["sre_compile._get_iscased", "", "<builtin>.map", "sre_compile._combine_flags", "<builtin>.any", "<builtin>.range"], "<builtin>.range": [], "<builtin>.any": [], "sre_compile._optimize_charset": ["<builtin>.bytes", "sre_compile._bytes_to_codes", "<builtin>.map", "<builtin>.any", "append", "<builtin>.bytearray", "sre_compile._mk_bitmap", "<builtin>.range", "<builtin>.len"], "<builtin>.bytearray": [], "sre_compile._mk_bitmap": ["<builtin>.range", "<builtin>.len"], "<builtin>.bytes": [], "sre_compile._bytes_to_codes": ["<builtin>.memoryview", "<builtin>.len"], "<builtin>.memoryview": [], "sre_compile._compile_charset": ["", "extend", "sre_constants.error.__init__"], "sre_compile._compile": ["", "sre_compile._simple", "sre_compile._combine_flags", "sre_compile._compile_charset", "sre_compile._optimize_charset", "sre_compile._compile", "sre_constants.error.__init__"], "sre_compile._simple": ["<builtin>.len", "sre_compile._simple"], "sre_compile.dis": ["<builtin>.set", "<builtin>.str", "<builtin>.len", "sre_compile.dis.dis_"], "sre_compile.dis.dis_": ["<builtin>.chr", "<builtin>.bin", "<builtin>.map", "<builtin>.list", "sre_compile._hex_code", "sre_compile.dis.dis_.print_", "<builtin>.range", "<builtin>.ValueError", "<builtin>.str", "sre_compile.dis.dis_.print_2", "sre_compile.dis.dis_"], "<builtin>.bin": [], "sre_compile.dis.dis_.print_": ["<builtin>.print"], "sre_compile.dis.dis_.print_2": ["<builtin>.print"], "sre_compile._hex_code": [], "<map>.items": [], "functools.lru_cache": ["<builtin>.TypeError", "functools._lru_cache_wrapper", "functools.update_wrapper", "<builtin>.isinstance", "<builtin>.callable"], "<builtin>.callable": [], "functools._lru_cache_wrapper": ["<builtin>.object"], "functools.update_wrapper": ["<builtin>.getattr"], "functools.lru_cache.decorating_function": ["functools._lru_cache_wrapper", "functools.update_wrapper"], "copyreg": ["copyreg.pickle", "<builtin>.type"], "copyreg.pickle": ["<builtin>.TypeError", "copyreg.constructor", "<builtin>.callable"], "copyreg.constructor": ["<builtin>.TypeError", "<builtin>.callable"], "re.escape": ["<str>.translate", "<str>.encode", "<builtin>.isinstance", "<builtin>.str"], "<builtin>.int": [], "warnings.filterwarnings": ["<builtin>.issubclass", "warnings._add_filter", "<builtin>.isinstance", "re.compile"], "re.compile": ["re._compile"], "re._compile": ["<builtin>.isinstance", "sre_compile.isstring", "sre_compile.compile", "<builtin>.next", "<builtin>.TypeError", "<builtin>.type", "<builtin>.iter", "<builtin>.ValueError", "<builtin>.len"], "<builtin>.iter": [], "<builtin>.next": [], "warnings._add_filter": ["insert", "warnings._filters_mutated", "append", "remove"], "remove": [], "insert": [], "warnings._filters_mutated": [], "<builtin>.hasattr": [], "warnings.simplefilter": ["warnings._add_filter", "<builtin>.isinstance"], "numpy._globals": ["<builtin>.globals", "<builtin>.RuntimeError"], "<builtin>.RuntimeError": [], "numpy.__config__": ["os.add_dll_directory", "genericpath.isdir", "posixpath.dirname", "ntpath.join", "posixpath.join", "ntpath.dirname"], "os": ["os._Environ.__init__", "os._add", "os._fscodec", "extend", "os._exists", "os._createenviron", "append", "<builtin>.type", "<builtin>.set", "<builtin>.globals", "<builtin>.ImportError"], "stat": [], "<builtin>.ImportError": [], "ntpath": ["<builtin>.hasattr"], "genericpath": [], "posixpath": [], "os._exists": ["<builtin>.globals"], "os._add": [], "os._createenviron": ["os._Environ.__init__", "os._createenviron.encodekey"], "os._createenviron.encodekey": ["os._createenviron.encode"], "os._createenviron.encode": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.type"], "os._Environ.__init__": [], "os._fscodec": [], "os.PathLike": ["<builtin>.classmethod", "abc.abstractmethod"], "abc.abstractmethod": [], "posixpath.dirname": ["os._fspath", "posixpath._get_sep", "<builtin>.len"], "os._fspath": ["<builtin>.TypeError", "<str>.format", "<builtin>.hasattr", "<builtin>.type", "<builtin>.isinstance"], "<str>.format": [], "posixpath._get_sep": ["<builtin>.isinstance"], "ntpath.dirname": ["ntpath.split"], "ntpath.split": ["os._fspath", "ntpath.splitdrive", "<builtin>.len", "ntpath._get_bothseps"], "ntpath._get_bothseps": ["<builtin>.isinstance"], "ntpath.splitdrive": ["os._fspath", "<builtin>.isinstance", "<builtin>.len"], "posixpath.join": ["os._fspath", "posixpath._get_sep", "<builtin>.map", "genericpath._check_arg_types"], "genericpath._check_arg_types": ["<builtin>.isinstance", "<builtin>.TypeError"], "ntpath.join": ["os._fspath", "<builtin>.map", "ntpath.splitdrive", "<builtin>.isinstance", "genericpath._check_arg_types"], "genericpath.isdir": ["stat.S_ISDIR"], "stat.S_ISDIR": ["stat.S_IFMT"], "stat.S_IFMT": [], "os.add_dll_directory": ["os._AddedDllDirectory.__init__"], "os._AddedDllDirectory.__init__": [], "numpy._distributor_init": [], "numpy.core": ["numpy._pytesttester.PytestTester.__init__", "<builtin>.hasattr", "append", "<builtin>.type", "<builtin>.ImportError", "copyreg.pickle"], "numpy.version": ["numpy._version.get_versions"], "__future__": ["__future__._Feature.__init__"], "__future__._Feature.__init__": [], "numpy._version": [], "json": [], "codecs": ["<builtin>.SystemError"], "<builtin>.SystemError": [], "encodings": [], "numpy._version.get_versions": ["json.loads"], "json.loads": ["json.detect_encoding", "<str>.startswith", "<builtin>.isinstance", "<builtin>.TypeError"], "json.detect_encoding": ["<builtin>.len"], "<str>.startswith": [], "numpy.core.multiarray": [], "numpy.core.overrides": ["<builtin>.bool", "<builtin>.int", "collections.namedtuple"], "numpy.compat._inspect": [], "numpy.core.umath": [], "numpy.core.numerictypes": ["<builtin>.tuple", "numpy.core.overrides.set_module", "numpy.core.overrides.set_module.decorator", "<builtin>.sorted", "append", "numpy.core.numerictypes._construct_lookups", "numpy.core.numerictypes._register_types", "<builtin>.globals", "<builtin>.len"], "numbers": [], "numbers.Complex": ["<builtin>.property", "abc.abstractmethod"], "numbers.Real": ["<builtin>.property", "abc.abstractmethod"], "numbers.Rational": ["<builtin>.property", "abc.abstractmethod"], "numbers.Integral": ["<builtin>.property", "abc.abstractmethod"], "numpy.core._string_helpers": ["<builtin>.chr", "<builtin>.range"], "numpy.core._type_aliases": ["numpy.core._string_helpers.english_lower", "numpy.core._type_aliases._add_types", "<builtin>.list", "numpy.core._type_aliases._set_array_types", "<map>.items", "<builtin>.isinstance", "numpy.core._type_aliases._add_aliases", "numpy.core._type_aliases._add_integer_aliases", "numpy.core._type_aliases._set_up_aliases"], "numpy.compat": ["extend"], "numpy.compat._pep440": ["collections.namedtuple", "re.compile"], "numpy.compat._pep440.LegacyVersion": ["<builtin>.property"], "numpy.compat._pep440.Version": ["<builtin>.property", "re.compile"], "numpy.compat.py3k": [], "pathlib": ["functools.lru_cache.decorating_function", "functools.lru_cache", "<builtin>.hasattr"], "fnmatch": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "io": [], "urllib.parse": ["urllib.parse._fix_result_transcoding", "<builtin>.frozenset", "<builtin>.bytes", "re.compile", "collections.namedtuple"], "urllib.parse._NetlocResultMixinBase": ["<builtin>.property", "<builtin>.classmethod"], "urllib.parse._NetlocResultMixinStr": ["<builtin>.property"], "urllib.parse._NetlocResultMixinBytes": ["<builtin>.property"], "urllib.parse._fix_result_transcoding": [], "pathlib._WindowsFlavour": ["<builtin>.set"], "pathlib._NormalAccessor": ["<builtin>.staticmethod", "<builtin>.hasattr"], "pathlib.PurePath": ["operator.attrgetter.__init__", "<builtin>.property", "<builtin>.classmethod"], "operator.attrgetter.__init__": ["<builtin>.tuple", "<builtin>.TypeError", "<builtin>.map", "<str>.split", "<builtin>.isinstance"], "pathlib.Path": ["<builtin>.classmethod"], "pickle": ["append", "extend"], "struct": [], "_compat_pickle": ["<map>.items", "<builtin>.dict", "<builtin>.len", "<map>.update"], "<map>.update": [], "pickle._Pickler": ["<builtin>.type"], "numpy.core._dtype": [], "numpy.core._string_helpers.english_lower": [], "numpy.core._type_aliases._add_types": ["<map>.items"], "numpy.core._type_aliases._add_aliases": ["<map>.items", "numpy.core._type_aliases.bitname"], "numpy.core._type_aliases.bitname": ["numpy.core._dtype._kind_name", "numpy.core._type_aliases._bits_of"], "numpy.core._type_aliases._bits_of": ["<builtin>.ValueError", "<builtin>.next", "<map>.values"], "<map>.values": [], "numpy.core._dtype._kind_name": ["<builtin>.RuntimeError"], "numpy.core._type_aliases._add_integer_aliases": ["<builtin>.set", "<builtin>.zip"], "numpy.core._type_aliases._set_up_aliases": [], "numpy.core._type_aliases._set_array_types": ["<builtin>.len", "numpy.core._type_aliases._add_array_type"], "numpy.core._type_aliases._add_array_type": [], "numpy.core.overrides.set_module": [], "numpy.core.overrides.set_module.decorator": [], "numpy.core.numerictypes._construct_lookups": ["<builtin>.len"], "<builtin>.sorted": [], "numpy.core.numerictypes._register_types": [], "numpy.core.numeric": ["numpy.core.overrides.set_module", "numpy.core.numeric.extend_all", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.set_array_function_like_doc", "<builtin>.type"], "numpy.core.shape_base": ["<builtin>.getattr"], "numpy.core.fromnumeric": [], "numpy.core._methods": ["<map>.update"], "contextlib": [], "contextlib.AbstractContextManager": ["<builtin>.classmethod", "abc.abstractmethod"], "contextlib.AbstractAsyncContextManager": ["<builtin>.classmethod", "abc.abstractmethod"], "contextlib._BaseExitStack": ["<builtin>.staticmethod"], "contextlib.AsyncExitStack": ["<builtin>.staticmethod"], "numpy.core._exceptions": [], "numpy.core._exceptions._ArrayMemoryError": ["<builtin>.property", "<builtin>.staticmethod"], "numpy.core._ufunc_config": ["<map>.items", "numpy.core.overrides.set_module", "numpy.core.overrides.set_module.decorator", "numpy.core._ufunc_config._setdef"], "collections.abc": [], "numpy.core._ufunc_config._setdef": [], "numpy.core.overrides.set_array_function_like_doc": [], "numpy.core.arrayprint": ["numpy.core.overrides.set_module", "contextlib.contextmanager", "<builtin>.getattr", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.array_function_dispatch.decorator", "<builtin>.issubclass", "append", "numpy.core.arrayprint._recursive_guard.decorating_function", "numpy.core.arrayprint._recursive_guard", "numpy.core.overrides.array_function_dispatch"], "contextlib.contextmanager": ["functools.wraps"], "functools.wraps": [], "numpy.core.arrayprint._recursive_guard": [], "numpy.core.arrayprint._recursive_guard.decorating_function": ["<builtin>.set", "functools.wraps"], "numpy.core.overrides.array_function_dispatch": [], "numpy.core.overrides.array_function_dispatch.decorator": [], "numpy.core.arrayprint.StructuredVoidFormat": ["<builtin>.classmethod"], "numpy.core._asarray": ["numpy.core.overrides.set_module", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.set_array_function_like_doc", "numpy.core.overrides.array_function_dispatch"], "numpy.core.numeric.extend_all": ["<builtin>.set", "<builtin>.getattr"], "numpy.core.defchararray": ["numpy.core.overrides.set_module", "numpy.core.overrides.set_module.decorator"], "numpy.core.records": ["numpy.core.overrides.set_module", "numpy.core.overrides.set_module.decorator"], "numpy.core.memmap": [], "numpy.core.function_base": [], "numpy.core._machar": [], "numpy.core.getlimits": ["<builtin>.dict"], "numpy.core.getlimits.MachArLike": ["<builtin>.property"], "numpy.core.getlimits.finfo": ["<builtin>.property"], "numpy.core.getlimits.iinfo": ["<builtin>.property"], "numpy.core.einsumfunc": ["<builtin>.set", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.array_function_dispatch"], "numpy.core._add_newdocs": ["numpy.core._add_newdocs.refer_to_array_attribute", "<str>.replace", "numpy.core.function_base.add_newdoc"], "numpy.core.function_base.add_newdoc": ["<str>.strip", "<builtin>.getattr", "<builtin>.__import__", "<builtin>.globals", "numpy.core.function_base._add_docstring", "<builtin>.isinstance"], "numpy.core.function_base._add_docstring": ["warnings.warn", "numpy.core.function_base._needs_add_docstring"], "numpy.core.function_base._needs_add_docstring": ["<builtin>.isinstance"], "warnings.warn": ["<builtin>.TypeError", "warnings._is_internal_frame", "warnings.warn_explicit", "<builtin>.issubclass", "<builtin>.type", "warnings._next_external_frame", "<builtin>.range", "<builtin>.isinstance"], "warnings._is_internal_frame": [], "warnings._next_external_frame": ["warnings._is_internal_frame"], "warnings.warn_explicit": ["warnings._showwarnmsg", "linecache.getlines", "warnings.WarningMessage.__init__", "<builtin>.issubclass", "<str>.lower", "<map>.clear", "<builtin>.int", "<map>.get", "<builtin>.isinstance", "<builtin>.str", "<builtin>.RuntimeError"], "<str>.lower": [], "<map>.get": [], "<map>.clear": [], "linecache": [], "tokenize": ["tokenize._all_string_prefixes", "<builtin>.map", "re.compile", "<builtin>.sorted", "<builtin>.any", "tokenize.group", "tokenize.maybe", "functools.lru_cache", "<builtin>.set", "collections.namedtuple"], "token": ["<builtin>.isinstance", "<builtin>.globals", "extend"], "<str>.replace": [], "tokenize.TokenInfo": ["<builtin>.property"], "tokenize.maybe": ["tokenize.group"], "tokenize.group": [], "tokenize._all_string_prefixes": [], "linecache.getlines": ["linecache.updatecache", "linecache.clearcache", "<builtin>.len"], "linecache.updatecache": ["<str>.startswith", "linecache.lazycache", "<map>.pop", "tokenize.open", "ntpath.join", "posixpath.join", "ntpath.isabs", "posixpath.isabs", "<builtin>.len", "<str>.endswith"], "<map>.pop": [], "<str>.endswith": [], "linecache.lazycache": ["<str>.startswith", "<builtin>.len", "<str>.endswith", "<builtin>.getattr"], "posixpath.isabs": ["os._fspath", "posixpath._get_sep"], "ntpath.isabs": ["os._fspath", "ntpath._get_bothseps", "ntpath.splitdrive", "<builtin>.isinstance", "<builtin>.len"], "tokenize.open": ["tokenize.detect_encoding"], "tokenize.detect_encoding": ["tokenize.detect_encoding.read_or_stop", "tokenize.detect_encoding.find_cookie"], "tokenize.detect_encoding.read_or_stop": [], "tokenize.detect_encoding.find_cookie": ["tokenize._get_normal_name", "<builtin>.SyntaxError"], "<builtin>.SyntaxError": [], "tokenize._get_normal_name": [], "linecache.clearcache": ["<map>.clear"], "warnings.WarningMessage.__init__": [], "warnings._showwarnmsg": ["warnings._showwarnmsg_impl"], "warnings._showwarnmsg_impl": ["warnings._formatwarnmsg"], "warnings._formatwarnmsg": ["warnings._formatwarnmsg_impl"], "warnings._formatwarnmsg_impl": ["linecache.getline"], "linecache.getline": ["<builtin>.len", "linecache.getlines"], "tracemalloc": [], "tracemalloc.Frame": ["<builtin>.property"], "tracemalloc.Traceback": ["<builtin>.property"], "tracemalloc.Trace": ["<builtin>.property"], "tracemalloc.Filter": ["<builtin>.property"], "tracemalloc.DomainFilter": ["<builtin>.property"], "tracemalloc.Snapshot": ["<builtin>.staticmethod"], "numpy.core._add_newdocs.refer_to_array_attribute": [], "numpy.core._add_newdocs_scalars": ["numpy.core.function_base.add_newdoc", "numpy.core._add_newdocs_scalars.numeric_type_aliases", "numpy.core._add_newdocs_scalars.add_newdoc_for_scalar_type"], "platform": ["collections.namedtuple", "re.compile"], "subprocess": ["<builtin>.hasattr", "subprocess._use_posix_spawn", "<builtin>.getattr"], "signal": ["<builtin>.globals", "signal._wraps", "signal._wraps.decorator"], "signal._wraps": [], "signal._wraps.decorator": [], "threading": ["_weakrefset.WeakSet.__init__", "<builtin>.hasattr", "append", "<builtin>.set", "threading.RLock", "threading._MainThread.__init__", "collections.namedtuple"], "threading.Barrier": ["<builtin>.property"], "threading.RLock": ["threading._RLock.__init__"], "threading._RLock.__init__": [], "_weakrefset.WeakSet.__init__": ["<builtin>.set", "_weakrefset.WeakSet.update"], "_weakrefset.WeakSet.update": ["_weakrefset.WeakSet._commit_removals", "_weakrefset.WeakSet.add"], "_weakrefset.WeakSet._commit_removals": [], "_weakrefset.WeakSet.add": ["_weakrefset.WeakSet._commit_removals"], "threading.Thread": ["<builtin>.property"], "traceback": [], "traceback.FrameSummary": ["<builtin>.property"], "traceback.StackSummary": ["<builtin>.classmethod"], "traceback.TracebackException": ["<builtin>.classmethod"], "threading._MainThread.__init__": ["threading.Thread._set_ident", "threading.Event.set", "threading.Thread._set_native_id", "threading.Thread.__init__", "threading.Thread._set_tstate_lock"], "threading.Thread.__init__": ["threading.Event.__init__", "_weakrefset.WeakSet.add", "threading.current_thread", "threading._make_invoke_excepthook", "threading._newname", "<builtin>.str"], "threading._newname": [], "threading.current_thread": ["threading._DummyThread.__init__"], "threading._DummyThread.__init__": ["threading.Thread._set_ident", "threading._newname", "threading.Thread.__init__", "threading.Thread._set_native_id"], "threading.Thread._set_ident": [], "threading.Thread._set_native_id": [], "threading.Event.__init__": ["threading.Condition.__init__"], "threading.Condition.__init__": ["threading.RLock"], "threading._make_invoke_excepthook": ["<builtin>.RuntimeError"], "threading.Thread._set_tstate_lock": [], "threading.Event.set": [], "_threading_local": ["contextlib.contextmanager"], "weakref": [], "weakref.finalize": ["<builtin>.property", "<builtin>.classmethod"], "selectors": ["selectors._can_use", "collections.namedtuple", "<builtin>.hasattr"], "selectors.BaseSelector": ["abc.abstractmethod"], "selectors._can_use": ["<builtin>.getattr"], "subprocess.CalledProcessError": ["<builtin>.property"], "subprocess.TimeoutExpired": ["<builtin>.property"], "subprocess.CompletedProcess": ["<builtin>.classmethod"], "subprocess._use_posix_spawn": ["<builtin>.tuple", "<builtin>.map", "<builtin>.len", "<builtin>.hasattr"], "subprocess.Popen": ["<builtin>.property", "<builtin>.classmethod"], "platform._Processor": ["<builtin>.classmethod"], "platform.uname_result": ["functools.cached_property.__init__", "<builtin>.classmethod"], "functools.cached_property.__init__": [], "numpy.core._add_newdocs_scalars.numeric_type_aliases": ["numpy.core._add_newdocs_scalars.numeric_type_aliases.type_aliases_gen", "<builtin>.list"], "numpy.core._add_newdocs_scalars.numeric_type_aliases.type_aliases_gen": ["<builtin>.getattr"], "numpy.core._add_newdocs_scalars.add_newdoc_for_scalar_type": ["<str>.strip", "<builtin>.getattr", "platform.machine", "platform.system", "numpy.core.function_base.add_newdoc"], "platform.system": ["platform.uname"], "platform.uname": ["platform._syscmd_ver", "platform.java_ver", "platform._node", "<builtin>.map", "<builtin>.any", "platform._get_machine_win32", "platform.win32_ver"], "platform._node": [], "socket": ["<builtin>.getattr", "extend", "<builtin>.hasattr", "append", "<builtin>.object"], "socket.socket": ["<builtin>.property", "<builtin>.hasattr"], "socket.SocketIO": ["<builtin>.property"], "platform.win32_ver": ["platform._syscmd_ver", "<builtin>.getattr", "<builtin>.map", "<str>.split", "<map>.get"], "platform._syscmd_ver": ["subprocess.check_output", "platform._norm_version"], "subprocess.check_output": ["<builtin>.ValueError", "subprocess.run"], "subprocess.run": ["subprocess.Popen.poll", "subprocess.Popen.__enter__", "subprocess.Popen.__exit__", "subprocess.Popen.wait", "subprocess.CalledProcessError.__init__", "subprocess.Popen.__init__", "subprocess.CompletedProcess.__init__", "subprocess.Popen.communicate", "<builtin>.ValueError", "subprocess.Popen.kill"], "subprocess.Popen.__init__": ["<builtin>.isinstance", "<builtin>.bool", "subprocess.Popen._execute_child", "<builtin>.TypeError", "<builtin>.filter", "<builtin>.type", "<builtin>.hasattr", "warnings.warn", "append", "subprocess.Popen._get_handles", "subprocess._cleanup", "<builtin>.ValueError"], "subprocess._cleanup": ["remove"], "subprocess.Popen._get_handles": ["<builtin>.isinstance", "subprocess.Popen._get_devnull", "<builtin>.hasattr"], "subprocess.Popen._get_devnull": ["<builtin>.hasattr"], "subprocess.Popen._execute_child": ["<builtin>.bytes", "os.get_exec_path", "subprocess.Popen._handle_exitstatus", "<builtin>.bytearray", "<builtin>.isinstance", "<builtin>.tuple", "ntpath.join", "ntpath.dirname", "<builtin>.ValueError", "<builtin>.len", "<builtin>.getattr", "<builtin>.list", "<builtin>.issubclass", "append", "subprocess.Popen._close_pipe_fds", "<builtin>.TypeError", "subprocess.Popen._posix_spawn", "<builtin>.map", "<builtin>.hasattr", "<builtin>.sorted", "posixpath.dirname", "posixpath.join", "<builtin>.set", "<builtin>.int"], "subprocess.Popen._posix_spawn": ["append", "subprocess.Popen._close_pipe_fds", "<builtin>.getattr"], "subprocess.Popen._close_pipe_fds": ["<builtin>.getattr"], "os.get_exec_path": ["warnings.catch_warnings.__init__", "<str>.split"], "warnings.catch_warnings.__init__": [], "subprocess.Popen._handle_exitstatus": [], "<builtin>.filter": [], "subprocess.Popen.__enter__": [], "subprocess.Popen.__exit__": [], "subprocess.Popen.communicate": ["subprocess.Popen.wait", "subprocess.Popen._wait", "subprocess.Popen._remaining_time", "subprocess.Popen._communicate", "<builtin>.ValueError", "subprocess.Popen._stdin_write", "<builtin>.min"], "subprocess.Popen._communicate": ["selectors.SelectSelector.__init__", "subprocess.Popen.wait", "subprocess.Popen._translate_newlines", "subprocess.Popen._remaining_time", "subprocess.Popen._check_timeout", "subprocess.Popen._save_input", "<builtin>.memoryview", "<builtin>.RuntimeError"], "subprocess.Popen._save_input": [], "selectors.SelectSelector.__init__": ["<builtin>.set", "<builtin>.super"], "subprocess.Popen._remaining_time": [], "subprocess.Popen._check_timeout": ["subprocess.TimeoutExpired.__init__"], "subprocess.TimeoutExpired.__init__": [], "subprocess.Popen.wait": ["<builtin>.min", "subprocess.Popen._remaining_time", "subprocess.Popen._wait"], "subprocess.Popen._wait": ["subprocess.TimeoutExpired.__init__", "subprocess.Popen._try_wait", "subprocess.Popen._remaining_time", "subprocess.Popen._handle_exitstatus", "<builtin>.min"], "subprocess.Popen._try_wait": [], "subprocess.Popen._translate_newlines": [], "subprocess.Popen._stdin_write": [], "subprocess.Popen.kill": ["subprocess.Popen.send_signal"], "subprocess.Popen.send_signal": ["subprocess.Popen.poll"], "subprocess.Popen.poll": ["subprocess.Popen._internal_poll"], "subprocess.Popen._internal_poll": ["subprocess.Popen._handle_exitstatus"], "subprocess.CalledProcessError.__init__": [], "subprocess.CompletedProcess.__init__": [], "platform._norm_version": ["<builtin>.map", "<builtin>.list", "<str>.split"], "platform._get_machine_win32": [], "platform.java_ver": ["platform._java_getprop"], "platform._java_getprop": [], "platform.machine": ["platform.uname"], "numpy.core._dtype_ctypes": [], "numpy.core._internal": ["<map>.keys", "platform.python_implementation", "re.compile"], "ast": ["<builtin>.repr", "<builtin>.property", "<builtin>.type", "<builtin>.hasattr"], "<builtin>.repr": [], "ast._Unparser": ["<builtin>.property", "<builtin>.frozenset", "contextlib.contextmanager"], "ctypes": ["ctypes._check_size", "ctypes.CFUNCTYPE", "<builtin>.Exception", "ctypes.PYFUNCTYPE", "ctypes.LibraryLoader.__init__", "ctypes._reset_cache", "<builtin>.int"], "<builtin>.Exception": [], "ctypes._check_size": ["<builtin>.SystemError"], "ctypes.LibraryLoader": ["<builtin>.classmethod"], "ctypes.LibraryLoader.__init__": [], "ctypes.CFUNCTYPE": ["<builtin>.ValueError"], "ctypes.PYFUNCTYPE": [], "ctypes._endian": ["<builtin>.type"], "ctypes._reset_cache": ["<map>.clear"], "platform.python_implementation": ["platform._sys_version"], "platform._sys_version": ["<builtin>.repr", "<builtin>.hasattr", "<map>.get", "<builtin>.ValueError", "<builtin>.len"], "numpy.core._internal._ctypes": ["<builtin>.property"], "<map>.keys": [], "numpy.core._internal._Stream": ["<builtin>.property"], "numpy._pytesttester": [], "numpy._pytesttester.PytestTester.__init__": [], "numpy.lib": ["numpy._pytesttester.PytestTester.__init__"], "numpy.lib.mixins": [], "numpy.lib.mixins.NDArrayOperatorsMixin": ["numpy.lib.mixins._unary_method", "numpy.lib.mixins._reflected_binary_method", "numpy.lib.mixins._numeric_methods", "numpy.lib.mixins._binary_method"], "numpy.lib.mixins._binary_method": [], "numpy.lib.mixins._numeric_methods": ["numpy.lib.mixins._reflected_binary_method", "numpy.lib.mixins._binary_method", "numpy.lib.mixins._inplace_binary_method"], "numpy.lib.mixins._reflected_binary_method": [], "numpy.lib.mixins._inplace_binary_method": [], "numpy.lib.mixins._unary_method": [], "numpy.lib.scimath": ["numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.array_function_dispatch"], "numpy.lib.type_check": ["numpy.core.overrides.set_module", "numpy.core.overrides.set_module.decorator"], "numpy.lib.ufunclike": ["numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.lib.ufunclike._deprecate_out_named_y", "numpy.core.overrides.array_function_dispatch"], "numpy.lib.ufunclike._deprecate_out_named_y": ["functools.wraps"], "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y": ["numpy.lib.ufunclike._fix_out_named_y", "numpy.lib.ufunclike._deprecate_out_named_y"], "numpy.lib.ufunclike._fix_out_named_y": ["functools.wraps"], "numpy.lib.index_tricks": ["numpy.lib.index_tricks.MGridClass.__init__", "numpy.core.overrides.set_module", "numpy.lib.index_tricks.CClass.__init__", "numpy.core.overrides.set_module.decorator", "numpy.lib.index_tricks.IndexExpression.__init__", "numpy.lib.index_tricks.RClass.__init__", "numpy.lib.index_tricks.OGridClass.__init__"], "numpy.matrixlib": ["numpy._pytesttester.PytestTester.__init__"], "numpy.matrixlib.defmatrix": ["numpy.core.overrides.set_module", "numpy.core.overrides.set_module.decorator"], "numpy.linalg": ["numpy._pytesttester.PytestTester.__init__"], "numpy.linalg.linalg": ["numpy.linalg.linalg._determine_error_states"], "numpy.lib.twodim_base": ["numpy.core.getlimits.iinfo.__init__", "numpy.core.overrides.set_module", "numpy.core.overrides.set_array_function_like_doc", "numpy.core.overrides.set_module.decorator"], "numpy.lib.stride_tricks": ["numpy.core.overrides.set_module", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.array_function_dispatch"], "numpy.core.getlimits.iinfo.__init__": ["<builtin>.ValueError", "<builtin>.type"], "numpy.linalg.linalg._determine_error_states": ["numpy.core._ufunc_config.errstate.__init__"], "numpy.core._ufunc_config.errstate.__init__": [], "numpy.matrixlib.defmatrix.matrix": ["<builtin>.property"], "numpy.lib.function_base": ["numpy.core.overrides.set_module", "<builtin>.dict", "numpy.core.overrides.set_module.decorator"], "numpy.lib.histograms": [], "numpy.lib.index_tricks.MGridClass.__init__": ["<builtin>.super"], "numpy.lib.index_tricks.OGridClass.__init__": ["<builtin>.super"], "numpy.lib.index_tricks.AxisConcatenator": ["<builtin>.staticmethod"], "numpy.lib.index_tricks.RClass.__init__": ["numpy.lib.index_tricks.AxisConcatenator.__init__"], "numpy.lib.index_tricks.AxisConcatenator.__init__": [], "numpy.lib.index_tricks.CClass.__init__": ["numpy.lib.index_tricks.AxisConcatenator.__init__"], "numpy.lib.index_tricks.IndexExpression.__init__": [], "numpy.lib.nanfunctions": [], "numpy.lib.shape_base": [], "numpy.lib.polynomial": ["warnings.simplefilter", "re.compile"], "numpy.lib.polynomial.poly1d": ["<builtin>.property"], "numpy.lib.utils": ["numpy.core.overrides.set_module", "numpy.core.overrides.set_module.decorator", "re.compile"], "textwrap": ["re.compile"], "textwrap.TextWrapper": ["<builtin>.ord", "re.escape", "re.compile"], "<builtin>.ord": [], "numpy.lib.arraysetops": [], "numpy.lib.npyio": ["numpy.core.overrides.set_module", "numpy.core.overrides.set_array_function_like_doc", "numpy.core.overrides.set_module.decorator", "<builtin>.sorted"], "numpy.lib.format": ["<builtin>.len"], "numpy.lib._datasource": ["numpy.lib._datasource._FileOpeners.__init__"], "numpy.lib._datasource._FileOpeners.__init__": [], "numpy.lib._iotools": [], "numpy.lib._iotools.NameValidator": ["<builtin>.set"], "numpy.lib._iotools.StringConverter": ["append", "extend", "<builtin>.classmethod"], "numpy.lib.arrayterator": [], "numpy.lib.arrayterator.Arrayterator": ["<builtin>.property"], "numpy.lib.arraypad": ["numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.array_function_dispatch"], "numpy.lib._version": [], "numpy.fft": ["copy", "numpy._pytesttester.PytestTester.__init__"], "numpy.fft._pocketfft": [], "numpy.fft.helper": ["numpy.core.overrides.set_module", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.array_function_dispatch"], "copy": ["<builtin>.getattr", "<builtin>.type"], "numpy.polynomial": ["numpy._pytesttester.PytestTester.__init__"], "numpy.polynomial.polynomial": [], "numpy.polynomial.polyutils": [], "numpy.polynomial._polybase": [], "numpy.polynomial._polybase.ABCPolyBase": ["<builtin>.property", "<builtin>.staticmethod", "<builtin>.classmethod", "abc.abstractmethod"], "numpy.polynomial.polynomial.Polynomial": ["<builtin>.classmethod", "<builtin>.staticmethod"], "numpy.polynomial.chebyshev": [], "numpy.polynomial.chebyshev.Chebyshev": ["<builtin>.classmethod", "<builtin>.staticmethod"], "numpy.polynomial.legendre": [], "numpy.polynomial.legendre.Legendre": ["<builtin>.staticmethod"], "numpy.polynomial.hermite": [], "numpy.polynomial.hermite.Hermite": ["<builtin>.staticmethod"], "numpy.polynomial.hermite_e": [], "numpy.polynomial.hermite_e.HermiteE": ["<builtin>.staticmethod"], "numpy.polynomial.laguerre": [], "numpy.polynomial.laguerre.Laguerre": ["<builtin>.staticmethod"], "numpy.random": ["numpy._pytesttester.PytestTester.__init__"], "numpy.random._pickle": [], "numpy.ctypeslib": ["numpy.ctypeslib._get_scalar_type_map", "numpy.core._internal._getintp_ctype"], "numpy.core._internal._getintp_ctype": ["numpy.core._internal.dummy_ctype.__init__"], "numpy.core._internal.dummy_ctype.__init__": [], "numpy.ctypeslib._ndptr": ["<builtin>.classmethod"], "numpy.ctypeslib._concrete_ndptr": ["<builtin>.property"], "numpy.ctypeslib._get_scalar_type_map": [], "numpy.ma": ["numpy._pytesttester.PytestTester.__init__"], "numpy.ma.core": ["numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._frommethod.__init__", "<builtin>.complex", "<builtin>.dict", "numpy.ma.core.doc_note", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._DomainTan.__init__", "textwrap.dedent", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._DomainedBinaryOperation.__init__"], "inspect": ["collections.namedtuple", "<builtin>.hasattr", "<map>.items", "<builtin>.object", "<builtin>.type", "<builtin>.globals"], "dis": ["collections.namedtuple"], "opcode": ["opcode.jrel_op", "opcode.jabs_op", "append", "opcode.def_op", "opcode.name_op", "<builtin>.range"], "opcode.def_op": [], "opcode.name_op": ["append", "opcode.def_op"], "opcode.jrel_op": ["append", "opcode.def_op"], "opcode.jabs_op": ["append", "opcode.def_op"], "dis.Bytecode": ["<builtin>.classmethod"], "importlib.machinery": [], "inspect._ParameterKind": ["<builtin>.property"], "inspect.Parameter": ["<builtin>.property"], "inspect.BoundArguments": ["<builtin>.property"], "inspect.Signature": ["<builtin>.property", "<builtin>.classmethod"], "<builtin>.complex": [], "numpy.ma.core._MaskedUnaryOperation.__init__": ["<builtin>.super"], "numpy.ma.core._DomainGreaterEqual.__init__": [], "numpy.ma.core._DomainGreater.__init__": [], "numpy.ma.core._DomainTan.__init__": [], "numpy.ma.core._DomainCheckInterval.__init__": [], "numpy.ma.core._MaskedBinaryOperation.__init__": ["<builtin>.super"], "numpy.ma.core._DomainSafeDivide.__init__": [], "numpy.ma.core._DomainedBinaryOperation.__init__": ["<builtin>.super"], "numpy.ma.core._MaskedPrintOption.__init__": [], "textwrap.dedent": ["<builtin>.zip", "re.sub", "<builtin>.enumerate"], "re.sub": ["re._compile"], "numpy.ma.core.MaskedArray": ["<builtin>.property", "numpy.ma.core._arraymethod"], "numpy.ma.core._arraymethod": ["<builtin>.getattr"], "numpy.ma.core.mvoid": ["<builtin>.property"], "numpy.ma.core.MaskedConstant": ["<builtin>.classmethod"], "numpy.ma.core._frommethod.__init__": ["numpy.ma.core._frommethod.getdoc"], "numpy.ma.core._frommethod.getdoc": ["numpy.ma.core.get_object_signature", "<builtin>.getattr"], "numpy.ma.core.get_object_signature": ["numpy.compat._inspect.formatargspec", "numpy.compat._inspect.getargspec"], "numpy.compat._inspect.getargspec": ["numpy.compat._inspect.ismethod", "<builtin>.TypeError", "numpy.compat._inspect.getargs", "numpy.compat._inspect.isfunction"], "numpy.compat._inspect.ismethod": ["<builtin>.isinstance"], "numpy.compat._inspect.isfunction": ["<builtin>.isinstance"], "numpy.compat._inspect.getargs": ["numpy.compat._inspect.iscode", "<builtin>.range", "<builtin>.TypeError", "<builtin>.list"], "numpy.compat._inspect.iscode": ["<builtin>.isinstance"], "numpy.compat._inspect.formatargspec": ["numpy.compat._inspect.<lambda3>", "numpy.compat._inspect.strseq", "append", "<builtin>.range", "<builtin>.len"], "numpy.compat._inspect.strseq": ["numpy.compat._inspect.strseq", "numpy.compat._inspect.joinseq", "<builtin>.type"], "numpy.compat._inspect.joinseq": ["<builtin>.len"], "numpy.compat._inspect.<lambda3>": ["<builtin>.repr"], "numpy.ma.core._extrema_operation.__init__": ["<builtin>.super"], "numpy.ma.core.doc_note": ["inspect.cleandoc", "re.split"], "inspect.cleandoc": ["<str>.expandtabs"], "re.split": ["re._compile"], "<str>.expandtabs": [], "numpy.ma.core._convert2ma.__init__": ["numpy.ma.core._convert2ma.getdoc", "<builtin>.getattr"], "numpy.ma.core._convert2ma.getdoc": ["numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.get_object_signature", "<builtin>.getattr"], "numpy.ma.core._convert2ma._replace_return_type": ["<builtin>.RuntimeError"], "numpy.ma.extras": ["numpy.ma.extras.mr_class.__init__", "numpy.ma.core.doc_note"], "numpy.ma.extras.MAxisConcatenator": ["<builtin>.classmethod", "<builtin>.staticmethod"], "numpy.ma.extras.mr_class.__init__": ["numpy.lib.index_tricks.AxisConcatenator.__init__"], "numpy.core.getlimits._register_known_types": ["numpy.core.getlimits.MachArLike.__init__", "numpy.core.getlimits._register_type", "numpy.core._ufunc_config.errstate.__init__"], "numpy.core.getlimits.MachArLike.__init__": ["numpy.core.getlimits.MachArLike._float_to_float", "numpy.core.getlimits.MachArLike._float_to_str", "<builtin>.int", "numpy.core.getlimits.MachArLike._float_conv"], "numpy.core.getlimits.MachArLike._float_to_float": ["numpy.core.getlimits._fr1", "numpy.core.getlimits.MachArLike._float_conv"], "numpy.core.getlimits.MachArLike._float_conv": [], "numpy.core.getlimits._fr1": [], "numpy.core.getlimits.MachArLike._float_to_str": ["numpy.core.getlimits._fr0"], "numpy.core.getlimits._fr0": [], "numpy.core.getlimits._register_type": [], "numpy._sanity_check": ["<builtin>.RuntimeError", "<builtin>.AssertionError", "<builtin>.abs"], "<builtin>.abs": [], "<builtin>.AssertionError": [], "numpy._mac_os_check": [], "pandas": ["<builtin>.__import__", "append", "<builtin>.ImportError", "pandas._version.get_versions"], "pandas.compat": ["platform.python_implementation"], "typing": ["typing._SpecialForm.__init__", "typing._tp_cache", "typing._tp_cache.decorator", "<builtin>.frozenset", "typing._SpecialGenericAlias.__init__", "typing.TypeVar.__init__"], "typing._SpecialForm": ["typing._tp_cache"], "typing._tp_cache": ["typing._tp_cache.decorator"], "typing._tp_cache.decorator": ["functools.lru_cache.decorating_function", "functools.wraps", "append", "functools.lru_cache"], "typing._SpecialForm.__init__": [], "typing.ParamSpec": ["<builtin>.property"], "typing._GenericAlias": ["typing._tp_cache"], "typing._SpecialGenericAlias": ["typing._tp_cache"], "typing._CallableType": ["typing._tp_cache"], "typing._TupleType": ["typing._tp_cache"], "typing.Generic": ["typing._tp_cache"], "typing.Annotated": ["typing._tp_cache"], "typing.TypeVar.__init__": ["<builtin>.tuple", "typing._type_check", "<builtin>.TypeError", "<builtin>.len", "<builtin>.super"], "typing._type_check": ["<builtin>.callable", "typing._type_convert", "<builtin>.isinstance", "<builtin>.TypeError"], "typing._type_convert": ["typing.ForwardRef.__init__", "<builtin>.isinstance", "<builtin>.type"], "typing.ForwardRef.__init__": ["<builtin>.SyntaxError", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.compile"], "<builtin>.compile": [], "typing._SpecialGenericAlias.__init__": ["<builtin>.super"], "typing.SupportsInt": ["abc.abstractmethod"], "typing.SupportsFloat": ["abc.abstractmethod"], "typing.SupportsComplex": ["abc.abstractmethod"], "typing.SupportsBytes": ["abc.abstractmethod"], "typing.SupportsIndex": ["abc.abstractmethod"], "typing.SupportsAbs": ["abc.abstractmethod"], "typing.SupportsRound": ["abc.abstractmethod"], "typing.IO": ["<builtin>.property", "abc.abstractmethod"], "typing.BinaryIO": ["abc.abstractmethod"], "typing.TextIO": ["<builtin>.property", "abc.abstractmethod"], "pandas._typing": ["typing.TypeVar.__init__"], "datetime": ["datetime._days_before_year", "append", "datetime.timezone._create"], "datetime._days_before_year": [], "datetime.timedelta": ["<builtin>.property"], "datetime.date": ["<builtin>.property", "<builtin>.classmethod"], "datetime.IsoCalendarDate": ["<builtin>.property"], "datetime.time": ["<builtin>.property", "<builtin>.classmethod"], "datetime.datetime": ["<builtin>.property", "<builtin>.classmethod"], "datetime.timezone": ["<builtin>.object", "<builtin>.classmethod", "<builtin>.staticmethod"], "datetime.timezone._create": [], "numpy.typing": ["numpy._pytesttester.PytestTester.__init__"], "numpy._typing": [], "numpy._typing._nested_sequence": ["typing.TypeVar.__init__"], "numpy._typing._nested_sequence._NestedSequence": ["typing.overload"], "typing.overload": [], "numpy._typing._nbit": [], "numpy._typing._char_codes": [], "numpy._typing._scalars": [], "numpy._typing._shape": [], "numpy._typing._dtype_like": ["typing.TypeVar.__init__"], "numpy._typing._generic_alias": ["typing.TypeVar.__init__", "numpy._typing._generic_alias._GenericAlias.__init__"], "numpy._typing._generic_alias._GenericAlias": ["<builtin>.property", "<builtin>.frozenset"], "numpy._typing._generic_alias._GenericAlias.__init__": ["numpy._typing._generic_alias._parse_parameters", "<builtin>.tuple", "<builtin>.isinstance"], "numpy._typing._generic_alias._parse_parameters": ["<builtin>.isinstance", "<builtin>.hasattr"], "numpy._typing._dtype_like._SupportsDType": ["<builtin>.property"], "numpy._typing._array_like": ["typing.TypeVar.__init__"], "numpy._typing._add_docstring": ["numpy._typing._add_docstring._parse_docstrings", "<builtin>.repr", "numpy._typing._add_docstring.add_newdoc"], "numpy._typing._add_docstring.add_newdoc": ["append"], "numpy._typing._add_docstring._parse_docstrings": ["append", "textwrap.dedent", "re.match", "pop"], "re.match": ["re._compile"], "pop": [], "pandas._libs": [], "pandas._libs.tslibs": [], "pandas.core.dtypes.dtypes": [], "pytz": ["pytz.resource_exists"], "pytz.exceptions": [], "pytz.lazy": ["threading.RLock", "<builtin>.hasattr"], "pytz.tzinfo": ["pytz.tzinfo.memorized_timedelta", "datetime"], "bisect": [], "pytz.tzinfo.memorized_timedelta": [], "pytz.tzfile": ["pytz.tzfile._byte_string"], "pytz.tzfile._byte_string": ["<str>.encode"], "<str>.encode": [], "pytz.resource_exists": ["pytz.open_resource"], "pytz.open_resource": ["<builtin>.ValueError", "<builtin>.open"], "pkg_resources": ["pkg_resources.DefaultProvider._register", "re.compile", "functools.lru_cache.decorating_function", "pkg_resources.register_namespace_handler", "typing.overload", "ntpath.join", "ntpath.dirname", "<builtin>.RuntimeError", "pkg_resources.ResourceManager.__init__", "pkg_resources.EmptyProvider.__init__", "typing.TypeVar.__init__", "pkg_resources.register_loader_type", "warnings.warn", "<builtin>.globals", "pkg_resources.WorkingSet.__init__", "pkg_resources._call_aside", "<builtin>.hasattr", "posixpath.dirname", "functools.lru_cache", "pkg_resources._declare_state", "posixpath.join", "pkg_resources.register_finder", "warnings.filterwarnings"], "email.parser": [], "email.feedparser": ["<builtin>.object", "re.compile"], "email.errors": [], "email._policybase": [], "email.header": ["email.charset.Charset.__init__", "re.compile"], "email.quoprimime": ["<builtin>.chr", "<builtin>.ord", "<builtin>.range", "<str>.encode"], "string": ["string.Template.__init_subclass__"], "string.Template.__init_subclass__": ["re.escape", "<builtin>.super", "re.compile"], "<str>.translate": [], "email.base64mime": [], "base64": [], "email.charset": [], "email.encoders": [], "quopri": [], "email.charset.Charset.__init__": ["<str>.encode", "<builtin>.isinstance", "<builtin>.str", "<map>.get"], "email.utils": ["re.compile"], "random": ["random.Random.__init__", "<builtin>.hasattr"], "hashlib": ["<builtin>.bytes", "logging.exception", "hashlib.__get_builtin_constructor", "<builtin>.set", "<builtin>.range", "<builtin>.globals"], "hashlib.__get_builtin_constructor": ["<map>.get", "<builtin>.ValueError"], "logging": ["weakref.WeakValueDictionary.__init__", "posixpath.normcase", "logging.RootLogger.__init__", "_weakrefset.WeakSet.__init__", "<builtin>.hasattr", "logging.Formatter.__init__", "logging._StderrHandler.__init__", "threading.RLock", "ntpath.normcase", "logging.Manager.__init__"], "posixpath.normcase": ["os._fspath"], "ntpath.normcase": ["os._fspath", "<builtin>.isinstance"], "logging.PercentStyle": ["re.compile"], "logging.StrFormatStyle": ["re.compile"], "logging.Formatter.__init__": ["logging.StringTemplateStyle.__init__", "logging.StrFormatStyle.validate", "logging.PercentStyle.__init__", "<map>.keys", "logging.StringTemplateStyle.validate", "<builtin>.ValueError", "logging.PercentStyle.validate"], "logging.StringTemplateStyle.__init__": ["string.Template.__init__", "<builtin>.super"], "string.Template.__init__": [], "logging.PercentStyle.__init__": [], "weakref.WeakValueDictionary.__init__": ["<builtin>.set", "weakref.WeakValueDictionary.update"], "weakref.WeakValueDictionary.update": ["<builtin>.dict", "weakref.WeakValueDictionary._commit_removals", "weakref.KeyedRef.__init__", "<builtin>.hasattr"], "weakref.WeakValueDictionary._commit_removals": [], "weakref.KeyedRef.__init__": ["<builtin>.super"], "logging.Handler": ["<builtin>.property"], "logging._StderrHandler": ["<builtin>.property"], "logging._StderrHandler.__init__": ["logging.Handler.__init__"], "logging.Handler.__init__": ["logging.Filterer.__init__", "logging._addHandlerRef", "logging._checkLevel", "logging.Handler.createLock"], "logging.Filterer.__init__": [], "logging._checkLevel": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.str", "<builtin>.TypeError"], "logging._addHandlerRef": ["append", "logging._acquireLock"], "logging._acquireLock": [], "logging.Handler.createLock": ["threading.RLock", "logging._register_at_fork_reinit_lock"], "logging._register_at_fork_reinit_lock": ["logging._acquireLock", "_weakrefset.WeakSet.add"], "logging.Manager": ["<builtin>.property"], "logging.LoggerAdapter": ["<builtin>.property"], "logging.RootLogger.__init__": ["logging.Logger.__init__"], "logging.Logger.__init__": ["logging.Filterer.__init__", "logging._checkLevel"], "logging.Manager.__init__": [], "logging.exception": ["logging.error"], "logging.error": ["logging.Logger.error", "<builtin>.len", "logging.basicConfig"], "logging.basicConfig": ["logging.Logger.setLevel", "logging.StreamHandler.__init__", "logging._acquireLock", "logging.Logger.addHandler", "<map>.keys", "logging.Logger.removeHandler", "logging.FileHandler.__init__", "logging.Formatter.__init__", "<builtin>.ValueError", "<builtin>.len"], "logging.Logger.removeHandler": ["logging._acquireLock", "remove"], "logging.StreamHandler.__init__": ["logging.Handler.__init__"], "logging.FileHandler.__init__": ["posixpath.abspath", "os._fspath", "logging.StreamHandler.__init__", "logging.Handler.__init__", "logging.FileHandler._open", "ntpath.abspath"], "posixpath.abspath": ["posixpath.normpath", "os._fspath", "posixpath.join", "posixpath.isabs", "<builtin>.isinstance"], "posixpath.normpath": ["os._fspath", "append", "<builtin>.isinstance", "pop"], "ntpath.abspath": [], "logging.FileHandler._open": [], "logging.StrFormatStyle.validate": ["<builtin>.set", "<builtin>.ValueError", "string.Formatter.parse"], "string.Formatter.parse": [], "logging.PercentStyle.validate": ["<builtin>.ValueError"], "logging.StringTemplateStyle.validate": ["<builtin>.set", "<builtin>.ValueError"], "logging.Logger.addHandler": ["append", "logging._acquireLock"], "logging.Logger.setLevel": ["logging._checkLevel"], "logging.Logger.error": ["logging.Logger._log", "logging.Logger.isEnabledFor"], "logging.Logger.isEnabledFor": ["logging._acquireLock", "logging.Logger.getEffectiveLevel"], "logging.Logger.getEffectiveLevel": [], "logging.Logger._log": ["logging.Logger.handle", "logging.Logger.makeRecord", "logging.Logger.findCaller", "<builtin>.type", "<builtin>.isinstance"], "logging.Logger.findCaller": ["posixpath.normcase", "<builtin>.hasattr", "traceback.print_stack", "ntpath.normcase", "logging.currentframe"], "logging.currentframe": [], "traceback.print_stack": ["traceback.extract_stack", "traceback.print_list"], "traceback.extract_stack": ["traceback.StackSummary.extract", "traceback.walk_stack"], "traceback.walk_stack": [], "traceback.StackSummary.extract": ["<builtin>.getattr", "linecache.checkcache", "linecache.lazycache", "<builtin>.set", "traceback.FrameSummary.__init__"], "traceback.FrameSummary.__init__": ["<builtin>.repr"], "linecache.checkcache": ["<map>.keys", "<builtin>.len", "<builtin>.list", "<map>.pop"], "traceback.print_list": ["<builtin>.print", "traceback.StackSummary.format", "traceback.StackSummary.from_list"], "traceback.StackSummary.from_list": ["<builtin>.isinstance", "traceback.FrameSummary.__init__"], "traceback.StackSummary.format": ["append", "<builtin>.sorted"], "logging.Logger.makeRecord": ["<builtin>.KeyError", "logging.LogRecord.__init__"], "logging.LogRecord.__init__": ["logging.getLevelName", "posixpath.basename", "threading.current_thread", "ntpath.basename", "<builtin>.hasattr", "ntpath.splitext", "posixpath.splitext", "<builtin>.int", "<builtin>.isinstance", "<builtin>.len"], "logging.getLevelName": ["<map>.get"], "posixpath.basename": ["os._fspath", "posixpath._get_sep"], "ntpath.basename": ["ntpath.split"], "posixpath.splitext": ["os._fspath", "<builtin>.isinstance", "genericpath._splitext"], "genericpath._splitext": ["<builtin>.max"], "ntpath.splitext": ["os._fspath", "<builtin>.isinstance", "genericpath._splitext"], "<builtin>.KeyError": [], "logging.Logger.handle": ["logging.Filterer.filter", "logging.Logger.callHandlers"], "logging.Filterer.filter": ["<builtin>.hasattr"], "logging.Logger.callHandlers": ["logging.Handler.handle"], "logging.Handler.handle": ["logging.Filterer.filter", "logging.Handler.acquire", "logging.Handler.emit"], "logging.Handler.acquire": [], "logging.Handler.emit": ["<builtin>.NotImplementedError"], "<builtin>.NotImplementedError": [], "random.Random.__init__": ["random.Random.seed"], "random.Random.seed": ["<builtin>.ord", "<builtin>.map", "warnings.warn", "<builtin>.type", "<builtin>.isinstance", "<builtin>.len", "<builtin>.super"], "email._parseaddr": [], "calendar": ["datetime.date.toordinal", "<builtin>.range", "calendar._localized_day.__init__", "calendar._localized_month.__init__"], "locale": ["<map>.setdefault", "<builtin>.sorted", "re.compile", "<map>.items", "functools.wraps", "<builtin>.globals"], "encodings.aliases": [], "<map>.setdefault": [], "calendar._localized_month": ["<builtin>.range"], "calendar._localized_day": ["<builtin>.range"], "calendar._localized_day.__init__": [], "calendar._localized_month.__init__": [], "calendar.Calendar": ["<builtin>.property"], "datetime.date.toordinal": ["datetime._ymd2ord"], "datetime._ymd2ord": ["datetime._days_before_year", "datetime._days_in_month", "datetime._days_before_month"], "datetime._days_in_month": ["datetime._is_leap"], "datetime._is_leap": [], "datetime._days_before_month": ["datetime._is_leap"], "email._policybase.Policy": ["abc.abstractmethod"], "importlib": [], "importlib.abc": ["importlib.abc._register"], "importlib.abc._register": ["<builtin>.getattr"], "importlib.abc.InspectLoader": ["<builtin>.staticmethod"], "pkgutil": ["collections.namedtuple", "functools.singledispatch"], "importlib.util": ["contextlib.contextmanager"], "importlib.util.LazyLoader": ["<builtin>.classmethod", "<builtin>.staticmethod"], "functools.singledispatch": ["functools.update_wrapper", "<builtin>.getattr", "weakref.WeakKeyDictionary.__init__"], "weakref.WeakKeyDictionary.__init__": ["<builtin>.set", "weakref.WeakKeyDictionary.update"], "weakref.WeakKeyDictionary.update": ["weakref.WeakKeyDictionary.update", "<builtin>.len", "<builtin>.type", "<builtin>.hasattr"], "plistlib": ["<builtin>.globals", "<builtin>.dict", "<builtin>.object", "re.compile"], "xml.parsers.expat": [], "tempfile": ["<builtin>.hasattr"], "shutil": ["append", "collections.namedtuple", "<builtin>.hasattr"], "bz2": [], "_compression": [], "bz2.BZ2File": ["<builtin>.property"], "lzma": [], "lzma.LZMAFile": ["<builtin>.property"], "tempfile._RandomNameSequence": ["<builtin>.property"], "tempfile.SpooledTemporaryFile": ["<builtin>.property", "<builtin>.classmethod"], "tempfile.TemporaryDirectory": ["<builtin>.classmethod"], "zipfile": [], "zipfile.ZipInfo": ["<builtin>.classmethod"], "zipfile._ZipWriteFile": ["<builtin>.property"], "zipfile.ZipFile": ["<builtin>.property", "<builtin>.classmethod"], "zipfile.CompleteDirs": ["<builtin>.classmethod", "<builtin>.staticmethod"], "zipfile.Path": ["<builtin>.property"], "packaging.markers": [], "packaging.requirements": [], "packaging.specifiers": ["typing.TypeVar.__init__", "re.compile"], "packaging.specifiers.BaseSpecifier": ["<builtin>.property", "abc.abstractmethod"], "packaging.specifiers.Specifier": ["<builtin>.property", "re.compile"], "packaging.specifiers.SpecifierSet": ["<builtin>.property"], "packaging.utils": ["re.compile", "typing.NewType.__init__"], "typing.NewType.__init__": ["typing._caller", "<str>.rpartition"], "<str>.rpartition": [], "typing._caller": [], "packaging.version": ["re.compile"], "packaging.version.Version": ["<builtin>.property", "re.compile"], "jaraco.text": ["functools.singledispatch", "jaraco.context.ExceptionTrap.passes", "jaraco.context.ExceptionTrap.__init__", "importlib_resources._common.files"], "importlib.resources": ["functools.singledispatch"], "importlib_resources": [], "importlib_resources._common": ["importlib_resources._common.package_to_anchor", "contextlib.contextmanager", "functools.singledispatch"], "importlib_resources.abc": [], "importlib_resources.compat.py38": [], "importlib_resources.abc.Traversable": ["<builtin>.property"], "importlib_resources._common.package_to_anchor": ["functools.wraps", "<builtin>.object"], "importlib_resources._functional": ["<builtin>.object"], "jaraco.functools": ["jaraco.functools.first_invoke"], "more_itertools": [], "jaraco.functools.Throttler": ["<builtin>.float"], "<builtin>.float": [], "jaraco.functools.first_invoke": [], "jaraco.context": ["jaraco.context._compose", "contextlib.contextmanager"], "urllib.request": ["append", "<builtin>.hasattr", "re.compile"], "email": [], "http.client": ["<builtin>.globals", "re.compile"], "email.message": ["re.compile"], "uu": [], "email._encoded_words": ["<builtin>.ord", "re.compile"], "email._encoded_words._QByteMap": ["<str>.encode"], "email.iterators": [], "http": [], "http.client.HTTPConnection": ["<builtin>.staticmethod"], "ssl": ["<builtin>.hasattr", "collections.namedtuple", "<builtin>.getattr"], "ssl._ASN1Object": ["<builtin>.classmethod"], "ssl.SSLContext": ["<builtin>.property", "<builtin>.hasattr"], "ssl.SSLObject": ["<builtin>.property", "<builtin>.classmethod"], "ssl.SSLSocket": ["<builtin>.property", "ssl._sslcopydoc", "<builtin>.classmethod"], "ssl._sslcopydoc": ["<builtin>.getattr"], "urllib.error": [], "urllib.response": [], "urllib.response.addinfourl": ["<builtin>.property"], "urllib.error.HTTPError": ["<builtin>.property"], "urllib.request.Request": ["<builtin>.property"], "urllib.request.AbstractBasicAuthHandler": ["re.compile"], "nturl2path": [], "tarfile": [], "tarfile.TarInfo": ["<builtin>.property", "<builtin>.dict", "<builtin>.classmethod", "<builtin>.staticmethod"], "tarfile.TarFile": ["<builtin>.classmethod"], "backports.tarfile": ["<builtin>.object"], "backports.tarfile._FileInFile": ["<builtin>.property"], "backports.tarfile.TarInfo": ["<builtin>.property", "<builtin>.dict", "<builtin>.classmethod", "<builtin>.staticmethod"], "backports.tarfile.TarFile": ["<builtin>.classmethod"], "jaraco.context._compose": ["<builtin>.reversed", "functools.reduce"], "functools.reduce": ["<builtin>.next", "<builtin>.TypeError", "jaraco.context._compose.compose_two", "pandas.core.computation.expr._compose2", "<builtin>.iter"], "jaraco.context._compose.compose_two": ["contextlib.contextmanager"], "jaraco.context.ExceptionTrap": ["<builtin>.property"], "jaraco.text.FoldedCase": ["jaraco.functools.method_cache"], "jaraco.functools.method_cache": ["jaraco.functools._special_method_cache"], "jaraco.functools._special_method_cache": [], "jaraco.context.ExceptionTrap.__init__": [], "jaraco.context.ExceptionTrap.passes": ["jaraco.context.ExceptionTrap.raises"], "jaraco.context.ExceptionTrap.raises": ["functools.wraps"], "importlib_resources._common.files": ["importlib_resources._common.from_package", "importlib_resources._common.resolve"], "importlib_resources._common.resolve": ["typing.cast"], "typing.cast": [], "importlib_resources._common.from_package": ["importlib_resources.future.adapters.wrap_spec"], "importlib_resources.future.adapters": [], "importlib_resources.future.adapters.wrap_spec": [], "jaraco.text.WordSet": ["<builtin>.classmethod", "re.compile"], "jaraco.text.Stripper": ["<builtin>.classmethod", "<builtin>.staticmethod"], "platformdirs": ["platformdirs._set_platform_dir_class"], "platformdirs._set_platform_dir_class": ["platformdirs.android._android_folder", "os.getenv"], "platformdirs.unix": [], "configparser": ["<builtin>.object"], "configparser.ParsingError": ["<builtin>.property"], "configparser.BasicInterpolation": ["re.compile"], "configparser.ExtendedInterpolation": ["re.compile"], "configparser.LegacyInterpolation": ["<builtin>.staticmethod", "re.compile"], "configparser.RawConfigParser": ["<builtin>.property", "re.compile"], "configparser.SectionProxy": ["<builtin>.property"], "configparser.ConverterMapping": ["re.compile"], "platformdirs.unix.Unix": ["<builtin>.property"], "platformdirs.macos": [], "platformdirs.macos.MacOS": ["<builtin>.property"], "platformdirs.windows": ["functools.lru_cache.decorating_function", "functools.lru_cache", "platformdirs.windows._pick_get_win_folder"], "platformdirs.windows.Windows": ["<builtin>.property"], "platformdirs.windows._pick_get_win_folder": [], "os.getenv": [], "platformdirs.android": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "platformdirs.android.Android": ["<builtin>.property"], "platformdirs.android._android_folder": ["typing.cast", "re.compile"], "typing_extensions": ["typing_extensions._ensure_subclassable.inner", "typing._tp_cache", "typing_extensions._SpecialForm.__init__", "<builtin>.frozenset", "<builtin>.getattr", "typing_extensions._LiteralForm.__init__", "typing_extensions._ensure_subclassable", "typing_extensions._SpecialGenericAlias.__init__", "typing.TypeVar.__init__", "typing_extensions._UnpackSpecialForm.__init__", "<builtin>.hasattr", "append", "<builtin>.classmethod", "<builtin>.type", "inspect.signature"], "typing_extensions._LiteralForm.__init__": [], "typing_extensions._SpecialGenericAlias": ["typing._tp_cache"], "typing_extensions._SpecialGenericAlias.__init__": ["<builtin>.super"], "typing_extensions.SupportsInt": ["abc.abstractmethod"], "typing_extensions.SupportsFloat": ["abc.abstractmethod"], "typing_extensions.SupportsComplex": ["abc.abstractmethod"], "typing_extensions.SupportsBytes": ["abc.abstractmethod"], "typing_extensions.SupportsIndex": ["abc.abstractmethod"], "typing_extensions.SupportsAbs": ["abc.abstractmethod"], "typing_extensions.SupportsRound": ["abc.abstractmethod"], "inspect.signature": ["inspect.Signature.from_callable"], "inspect.Signature.from_callable": ["inspect._signature_from_callable"], "inspect._signature_from_callable": ["inspect._signature_bound_method", "inspect._signature_get_user_defined_method", "<builtin>.TypeError", "inspect._signature_is_builtin", "inspect._signature_from_builtin", "inspect._signature_is_functionlike", "inspect.Signature.from_callable", "<builtin>.ValueError", "inspect._signature_from_function", "<builtin>.type", "inspect._signature_get_partial", "inspect.unwrap", "<builtin>.isinstance", "inspect.isfunction", "<builtin>.callable"], "inspect._signature_bound_method": ["<builtin>.ValueError", "<builtin>.tuple"], "inspect.unwrap": ["<builtin>.ValueError", "<builtin>.len", "inspect.unwrap._is_wrapper", "<builtin>.id"], "<builtin>.id": [], "inspect.unwrap._is_wrapper": ["inspect._signature_from_callable.<lambda1>", "<builtin>.hasattr"], "inspect._signature_from_callable.<lambda1>": [], "inspect.isfunction": ["<builtin>.isinstance"], "inspect._signature_is_functionlike": ["<builtin>.isinstance", "inspect.isclass", "<builtin>.callable", "<builtin>.getattr"], "inspect.isclass": ["<builtin>.isinstance"], "inspect._signature_from_function": ["inspect.get_annotations", "inspect.isfunction", "<builtin>.TypeError", "<builtin>.enumerate", "<builtin>.getattr", "inspect._signature_is_functionlike", "append", "inspect.Signature.__init__", "inspect._signature_fromstr", "<builtin>.len"], "inspect._signature_fromstr": ["<builtin>.isinstance", "<builtin>.enumerate", "<builtin>.getattr", "pop", "inspect.ismodule", "<builtin>.list", "<builtin>.reversed", "ast.parse", "<builtin>.object", "inspect._signature_strip_non_python_syntax", "<builtin>.zip", "inspect.Signature.__init__", "<builtin>.ValueError", "inspect._signature_fromstr.p"], "inspect._signature_strip_non_python_syntax": ["<builtin>.next", "<builtin>.iter", "tokenize.tokenize", ""], "tokenize.tokenize": ["<builtin>.iter", "tokenize._tokenize", "tokenize.detect_encoding"], "tokenize._tokenize": ["tokenize._compile", "append", "<builtin>.IndentationError", "<map>.get", "<builtin>.len"], "<builtin>.IndentationError": [], "tokenize._compile": ["re.compile"], "ast.parse": ["<builtin>.isinstance", "<builtin>.compile"], "inspect._signature_fromstr.p": ["ast.literal_eval", "append", "inspect._signature_fromstr.parse_name", "ast.NodeVisitor.visit"], "inspect._signature_fromstr.parse_name": ["<builtin>.ValueError", "<builtin>.isinstance"], "ast.NodeVisitor.visit": ["<builtin>.getattr"], "ast.literal_eval": ["<builtin>.isinstance", "ast.parse", "ast.literal_eval._convert"], "ast.literal_eval._convert": ["<builtin>.tuple", "<builtin>.dict", "<builtin>.set", "<builtin>.map", "ast.literal_eval._convert_num", "ast.literal_eval._convert_signed_num", "<builtin>.list", "<builtin>.zip", "ast.literal_eval._raise_malformed_node", "<builtin>.isinstance", "<builtin>.len"], "ast.literal_eval._convert_signed_num": ["<builtin>.isinstance", "ast.literal_eval._convert_num"], "ast.literal_eval._convert_num": ["ast.literal_eval._raise_malformed_node", "<builtin>.isinstance", "<builtin>.type"], "ast.literal_eval._raise_malformed_node": ["<builtin>.ValueError", "<builtin>.getattr"], "inspect.ismodule": ["<builtin>.isinstance"], "inspect.Signature.__init__": ["<builtin>.ValueError", "collections.OrderedDict.__init__"], "collections.OrderedDict.__init__": [], "inspect.get_annotations": ["<builtin>.vars", "<builtin>.TypeError", "<builtin>.dict", "<builtin>.getattr", "<builtin>.eval", "<builtin>.hasattr", "<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.callable"], "<builtin>.vars": [], "inspect._signature_is_builtin": ["inspect.isbuiltin", "<builtin>.isinstance", "inspect.ismethoddescriptor"], "inspect.isbuiltin": ["<builtin>.isinstance"], "inspect.ismethoddescriptor": ["inspect.isclass", "inspect.ismethod", "<builtin>.hasattr", "<builtin>.type", "inspect.isfunction"], "inspect.ismethod": ["<builtin>.isinstance"], "inspect._signature_from_builtin": ["<builtin>.TypeError", "<builtin>.getattr", "inspect._signature_is_builtin", "<builtin>.ValueError", "inspect._signature_fromstr"], "inspect._signature_get_partial": ["collections.OrderedDict.values", "collections.OrderedDict.pop", "collections.OrderedDict.__init__", "collections.OrderedDict.move_to_end", "<builtin>.ValueError"], "collections.OrderedDict.pop": ["<builtin>.KeyError"], "collections.OrderedDict.move_to_end": [], "collections.OrderedDict.values": [], "inspect._signature_get_user_defined_method": ["<builtin>.getattr"], "typing_extensions._ensure_subclassable": [], "typing_extensions._ensure_subclassable.inner": ["functools.update_wrapper", "<builtin>.type", "<builtin>.staticmethod"], "typing_extensions.Annotated": ["typing._tp_cache"], "typing_extensions.ParamSpec": ["<builtin>.property"], "typing_extensions._ConcatenateGenericAlias": ["<builtin>.property"], "typing_extensions._SpecialForm": ["typing._tp_cache"], "typing_extensions._SpecialForm.__init__": [], "typing_extensions._UnpackSpecialForm.__init__": ["<builtin>.super"], "pkg_resources.VersionConflict": ["<builtin>.property"], "pkg_resources.ContextualVersionConflict": ["<builtin>.property"], "pkg_resources.DistributionNotFound": ["<builtin>.property"], "pkg_resources.WorkingSet": ["typing.overload", "<builtin>.classmethod"], "pkg_resources.Environment": ["pkg_resources.get_supported_platform", "typing.overload"], "pkg_resources.get_supported_platform": ["pkg_resources.get_build_platform", "pkg_resources._macos_vers"], "pkg_resources.get_build_platform": ["<str>.startswith", "sysconfig.get_platform", "pkg_resources._macos_vers", "<builtin>.int", "pkg_resources._macos_arch"], "sysconfig": ["sysconfig.get_default_scheme", "posixpath.normpath", "sysconfig._fix_pcbuild", "<builtin>.getattr", "ntpath.normpath", "sysconfig._getuserbase", "posixpath.dirname", "sysconfig._safe_realpath", "ntpath.join", "posixpath.join", "ntpath.dirname", "sysconfig.is_python_build"], "sysconfig._getuserbase": ["sysconfig._getuserbase.joinuser"], "sysconfig._getuserbase.joinuser": ["posixpath.expanduser", "ntpath.expanduser", "ntpath.join", "posixpath.join"], "posixpath.expanduser": ["os._fspath", "posixpath._get_sep", "<builtin>.isinstance", "<builtin>.str", "<builtin>.len"], "ntpath.expanduser": ["os._fspath", "ntpath.basename", "ntpath._get_bothseps", "ntpath.join", "ntpath.dirname", "<builtin>.isinstance", "<builtin>.len"], "ntpath.normpath": ["os._fspath", "<builtin>.isinstance", "ntpath.splitdrive", "<builtin>.len"], "sysconfig._safe_realpath": ["posixpath.realpath"], "posixpath.realpath": ["posixpath._joinrealpath", "os._fspath", "posixpath.abspath"], "posixpath._joinrealpath": ["posixpath._joinrealpath", "posixpath.split", "posixpath.join", "posixpath.isabs", "<builtin>.isinstance"], "posixpath.split": ["os._fspath", "posixpath._get_sep", "<builtin>.len"], "sysconfig._fix_pcbuild": ["ntpath.normcase", "posixpath.normcase", "ntpath.join", "posixpath.join"], "sysconfig.is_python_build": ["sysconfig._is_python_source_dir"], "sysconfig._is_python_source_dir": ["genericpath.isfile", "ntpath.join", "posixpath.join"], "genericpath.isfile": ["stat.S_ISREG"], "stat.S_ISREG": ["stat.S_IFMT"], "sysconfig.get_default_scheme": ["sysconfig.get_preferred_scheme"], "sysconfig.get_preferred_scheme": ["sysconfig._get_preferred_schemes", "<builtin>.ValueError"], "sysconfig._get_preferred_schemes": [], "sysconfig.get_platform": ["_osx_support.get_platform_osx", "re.compile", "sysconfig.get_config_vars", "<builtin>.hasattr", "<builtin>.int", "_aix_support.aix_platform"], "_osx_support": [], "sysconfig.get_config_vars": ["ntpath.dirname", "sysconfig._init_posix", "sysconfig._getuserbase", "sysconfig._init_non_posix", "posixpath.dirname", "append", "sysconfig.get_makefile_filename", "sysconfig._safe_realpath", "ntpath.join", "posixpath.join", "_osx_support.customize_config_vars", "<map>.get"], "sysconfig._init_non_posix": ["sysconfig.get_path", "ntpath.dirname", "sysconfig._safe_realpath", "posixpath.dirname"], "sysconfig.get_path": ["sysconfig.get_paths"], "sysconfig.get_paths": ["sysconfig._expand_vars"], "sysconfig._expand_vars": ["posixpath.normpath", "ntpath.expanduser", "posixpath.expanduser", "ntpath.normpath", "sysconfig.get_config_vars", "sysconfig._subst_vars", "sysconfig._extend_dict"], "sysconfig._extend_dict": ["<map>.keys"], "sysconfig._subst_vars": ["<builtin>.AttributeError"], "<builtin>.AttributeError": [], "sysconfig._init_posix": ["<builtin>.locals", "<builtin>.__import__", "<builtin>.globals", "sysconfig._get_sysconfigdata_name"], "sysconfig._get_sysconfigdata_name": ["<builtin>.getattr"], "<builtin>.locals": [], "sysconfig.get_makefile_filename": ["sysconfig.get_path", "<builtin>.hasattr", "ntpath.join", "posixpath.join"], "_osx_support.customize_config_vars": ["_osx_support._supports_universal_builds", "_osx_support._override_all_archs", "_osx_support._check_for_unavailable_sdk", "_osx_support._remove_universal_flags"], "_osx_support._supports_universal_builds": ["<builtin>.bool", "_osx_support._get_system_version_tuple"], "_osx_support._get_system_version_tuple": ["<builtin>.int", "<builtin>.tuple", "_osx_support._get_system_version"], "_osx_support._get_system_version": ["<builtin>.open"], "<builtin>.open": [], "_osx_support._remove_universal_flags": ["_osx_support._save_modified_value", "re.sub"], "_osx_support._save_modified_value": [], "_osx_support._override_all_archs": ["_osx_support._save_modified_value", "re.sub"], "_osx_support._check_for_unavailable_sdk": ["_osx_support._save_modified_value", "re.sub", "genericpath.exists", "re.search"], "re.search": ["re._compile"], "genericpath.exists": [], "_osx_support.get_platform_osx": ["<builtin>.tuple", "re.findall", "<builtin>.sorted", "_osx_support._get_system_version", "<builtin>.set", "<builtin>.int", "<map>.get", "<builtin>.ValueError", "<builtin>.len"], "re.findall": ["re._compile"], "_aix_support": [], "_bootsubprocess": [], "_aix_support.aix_platform": ["_aix_support._aix_tag", "_aix_support._aix_bosmp64", "_aix_support._aix_vrtl"], "_aix_support._aix_bosmp64": ["_bootsubprocess.check_output", "<builtin>.int", "<builtin>.str"], "_bootsubprocess.check_output": ["_bootsubprocess._check_cmd", "<builtin>.repr", "<builtin>.NotImplementedError", "<builtin>.ValueError", "<builtin>.open", "<builtin>.isinstance"], "_bootsubprocess._check_cmd": ["<builtin>.ord", "append", "<builtin>.range", "<builtin>.isinstance"], "_aix_support._aix_vrtl": ["<builtin>.int"], "_aix_support._aix_tag": [], "pkg_resources._macos_vers": ["platform.mac_ver", "<builtin>.open", "plistlib.load", "genericpath.exists"], "platform.mac_ver": ["platform._mac_ver_xml"], "platform._mac_ver_xml": ["<builtin>.open", "plistlib.load", "genericpath.exists"], "plistlib.load": ["<map>.values"], "pkg_resources._macos_arch": [], "pkg_resources.ResourceManager": ["<builtin>.staticmethod"], "pkg_resources.NullProvider": ["<builtin>.staticmethod"], "pkg_resources.register_loader_type": [], "pkg_resources.DefaultProvider": ["<builtin>.classmethod"], "pkg_resources.DefaultProvider._register": ["pkg_resources.register_loader_type", "<builtin>.getattr", "<builtin>.type"], "pkg_resources.EmptyProvider.__init__": [], "pkg_resources.ZipManifests": ["<builtin>.classmethod"], "pkg_resources.ZipProvider": ["<builtin>.property", "<builtin>.staticmethod"], "pkg_resources._declare_state": [], "pkg_resources.register_finder": [], "pkg_resources.register_namespace_handler": [], "pkg_resources.EntryPoint": ["typing.overload", "<builtin>.classmethod", "re.compile"], "pkg_resources.Distribution": ["<builtin>.property", "typing.overload", "<builtin>.classmethod", "<builtin>.staticmethod"], "pkg_resources.DistInfoDistribution": ["<builtin>.property", "re.compile"], "pkg_resources.Requirement": ["<builtin>.staticmethod"], "pkg_resources._call_aside": ["pkg_resources._initialize_master_working_set", "pkg_resources._initialize"], "pkg_resources._initialize": ["pkg_resources.ResourceManager.__init__", "<builtin>.dir", "<builtin>.getattr"], "pkg_resources.ResourceManager.__init__": [], "<builtin>.dir": [], "pkg_resources._initialize_master_working_set": ["pkg_resources.WorkingSet.subscribe", "<builtin>.tuple", "<builtin>.map", "<builtin>.locals", "<builtin>.list", "pkg_resources._declare_state", "pkg_resources.WorkingSet._build_master", "<builtin>.globals"], "pkg_resources.WorkingSet._build_master": ["pkg_resources.WorkingSet.require", "pkg_resources.WorkingSet.__init__", "pkg_resources.WorkingSet._build_from_requirements"], "pkg_resources.WorkingSet.__init__": ["pkg_resources.WorkingSet.add_entry"], "pkg_resources.WorkingSet.add_entry": ["pkg_resources.find_distributions", "pkg_resources.WorkingSet.add"], "pkg_resources.find_distributions": ["pkgutil.get_importer", "pkg_resources._find_adapter"], "pkgutil.get_importer": [], "pkg_resources._find_adapter": ["<builtin>.TypeError", "<builtin>.getattr", "<builtin>.type", "inspect.getmro", "pkg_resources._always_object"], "inspect.getmro": [], "pkg_resources._always_object": [], "pkg_resources.WorkingSet.add": ["pkg_resources.WorkingSet._added_new"], "pkg_resources.WorkingSet._added_new": [], "__main__": [], "argparse": [], "gettext": ["<builtin>.enumerate", "re.compile", "ntpath.join", "posixpath.join"], "formats": [], "jarvis": [], "processing.extProcessor": [], "machinery.definitions": [], "utils": [], "heapq": [], "machinery.gol": [], "machinery.definitions.PointItem": ["<builtin>.set"], "machinery.classes": [], "machinery.scopes": [], "symtable": ["symtable.SymbolTableFactory.__init__"], "symtable.SymbolTableFactory.__init__": ["weakref.WeakValueDictionary.__init__"], "processing.base": [], "processing.base.ProcessingBase": ["<builtin>.property"], "machinery.imports": [], "machinery.nodes": [], "machinery.modules": [], "machinery.callgraph": [], "processing.extProcessor.ExtProcessor": ["<builtin>.set"], "machinery.returns": [], "jarvis.CallGraphGenerator": ["<builtin>.set"], "utils.constants": [], "pkg_resources.WorkingSet.require": ["pkg_resources.parse_requirements", "pkg_resources.WorkingSet.resolve", "pkg_resources.WorkingSet.add"], "pkg_resources.parse_requirements": ["jaraco.text.join_continuation", "<builtin>.map", "jaraco.text.yield_lines"], "jaraco.text.yield_lines": ["<builtin>.map"], "jaraco.text.join_continuation": ["<builtin>.iter", "<builtin>.next"], "pkg_resources.WorkingSet.resolve": [], "pkg_resources.WorkingSet._build_from_requirements": ["pkg_resources.parse_requirements", "pkg_resources.WorkingSet.__init__", "pkg_resources.Environment.__init__", "pkg_resources.WorkingSet.resolve", "pkg_resources.WorkingSet.add", "pkg_resources.WorkingSet.add_entry"], "pkg_resources.Environment.__init__": ["pkg_resources.Environment.scan"], "pkg_resources.Environment.scan": ["pkg_resources.find_distributions", "pkg_resources.Environment.add"], "pkg_resources.Environment.add": ["pkg_resources.Environment.can_add", "operator.attrgetter.__init__"], "pkg_resources.Environment.can_add": ["pkg_resources.compatible_platforms"], "pkg_resources.compatible_platforms": ["<builtin>.int"], "pkg_resources.WorkingSet.subscribe": ["pkg_resources._initialize_master_working_set.<lambda1>", "pkg_resources.WorkingSet.__iter__"], "pkg_resources.WorkingSet.__iter__": ["<builtin>.set"], "pkg_resources._initialize_master_working_set.<lambda1>": [], "pandas.core.dtypes.base": ["pandas.core.dtypes.base.Registry.__init__", "typing.TypeVar.__init__"], "pandas.errors": [], "pandas._config.config": ["pandas._config.config.CallableDynamicDoc.__init__", "contextlib.contextmanager", "pandas._config.config.DictWrapper.__init__", "pandas._config.config.is_instance_factory", "pandas._config.config.is_type_factory"], "pandas.util._exceptions": ["contextlib.contextmanager"], "pandas._config.config.CallableDynamicDoc": ["<builtin>.property"], "pandas._config.config.CallableDynamicDoc.__init__": [], "pandas._config.config.DictWrapper.__init__": [], "pandas._config.config.is_type_factory": [], "pandas._config.config.is_instance_factory": ["<builtin>.tuple", "<builtin>.isinstance", "<builtin>.map"], "pandas.core.dtypes.generic": ["typing.cast", "pandas.core.dtypes.generic.create_pandas_abc_type"], "pandas.core.arrays": [], "pandas.core.arrays.arrow": [], "pandas.core.arrays.arrow.array": ["typing.TypeVar.__init__"], "pandas.util._decorators": [], "pandas.core.dtypes.common": [], "pandas.core.dtypes.inference": [], "pandas.core.dtypes.missing": ["typing.overload"], "decimal": [], "_pydecimal": ["_pydecimal._Log10Memoize.__init__", "re.compile", "<builtin>.pow", "_pydecimal.Context.__init__", "collections.namedtuple"], "contextvars": [], "_pydecimal.Decimal": ["<builtin>.property", "<builtin>.dict", "<builtin>.classmethod"], "_pydecimal._Log10Memoize.__init__": [], "_pydecimal.Context.__init__": ["<builtin>.int", "copy", "<builtin>.isinstance", "<builtin>.dict"], "<builtin>.pow": [], "pandas._config": [], "pandas._config.dates": ["pandas._config.config.config_prefix"], "pandas._config.config.config_prefix": ["pandas._config.config.config_prefix.wrap"], "pandas._config.config.config_prefix.wrap": ["typing.cast"], "pandas._config.display": ["pandas._config.config.config_prefix"], "pandas.core.indexes.base": ["typing.TypeVar.__init__", "<builtin>.frozenset"], "pandas.compat.numpy.function": ["typing.TypeVar.__init__", "pandas.compat.numpy.function.CompatValidator.__init__", "typing.overload"], "pandas.util._validators": ["typing.TypeVar.__init__", "typing.overload"], "pandas.compat.numpy.function.CompatValidator.__init__": [], "pandas.core.dtypes.astype": ["typing.overload"], "pandas.core.dtypes.cast": ["typing.TypeVar.__init__", "typing.overload", "functools.lru_cache.decorating_function", "functools.lru_cache", "numpy.core.iinfo"], "dateutil.parser": ["dateutil.parser.__deprecated_private_func", "dateutil.parser.__deprecate_private_class"], "dateutil.parser._parser": ["dateutil.parser._parser.parser.__init__"], "six": ["<builtin>.isinstance", "operator.attrgetter.__init__", "operator.methodcaller.__init__", "six.MovedModule.__init__", "<builtin>.enumerate", "<builtin>.getattr", "six._add_doc", "six.exec_", "<builtin>.globals", "six._SixMetaPathImporter._add_module", "operator.itemgetter.__init__", "<builtin>.type", "<builtin>.int", "six.MovedAttribute.__init__", "<builtin>.len", "six._SixMetaPathImporter.__init__", "<builtin>.setattr"], "six._SixMetaPathImporter.__init__": [], "six.MovedAttribute.__init__": ["<builtin>.super"], "six.MovedModule.__init__": ["<builtin>.super"], "<builtin>.setattr": [], "six._SixMetaPathImporter._add_module": [], "six.Module_six_moves_urllib": ["six._SixMetaPathImporter._get_module"], "six._SixMetaPathImporter._get_module": [], "six._add_doc": [], "operator.methodcaller.__init__": ["<builtin>.isinstance", "<builtin>.TypeError"], "six.exec_": ["<builtin>.exec"], "<builtin>.exec": [], "dateutil": [], "dateutil._version": [], "dateutil.parser._parser._timelex": ["<builtin>.classmethod", "re.compile"], "dateutil.parser._parser._ymd": ["<builtin>.property"], "dateutil.parser._parser.parser.__init__": ["dateutil.parser._parser.parserinfo.__init__"], "dateutil.parser._parser.parserinfo.__init__": ["dateutil.parser._parser.parserinfo._convert"], "dateutil.parser._parser.parserinfo._convert": ["<builtin>.isinstance", "<builtin>.enumerate"], "dateutil.parser.isoparser": ["dateutil.parser.isoparser.isoparser.__init__"], "dateutil.tz": [], "dateutil.tz.tz": ["dateutil.tz.tz.__get_gettz", "datetime.date.toordinal"], "dateutil.tz._common": ["<builtin>.hasattr"], "dateutil.tz._common._DatetimeWithFold": ["<builtin>.property"], "dateutil.tz._common._tzinfo": ["dateutil.tz._common._validate_fromutc_inputs"], "dateutil.tz._common._validate_fromutc_inputs": ["functools.wraps"], "dateutil.tz._common.tzrangebase": ["<builtin>.property", "dateutil.tz._common.tzname_in_python2"], "dateutil.tz._common.tzname_in_python2": ["functools.wraps"], "dateutil.tz._factories": [], "dateutil.tz.win": ["<builtin>.ImportError", "dateutil.tz.win._settzkeyname"], "ctypes.wintypes": [], "dateutil.tz.win._settzkeyname": [], "dateutil.tz.win.tzwinbase": ["<builtin>.property", "<builtin>.staticmethod"], "dateutil.tz.tz.tzutc": ["dateutil.tz._common._validate_fromutc_inputs", "dateutil.tz._common.tzname_in_python2"], "dateutil.tz.tz.tzoffset": ["dateutil.tz._common._validate_fromutc_inputs", "dateutil.tz._common.tzname_in_python2"], "dateutil.tz.tz.tzlocal": ["dateutil.tz._common.tzname_in_python2"], "dateutil.tz.tz.tzfile": ["dateutil.tz._common.tzname_in_python2"], "dateutil.tz.tz.tzrange": ["<builtin>.property"], "dateutil.tz.tz._tzicalvtz": ["dateutil.tz._common.tzname_in_python2"], "dateutil.tz.tz.__get_gettz": ["dateutil.tz.tz.__get_gettz.GettzFunc.__init__"], "dateutil.tz.tz.__get_gettz.GettzFunc": ["<builtin>.staticmethod"], "dateutil.tz.tz.__get_gettz.GettzFunc.__init__": ["weakref.WeakValueDictionary.__init__", "collections.OrderedDict.__init__"], "dateutil.parser.isoparser.isoparser": ["dateutil.parser.isoparser._takes_ascii", "re.compile"], "dateutil.parser.isoparser._takes_ascii": ["functools.wraps"], "dateutil.parser.isoparser.isoparser.__init__": ["<builtin>.ord", "<builtin>.ValueError", "<builtin>.len"], "dateutil.parser.__deprecate_private_class": [], "dateutil.parser.__deprecated_private_func": ["functools.wraps"], "numpy.core.iinfo": [], "pandas.core.dtypes.concat": [], "pandas.core.arrays.sparse": [], "pandas.core.arrays.sparse.accessor": [], "pandas.compat._optional": [], "pandas.util.version": ["collections.namedtuple", "re.compile"], "pandas.util.version.LegacyVersion": ["<builtin>.property"], "pandas.util.version.Version": ["<builtin>.property", "re.compile"], "pandas.core.accessor": ["pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "pandas.core.accessor.DirNamesMixin": ["<builtin>.set", "<builtin>.frozenset"], "pandas.core.accessor.PandasDelegate": ["<builtin>.classmethod"], "pandas.util._decorators.doc": [], "pandas.util._decorators.doc.decorator": ["textwrap.dedent", "<builtin>.isinstance", "<builtin>.hasattr"], "pandas.core.arrays.sparse.array": ["typing.TypeVar.__init__", "typing.overload", "<builtin>.type"], "pandas.core.arraylike": [], "pandas.core.roperator": [], "pandas.core.construction": ["typing.overload"], "pandas.core.common": ["typing.overload", "contextlib.contextmanager"], "pandas.core.ops.common": [], "pandas.core.arraylike.OpsMixin": ["pandas.core.ops.common.unpack_zerodim_and_defer", "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper"], "pandas.core.ops.common.unpack_zerodim_and_defer": [], "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper": ["pandas.core.ops.common._unpack_zerodim_and_defer"], "pandas.core.ops.common._unpack_zerodim_and_defer": ["<str>.strip", "functools.wraps"], "pandas.core.algorithms": ["textwrap.dedent", "typing.overload", "pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "pandas.core.array_algos.take": ["functools.lru_cache.decorating_function", "pandas.core.array_algos.take._view_wrapper", "typing.overload", "functools.lru_cache"], "pandas.core.arrays._mixins": ["typing.TypeVar.__init__"], "pandas.core.missing": ["pandas.core.missing._datetimelike_compat"], "pandas.core.missing._datetimelike_compat": ["typing.cast", "functools.wraps"], "pandas.core.array_algos.quantile": [], "pandas.compat.numpy": ["pandas.util.version.Version.__init__", "<builtin>.ImportError"], "pandas.util.version.Version.__init__": ["<builtin>.tuple", "pandas.util.version._parse_letter_version", "<builtin>.int", "pandas.util.version._parse_local_version", "pandas.util.version._cmpkey"], "pandas.util.version._parse_letter_version": ["<builtin>.int", "<str>.lower"], "pandas.util.version._parse_local_version": ["<builtin>.int", "<builtin>.tuple"], "pandas.util.version._cmpkey": ["<builtin>.isinstance", "<builtin>.reversed", "<builtin>.tuple", "<builtin>.list"], "pandas.core.array_algos.transforms": [], "pandas.core.arrays.base": ["typing.TypeVar.__init__"], "pandas.core.sorting": [], "pandas.core.arrays.base.ExtensionArray": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "<builtin>.property", "pandas.util._decorators.Appender.__init__", "typing.overload", "pandas.util._decorators.Substitution.__init__", "<builtin>.classmethod"], "pandas.util._decorators.deprecate_nonkeyword_arguments": [], "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate": ["pandas.util._decorators.future_version_msg", "functools.wraps", "<builtin>.len", "inspect.signature"], "pandas.util._decorators.future_version_msg": [], "pandas.util._decorators.Appender.__init__": ["pandas.util._decorators.indent"], "pandas.util._decorators.indent": ["<builtin>.isinstance"], "pandas.util._decorators.Substitution.__init__": ["<builtin>.AssertionError"], "pandas.core.arrays.base.ExtensionOpsMixin": ["<builtin>.classmethod"], "pandas.core.arrays.base.ExtensionScalarOpsMixin": ["<builtin>.classmethod"], "pandas.core.indexers": [], "pandas.core.indexers.utils": [], "pandas.core.frame": ["pandas.core.ops.methods.add_flex_arithmetic_methods", "pandas.core.generic.NDFrame._add_numeric_operations"], "pandas.core.nanops": ["pandas._config.config.CallableDynamicDoc.__init__", "pandas.core.nanops.bottleneck_switch.__init__", "pandas.compat._optional.import_optional_dependency", "pandas.core.nanops._nanminmax", "pandas.core.nanops.set_use_bottleneck", "pandas.core.nanops._datetimelike_compat", "pandas.core.nanops.make_nancomp", "pandas.core.nanops.disallow.__init__", "pandas.core.nanops.maybe_operate_rowwise"], "pandas.compat._optional.import_optional_dependency": ["pandas.compat._optional.get_version", "pandas.util._exceptions.find_stack_level", "pandas.util.version.Version.__init__", "warnings.warn", "importlib.import_module", "<map>.get", "<builtin>.ImportError"], "importlib.import_module": ["<str>.startswith", "<builtin>.TypeError"], "pandas.compat._optional.get_version": ["<builtin>.ImportError", "<builtin>.getattr"], "pandas.util._exceptions.find_stack_level": ["inspect.currentframe", "posixpath.dirname", "ntpath.join", "posixpath.join", "ntpath.dirname", "inspect.getfile"], "inspect.currentframe": ["<builtin>.hasattr"], "inspect.getfile": ["<builtin>.OSError", "inspect.isfunction", "<builtin>.TypeError", "<builtin>.getattr", "inspect.ismethod", "inspect.ismodule", "<builtin>.hasattr", "inspect.istraceback", "inspect.iscode", "<builtin>.type", "inspect.isframe", "inspect.isclass"], "<builtin>.OSError": [], "inspect.istraceback": ["<builtin>.isinstance"], "inspect.isframe": ["<builtin>.isinstance"], "inspect.iscode": ["<builtin>.isinstance"], "pandas.core.nanops.set_use_bottleneck": [], "pandas.core.nanops.maybe_operate_rowwise": ["typing.cast", "functools.wraps"], "pandas.core.nanops._datetimelike_compat": ["typing.cast", "functools.wraps"], "pandas.core.nanops.disallow.__init__": ["<builtin>.tuple", "pandas.core.dtypes.common.pandas_dtype", "<builtin>.super"], "pandas.core.dtypes.common.pandas_dtype": ["<builtin>.isinstance", "<builtin>.TypeError", "pandas.core.dtypes.inference.is_hashable"], "pandas.core.dtypes.inference.is_hashable": ["<builtin>.hash"], "<builtin>.hash": [], "pandas.core.nanops.bottleneck_switch.__init__": [], "pandas.core.nanops._nanminmax": ["pandas.core.nanops.bottleneck_switch.__init__", "pandas.core.nanops._datetimelike_compat"], "pandas.core.nanops.make_nancomp": [], "pandas.core.ops": [], "pandas.core.ops.array_ops": [], "pandas.core.computation.expressions": ["pandas._config.config.CallableDynamicDoc.__init__", "pandas.core.computation.expressions.set_use_numexpr"], "pandas.core.computation.check": ["pandas.compat._optional.import_optional_dependency"], "pandas.core.computation.expressions.set_use_numexpr": [], "pandas.core.ops.missing": [], "pandas.core.ops.dispatch": [], "pandas.core.ops.invalid": [], "pandas.core.ops.docstrings": ["<builtin>.list"], "pandas.core.ops.mask_ops": [], "pandas.core.ops.methods": [], "pandas.core.apply": [], "pandas.core.base": ["typing.TypeVar.__init__"], "pandas.core.base.PandasObject": ["<builtin>.property"], "pandas.core.base.SelectionMixin": ["<builtin>.set", "typing.final", "<builtin>.property"], "typing.final": [], "pandas.core.base.IndexOpsMixin": ["typing.final", "<builtin>.property", "<builtin>.frozenset", "typing.overload", "pandas.util._decorators.doc", "textwrap.dedent", "pandas.util._decorators.doc.decorator"], "pandas.core.groupby": [], "pandas.core.groupby.generic": ["typing.TypeVar.__init__"], "pandas.core.arrays.categorical": ["typing.TypeVar.__init__"], "csv": [], "csv.DictReader": ["<builtin>.property"], "pandas.core.strings.object_array": [], "pandas.core.strings.base": [], "pandas.core.strings.base.BaseStringArrayMethods": ["abc.abstractmethod"], "pandas.io.formats.console": [], "pandas.core.arrays.categorical.Categorical": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "<builtin>.property", "<builtin>.frozenset", "pandas.core.arrays.categorical._cat_compare_op", "typing.overload", "pandas.core.arrays._mixins.ravel_compat", "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg", "<builtin>.classmethod", "pandas.util._decorators.deprecate_kwarg"], "pandas.core.arrays.categorical._cat_compare_op": ["pandas.core.ops.common.unpack_zerodim_and_defer", "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper"], "pandas.core.arrays._mixins.ravel_compat": [], "pandas.util._decorators.deprecate_kwarg": ["<builtin>.TypeError", "<builtin>.callable", "<builtin>.hasattr"], "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg": ["typing.cast", "functools.wraps"], "pandas.core.arrays.categorical.CategoricalAccessor": ["<builtin>.property", "<builtin>.staticmethod"], "pandas.core.groupby.base": ["<builtin>.frozenset"], "dataclasses": ["dataclasses._FIELD_BASE.__init__", "re.compile"], "dataclasses._FIELD_BASE.__init__": [], "dataclasses.Field": ["<builtin>.classmethod"], "pandas.core.groupby.groupby": ["typing.TypeVar.__init__", "pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "pandas.core._numba.executor": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "pandas.core.generic": [], "pandas.core.indexing": ["typing.TypeVar.__init__", "<builtin>.slice"], "pandas.core.indexes.api": ["textwrap.dedent"], "pandas.core.indexes.category": ["<builtin>.dict"], "pandas.core.indexes.extension": ["typing.TypeVar.__init__"], "pandas.core.indexes.extension.ExtensionIndex": ["pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "pandas.io.formats.printing": ["typing.TypeVar.__init__"], "pandas.core.indexes.category.CategoricalIndex": ["<builtin>.property", "pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "pandas.core.indexes.datetimes": [], "pandas.core.arrays.datetimes": [], "pandas.core.arrays.datetimelike": ["typing.TypeVar.__init__", "typing.overload"], "pandas.core.arrays.integer": [], "pandas.core.arrays.numeric": ["typing.TypeVar.__init__"], "pandas.core.arrays.masked": ["typing.TypeVar.__init__"], "pandas.core.array_algos.masked_reductions": [], "pandas.core.arrays.masked.BaseMaskedArray": ["<builtin>.property", "typing.overload", "pandas.util._decorators.doc", "<builtin>.classmethod", "pandas.util._decorators.doc.decorator"], "pandas.core.arrays.numeric.NumericDtype": ["<builtin>.property", "<builtin>.classmethod"], "pandas.core.arrays.numeric.NumericArray": ["<builtin>.classmethod"], "pandas.core.arrays.integer.IntegerDtype": ["<builtin>.classmethod"], "pandas.tseries.frequencies": [], "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin": ["typing.final", "<builtin>.property", "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper", "typing.overload", "pandas.core.ops.common.unpack_zerodim_and_defer", "pandas.core.arrays._mixins.ravel_compat", "<builtin>.classmethod", "pandas.core.ops.invalid.make_invalid_op"], "pandas.core.ops.invalid.make_invalid_op": [], "pandas.core.arrays.datetimelike.DatelikeOps": ["pandas.util._decorators.Substitution.__init__"], "pandas.core.arrays.datetimelike.TimelikeOps": ["pandas.util._decorators.Appender.__init__", "<builtin>.classmethod"], "pandas.core.arrays._ranges": [], "pandas.tseries.offsets": [], "pandas.core.arrays.datetimes.DatetimeArray": ["pandas.core.arrays._mixins.ravel_compat", "<builtin>.property", "<builtin>.classmethod", "pandas.core.arrays.datetimes._field_accessor"], "pandas.core.arrays.datetimes._field_accessor": ["<builtin>.property"], "pandas.core.indexes.datetimelike": ["typing.TypeVar.__init__", "<builtin>.dict"], "pandas.core.indexes.range": ["<builtin>.range"], "pandas.core.indexes.numeric": [], "pandas.core.indexes.numeric.NumericIndex": ["<builtin>.property", "pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc", "<builtin>.classmethod"], "pandas.core.indexes.numeric.IntegerIndex": ["<builtin>.property"], "pandas.core.indexes.numeric.Int64Index": ["<builtin>.property"], "pandas.core.indexes.numeric.UInt64Index": ["<builtin>.property"], "pandas.core.indexes.numeric.Float64Index": ["<builtin>.property"], "pandas.core.indexes.range.RangeIndex": ["pandas.core.ops.common.unpack_zerodim_and_defer.wrapper", "<builtin>.property", "pandas.util._decorators.doc", "pandas.core.ops.common.unpack_zerodim_and_defer", "<builtin>.classmethod", "pandas.util._decorators.doc.decorator"], "pandas.core.tools.timedeltas": ["typing.overload"], "pandas.core.arrays.timedeltas": [], "pandas.core.arrays.timedeltas.TimedeltaArray": ["pandas.core.ops.common.unpack_zerodim_and_defer.wrapper", "<builtin>.property", "pandas.core.ops.common.unpack_zerodim_and_defer", "<builtin>.classmethod", "pandas.core.arrays.timedeltas._field_accessor"], "pandas.core.arrays.timedeltas._field_accessor": ["<builtin>.property"], "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin": ["typing.final", "<builtin>.property", "pandas.util._decorators.Appender.__init__", "pandas.util._decorators.doc", "pandas.util._decorators.doc.decorator"], "pandas.core.indexes.datetimelike.DatetimeTimedeltaMixin": ["pandas.util._decorators.Appender.__init__", "<builtin>.property", "pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "pandas.core.tools.times": [], "pandas.core.indexes.datetimes.DatetimeIndex": ["<builtin>.property", "pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "pandas.core.indexes.interval": ["textwrap.dedent", "<builtin>.dict"], "pandas.core.arrays.interval": ["typing.TypeVar.__init__"], "pandas.core.arrays.interval.IntervalArray": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper", "<builtin>.property", "pandas.util._decorators.Appender.__init__", "typing.overload", "pandas.core.ops.common.unpack_zerodim_and_defer", "<builtin>.classmethod", "textwrap.dedent"], "pandas.core.indexes.multi": ["<builtin>.dict"], "pandas.core.indexes.frozen": [], "pandas.core.indexes.multi.MultiIndex": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "<builtin>.property", "<builtin>.frozenset", "pandas.util._decorators.Appender.__init__", "pandas.util._decorators.doc", "<builtin>.classmethod", "pandas.core.indexes.multi.names_compat", "pandas.util._decorators.doc.decorator", "pandas.core.ops.invalid.make_invalid_op"], "pandas.core.indexes.multi.names_compat": ["typing.cast", "functools.wraps"], "pandas.core.indexes.timedeltas": [], "pandas.core.indexes.timedeltas.TimedeltaIndex": ["<builtin>.property"], "pandas.core.indexes.interval.IntervalIndex": ["textwrap.dedent", "<builtin>.property", "pandas.util._decorators.Appender.__init__", "<builtin>.classmethod"], "pandas.core.indexes.period": ["<builtin>.dict"], "pandas.core.arrays.period": ["typing.TypeVar.__init__", "typing.overload"], "pandas.core.arrays.period.PeriodArray": ["<builtin>.property", "pandas.util._decorators.doc", "pandas.core.arrays.period._field_accessor", "pandas.core.arrays._mixins.ravel_compat", "<builtin>.classmethod", "pandas.util._decorators.doc.decorator"], "pandas.core.arrays.period._field_accessor": ["<builtin>.property"], "pandas.core.indexes.period.PeriodIndex": ["<builtin>.property", "pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "<builtin>.slice": [], "pandas.core.indexing.IndexingMixin": ["<builtin>.property"], "pandas.core.indexing._LocationIndexer": ["typing.final"], "pandas.core.indexing._LocIndexer": ["pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "pandas.core.indexing._AtIndexer": ["<builtin>.property"], "pandas.core.sample": [], "pandas.core.array_algos.replace": [], "pandas.core.describe": [], "pandas.core.reshape.concat": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "typing.overload"], "pandas.core.internals": [], "pandas.core.internals.api": [], "pandas.core.internals.blocks": [], "pandas.core.array_algos.putmask": [], "pandas.core.internals.blocks.Block": ["pandas.core.internals.blocks.maybe_split", "typing.final", "<builtin>.property"], "pandas.core.internals.blocks.maybe_split": ["typing.cast", "functools.wraps"], "pandas.core.internals.blocks.ExtensionBlock": ["typing.final", "<builtin>.property"], "pandas.core.internals.blocks.NumpyBlock": ["<builtin>.property"], "pandas.core.internals.blocks.NDArrayBackedExtensionBlock": ["<builtin>.property"], "pandas.core.internals.blocks.ObjectBlock": ["pandas.core.internals.blocks.maybe_split"], "pandas.core.internals.blocks.CategoricalBlock": ["<builtin>.property"], "pandas.core.internals.array_manager": ["typing.TypeVar.__init__"], "pandas.core.internals.base": ["typing.TypeVar.__init__"], "pandas.core.internals.base.DataManager": ["typing.final", "<builtin>.property"], "pandas.core.internals.base.SingleDataManager": ["typing.final", "<builtin>.property", "<builtin>.classmethod"], "pandas.core.internals.array_manager.BaseArrayManager": ["<builtin>.property", "<builtin>.staticmethod"], "pandas.core.internals.array_manager.ArrayManager": ["<builtin>.property"], "pandas.core.internals.array_manager.SingleArrayManager": ["<builtin>.property", "<builtin>.classmethod", "<builtin>.staticmethod"], "pandas.core.internals.array_manager.NullArrayProxy": ["<builtin>.property"], "pandas.core.internals.concat": [], "pandas.core.internals.managers": ["typing.TypeVar.__init__"], "pandas.core.internals.ops": [], "pandas.core.internals.managers.BaseBlockManager": ["<builtin>.property", "<builtin>.classmethod"], "pandas.core.internals.managers.BlockManager": ["<builtin>.property", "<builtin>.classmethod"], "pandas.core.internals.managers.SingleBlockManager": ["<builtin>.property", "<builtin>.classmethod"], "pandas.io.formats.format": ["contextlib.contextmanager"], "pandas.io.common": ["typing.TypeVar.__init__", "typing.overload", "pandas.util._decorators.doc", "<map>.values", "re.compile", "functools.lru_cache", "<builtin>.set", "pandas.util._decorators.doc.decorator"], "gzip": [], "gzip.GzipFile": ["<builtin>.property"], "pandas.core.shared_docs": [], "pandas.io.common.IOHandles": ["dataclasses.field"], "dataclasses.field": ["dataclasses.Field.__init__", "<builtin>.ValueError"], "dataclasses.Field.__init__": [], "pandas.io.common._BufferedWriter": ["abc.abstractmethod"], "pandas.io.formats.format.DataFrameFormatter": ["<builtin>.property"], "pandas.io.formats.format.DataFrameRenderer": ["pandas.util._decorators.deprecate_kwarg", "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg"], "pandas.core.describe.NDFrameDescriberAbstract": ["abc.abstractmethod"], "pandas.core.flags": [], "pandas.core.flags.Flags": ["<builtin>.property"], "pandas.core.internals.construction": [], "numpy.ma.mrecords": [], "numpy.ma.mrecords.MaskedRecords": ["<builtin>.property"], "pandas.core.window": [], "pandas.core.window.ewm": [], "pandas.core.indexers.objects": [], "pandas.core.indexers.objects.BaseIndexer": ["pandas.util._decorators.Appender.__init__"], "pandas.core.indexers.objects.FixedWindowIndexer": ["pandas.util._decorators.Appender.__init__"], "pandas.core.indexers.objects.VariableWindowIndexer": ["pandas.util._decorators.Appender.__init__"], "pandas.core.indexers.objects.VariableOffsetWindowIndexer": ["pandas.util._decorators.Appender.__init__"], "pandas.core.indexers.objects.ExpandingIndexer": ["pandas.util._decorators.Appender.__init__"], "pandas.core.indexers.objects.FixedForwardWindowIndexer": ["pandas.util._decorators.Appender.__init__"], "pandas.core.indexers.objects.GroupbyIndexer": ["pandas.util._decorators.Appender.__init__"], "pandas.core.indexers.objects.ExponentialMovingWindowIndexer": ["pandas.util._decorators.Appender.__init__"], "pandas.core.util.numba_": [], "pandas.core.window.common": [], "pandas.core.window.doc": ["textwrap.dedent", "<builtin>.dict"], "pandas.core.window.numba_": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "pandas.core.window.online": [], "pandas.core.window.rolling": [], "pandas.core.groupby.ops": [], "pandas.core.arrays.boolean": [], "pandas.core.arrays.boolean.BooleanDtype": ["<builtin>.property", "<builtin>.classmethod"], "pandas.core.arrays.boolean.BooleanArray": ["<builtin>.property", "<builtin>.classmethod"], "pandas.core.arrays.floating": [], "pandas.core.arrays.floating.FloatingDtype": ["<builtin>.classmethod"], "pandas.core.arrays.string_": [], "pandas.core.arrays.numpy_": [], "pandas.core.arrays.numpy_.PandasArray": ["<builtin>.property", "<builtin>.classmethod"], "pandas.core.arrays.string_.StringDtype": ["<builtin>.property", "<builtin>.classmethod"], "pandas.core.arrays.string_.StringArray": ["<builtin>.classmethod"], "pandas.core.groupby.grouper": [], "pandas.core.groupby.categorical": [], "pandas.core.series": ["pandas.core.ops.methods.add_flex_arithmetic_methods"], "pandas.core.indexes.accessors": [], "pandas.core.indexes.accessors.DatetimeProperties": ["<builtin>.property"], "pandas.core.indexes.accessors.TimedeltaProperties": ["<builtin>.property"], "pandas.core.strings": [], "pandas.core.strings.accessor": [], "pandas.core.strings.accessor.StringMethods": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "pandas.util._decorators.Appender.__init__", "pandas.core.strings.accessor.forbid_nonstring_types", "pandas.core.strings.accessor.forbid_nonstring_types._forbid_nonstring_types", "pandas.core.strings.accessor._map_and_wrap", "<builtin>.staticmethod"], "pandas.core.strings.accessor.forbid_nonstring_types": ["<builtin>.set"], "pandas.core.strings.accessor.forbid_nonstring_types._forbid_nonstring_types": ["typing.cast", "functools.wraps"], "pandas.core.strings.accessor._map_and_wrap": ["pandas.core.strings.accessor.forbid_nonstring_types", "pandas.core.strings.accessor.forbid_nonstring_types._forbid_nonstring_types"], "pandas.core.tools.datetimes": ["typing.overload"], "pandas.arrays": [], "pandas.io.formats.info": ["textwrap.dedent"], "pandas.io.formats.info.BaseInfo": ["<builtin>.property", "abc.abstractmethod"], "pandas.io.formats.info.DataFrameInfo": ["<builtin>.property"], "pandas.io.formats.info.SeriesInfo": ["<builtin>.property"], "pandas.io.formats.info.InfoPrinterAbstract": ["abc.abstractmethod"], "pandas.io.formats.info.DataFrameInfoPrinter": ["<builtin>.property"], "pandas.io.formats.info.TableBuilderAbstract": ["<builtin>.property", "abc.abstractmethod"], "pandas.io.formats.info.DataFrameTableBuilder": ["<builtin>.property", "abc.abstractmethod"], "pandas.io.formats.info.TableBuilderVerboseMixin": ["<builtin>.property", "abc.abstractmethod"], "pandas.io.formats.info.DataFrameTableBuilderVerbose": ["<builtin>.property"], "pandas.io.formats.info.SeriesTableBuilder": ["<builtin>.property", "abc.abstractmethod"], "pandas.io.formats.info.SeriesTableBuilderVerbose": ["<builtin>.property"], "pandas.plotting": [], "pandas.plotting._core": ["pandas.util._decorators.Substitution.__init__", "pandas.util._decorators.Appender.__init__"], "matplotlib.axes": [], "matplotlib.axes._base": ["logging.getLogger"], "matplotlib": ["matplotlib._check_versions", "matplotlib._logged_cached", "matplotlib.matplotlib_fname", "contextlib.contextmanager", "matplotlib._api.deprecation.suppress_matplotlib_deprecation_warning", "logging.getLogger", "locale.setlocale", "matplotlib._logged_cached.wrapper", "matplotlib.RcParams.__init__", "functools.cache", "matplotlib.RcParams.copy", "collections.namedtuple", "matplotlib.is_interactive", "matplotlib.cbook._get_data_path", "matplotlib._rc_params_in_file"], "pprint": ["<builtin>.frozenset", "<builtin>.type"], "matplotlib._api": [], "matplotlib._api.deprecation": ["contextlib.contextmanager"], "matplotlib._api.classproperty": ["<builtin>.property"], "matplotlib._version": [], "matplotlib.cbook": ["contextlib.contextmanager", "matplotlib._api.deprecation.delete_parameter", "<map>.items", "functools.cache", "matplotlib._api.deprecation.delete_parameter.wrapper", "operator.attrgetter.__init__"], "shlex": ["re.compile"], "shlex.shlex": ["<builtin>.property"], "matplotlib.cbook.CallbackRegistry": ["contextlib.contextmanager"], "matplotlib._api.deprecation.delete_parameter": ["functools.wraps", "<builtin>.next", "inspect.signature"], "matplotlib._api.deprecation.delete_parameter.wrapper": ["<builtin>.any", "matplotlib._api.deprecation.warn_deprecated", "<builtin>.len", "<builtin>.repr"], "matplotlib._api.deprecation.warn_deprecated": ["matplotlib._api.deprecation._generate_deprecation_warning"], "matplotlib._api.deprecation._generate_deprecation_warning": ["<builtin>.int", "<builtin>.ValueError", "<builtin>.dict"], "matplotlib.cbook.Grouper": ["matplotlib._api.deprecation.deprecated", "matplotlib._api.deprecation.deprecated.deprecate"], "matplotlib._api.deprecation.deprecated": [], "matplotlib._api.deprecation.deprecated.deprecate": ["inspect.cleandoc", "<builtin>.isinstance", "matplotlib._api.deprecation.deprecated.deprecate.finalize", "<builtin>.type"], "matplotlib._api.deprecation.deprecated.deprecate.finalize": ["functools.wraps"], "functools.cache": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "matplotlib._docstring": ["matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib._docstring._ArtistPropertiesSubstitution.__init__": [], "matplotlib.rcsetup": ["matplotlib.rcsetup._convert_validator_spec", "matplotlib.rcsetup._listify_validator", "matplotlib.rcsetup._make_type_validator", "<map>.items", "functools.lru_cache", "<builtin>.object", "matplotlib.rcsetup.ValidateInStrings.__init__"], "matplotlib.backends": [], "matplotlib.backends.registry": ["matplotlib.backends.registry.BackendRegistry.__init__"], "matplotlib.backends.registry.BackendRegistry.__init__": [], "matplotlib.colors": ["matplotlib.colors._make_norm_from_scale.Norm.__init__", "matplotlib.colors.make_norm_from_scale", "<map>.update", "re.compile", "functools.cache", "matplotlib.colors._ColorMapping.__init__", "matplotlib.colors.ColorSequenceRegistry.__init__"], "PIL.Image": ["PIL._util.DeferredError.new", "<builtin>.getattr", "logging.getLogger", "<builtin>.hasattr", "warnings.warn", "PIL.Image._apply_env_variables", "<builtin>.int", "<builtin>.str", "<builtin>.ImportError", "<builtin>.setattr"], "PIL.ExifTags": [], "PIL.ImageMode": ["functools.lru_cache"], "PIL._deprecate": [], "PIL.TiffTags": ["PIL.TiffTags._populate"], "PIL.TiffTags._populate": ["<map>.items", "<builtin>.len", "<map>.values"], "PIL._binary": [], "PIL._typing": ["typing.TypeVar.__init__"], "PIL._util": [], "PIL._util.DeferredError": ["<builtin>.staticmethod"], "logging.getLogger": ["<builtin>.isinstance"], "PIL._util.DeferredError.new": ["PIL._util.DeferredError.__init__"], "PIL._util.DeferredError.__init__": [], "cffi": [], "cffi.api": ["<builtin>.object"], "cffi.lock": [], "cffi.error": [], "cffi.model": ["cffi.model.PrimitiveType.__init__", "weakref.WeakValueDictionary.__init__", "cffi.model.VoidType.__init__", "cffi.model.ConstPointerType", "cffi.model.ArrayType.__init__", "cffi.model.PointerType.__init__"], "cffi.model.VoidType.__init__": [], "cffi.model.PointerType.__init__": ["cffi.model.qualify", "<str>.lstrip"], "<str>.lstrip": [], "cffi.model.qualify": ["<str>.lstrip"], "cffi.model.ConstPointerType": ["cffi.model.PointerType.__init__"], "cffi.model.PrimitiveType.__init__": [], "cffi.model.ArrayType.__init__": [], "cffi.api.FFI": ["<builtin>.property"], "PIL.ImageFile": [], "PIL.ImageFile.StubHandler": ["abc.abstractmethod"], "PIL.ImageFile.PyDecoder": ["<builtin>.property"], "PIL.ImageFile.PyEncoder": ["<builtin>.property"], "PIL.PyAccess": ["cffi.api.FFI.cdef", "PIL._util.DeferredError.new", "logging.getLogger", "cffi.api.FFI.__init__"], "cffi.api.FFI.__init__": ["cffi.api.FFI.cast", "<builtin>.getattr", "<builtin>.Exception", "<builtin>.list", "<builtin>.hasattr", "cffi.cparser.Parser.__init__", "cffi.model.get_typecache", "<builtin>.isinstance", "<builtin>.setattr"], "cffi.cparser": ["re.compile"], "cffi.commontypes": ["<map>.update", "cffi.model.unknown_type"], "cffi.model.unknown_type": ["cffi.model.StructOrUnionOrEnum.force_the_name"], "cffi.model.StructOrUnionOrEnum.force_the_name": ["cffi.model.StructOrUnionOrEnum.build_c_name_with_marker"], "cffi.model.StructOrUnionOrEnum.build_c_name_with_marker": [], "pycparser": [], "pycparser.c_parser": [], "pycparser.ply.yacc": ["re.compile"], "pycparser.c_ast": [], "pycparser.c_lexer": [], "pycparser.ply.lex": ["<builtin>.int", "re.compile"], "pycparser.c_lexer.CLexer": ["<str>.upper", "<str>.lower", "pycparser.ply.lex.TOKEN.set_regex", "pycparser.ply.lex.TOKEN"], "<str>.upper": [], "pycparser.ply.lex.TOKEN": [], "pycparser.ply.lex.TOKEN.set_regex": ["pycparser.ply.lex._get_regex", "<builtin>.hasattr"], "pycparser.ply.lex._get_regex": ["<builtin>.getattr"], "pycparser.plyparser": [], "pycparser.ast_transforms": [], "pycparser.c_parser.CParser": ["pycparser.plyparser.parameterized", "pycparser.plyparser.parameterized.decorate"], "pycparser.plyparser.parameterized": [], "pycparser.plyparser.parameterized.decorate": [], "cffi.cparser.Parser.__init__": ["<builtin>.set", "weakref.WeakKeyDictionary.__init__"], "cffi.model.get_typecache": ["<builtin>.isinstance"], "cffi.api.FFI.cast": ["cffi.api.FFI._typeof", "<builtin>.isinstance"], "cffi.api.FFI._typeof": [], "cffi.api.FFI.cdef": ["cffi.api.FFI._cdef"], "cffi.api.FFI._cdef": ["<str>.encode", "<builtin>.isinstance", "<builtin>.TypeError"], "PIL.Image.Image": ["<builtin>.property"], "PIL.ImageFilter": [], "PIL.ImageFilter.Filter": ["abc.abstractmethod"], "PIL.ImageFilter.Color3DLUT": ["<builtin>.classmethod", "<builtin>.staticmethod"], "PIL.Image.ImagePointHandler": ["abc.abstractmethod"], "PIL.Image.ImageTransformHandler": ["abc.abstractmethod"], "PIL.Image.SupportsArrayInterface": ["<builtin>.property"], "PIL.Image._apply_env_variables": ["warnings.warn", "<builtin>.int", "<builtin>.len"], "PIL.PngImagePlugin": ["logging.getLogger", "re.compile"], "PIL.ImageChops": [], "PIL.ImagePalette": [], "PIL.GimpGradientFile": [], "PIL.GimpPaletteFile": [], "PIL.ImageColor": ["functools.lru_cache"], "PIL.PaletteFile": [], "PIL.ImagePalette.ImagePalette": ["<builtin>.property"], "PIL.ImageSequence": [], "PIL.PngImagePlugin.iTXt": ["<builtin>.staticmethod"], "PIL.PngImagePlugin.PngImageFile": ["<builtin>.property"], "matplotlib._cm": ["<builtin>.range", "<builtin>.globals", "matplotlib._cm.cubehelix"], "matplotlib._cm.cubehelix": [], "matplotlib.scale": ["matplotlib.scale.get_scale_names", "<builtin>.map", "<builtin>.repr", "matplotlib._docstring.Substitution.update", "matplotlib.scale._get_scale_docs", "<str>.rstrip"], "matplotlib.transforms": [], "matplotlib.path": [], "matplotlib.bezier": ["functools.lru_cache.decorating_function", "functools.lru_cache", "numpy.lib.function_base.vectorize.__init__"], "numpy.lib.function_base.vectorize.__init__": ["<builtin>.isinstance", "numpy.lib.function_base._parse_gufunc_signature", "<builtin>.set", "numpy.lib.function_base.iterable", "<builtin>.ValueError"], "numpy.lib.function_base.iterable": ["<builtin>.iter"], "numpy.lib.function_base._parse_gufunc_signature": ["<builtin>.tuple", "re.findall", "re.sub", "re.match", "<builtin>.ValueError"], "matplotlib.bezier.BezierSegment": ["<builtin>.property"], "matplotlib.path.Path": ["<builtin>.property", "weakref.WeakValueDictionary.__init__", "functools.lru_cache.decorating_function", "functools.lru_cache", "<builtin>.classmethod", "<builtin>.staticmethod"], "matplotlib.transforms.TransformNode": ["matplotlib._api.deprecation.deprecated", "<builtin>.range", "matplotlib._api.deprecation.deprecated.deprecate", "matplotlib._api.classproperty.__init__"], "matplotlib._api.classproperty.__init__": ["<builtin>.ValueError"], "matplotlib.transforms.BboxBase": ["<builtin>.property", "matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.deprecated", "matplotlib._api.deprecation.deprecated.deprecate", "matplotlib._api.deprecation.rename_parameter", "<builtin>.staticmethod", "matplotlib._api.classproperty.__init__"], "matplotlib._api.deprecation.rename_parameter": ["functools.wraps", "inspect.signature"], "matplotlib._api.deprecation.rename_parameter.wrapper": ["matplotlib._api.deprecation.warn_deprecated"], "matplotlib.transforms.Bbox": ["<builtin>.property", "<builtin>.staticmethod"], "matplotlib.transforms.TransformedBbox": ["matplotlib.transforms._make_str_method"], "matplotlib.transforms._make_str_method": [], "matplotlib.transforms.LockableBbox": ["matplotlib.transforms._make_str_method", "<builtin>.property"], "matplotlib.transforms.Transform": ["<builtin>.property"], "matplotlib.transforms.TransformWrapper": ["matplotlib.transforms._make_str_method", "<builtin>.property"], "matplotlib.transforms.AffineBase": ["matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.transforms.Affine2DBase": ["<builtin>.property", "matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.transforms.Affine2D": ["matplotlib.transforms._make_str_method", "<builtin>.staticmethod"], "matplotlib.transforms.IdentityTransform": ["matplotlib.transforms._make_str_method", "numpy.core.numeric.identity", "matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.rename_parameter"], "numpy.core.numeric.identity": ["numpy.lib.twodim_base.eye"], "numpy.lib.twodim_base.eye": ["operator.index"], "operator.index": ["<int>.__index__"], "<int>.__index__": [], "matplotlib.transforms._BlendedMixin": ["matplotlib.transforms._make_str_method"], "matplotlib.transforms.BlendedGenericTransform": ["<builtin>.property", "matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.transforms.CompositeGenericTransform": ["matplotlib.transforms._make_str_method", "<builtin>.property", "matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.transforms.CompositeAffine2D": ["matplotlib.transforms._make_str_method", "<builtin>.property"], "matplotlib.transforms.BboxTransform": ["matplotlib.transforms._make_str_method"], "matplotlib.transforms.BboxTransformTo": ["matplotlib.transforms._make_str_method"], "matplotlib.transforms.BboxTransformFrom": ["matplotlib.transforms._make_str_method"], "matplotlib.transforms.ScaledTranslation": ["matplotlib.transforms._make_str_method"], "matplotlib.transforms.AffineDeltaTransform": ["matplotlib.transforms._make_str_method"], "matplotlib.scale.LogTransform": ["matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.scale.InvertedLogTransform": ["matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.scale.LogScale": ["<builtin>.property"], "matplotlib.scale.FuncScaleLog": ["<builtin>.property"], "matplotlib.scale.SymmetricalLogTransform": ["matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.scale.InvertedSymmetricalLogTransform": ["matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.scale.SymmetricalLogScale": ["<builtin>.property"], "matplotlib.scale.AsinhTransform": ["matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.scale.InvertedAsinhTransform": ["matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.scale.AsinhScale": ["<builtin>.property"], "matplotlib.scale.LogitTransform": ["matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.scale.LogisticTransform": ["matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.scale.get_scale_names": ["<builtin>.sorted"], "matplotlib.scale._get_scale_docs": ["inspect.getdoc", "<map>.items", "extend"], "inspect.getdoc": ["inspect.cleandoc", "<builtin>.isinstance", "inspect._finddoc"], "inspect._finddoc": ["inspect.isclass", "<builtin>.getattr", "inspect.ismethod", "inspect.isdatadescriptor", "inspect._findclass", "inspect.ismethoddescriptor", "inspect.ismemberdescriptor", "inspect.isbuiltin", "<builtin>.isinstance", "inspect.isfunction"], "inspect.isdatadescriptor": ["inspect.isclass", "inspect.ismethod", "<builtin>.hasattr", "<builtin>.type", "inspect.isfunction"], "inspect.ismemberdescriptor": [], "inspect._findclass": ["inspect.isclass", "<builtin>.getattr"], "<str>.rstrip": [], "matplotlib._docstring.Substitution.update": [], "matplotlib._color_data": ["<map>.items"], "matplotlib.colors._ColorMapping.__init__": ["<builtin>.super"], "matplotlib.colors.ColorSequenceRegistry.__init__": [], "matplotlib.colors.ColorConverter": ["<builtin>.staticmethod"], "matplotlib.colors.LinearSegmentedColormap": ["<builtin>.staticmethod"], "matplotlib.colors.Normalize": ["<builtin>.property", "<builtin>.staticmethod"], "matplotlib.colors.TwoSlopeNorm": ["<builtin>.property"], "matplotlib.colors.CenteredNorm": ["<builtin>.property"], "matplotlib.colors.make_norm_from_scale": ["<builtin>.tuple", "matplotlib.colors._make_norm_from_scale", "<builtin>.isinstance", "inspect.signature"], "matplotlib.colors._make_norm_from_scale": [], "matplotlib.colors._make_norm_from_scale.Norm": ["inspect.Parameter.__init__"], "inspect.Parameter.__init__": ["<builtin>.TypeError", "<str>.isdigit", "<builtin>.ValueError", "<builtin>.type", "<str>.isidentifier", "<builtin>.isinstance"], "<str>.isdigit": [], "<str>.isidentifier": [], "matplotlib.colors._make_norm_from_scale.Norm.__init__": ["<builtin>.dict", "<builtin>.super"], "matplotlib.colors.SymLogNorm": ["<builtin>.property"], "matplotlib.colors.AsinhNorm": ["<builtin>.property"], "matplotlib.colors.LightSource": ["<builtin>.property"], "matplotlib._fontconfig_pattern": ["functools.lru_cache", "re.compile"], "pyparsing": ["<builtin>.globals"], "pyparsing.version_info": ["<builtin>.property"], "pyparsing.util": ["<builtin>.chr", "functools.lru_cache.decorating_function", "typing.TypeVar.__init__", "functools.lru_cache"], "pyparsing.util.__config_flags": ["<builtin>.classmethod"], "pyparsing.exceptions": ["pyparsing.util._collapse_string_to_ranges", "re.compile"], "pyparsing.util._collapse_string_to_ranges": ["<builtin>.next", "<builtin>.ord", "<builtin>.sorted", "append", "pyparsing.util._collapse_string_to_ranges.escape_re_range_char", "<builtin>.set", "<builtin>.iter", "<builtin>.len"], "pyparsing.util._collapse_string_to_ranges.escape_re_range_char": [], "pyparsing.exceptions.ParseBaseException": ["<builtin>.property", "pyparsing.util.replaced_by_pep8", "<builtin>.classmethod", "<builtin>.staticmethod"], "pyparsing.util.replaced_by_pep8": ["typing.cast", "<builtin>.getattr", "<builtin>.list", "<builtin>.hasattr", "functools.wraps", "<builtin>.isinstance", "inspect.signature"], "pyparsing.actions": ["pyparsing.util.replaced_by_pep8", "<builtin>.object"], "pyparsing.core": ["pyparsing.core.Suppress.__init__", "pyparsing.core.ParserElement.set_parse_action", "pyparsing.core.Literal.__init__", "pyparsing.core.StringEnd.__init__", "<builtin>.isinstance", "pyparsing.core.Regex.__init__", "pyparsing.core.LineEnd.__init__", "pyparsing.core.ParserElement.copy", "pyparsing.core.CharsNotIn.__init__", "pyparsing.core.Empty.__init__", "pyparsing.core.ParserElement.set_name", "pyparsing.core.StringStart.__init__", "pyparsing.core.ParserElement.set_results_name", "pyparsing.core.Group.__init__", "pyparsing.core.enable_all_warnings", "<builtin>.vars", "pyparsing.core.LineStart.__init__", "pyparsing.core.Opt.__init__", "pyparsing.util.replaced_by_pep8", "pyparsing.core._should_enable_warnings", "pyparsing.core.Combine.__init__", "pyparsing.core.srange"], "pyparsing.results": ["<builtin>.type"], "pyparsing.results.ParseResults": ["<builtin>.classmethod"], "pyparsing.core.__compat__": ["<builtin>.locals"], "pyparsing.core.__diag__": ["<builtin>.locals", "<builtin>.classmethod"], "pyparsing.core._should_enable_warnings": ["<builtin>.bool"], "pyparsing.core.enable_all_warnings": ["pyparsing.core.__diag__.enable_all_warnings"], "pyparsing.core.__diag__.enable_all_warnings": [], "pyparsing.core.ParserElement": ["<builtin>.property", "pyparsing.util.replaced_by_pep8", "<builtin>.classmethod", "<builtin>.staticmethod", "threading.RLock", "abc.abstractmethod"], "pyparsing.core.Keyword": ["pyparsing.util.replaced_by_pep8", "<builtin>.staticmethod"], "pyparsing.core.Regex": ["pyparsing.core.cached_property.__init__"], "pyparsing.core.cached_property.__init__": [], "pyparsing.core.QuotedString": ["<builtin>.dict"], "pyparsing.core.ParseExpression": ["pyparsing.util.replaced_by_pep8"], "pyparsing.core.ParseElementEnhance": ["pyparsing.util.replaced_by_pep8"], "pyparsing.core.Forward": ["pyparsing.util.replaced_by_pep8"], "pyparsing.core.Empty.__init__": ["<builtin>.super"], "pyparsing.core.ParserElement.set_name": ["pyparsing.core.ParserElement.set_debug", "<builtin>.str"], "pyparsing.core.ParserElement.set_debug": ["pyparsing.core.ParserElement.set_debug_actions", "pyparsing.core.ParserElement.visit_all"], "pyparsing.core.ParserElement.visit_all": ["<builtin>.set"], "pyparsing.core.ParserElement.set_debug_actions": [], "pyparsing.core.LineStart.__init__": ["pyparsing.core.ParserElement.leave_whitespace", "pyparsing.core.ParserElement.set_name", "<builtin>.set", "pyparsing.core.ParserElement.set_whitespace_chars", "<builtin>.super", "pyparsing.core.Empty.__init__"], "pyparsing.core.ParserElement.leave_whitespace": [], "pyparsing.core.ParserElement.set_whitespace_chars": ["<builtin>.set"], "pyparsing.core.LineEnd.__init__": ["pyparsing.core.ParserElement.set_whitespace_chars", "pyparsing.core.ParserElement.set_name", "<builtin>.super"], "pyparsing.core.StringStart.__init__": ["pyparsing.core.ParserElement.set_name", "<builtin>.super"], "pyparsing.core.StringEnd.__init__": ["pyparsing.core.ParserElement.set_name", "<builtin>.super"], "pyparsing.core.Regex.__init__": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.hasattr", "<builtin>.ValueError", "<builtin>.super"], "pyparsing.core.ParserElement.set_parse_action": ["<builtin>.TypeError", "<builtin>.all", "<builtin>.list", "pyparsing.core._trim_arity", "<builtin>.callable"], "<builtin>.all": [], "pyparsing.core._trim_arity": ["traceback.extract_stack", "<builtin>.getattr"], "pyparsing.core.CharsNotIn.__init__": ["<builtin>.set", "<builtin>.ValueError", "<builtin>.super"], "pyparsing.core.Suppress.__init__": ["pyparsing.core._PendingSkip.__init__", "pyparsing.core.NoMatch.__init__", "<builtin>.super"], "pyparsing.core.NoMatch.__init__": ["<builtin>.super"], "pyparsing.core._PendingSkip.__init__": ["<builtin>.super"], "pyparsing.core.Group.__init__": ["<builtin>.super"], "pyparsing.core.Literal.__init__": ["<builtin>.len", "<builtin>.super"], "pyparsing.core.Opt.__init__": ["<builtin>.super"], "pyparsing.core.ParserElement.set_results_name": ["pyparsing.core.ParserElement._setResultsName"], "pyparsing.core.ParserElement._setResultsName": ["pyparsing.core.ParserElement.copy", "<str>.endswith"], "pyparsing.core.ParserElement.copy": ["<builtin>.set"], "pyparsing.core.Combine.__init__": ["<builtin>.super", "pyparsing.core.ParseElementEnhance.leave_whitespace"], "pyparsing.core.ParseElementEnhance.leave_whitespace": ["<builtin>.super"], "pyparsing.core.srange": ["pyparsing.core.ParserElement.parse_string", "pyparsing.core.srange.<lambda1>"], "pyparsing.core.srange.<lambda1>": ["<builtin>.chr", "<builtin>.ord", "<builtin>.range", "<builtin>.isinstance"], "pyparsing.core.ParserElement.parse_string": ["pyparsing.core.StringEnd.__init__", "pyparsing.core.ParserElement._parseNoCache", "<str>.expandtabs", "pyparsing.core.ParserElement.set_debug", "pyparsing.core.ParserElement.streamline", "pyparsing.core.ParserElement.reset_cache", "pyparsing.core.ParserElement.preParse", "pyparsing.core.Empty.__init__"], "pyparsing.core.ParserElement.reset_cache": ["<builtin>.len"], "pyparsing.core.ParserElement.streamline": [], "pyparsing.core.ParserElement._parseNoCache": ["pyparsing.exceptions.ParseBaseException.__init__", "pyparsing.core.ParserElement.postParse", "pyparsing.core.ParserElement.parseImpl", "<builtin>.isinstance", "pyparsing.results.ParseResults.__init__", "<builtin>.len", "pyparsing.core.ParserElement.preParse"], "pyparsing.core.ParserElement.preParse": ["pyparsing.core.ParserElement._skipIgnorables", "<builtin>.len"], "pyparsing.core.ParserElement._skipIgnorables": [], "pyparsing.core.ParserElement.parseImpl": [], "pyparsing.exceptions.ParseBaseException.__init__": [], "pyparsing.core.ParserElement.postParse": [], "pyparsing.results.ParseResults.__init__": ["pyparsing.results._ParseResultsWithOffset.__init__", "<builtin>.isinstance", "<builtin>.str", "pyparsing.results.ParseResults.__init__"], "pyparsing.results._ParseResultsWithOffset.__init__": [], "pyparsing.helpers": ["pyparsing.core.Suppress.__init__", "pyparsing.core.Regex.__init__", "pyparsing.core.ParserElement.leave_whitespace", "<builtin>.vars", "pyparsing.util.replaced_by_pep8", "pyparsing.core.ParserElement.set_name", "pyparsing.core.ParserElement.__init__", "pyparsing.helpers.make_html_tags", "pyparsing.core.Combine.__init__", "pyparsing.core.Word.__init__", "<builtin>.isinstance"], "html.entities": ["<builtin>.chr", "<map>.items"], "pyparsing.core.ParserElement.__init__": ["<builtin>.set", "<builtin>.list"], "pyparsing.core.Word.__init__": ["re.escape", "pyparsing.util._collapse_string_to_ranges", "<builtin>.sorted", "re.compile", "<builtin>.type", "<builtin>.set", "<builtin>.ValueError", "<builtin>.len", "<builtin>.super"], "pyparsing.helpers.make_html_tags": ["pyparsing.helpers._makeTags"], "pyparsing.helpers._makeTags": ["pyparsing.core.Suppress.__init__", "pyparsing.core.Opt.__init__", "pyparsing.core.ParserElement.set_name", "pyparsing.core.ParserElement.set_parse_action", "pyparsing.core.Keyword.__init__", "pyparsing.core.ParserElement.copy", "pyparsing.core.Dict.__init__", "pyparsing.core.ParserElement.__init__", "pyparsing.core.Literal.__init__", "pyparsing.core.ZeroOrMore.__init__", "pyparsing.core.Combine.__init__", "pyparsing.core.ParserElement.add_parse_action", "pyparsing.core.Word.__init__", "pyparsing.core.SkipTo.__init__", "<builtin>.isinstance", "pyparsing.core.Group.__init__"], "pyparsing.core.Keyword.__init__": ["<builtin>.type", "<builtin>.set", "<builtin>.ValueError", "<builtin>.len", "<builtin>.super"], "pyparsing.core.ZeroOrMore.__init__": ["<builtin>.super"], "pyparsing.core.Dict.__init__": ["<builtin>.super"], "pyparsing.core.ParserElement.add_parse_action": ["pyparsing.core._trim_arity"], "pyparsing.core.SkipTo.__init__": ["pyparsing.core.ParserElement.leave_whitespace", "pyparsing.core.SkipTo._update_ignorer", "<builtin>.isinstance", "<builtin>.super", "pyparsing.core.Empty.__init__"], "pyparsing.core.SkipTo._update_ignorer": [], "pyparsing.testing": [], "pyparsing.testing.pyparsing_test.TestParseResultsAsserts": ["contextlib.contextmanager"], "pyparsing.testing.pyparsing_test": ["<builtin>.staticmethod"], "pyparsing.common": ["<builtin>.isinstance", "<builtin>.vars"], "pyparsing.common.pyparsing_common": ["pyparsing.core.ParserElement.set_parse_action", "pyparsing.core.ParserElement.__init__", "pyparsing.core.Literal.__init__", "pyparsing.core.ParseElementEnhance.streamline", "pyparsing.core.DelimitedList.__init__", "pyparsing.core.Regex.__init__", "pyparsing.core.LineEnd.__init__", "pyparsing.core.ParserElement.copy", "<builtin>.staticmethod", "pyparsing.core.White.__init__", "pyparsing.core.token_map", "pyparsing.core.ParserElement.set_name", "pyparsing.core.ParserElement.add_condition", "pyparsing.core.ParserElement.add_parse_action", "pyparsing.core.ParserElement.streamline", "pyparsing.core.ParserElement.suppress", "pyparsing.core.FollowedBy.__init__", "pyparsing.core.Opt.__init__", "pyparsing.util.replaced_by_pep8", "pyparsing.core.Combine.__init__", "pyparsing.core.Word.__init__"], "pyparsing.core.token_map": ["<builtin>.getattr"], "pyparsing.core.ParserElement.suppress": ["pyparsing.core.Suppress.__init__"], "pyparsing.core.ParserElement.add_condition": ["<builtin>.bool", "pyparsing.core.condition_as_parse_action", "<builtin>.str"], "pyparsing.core.condition_as_parse_action": ["functools.wraps", "pyparsing.core._trim_arity"], "pyparsing.core.White.__init__": ["pyparsing.core.ParserElement.set_whitespace_chars", "<builtin>.super"], "pyparsing.core.FollowedBy.__init__": ["<builtin>.super"], "pyparsing.core.ParseElementEnhance.streamline": ["<builtin>.super"], "pyparsing.core.DelimitedList.__init__": ["typing.cast", "<builtin>.isinstance", "pyparsing.core.Suppress.__init__", "pyparsing.core.Opt.__init__", "pyparsing.core.Combine.__init__", "<builtin>.ValueError", "<builtin>.str", "<builtin>.super"], "matplotlib._enums": ["matplotlib._docstring.Substitution.update"], "matplotlib._enums.JoinStyle": ["<builtin>.staticmethod"], "matplotlib._enums.CapStyle": ["<builtin>.staticmethod"], "cycler": ["typing.TypeVar.__init__", "typing.overload"], "cycler.Cycler": ["<builtin>.property", "typing.overload", "<builtin>.classmethod"], "matplotlib.rcsetup.__getattr__": ["matplotlib._api.deprecation.deprecated", "<builtin>.property", "matplotlib._api.deprecation.deprecated.deprecate"], "matplotlib.rcsetup._listify_validator": ["<builtin>.type"], "matplotlib.rcsetup._make_type_validator": [], "matplotlib.rcsetup.ValidateInStrings.__init__": ["matplotlib.rcsetup.ValidateInStrings.__init__.func"], "matplotlib.rcsetup.ValidateInStrings.__init__.func": [], "matplotlib.rcsetup._convert_validator_spec": ["matplotlib.rcsetup.ValidateInStrings.__init__", "<builtin>.isinstance"], "matplotlib.__getattr__": ["<builtin>.property"], "matplotlib._check_versions": ["packaging.version.parse", "importlib.import_module", "<builtin>.ImportError"], "packaging.version.parse": ["packaging.version.Version.__init__"], "packaging.version.Version.__init__": ["<builtin>.tuple", "packaging.version._parse_local_version", "<builtin>.int", "packaging.version._parse_letter_version", "packaging.version._cmpkey"], "packaging.version._parse_letter_version": ["<builtin>.int", "<str>.lower"], "packaging.version._parse_local_version": ["<builtin>.int", "<builtin>.tuple"], "packaging.version._cmpkey": ["<builtin>.isinstance", "<builtin>.reversed", "<builtin>.tuple", "<builtin>.list"], "matplotlib._logged_cached": ["functools.wraps"], "matplotlib._logged_cached.wrapper": [], "matplotlib.cbook._get_data_path": ["matplotlib.get_data_path"], "matplotlib.get_data_path": ["<builtin>.str", "pathlib.PurePath.with_name"], "pathlib.PurePath.with_name": ["pathlib.PurePath._from_parsed_parts", "<builtin>.ValueError", "<builtin>.len"], "pathlib.PurePath._from_parsed_parts": [], "matplotlib._rc_params_in_file": ["matplotlib.<lambda2>", "<builtin>.dict", "<builtin>.enumerate", "matplotlib._open_file_or_url", "matplotlib.RcParams.__init__", "<map>.items", "matplotlib._api.deprecation.warn_deprecated", "matplotlib.cbook._strip_comment", "<builtin>.len"], "matplotlib._open_file_or_url": ["ntpath.expanduser", "matplotlib._get_ssl_context", "posixpath.expanduser", "<builtin>.open", "<builtin>.isinstance"], "matplotlib._get_ssl_context": ["certifi.core.where", "ssl.create_default_context"], "certifi": [], "certifi.core": [], "certifi.core.where": ["posixpath.dirname", "ntpath.dirname", "ntpath.join", "posixpath.join"], "ssl.create_default_context": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.hasattr", "ssl.SSLContext.load_default_certs", "<builtin>.ValueError"], "ssl.SSLContext.load_default_certs": ["ssl.SSLContext._load_windows_store_certs", "<builtin>.isinstance", "<builtin>.TypeError"], "ssl.SSLContext._load_windows_store_certs": ["warnings.warn", "<builtin>.bytearray"], "matplotlib.<lambda2>": [], "matplotlib.cbook._strip_comment": ["<builtin>.ValueError"], "matplotlib.RcParams.__init__": [], "matplotlib.matplotlib_fname": ["matplotlib.matplotlib_fname.gen_candidates", "<builtin>.RuntimeError", "genericpath.exists", "genericpath.isdir"], "matplotlib.matplotlib_fname.gen_candidates": ["matplotlib.get_data_path", "posixpath.join", "ntpath.join", "matplotlib.get_configdir"], "matplotlib.get_configdir": ["matplotlib._get_config_or_cache_dir"], "matplotlib._get_config_or_cache_dir": ["<builtin>.OSError", "pathlib.Path.mkdir", "matplotlib._get_xdg_cache_dir", "tempfile.mkdtemp", "pathlib.Path.home", "matplotlib._get_xdg_config_dir", "pathlib.Path.resolve"], "pathlib.Path.home": ["pathlib.Path.expanduser"], "pathlib.Path.expanduser": ["pathlib.PurePath._from_parts", "<builtin>.RuntimeError"], "pathlib.PurePath._from_parts": [], "matplotlib._get_xdg_config_dir": ["pathlib.Path.home", "<builtin>.str"], "pathlib.Path.resolve": ["pathlib.PurePath._from_parts", "pathlib.Path.resolve.check_eloop"], "pathlib.Path.resolve.check_eloop": ["<builtin>.RuntimeError", "<builtin>.getattr"], "pathlib.Path.mkdir": ["pathlib.Path.is_dir", "pathlib.Path.mkdir"], "pathlib.Path.is_dir": ["pathlib.Path.stat", "stat.S_ISDIR", "pathlib._ignore_error"], "pathlib.Path.stat": [], "pathlib._ignore_error": ["<builtin>.getattr"], "tempfile.mkdtemp": ["<builtin>.next", "<builtin>.FileExistsError", "<builtin>.map", "tempfile._get_candidate_names", "genericpath.isdir", "ntpath.join", "posixpath.join", "<builtin>.range", "tempfile._sanitize_params"], "tempfile._sanitize_params": ["tempfile.gettempdir", "tempfile.gettempdirb", "tempfile._infer_return_type"], "tempfile._infer_return_type": ["os._fspath", "<builtin>.isinstance", "<builtin>.TypeError"], "tempfile.gettempdirb": ["tempfile._gettempdir"], "tempfile._gettempdir": ["tempfile._get_default_tempdir"], "tempfile._get_default_tempdir": ["posixpath.join", "<builtin>.next", "<builtin>.FileNotFoundError", "posixpath.abspath", "genericpath.isdir", "ntpath.join", "tempfile._candidate_tempdir_list", "<builtin>.range", "ntpath.abspath"], "tempfile._candidate_tempdir_list": ["append", "os.getenv", "extend"], "<builtin>.FileNotFoundError": [], "tempfile.gettempdir": ["tempfile._gettempdir"], "tempfile._get_candidate_names": [], "<builtin>.FileExistsError": [], "matplotlib.RcParams.copy": ["matplotlib.RcParams.__init__", "matplotlib.RcParams._set", "matplotlib.RcParams._get", "matplotlib.RcParams.__iter__"], "matplotlib.RcParams.__iter__": ["matplotlib._api.deprecation.suppress_matplotlib_deprecation_warning"], "matplotlib._api.deprecation.suppress_matplotlib_deprecation_warning": ["warnings.catch_warnings.__init__"], "matplotlib.RcParams._get": [], "matplotlib.RcParams._set": [], "locale.setlocale": [], "matplotlib.is_interactive": [], "matplotlib.cm": ["matplotlib._api.deprecation.deprecated", "matplotlib.cm.ColormapRegistry.__init__", "matplotlib._api.deprecation.deprecated.deprecate", "matplotlib._docstring.Substitution.update", "matplotlib.cm._gen_cmap_registry", "<builtin>.globals"], "matplotlib._cm_listed": ["<builtin>.len", "matplotlib.colors.ListedColormap.__init__"], "matplotlib.colors.ListedColormap.__init__": ["<builtin>.list", "<builtin>.len", "numpy.lib.function_base.iterable", "<builtin>.isinstance", "<builtin>.float", "<builtin>.super"], "matplotlib.cm._gen_cmap_registry": ["matplotlib.colors.LinearSegmentedColormap.__init__", "<map>.values", "<builtin>.list", "matplotlib.colors.ListedColormap.__init__", "matplotlib.colors.LinearSegmentedColormap.from_list"], "matplotlib.colors.LinearSegmentedColormap.__init__": ["<builtin>.super"], "matplotlib.colors.LinearSegmentedColormap.from_list": ["matplotlib.colors.LinearSegmentedColormap.__init__", "<builtin>.ValueError", "<builtin>.zip", "numpy.lib.shape_base.column_stack", "matplotlib.colors.to_rgba_array", "numpy.lib.function_base.iterable", "<builtin>.isinstance", "numpy.core.linspace", "<builtin>.len"], "numpy.core.linspace": [], "matplotlib.colors.to_rgba_array": ["matplotlib.cbook._str_equal", "numpy.lib.shape_base.tile", "numpy.core.fromnumeric.any", "matplotlib.cbook._str_lower_equal", "numpy.core.ones", "numpy.ma.core.is_masked", "numpy.ma.core.getdata", "<builtin>.ValueError", "matplotlib.colors.to_rgba", "numpy.lib.shape_base.column_stack", "numpy.lib.function_base.iterable", "<builtin>.isinstance", "<builtin>.len"], "numpy.ma.core.is_masked": ["numpy.ma.core.getmask"], "numpy.ma.core.getmask": ["<builtin>.getattr"], "numpy.ma.core.getdata": [], "numpy.lib.shape_base.tile": ["<builtin>.tuple", "<builtin>.all", "<builtin>.zip", "<builtin>.isinstance", "<builtin>.len"], "numpy.lib.shape_base.column_stack": ["append", "numpy.core.shape_base._arrays_for_stack_dispatcher", "numpy.core.arrayprint.concatenate"], "numpy.core.shape_base._arrays_for_stack_dispatcher": ["warnings.warn", "<builtin>.hasattr"], "numpy.core.arrayprint.concatenate": [], "numpy.core.fromnumeric.any": ["numpy.core.fromnumeric._wrapreduction"], "numpy.core.fromnumeric._wrapreduction": ["<builtin>.getattr", "<builtin>.type"], "matplotlib.cbook._str_lower_equal": ["<builtin>.isinstance"], "matplotlib.colors.to_rgba": ["matplotlib.colors._to_rgba_no_colorcycle", "<builtin>.int", "<builtin>.isinstance", "<builtin>.len", "matplotlib.colors._is_nth_color"], "matplotlib.colors._is_nth_color": ["<builtin>.isinstance"], "matplotlib.colors._to_rgba_no_colorcycle": ["<builtin>.tuple", "<builtin>.all", "<builtin>.float", "<builtin>.map", "<builtin>.ValueError", "<builtin>.any", "re.match", "<builtin>.int", "numpy.lib.function_base.iterable", "<builtin>.isinstance", "<builtin>.len"], "numpy.core.ones": [], "matplotlib.cbook._str_equal": ["<builtin>.isinstance"], "matplotlib.cm.ColormapRegistry.__init__": ["<builtin>.tuple"], "matplotlib.cm.ScalarMappable": ["<builtin>.property"], "matplotlib.offsetbox": [], "matplotlib.artist": ["matplotlib.artist.Artist._update_set_signature_and_docstring", "collections.namedtuple", "logging.getLogger"], "matplotlib.artist.Artist": ["<builtin>.property", "<builtin>.classmethod", "contextlib.contextmanager"], "matplotlib.artist.ArtistInspector": ["functools.cache", "<builtin>.staticmethod", "re.compile"], "matplotlib.artist.Artist._update_set_signature_and_docstring": ["inspect.Parameter.__init__", "matplotlib.artist.ArtistInspector.get_setters", "matplotlib.artist.ArtistInspector.__init__", "matplotlib.artist.kwdoc", "inspect.Signature.__init__"], "matplotlib.artist.ArtistInspector.__init__": ["matplotlib.artist.ArtistInspector.get_aliases", "<builtin>.list", "<builtin>.type", "numpy.lib.function_base.iterable", "<builtin>.isinstance", "<builtin>.len"], "matplotlib.artist.ArtistInspector.get_aliases": ["inspect.getdoc", "<builtin>.getattr", "<builtin>.dir", "<map>.setdefault", "matplotlib.artist.ArtistInspector.is_alias", "<builtin>.callable", "re.search"], "matplotlib.artist.ArtistInspector.is_alias": ["inspect.getdoc"], "matplotlib.artist.ArtistInspector.get_setters": ["<builtin>.getattr", "matplotlib.artist.ArtistInspector.number_of_parameters", "<builtin>.dir", "append", "matplotlib.artist.ArtistInspector.is_alias", "<builtin>.callable"], "matplotlib.artist.ArtistInspector.number_of_parameters": ["<builtin>.len", "inspect.signature"], "matplotlib.artist.kwdoc": ["matplotlib.artist.ArtistInspector.pprint_setters", "matplotlib.artist.ArtistInspector.__init__", "matplotlib.artist.ArtistInspector.pprint_setters_rest"], "matplotlib.artist.ArtistInspector.pprint_setters_rest": ["<builtin>.getattr", "matplotlib.artist.ArtistInspector.get_valid_values", "matplotlib.artist.ArtistInspector.get_setters", "<builtin>.sorted", "append", "<builtin>.zip", "<str>.ljust", "<builtin>.max", "<builtin>.len", "matplotlib.artist.ArtistInspector.aliased_name_rest"], "matplotlib.artist.ArtistInspector.get_valid_values": ["inspect.getdoc", "<builtin>.getattr", "re.sub", "<builtin>.hasattr", "<builtin>.AttributeError", "re.search"], "matplotlib.artist.ArtistInspector.aliased_name_rest": ["<map>.get", "<builtin>.sorted"], "<str>.ljust": [], "matplotlib.artist.ArtistInspector.pprint_setters": ["matplotlib.artist.ArtistInspector.get_valid_values", "matplotlib.artist.ArtistInspector.get_setters", "<builtin>.sorted", "matplotlib.artist.ArtistInspector.aliased_name", "append"], "matplotlib.artist.ArtistInspector.aliased_name": ["<map>.get", "<builtin>.sorted"], "matplotlib.text": ["functools.lru_cache", "functools.lru_cache.decorating_function", "logging.getLogger", "matplotlib._docstring.Substitution.update"], "matplotlib.font_manager": ["logging.getLogger", "<builtin>.hasattr", "functools.lru_cache.decorating_function", "pathlib.Path.home", "functools.lru_cache", "collections.namedtuple", "<builtin>.str", "matplotlib.font_manager._load_fontmanager"], "matplotlib.font_manager.FontProperties": ["<builtin>.classmethod"], "matplotlib.font_manager.FontManager": ["functools.lru_cache.decorating_function", "<builtin>.property", "functools.lru_cache", "<builtin>.staticmethod"], "matplotlib.font_manager._load_fontmanager": ["matplotlib.font_manager.json_dump", "matplotlib.font_manager.FontManager.__init__", "matplotlib.get_cachedir", "matplotlib.font_manager.json_load"], "matplotlib.get_cachedir": ["matplotlib._get_config_or_cache_dir"], "matplotlib._get_xdg_cache_dir": ["pathlib.Path.home", "<builtin>.str"], "matplotlib.font_manager.json_load": ["json.load", "<builtin>.open"], "json.load": ["json.loads"], "matplotlib.font_manager.FontManager.__init__": ["matplotlib.cbook._get_data_path", "matplotlib.font_manager.findSystemFonts", "matplotlib.font_manager.FontManager.addfont", "threading.Timer.__init__", "threading.Thread.start"], "threading.Timer.__init__": ["threading.Event.__init__", "threading.Thread.__init__"], "threading.Thread.start": ["threading.Event.wait", "threading.Event.is_set", "<builtin>.RuntimeError"], "threading.Event.is_set": [], "threading.Event.wait": [], "matplotlib.font_manager.findSystemFonts": ["matplotlib.font_manager.get_fontext_synonyms", "<builtin>.isinstance", "genericpath.exists", "<builtin>.map", "matplotlib.font_manager.list_fonts", "<builtin>.set", "matplotlib.font_manager._get_fontconfig_fonts", "matplotlib.font_manager._get_macos_fonts", "<builtin>.str", "matplotlib.font_manager._get_win32_installed_fonts"], "matplotlib.font_manager.get_fontext_synonyms": [], "matplotlib.font_manager._get_fontconfig_fonts": ["subprocess.check_output"], "matplotlib.font_manager._get_macos_fonts": ["subprocess.check_output", "plistlib.loads"], "plistlib.loads": ["plistlib.load"], "matplotlib.font_manager._get_win32_installed_fonts": ["matplotlib.font_manager.win32FontDirectory", "<builtin>.set", "<builtin>.range", "<builtin>.isinstance", "pathlib.Path.resolve"], "matplotlib.font_manager.win32FontDirectory": ["ntpath.join", "posixpath.join"], "matplotlib.font_manager.list_fonts": ["os.walk", "ntpath.join", "posixpath.join"], "os.walk": ["os._fspath", "os._walk"], "os._walk": ["os._walk", "ntpath.islink", "ntpath.join", "posixpath.join", "posixpath.islink"], "posixpath.islink": ["stat.S_ISLNK"], "stat.S_ISLNK": ["stat.S_IFMT"], "ntpath.islink": ["stat.S_ISLNK"], "matplotlib.font_manager.FontManager.addfont": ["<builtin>.open", "matplotlib.font_manager.afmFontProperty", "matplotlib.font_manager.ttfFontProperty"], "matplotlib.font_manager.ttfFontProperty": ["<builtin>.filter", "<builtin>.NotImplementedError", "<builtin>.any", "<builtin>.int", "matplotlib.font_manager.ttfFontProperty.get_weight"], "matplotlib.font_manager.ttfFontProperty.get_weight": ["re.search"], "matplotlib.font_manager.afmFontProperty": ["<builtin>.any"], "matplotlib.font_manager.json_dump": ["matplotlib.cbook._lock_path"], "matplotlib.cbook._lock_path": ["<builtin>.range", "pathlib.PurePath.with_name"], "matplotlib.patches": ["inspect.getdoc", "matplotlib._docstring.Substitution.update"], "matplotlib.hatch": [], "matplotlib.lines": ["logging.getLogger"], "matplotlib.markers": ["matplotlib.path.Path.__init__", "<builtin>.range"], "matplotlib.path.Path.__init__": ["matplotlib.cbook._to_unmasked_float_array", "matplotlib.path.Path._update_values", "matplotlib._api.check_shape", "<builtin>.ValueError", "<builtin>.len"], "matplotlib.cbook._to_unmasked_float_array": ["numpy.ma.core.MaskedArray.filled", "numpy.ma.core.asarray", "<builtin>.hasattr"], "numpy.ma.core.asarray": [], "numpy.ma.core.MaskedArray.filled": ["numpy.core.multiarray.copyto", "numpy.ma.core._check_fill_value", "numpy.core.fromnumeric.choose", "numpy.ma.core._recursive_filled"], "numpy.ma.core._check_fill_value": ["<builtin>.isinstance", "numpy.ma.core._recursive_set_fill_value", "<builtin>.TypeError", "<builtin>.ValueError", "numpy.ma.core.default_fill_value"], "numpy.ma.core._recursive_set_fill_value": ["<builtin>.tuple", "append", "<builtin>.zip", "<builtin>.len", "numpy.core.fromnumeric.resize"], "numpy.core.fromnumeric.resize": ["<builtin>.isinstance", "numpy.core.fromnumeric.reshape", "numpy.core.numeric.zeros_like", "numpy.core.multiarray.concatenate", "numpy.core.fromnumeric.ravel", "<builtin>.ValueError"], "numpy.core.fromnumeric.ravel": ["<builtin>.isinstance"], "numpy.core.numeric.zeros_like": ["numpy.core.multiarray.empty_like", "numpy.core.multiarray.copyto"], "numpy.core.multiarray.empty_like": [], "numpy.core.multiarray.copyto": [], "numpy.core.multiarray.concatenate": ["<builtin>.list"], "numpy.core.fromnumeric.reshape": ["numpy.core.fromnumeric._wrapfunc"], "numpy.core.fromnumeric._wrapfunc": ["numpy.core.fromnumeric._wrapit", "<builtin>.getattr"], "numpy.core.fromnumeric._wrapit": ["<builtin>.isinstance", "<builtin>.getattr"], "numpy.ma.core.default_fill_value": ["numpy.ma.core._get_dtype_of", "numpy.ma.core._recursive_fill_value"], "numpy.ma.core._get_dtype_of": ["<builtin>.isinstance", "<builtin>.hasattr"], "numpy.ma.core._recursive_fill_value": ["numpy.core.numeric.full", "<builtin>.tuple", "numpy.ma.core._recursive_fill_value", "numpy.ma.core.default_fill_value._scalar_fill_value"], "numpy.ma.core.default_fill_value._scalar_fill_value": ["<map>.get"], "numpy.core.numeric.full": ["numpy.core.multiarray.copyto"], "numpy.core.fromnumeric.choose": ["numpy.core.fromnumeric._wrapfunc"], "numpy.ma.core._recursive_filled": ["numpy.core.multiarray.copyto", "numpy.ma.core._recursive_filled"], "matplotlib._api.check_shape": ["<builtin>.next", "<builtin>.any", "<builtin>.zip", "<builtin>.iter", "<builtin>.ValueError", "<builtin>.str", "<builtin>.len"], "matplotlib.path.Path._update_values": ["numpy.core.fromnumeric.all", "<builtin>.len"], "numpy.core.fromnumeric.all": ["numpy.core.fromnumeric._wrapreduction"], "matplotlib.markers.MarkerStyle": ["matplotlib.path.Path.__init__", "matplotlib.path.Path._create_closed"], "matplotlib.path.Path._create_closed": ["matplotlib.path.Path.__init__", "matplotlib.cbook._to_unmasked_float_array", "numpy.core.numeric.concatenate"], "numpy.core.numeric.concatenate": [], "matplotlib.lines.Line2D": ["<builtin>.property", "matplotlib.artist.allow_rasterization", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.artist.allow_rasterization": ["functools.wraps"], "matplotlib.lines.VertexSelector": ["<builtin>.property"], "matplotlib.patches.Patch": ["<builtin>.property", "matplotlib.artist.allow_rasterization", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.patches.Shadow": ["matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.patches.Rectangle": ["<builtin>.property", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.patches.RegularPolygon": ["matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.patches.PathPatch": ["matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.patches.StepPatch": ["matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.patches.Polygon": ["<builtin>.property", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.patches.Wedge": ["matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.patches.Arrow": ["matplotlib._docstring._ArtistPropertiesSubstitution.__init__", "matplotlib.path.Path._create_closed"], "matplotlib.patches.FancyArrow": ["matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.patches.CirclePolygon": ["matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.patches.Ellipse": ["<builtin>.property", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.patches.Annulus": ["<builtin>.property", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.patches.Circle": ["<builtin>.property", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.patches.Arc": ["matplotlib.artist.allow_rasterization", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.patches._Style": ["<builtin>.classmethod"], "matplotlib.patches.ArrowStyle._Base": ["<builtin>.staticmethod"], "matplotlib.patches.FancyBboxPatch": ["matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.patches.FancyArrowPatch": ["matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.patches.ConnectionPatch": ["matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.textpath": ["matplotlib.textpath.TextToPath.__init__", "logging.getLogger"], "matplotlib._text_helpers": [], "matplotlib.dviread": ["functools.lru_cache", "<builtin>.dict", "collections.namedtuple", "logging.getLogger"], "matplotlib.dviread.Text": ["<builtin>.property"], "matplotlib.dviread.PsfontsMap": ["functools.lru_cache"], "matplotlib.dviread._LuatexKpsewhich": ["functools.lru_cache"], "matplotlib.mathtext": ["logging.getLogger"], "matplotlib.mathtext.MathTextParser": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "matplotlib.texmanager": ["logging.getLogger"], "matplotlib.texmanager.TexManager": ["matplotlib.get_cachedir", "matplotlib._api.deprecation.deprecate_privatize_attribute.__init__", "functools.lru_cache", "ntpath.join", "posixpath.join", "<builtin>.classmethod"], "matplotlib._api.deprecation.deprecate_privatize_attribute.__init__": ["matplotlib._api.deprecation.deprecated"], "matplotlib.textpath.TextToPath": ["<builtin>.staticmethod"], "matplotlib.textpath.TextToPath.__init__": ["matplotlib.mathtext.MathTextParser.__init__"], "matplotlib.mathtext.MathTextParser.__init__": ["matplotlib._api.check_getitem", "<str>.lower"], "matplotlib._api.check_getitem": ["<builtin>.ValueError", "<builtin>.map", "<builtin>.len"], "matplotlib.textpath.TextPath": ["<builtin>.property"], "matplotlib.text.Text": ["matplotlib._docstring.kwarg_doc", "matplotlib.artist.allow_rasterization", "<builtin>.dict", "matplotlib._docstring.kwarg_doc.decorator"], "matplotlib._docstring.kwarg_doc": [], "matplotlib._docstring.kwarg_doc.decorator": [], "matplotlib.text.Annotation": ["<builtin>.property", "matplotlib.artist.allow_rasterization", "matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.image": ["<builtin>.set", "logging.getLogger"], "matplotlib.backend_bases": ["logging.getLogger", "contextlib.contextmanager"], "matplotlib.backend_tools": ["<builtin>.set"], "uuid": ["uuid.UUID.__init__", "<builtin>.getattr", "platform.system"], "uuid.UUID": ["<builtin>.property"], "uuid.UUID.__init__": ["<str>.strip", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.repr", "<builtin>.ValueError", "<builtin>.len"], "matplotlib._pylab_helpers": [], "matplotlib._pylab_helpers.Gcf": ["<builtin>.classmethod", "collections.OrderedDict.__init__"], "matplotlib.backend_tools.ToolBase": ["<builtin>.property"], "matplotlib.backend_tools.ToolToggleBase": ["<builtin>.property"], "matplotlib.backend_tools.ToolQuit": ["<builtin>.property"], "matplotlib.backend_tools.ToolQuitAll": ["<builtin>.property"], "matplotlib.backend_tools.ToolGrid": ["<builtin>.property"], "matplotlib.backend_tools.ToolMinorGrid": ["<builtin>.property"], "matplotlib.backend_tools.ToolFullScreen": ["<builtin>.property"], "matplotlib.backend_tools.ToolYScale": ["<builtin>.property"], "matplotlib.backend_tools.ToolXScale": ["<builtin>.property"], "matplotlib.backend_tools.ToolHome": ["<builtin>.property"], "matplotlib.backend_tools.ToolBack": ["<builtin>.property"], "matplotlib.backend_tools.ToolForward": ["<builtin>.property"], "matplotlib.backend_tools.SaveFigureBase": ["<builtin>.property"], "matplotlib.backend_tools.ToolZoom": ["<builtin>.property"], "matplotlib.backend_tools.ToolPan": ["<builtin>.property"], "matplotlib.backend_tools.ToolHelpBase": ["<builtin>.property", "<builtin>.staticmethod"], "matplotlib.backend_tools.ToolCopyToClipboardBase": ["<builtin>.property"], "matplotlib._tight_bbox": [], "matplotlib.widgets": [], "matplotlib.collections": [], "matplotlib.collections.Collection": ["matplotlib.artist.allow_rasterization", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__", "<builtin>.staticmethod"], "matplotlib.collections._CollectionWithSizes": ["matplotlib.artist.allow_rasterization"], "matplotlib.collections.RegularPolyCollection": ["matplotlib.artist.allow_rasterization"], "matplotlib.collections.EllipseCollection": ["matplotlib.artist.allow_rasterization"], "matplotlib.collections.TriMesh": ["matplotlib.artist.allow_rasterization", "<builtin>.staticmethod"], "matplotlib.collections._MeshData": ["<builtin>.staticmethod"], "matplotlib.collections.QuadMesh": ["matplotlib.artist.allow_rasterization"], "matplotlib.widgets.Widget": ["<builtin>.property"], "matplotlib.widgets.AxesWidget": ["<builtin>.property"], "matplotlib.widgets.TextBox": ["<builtin>.property"], "matplotlib.widgets.RadioButtons": ["<builtin>.property"], "matplotlib.widgets._SelectorWidget": ["<builtin>.property"], "matplotlib.widgets.SpanSelector": ["<builtin>.property", "<builtin>.staticmethod"], "matplotlib.widgets.ToolLineHandles": ["<builtin>.property"], "matplotlib.widgets.ToolHandles": ["<builtin>.property"], "matplotlib.widgets.RectangleSelector": ["<builtin>.property"], "matplotlib.widgets.EllipseSelector": ["<builtin>.property"], "matplotlib.widgets.PolygonSelector": ["<builtin>.property"], "matplotlib.backend_managers": [], "matplotlib.backend_managers.ToolManager": ["<builtin>.property"], "matplotlib.layout_engine": [], "matplotlib._constrained_layout": ["logging.getLogger"], "matplotlib._layoutgrid": ["logging.getLogger"], "kiwisolver": [], "kiwisolver.exceptions": [], "matplotlib._tight_layout": [], "matplotlib.layout_engine.LayoutEngine": ["<builtin>.property"], "matplotlib.backend_bases.GraphicsContextBase": ["matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.backend_bases.TimerBase": ["<builtin>.property", "matplotlib._api.deprecation.delete_parameter", "matplotlib._api.deprecation.delete_parameter.wrapper"], "matplotlib.backend_bases.Event": ["<builtin>.property"], "matplotlib.backend_bases.LocationEvent": ["matplotlib._api.deprecation.deprecated", "matplotlib._api.deprecation.deprecated.deprecate", "matplotlib._api.classproperty.__init__"], "matplotlib.backend_bases.FigureCanvasBase": ["<builtin>.property", "contextlib.contextmanager", "matplotlib._api.deprecation.deprecated", "matplotlib._api.deprecation.deprecated.deprecate", "functools.cache", "<builtin>.classmethod", "matplotlib._api.classproperty.__init__"], "matplotlib.backend_bases.FigureManagerBase": ["<builtin>.classmethod"], "matplotlib.backend_bases._Mode": ["<builtin>.property"], "matplotlib.backend_bases.NavigationToolbar2": ["collections.namedtuple", "<builtin>.staticmethod", "contextlib.contextmanager"], "matplotlib.backend_bases._Backend": ["<builtin>.classmethod", "<builtin>.staticmethod"], "matplotlib.image._ImageBase": ["matplotlib.artist.allow_rasterization", "<builtin>.staticmethod"], "matplotlib.image.NonUniformImage": ["matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.offsetbox.OffsetBox": ["matplotlib.offsetbox._compat_get_offset"], "matplotlib.offsetbox._compat_get_offset": ["functools.wraps"], "matplotlib.offsetbox.DrawingArea": ["<builtin>.property"], "matplotlib.offsetbox.AnchoredOffsetbox": ["matplotlib.offsetbox._compat_get_offset"], "matplotlib.offsetbox.AnnotationBbox": ["<builtin>.property", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.offsetbox.DraggableBase": ["<builtin>.property"], "matplotlib.axis": ["matplotlib.artist.ArtistInspector.get_setters", "logging.getLogger", "matplotlib.artist.ArtistInspector.__init__", "<builtin>.list", "<map>.values"], "matplotlib.units": [], "matplotlib.units.ConversionInterface": ["<builtin>.staticmethod"], "matplotlib.units.DecimalConverter": ["<builtin>.staticmethod"], "matplotlib.axis.Tick": ["<builtin>.property", "matplotlib.artist.allow_rasterization", "matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.deprecated", "matplotlib._api.deprecation.deprecated.deprecate", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.axis.Ticker": ["<builtin>.property"], "matplotlib.axis.Axis": ["<builtin>.property", "matplotlib.artist.allow_rasterization", "matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib.axis._LazyTickList.__init__", "<builtin>.staticmethod", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.axis._LazyTickList.__init__": [], "matplotlib.axis.XAxis": ["matplotlib.axis._make_getset_interval"], "matplotlib.axis._make_getset_interval": [], "matplotlib.axis.YAxis": ["matplotlib.axis._make_getset_interval"], "matplotlib.gridspec": ["logging.getLogger"], "matplotlib.gridspec.GridSpecBase": ["<builtin>.property", "<builtin>.staticmethod"], "matplotlib.gridspec.SubplotSpec": ["<builtin>.property", "<builtin>.staticmethod"], "matplotlib.spines": [], "matplotlib.spines.Spine": ["matplotlib.artist.allow_rasterization", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__", "<builtin>.classmethod"], "matplotlib.spines.Spines": ["<builtin>.classmethod"], "matplotlib.table": ["matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.table.Cell": ["<builtin>.property", "matplotlib.artist.allow_rasterization", "matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.table.Table": ["<builtin>.property", "matplotlib.artist.allow_rasterization"], "matplotlib.axes._base._process_plot_var_args": ["<builtin>.frozenset"], "matplotlib.axes._base._AxesBase": ["matplotlib.axes._base._axis_method_wrapper.__init__", "<builtin>.property", "matplotlib.artist.allow_rasterization", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__", "matplotlib.cbook.Grouper.__init__", "matplotlib._api.deprecation.make_keyword_only.wrapper", "matplotlib._api.deprecation.make_keyword_only"], "matplotlib.cbook.Grouper.__init__": ["weakref.WeakKeyDictionary.__init__", "<builtin>.len", "_weakrefset.WeakSet.__init__"], "matplotlib.axes._base._axis_method_wrapper.__init__": ["inspect.getdoc", "<map>.items", "append", "<builtin>.getattr"], "matplotlib._api.deprecation.make_keyword_only": ["functools.wraps", "index", "inspect.signature"], "index": [], "matplotlib._api.deprecation.make_keyword_only.wrapper": ["matplotlib._api.deprecation.warn_deprecated", "<builtin>.len"], "matplotlib.axes._axes": ["logging.getLogger"], "matplotlib.category": ["logging.getLogger"], "matplotlib.category.StrCategoryConverter": ["<builtin>.staticmethod"], "matplotlib.category.StrCategoryFormatter": ["<builtin>.staticmethod"], "matplotlib.category.UnitData": ["<builtin>.staticmethod"], "matplotlib.contour": ["matplotlib._docstring.Substitution.update"], "matplotlib.contour.ContourLabeler": ["matplotlib._api.deprecation.deprecated", "matplotlib._api.deprecation.deprecated.deprecate"], "matplotlib.contour.ContourSet": ["matplotlib._api.deprecation.deprecated", "<builtin>.property", "matplotlib._api.deprecation.deprecated.deprecate"], "matplotlib.dates": ["<builtin>.float", "logging.getLogger", "datetime.date.toordinal", "numpy.lib.function_base.vectorize.__init__"], "dateutil.rrule": ["dateutil.rrule.weekday.__init__", "<builtin>.range", "<builtin>.tuple", "<builtin>.list"], "dateutil._common": [], "fractions": ["re.compile"], "fractions.Fraction": ["<builtin>.property", "fractions.Fraction._operator_fallbacks", "<builtin>.classmethod"], "fractions.Fraction._operator_fallbacks": [], "dateutil.rrule.weekday.__init__": ["<builtin>.ValueError", "<builtin>.super"], "dateutil.rrule.rruleset": ["dateutil.rrule._invalidates_cache"], "dateutil.rrule._invalidates_cache": ["functools.wraps"], "dateutil.relativedelta": ["<builtin>.range", "<builtin>.tuple", "dateutil._common.weekday.__init__"], "dateutil._common.weekday.__init__": [], "dateutil.relativedelta.relativedelta": ["<builtin>.property"], "matplotlib.dates.RRuleLocator": ["<builtin>.staticmethod"], "matplotlib.dates.DateConverter": ["<builtin>.staticmethod"], "matplotlib.dates._SwitchableDateConverter": ["<builtin>.staticmethod"], "matplotlib.legend": ["matplotlib._docstring.Substitution.update"], "matplotlib.container": [], "matplotlib.legend_handler": [], "matplotlib.legend_handler.HandlerStepPatch": ["<builtin>.staticmethod"], "matplotlib.legend.Legend": ["matplotlib.legend_handler.HandlerStem.__init__", "<builtin>.property", "matplotlib.artist.allow_rasterization", "matplotlib.legend_handler.HandlerPatch.__init__", "matplotlib.legend_handler.HandlerErrorbar.__init__", "matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib.legend_handler.HandlerRegularPolyCollection.__init__", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__", "matplotlib.legend_handler.HandlerTuple.__init__", "<builtin>.classmethod", "<builtin>.staticmethod", "matplotlib._api.deprecation.rename_parameter"], "matplotlib.legend_handler.HandlerStem.__init__": ["<builtin>.super"], "matplotlib.legend_handler.HandlerErrorbar.__init__": ["<builtin>.super"], "matplotlib.legend_handler.HandlerPatch.__init__": ["<builtin>.super"], "matplotlib.legend_handler.HandlerRegularPolyCollection.__init__": ["<builtin>.super"], "matplotlib.legend_handler.HandlerTuple.__init__": ["<builtin>.super"], "matplotlib.mlab": ["matplotlib._docstring.Substitution.update", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.quiver": ["matplotlib._docstring.Substitution.update"], "matplotlib.quiver.QuiverKey": ["<builtin>.property", "matplotlib.artist.allow_rasterization"], "matplotlib.quiver.Quiver": ["matplotlib._docstring.Substitution.__init__", "matplotlib.artist.allow_rasterization"], "matplotlib._docstring.Substitution.__init__": ["<builtin>.TypeError"], "matplotlib.quiver.Barbs": ["matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.stackplot": [], "matplotlib.streamplot": [], "matplotlib.streamplot.Grid": ["<builtin>.property"], "matplotlib.tri": [], "matplotlib.tri._triangulation": [], "matplotlib.tri._triangulation.Triangulation": ["<builtin>.property", "<builtin>.staticmethod"], "matplotlib.tri._tricontour": ["matplotlib._docstring.Substitution.__init__", "matplotlib._docstring.Substitution.update", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.tri._trifinder": [], "matplotlib.tri._triinterpolate": [], "matplotlib.tri._tritools": [], "matplotlib.tri._tritools.TriAnalyzer": ["<builtin>.property", "<builtin>.staticmethod"], "matplotlib.tri._triinterpolate.CubicTriInterpolator": ["<builtin>.staticmethod"], "matplotlib.tri._triinterpolate._ReducedHCT_Element": ["numpy.core.ones"], "matplotlib.tri._triinterpolate._DOF_estimator": ["<builtin>.staticmethod"], "matplotlib.tri._triinterpolate._Sparse_Matrix_coo": ["<builtin>.property"], "matplotlib.tri._tripcolor": [], "matplotlib.tri._triplot": [], "matplotlib.tri._trirefine": [], "matplotlib.tri._trirefine.UniformTriRefiner": ["<builtin>.staticmethod"], "matplotlib.axes._secondary_axes": ["matplotlib._docstring.Substitution.update"], "matplotlib.axes._secondary_axes.SecondaryAxis": ["matplotlib._docstring.copy.do_copy", "matplotlib._docstring.copy"], "matplotlib._docstring.copy": [], "matplotlib._docstring.copy.do_copy": [], "matplotlib.axes._axes.Axes": ["matplotlib._docstring.copy.do_copy", "matplotlib._api.deprecation.rename_parameter.wrapper", "matplotlib._api.deprecation.deprecated", "matplotlib.axes._axes._make_axes_method", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__", "matplotlib._api.deprecation.deprecated.deprecate", "matplotlib._preprocess_data.inner", "<builtin>.staticmethod", "matplotlib._preprocess_data", "matplotlib._docstring.copy", "matplotlib._api.deprecation.rename_parameter"], "matplotlib._preprocess_data": ["matplotlib._add_data_doc", "inspect.Parameter.__init__", "<builtin>.list", "append", "functools.wraps", "inspect.signature"], "matplotlib._add_data_doc": ["inspect.cleandoc", "<builtin>.map", "<builtin>.len"], "matplotlib._preprocess_data.inner": ["matplotlib._label_from_arg", "<builtin>.tuple", "matplotlib._replacer", "<builtin>.map", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__", "matplotlib.cbook.sanitize_sequence", "<map>.get"], "matplotlib.cbook.sanitize_sequence": ["<builtin>.isinstance", "<builtin>.list"], "matplotlib._replacer": ["matplotlib.cbook.sanitize_sequence", "<builtin>.isinstance"], "matplotlib._label_from_arg": ["<builtin>.isinstance"], "matplotlib.axes._axes._make_axes_method": [], "pandas.plotting._core.PlotAccessor": ["pandas.util._decorators.Substitution.__init__", "pandas.util._decorators.Appender.__init__", "<builtin>.staticmethod"], "pandas.plotting._misc": ["pandas.plotting._misc._Options.__init__"], "matplotlib.figure": ["logging.getLogger"], "matplotlib._blocking_input": [], "matplotlib.projections": ["matplotlib.projections.ProjectionRegistry.__init__", "warnings.warn", "matplotlib._docstring.Substitution.update", "matplotlib.projections.ProjectionRegistry.get_projection_names", "matplotlib.projections.ProjectionRegistry.register"], "mpl_toolkits.mplot3d": [], "matplotlib.projections.ProjectionRegistry.__init__": [], "matplotlib.projections.ProjectionRegistry.register": [], "matplotlib.projections.ProjectionRegistry.get_projection_names": ["<builtin>.sorted"], "matplotlib.colorbar": ["logging.getLogger", "matplotlib._docstring.Substitution.update", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__"], "matplotlib.colorbar.Colorbar": ["<builtin>.property"], "matplotlib.figure.FigureBase": ["matplotlib._docstring.copy.do_copy", "<builtin>.property", "matplotlib._api.deprecation.make_keyword_only", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__", "matplotlib._api.deprecation.make_keyword_only.wrapper", "matplotlib._docstring.Substitution.__init__", "<builtin>.staticmethod", "matplotlib._docstring.copy"], "matplotlib.figure.SubFigure": ["<builtin>.property"], "matplotlib.figure.Figure": ["<builtin>.property", "matplotlib.artist.allow_rasterization", "matplotlib._api.deprecation.deprecated", "matplotlib.artist._finalize_rasterization", "matplotlib._api.deprecation.deprecated.deprecate", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__", "threading.RLock"], "matplotlib.artist._finalize_rasterization": ["functools.wraps"], "pandas.plotting._misc._Options": ["contextlib.contextmanager"], "pandas.plotting._misc._Options.__init__": ["<builtin>.super"], "pandas.core.resample": ["pandas.core.resample._add_downsample_kernel"], "pandas.core.resample.Resampler": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "typing.final", "<builtin>.property", "pandas.util._decorators.Appender.__init__", "<builtin>.frozenset", "pandas.util._decorators.doc", "pandas.util._decorators.Substitution.__init__", "textwrap.dedent", "pandas.util._decorators.doc.decorator"], "pandas.core.resample._add_downsample_kernel": ["<builtin>.setattr", "<builtin>.getattr"], "pandas.core.resample._GroupByMixin": ["typing.final", "typing.no_type_check"], "typing.no_type_check": ["<builtin>.isinstance", "typing.no_type_check"], "pandas.core.resample.DatetimeIndexResampler": ["<builtin>.property"], "pandas.core.resample.DatetimeIndexResamplerGroupby": ["<builtin>.property"], "pandas.core.resample.PeriodIndexResampler": ["<builtin>.property"], "pandas.core.resample.PeriodIndexResamplerGroupby": ["<builtin>.property"], "pandas.core.resample.TimedeltaIndexResampler": ["<builtin>.property"], "pandas.core.resample.TimedeltaIndexResamplerGroupby": ["<builtin>.property"], "pandas.core.series.Series": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "<builtin>.property", "pandas.util._decorators.Appender.__init__", "<builtin>.frozenset", "pandas.core.series._coerce_method", "typing.overload", "pandas.core.accessor.CachedAccessor.__init__", "pandas.util._decorators.doc", "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg", "pandas.util._decorators.Substitution.__init__", "pandas.util._decorators.deprecate_kwarg", "textwrap.dedent", "pandas.util._decorators.doc.decorator", "<builtin>.len"], "pandas.core.series._coerce_method": [], "pandas.core.accessor.CachedAccessor.__init__": [], "pandas.core.ops.methods.add_flex_arithmetic_methods": ["pandas.core.ops.methods._get_method_wrappers", "pandas.core.ops.methods._add_methods", "pandas.core.ops.methods._create_methods", "<builtin>.any"], "pandas.core.ops.methods._get_method_wrappers": ["<builtin>.issubclass"], "pandas.core.ops.methods._create_methods": ["<builtin>.issubclass", "<map>.items", "<map>.update"], "pandas.core.ops.methods._add_methods": ["<builtin>.setattr"], "pandas.core.groupby.grouper.Grouper": ["typing.final", "<builtin>.property"], "pandas.core.groupby.grouper.Grouping": ["<builtin>.property"], "pandas.core.groupby.ops.WrappedCythonOp": ["typing.final", "<builtin>.frozenset", "functools.lru_cache.decorating_function", "functools.lru_cache", "<builtin>.classmethod"], "pandas.core.groupby.ops.BaseGrouper": ["typing.final", "<builtin>.property"], "pandas.core.groupby.ops.BinGrouper": ["<builtin>.property"], "pandas.core.window.rolling.BaseWindow": ["<builtin>.property", "<builtin>.frozenset"], "pandas.core.window.rolling.Window": ["textwrap.dedent", "pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc", "pandas.core.window.doc.create_section_header"], "pandas.core.window.doc.create_section_header": ["<builtin>.len"], "pandas.core.window.rolling.Rolling": ["pandas.core.window.doc.window_agg_numba_parameters", "pandas.util._decorators.doc", "pandas.core.window.doc.create_section_header", "textwrap.dedent", "pandas.util._decorators.doc.decorator"], "pandas.core.window.doc.window_agg_numba_parameters": ["textwrap.dedent"], "pandas.core.window.ewm.ExponentialMovingWindow": ["pandas.core.window.doc.window_agg_numba_parameters", "pandas.util._decorators.doc", "pandas.core.window.doc.create_section_header", "textwrap.dedent", "pandas.util._decorators.doc.decorator"], "pandas.core.window.expanding": [], "pandas.core.window.expanding.Expanding": ["pandas.core.window.doc.window_agg_numba_parameters", "pandas.util._decorators.doc", "pandas.core.window.doc.create_section_header", "textwrap.dedent", "pandas.util._decorators.doc.decorator"], "pandas.io.pytables": ["typing.overload", "pandas._config.config.config_prefix"], "pandas.compat.pickle_compat": ["copy.copy", "contextlib.contextmanager"], "copy.copy": ["<map>", "<builtin>.getattr", "<builtin>.type", "copy._reconstruct", "<builtin>.issubclass", "copy._copy_immutable", "<map>.get", "<builtin>.isinstance"], "<map>": [], "copy._copy_immutable": [], "copy._reconstruct": ["<builtin>.hasattr", "<builtin>.id", "<builtin>.isinstance", "copy.deepcopy", "<builtin>.len", "<builtin>.setattr"], "copy.deepcopy": ["<map>", "copy._keep_alive", "<builtin>.getattr", "copy._reconstruct", "<builtin>.id", "<builtin>.issubclass", "copy._deepcopy_atomic", "<builtin>.type", "<map>.get", "<builtin>.isinstance"], "copy._deepcopy_atomic": [], "copy._keep_alive": ["<builtin>.id"], "pandas.core.api": [], "pandas.core.tools.numeric": [], "pandas.core.computation.pytables": [], "pandas.core.computation.expr": ["pandas.core.computation.expr._compose", "<builtin>.frozenset", "<builtin>.getattr", "typing.TypeVar.__init__", "<builtin>.map", "pandas.core.computation.expr._is_type", "pandas.core.computation.expr._filter_nodes", "<builtin>.issubclass", "<builtin>.dir", "<builtin>.isinstance"], "pandas.core.computation.ops": ["<builtin>.dict", "<builtin>.zip", "<map>.update"], "pandas.core.computation.common": [], "pandas.core.computation.scope": [], "pandas.compat.chainmap": ["typing.TypeVar.__init__"], "pandas.core.computation.scope.Scope": ["<builtin>.property"], "pandas.core.computation.ops.Term": ["<builtin>.property"], "pandas.core.computation.ops.Constant": ["<builtin>.property"], "pandas.core.computation.ops.Op": ["<builtin>.property"], "pandas.core.computation.ops.UnaryOp": ["<builtin>.property"], "pandas.core.computation.parsing": [], "pandas.core.computation.expr._compose": ["<builtin>.len", "functools.reduce"], "pandas.core.computation.expr._compose2": [], "pandas.core.computation.expr._is_type": [], "pandas.core.computation.expr._filter_nodes": ["<builtin>.issubclass", "<builtin>.frozenset"], "pandas.core.computation.expr.BaseExprVisitor": ["<builtin>.dict", "<builtin>.zip"], "pandas.core.computation.expr.PandasExprVisitor": ["pandas.core.computation.expr._compose"], "pandas.core.computation.expr.Expr": ["<builtin>.property"], "pandas.core.computation.pytables.Term": ["<builtin>.property"], "pandas.core.computation.pytables.BinOp": ["<builtin>.property"], "pandas.io.pytables.HDFStore": ["<builtin>.property"], "pandas.io.pytables.IndexCol": ["<builtin>.property"], "pandas.io.pytables.GenericIndexCol": ["<builtin>.property"], "pandas.io.pytables.DataCol": ["<builtin>.property", "<builtin>.classmethod"], "pandas.io.pytables.DataIndexableCol": ["<builtin>.classmethod"], "pandas.io.pytables.Fixed": ["<builtin>.property"], "pandas.io.pytables.GenericFixed": ["<map>.items", "<builtin>.property"], "pandas.io.pytables.SeriesFixed": ["<builtin>.property"], "pandas.io.pytables.BlockManagerFixed": ["<builtin>.property"], "pandas.io.pytables.Table": ["<builtin>.property", "<builtin>.classmethod", "<builtin>.staticmethod"], "pandas.io.pytables.AppendableFrameTable": ["<builtin>.property", "<builtin>.classmethod"], "pandas.io.pytables.AppendableSeriesTable": ["<builtin>.property", "<builtin>.classmethod"], "pandas.io.pytables.GenericTable": ["<builtin>.property"], "pandas.io.pytables.AppendableMultiFrameTable": ["<builtin>.property", "re.compile"], "pandas.core.generic.NDFrame": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "typing.final", "<builtin>.property", "pandas.util._decorators.rewrite_axis_style_signature", "<builtin>.frozenset", "pandas.util._decorators.rewrite_axis_style_signature.decorate", "typing.overload", "pandas.util._decorators.doc", "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg", "pandas.util._decorators.deprecate_kwarg", "<builtin>.classmethod", "<builtin>.set", "pandas.util._decorators.doc.decorator"], "pandas.util._decorators.rewrite_axis_style_signature": [], "pandas.util._decorators.rewrite_axis_style_signature.decorate": ["typing.cast", "inspect.Parameter.__init__", "append", "inspect.Signature.__init__", "functools.wraps"], "pandas.core.groupby.numba_": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "pandas.core.groupby.indexing": [], "pandas.core.groupby.groupby.BaseGroupBy": ["typing.final", "<builtin>.property", "pandas.util._decorators.Appender.__init__", "<builtin>.frozenset", "pandas.util._decorators.Substitution.__init__", "textwrap.dedent"], "pandas.core.groupby.groupby.GroupBy": ["typing.final", "<builtin>.property", "pandas.util._decorators.Appender.__init__", "contextlib.contextmanager", "pandas.util._decorators.doc", "pandas.util._decorators.Substitution.__init__", "pandas.util._decorators.doc.decorator"], "pandas.core.groupby.generic.SeriesGroupBy": ["pandas.util._decorators.Appender.__init__", "pandas.util._decorators.doc", "pandas.util._decorators.Substitution.__init__", "textwrap.dedent", "pandas.util._decorators.doc.decorator"], "pandas.core.groupby.generic.DataFrameGroupBy": ["pandas.util._decorators.Appender.__init__", "pandas.util._decorators.doc", "pandas.util._decorators.Substitution.__init__", "textwrap.dedent", "pandas.util._decorators.doc.decorator"], "pandas.core.apply.Apply": ["abc.abstractmethod"], "pandas.core.apply.NDFrameApply": ["<builtin>.property"], "pandas.core.apply.FrameApply": ["<builtin>.property", "abc.abstractmethod"], "pandas.core.apply.FrameRowApply": ["<builtin>.property"], "pandas.core.apply.FrameColumnApply": ["<builtin>.property"], "pandas.core.reshape.melt": ["pandas.util._decorators.deprecate_kwarg", "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg", "pandas.util._decorators.Appender.__init__"], "pandas.core.reshape.util": [], "pandas.core.interchange.dataframe_protocol": [], "pandas.core.interchange.dataframe_protocol.Buffer": ["<builtin>.property", "abc.abstractmethod"], "pandas.core.interchange.dataframe_protocol.Column": ["<builtin>.property", "abc.abstractmethod"], "pandas.core.interchange.dataframe_protocol.DataFrame": ["<builtin>.property", "abc.abstractmethod"], "pandas.io.formats.style": ["pandas.compat._optional.import_optional_dependency", "contextlib.contextmanager"], "pandas.io.formats.style_render": ["pandas.compat._optional.import_optional_dependency"], "pandas.api.types": [], "pandas.core.dtypes.api": [], "markupsafe": ["typing_extensions.ParamSpec.__init__", "typing.TypeVar.__init__"], "typing_extensions.ParamSpec.__init__": ["<builtin>.bool", "typing._type_check", "typing_extensions._set_default", "typing_extensions._caller"], "typing_extensions._set_default": [], "typing_extensions._caller": [], "markupsafe.Markup": ["markupsafe._simple_escaping_wrapper", "<builtin>.classmethod"], "markupsafe._simple_escaping_wrapper": ["functools.wraps"], "markupsafe._native": [], "pandas.io.formats.style_render.Tooltips": ["<builtin>.property"], "matplotlib.pyplot": ["matplotlib.RcParams._get_backend_or_none", "typing_extensions.ParamSpec.__init__", "matplotlib._api.deprecation.deprecated", "typing.TypeVar.__init__", "logging.getLogger", "typing.overload", "matplotlib._docstring._ArtistPropertiesSubstitution.__init__", "matplotlib._api.deprecation.deprecated.deprecate", "matplotlib.pyplot._copy_docstring_and_deprecators", "matplotlib.cbook._get_running_interactive_framework", "matplotlib.backends.registry.BackendRegistry.list_builtin", "matplotlib.RcParams._set", "<builtin>.set"], "matplotlib.style": [], "matplotlib.style.core": ["matplotlib.get_data_path", "contextlib.contextmanager", "logging.getLogger", "<builtin>.map", "<builtin>.sorted", "matplotlib._docstring.Substitution.__init__", "matplotlib.style.core.reload_library", "ntpath.join", "posixpath.join", "matplotlib.style.core.read_style_directory", "matplotlib.get_configdir"], "matplotlib.style.core.read_style_directory": ["warnings.catch_warnings.__init__", "<builtin>.dict", "pathlib.Path.glob", "matplotlib._rc_params_in_file"], "pathlib.Path.glob": ["<builtin>.tuple", "<builtin>.NotImplementedError", "pathlib._make_selector", "<builtin>.ValueError", "pathlib._Selector.select_from"], "pathlib._make_selector": ["pathlib._is_wildcard_pattern", "pathlib._PreciseSelector.__init__", "pathlib._RecursiveWildcardSelector.__init__", "pathlib._WildcardSelector.__init__", "<builtin>.ValueError"], "pathlib._is_wildcard_pattern": [], "pathlib._RecursiveWildcardSelector.__init__": ["pathlib._Selector.__init__"], "pathlib._Selector.__init__": ["pathlib._make_selector"], "pathlib._WildcardSelector.__init__": ["pathlib._Selector.__init__"], "pathlib._PreciseSelector.__init__": ["pathlib._Selector.__init__"], "pathlib._Selector.select_from": ["<builtin>.iter", "<builtin>.type"], "matplotlib.style.core.reload_library": ["<builtin>.sorted", "<map>.keys", "<map>.update", "<map>.clear"], "matplotlib.typing": ["typing.TypeVar.__init__"], "matplotlib.pyplot._copy_docstring_and_deprecators": [], "matplotlib.RcParams._get_backend_or_none": ["matplotlib.RcParams._get"], "matplotlib.backends.registry.BackendRegistry.list_builtin": ["<map>.items"], "matplotlib.cbook._get_running_interactive_framework": [], "pandas.io.formats.style.Styler": ["typing.overload", "pandas.util._decorators.doc", "pandas.util._decorators.Substitution.__init__", "<builtin>.classmethod", "pandas.util._decorators.doc.decorator"], "pandas.core.frame.DataFrame": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "<builtin>.property", "pandas.util._decorators.rewrite_axis_style_signature", "pandas.util._decorators.Appender.__init__", "<builtin>.frozenset", "pandas.util._decorators.rewrite_axis_style_signature.decorate", "typing.overload", "pandas.core.accessor.CachedAccessor.__init__", "pandas.util._decorators.doc", "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg", "pandas.util._decorators.Substitution.__init__", "<builtin>.classmethod", "pandas.util._decorators.deprecate_kwarg", "textwrap.dedent", "pandas.util._decorators.doc.decorator", "<builtin>.len"], "pandas.core.generic.NDFrame._add_numeric_operations": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "pandas.core.generic._doc_params", "pandas.util._decorators.doc", "pandas.util._decorators.doc.decorator", "<builtin>.setattr"], "pandas.core.generic._doc_params": ["<builtin>.enumerate"], "pandas.core.arrays._mixins.NDArrayBackedExtensionArray": ["typing.overload", "pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc", "<builtin>.classmethod"], "pandas.core.array_algos.take._view_wrapper": [], "pandas.core.algorithms.SelectN": ["typing.final", "<builtin>.staticmethod"], "pandas.core.arrays.sparse.dtype": [], "pandas.core.arrays.sparse.dtype.SparseDtype": ["<builtin>.property", "<builtin>.classmethod", "<builtin>.staticmethod"], "scipy.sparse": ["scipy._lib._testutils.PytestTester.__init__", "<builtin>.dir", "warnings.filterwarnings"], "scipy.sparse._base": ["<builtin>.frozenset"], "scipy._lib._util": ["contextlib.contextmanager", "typing.TypeVar.__init__", "numpy.lib._version.NumpyVersion.__init__", "warnings.catch_warnings.__init__", "collections.namedtuple"], "scipy._lib._array_api": [], "scipy._lib.array_api_compat": [], "scipy._lib.array_api_compat.common": [], "scipy._lib.array_api_compat.common._helpers": [], "scipy._lib.array_api_compat.numpy": ["<builtin>.__import__"], "scipy._lib.array_api_compat.numpy._aliases": ["scipy._lib.array_api_compat._internal.get_xp.inner", "<builtin>.hasattr", "scipy._lib.array_api_compat._internal.get_xp"], "scipy._lib.array_api_compat.common._aliases": [], "scipy._lib.array_api_compat.common._typing": ["typing.TypeVar.__init__"], "scipy._lib.array_api_compat._internal": [], "scipy._lib.array_api_compat._internal.get_xp": [], "scipy._lib.array_api_compat._internal.get_xp.inner": ["functools.wraps", "inspect.signature"], "scipy._lib.array_api_compat.numpy.linalg": ["scipy._lib.array_api_compat._internal.get_xp.inner", "<builtin>.hasattr", "scipy._lib.array_api_compat._internal.get_xp"], "scipy._lib.array_api_compat.common._linalg": [], "numpy.lib._version.NumpyVersion.__init__": ["<builtin>.bool", "re.match", "<builtin>.int", "<builtin>.ValueError", "<builtin>.len", "re.search"], "scipy.sparse._sputils": [], "scipy.sparse._matrix": [], "scipy.sparse._matrix.spmatrix": ["<builtin>.property"], "scipy.sparse._base._spbase": ["<builtin>.property", "<builtin>.classmethod"], "scipy.sparse._csr": [], "scipy.sparse._compressed": [], "scipy.sparse._data": ["scipy.sparse._data._create_method", "<builtin>.setattr"], "scipy.sparse._data._data_matrix": ["<builtin>.property"], "scipy.sparse._data._create_method": [], "scipy.sparse._index": [], "scipy.sparse._compressed._cs_matrix": ["<builtin>.property"], "scipy.sparse._csr._csr_base": ["<builtin>.staticmethod"], "scipy.sparse._csc": [], "scipy.sparse._csc._csc_base": ["<builtin>.staticmethod"], "scipy.sparse._lil": [], "scipy.sparse._dok": [], "scipy.sparse._dok._dok_base": ["<builtin>.classmethod"], "scipy.sparse._dok.dok_matrix": ["<builtin>.property"], "scipy.sparse._coo": [], "scipy.sparse._coo._coo_base": ["<builtin>.property"], "scipy.sparse._dia": [], "scipy.sparse._bsr": [], "scipy.sparse._bsr._bsr_base": ["<builtin>.property"], "scipy.sparse._construct": [], "scipy.sparse._extract": [], "scipy.sparse._matrix_io": ["<builtin>.dict"], "scipy": ["warnings.warn", "scipy._lib._testutils.PytestTester.__init__", "scipy._lib._pep440.parse", "scipy._lib._pep440.Version.__init__", "<builtin>.ImportError"], "scipy.__config__": ["<builtin>.bool", "scipy.__config__._cleanup", "<str>.lower"], "scipy.__config__._cleanup": ["scipy.__config__._cleanup", "<map>.items", "<builtin>.isinstance"], "scipy.version": [], "scipy._distributor_init": [], "scipy._lib._pep440": ["collections.namedtuple", "re.compile"], "scipy._lib._pep440.LegacyVersion": ["<builtin>.property"], "scipy._lib._pep440.Version": ["<builtin>.property", "re.compile"], "scipy._lib._pep440.parse": ["scipy._lib._pep440.LegacyVersion.__init__", "scipy._lib._pep440.Version.__init__"], "scipy._lib._pep440.Version.__init__": ["<builtin>.tuple", "scipy._lib._pep440._parse_local_version", "scipy._lib._pep440._parse_letter_version", "scipy._lib._pep440._cmpkey", "<builtin>.int"], "scipy._lib._pep440._parse_letter_version": ["<builtin>.int"], "scipy._lib._pep440._parse_local_version": ["<builtin>.int", "<builtin>.tuple"], "scipy._lib._pep440._cmpkey": ["<builtin>.isinstance", "<builtin>.reversed", "<builtin>.tuple", "<builtin>.list"], "scipy._lib._pep440.LegacyVersion.__init__": ["<builtin>.str", "scipy._lib._pep440._legacy_cmpkey"], "scipy._lib._pep440._legacy_cmpkey": ["<str>.startswith", "<builtin>.tuple", "pop", "append", "scipy._lib._pep440._parse_version_parts"], "scipy._lib._pep440._parse_version_parts": ["<map>.get"], "scipy._lib._ccallback": ["ctypes.CFUNCTYPE"], "scipy._lib._ccallback.LowLevelCallable": ["<builtin>.property", "<builtin>.classmethod"], "scipy._lib._testutils": ["sysconfig.get_config_var"], "sysconfig.get_config_var": ["warnings.warn", "sysconfig.get_config_vars", "<map>.get"], "scipy._lib._testutils.PytestTester.__init__": [], "scipy.sparse.csgraph": ["scipy._lib._testutils.PytestTester.__init__"], "scipy.sparse.csgraph._laplacian": [], "scipy.sparse.linalg": ["scipy._lib._testutils.PytestTester.__init__", "<builtin>.dir"], "scipy.sparse.linalg._isolve": ["scipy._lib._testutils.PytestTester.__init__"], "scipy.sparse.linalg._isolve.iterative": ["scipy._lib.deprecation._deprecate_positional_args", "scipy._lib.deprecation._deprecate_positional_args._inner_deprecate_positional_args"], "scipy.sparse.linalg._interface": [], "scipy.sparse.linalg._interface.LinearOperator": ["<builtin>.property"], "scipy.sparse.linalg._interface._AdjointMatrixOperator": ["<builtin>.property"], "scipy.sparse.linalg._isolve.utils": [], "scipy.linalg": ["scipy._lib._testutils.PytestTester.__init__", "<builtin>.dir"], "scipy.linalg._misc": [], "scipy.linalg.blas": ["scipy.linalg.blas._memoize_get_funcs"], "scipy.linalg.blas._memoize_get_funcs": ["functools.wraps"], "scipy.linalg.lapack": ["numpy.core.iinfo", "scipy.linalg.blas._memoize_get_funcs", "re.compile"], "scipy.linalg._basic": ["scipy._lib.deprecation._deprecate_positional_args", "scipy._lib.deprecation._deprecate_positional_args._inner_deprecate_positional_args", "numpy.core.multiarray.can_cast"], "scipy.linalg._decomp": ["scipy._lib.deprecation._deprecate_positional_args", "scipy._lib.deprecation._deprecate_positional_args._inner_deprecate_positional_args"], "scipy._lib.deprecation": ["<builtin>.object"], "scipy._lib.deprecation._deprecate_positional_args": ["<builtin>.ValueError", "scipy._lib.deprecation._deprecate_positional_args._inner_deprecate_positional_args"], "scipy._lib.deprecation._deprecate_positional_args._inner_deprecate_positional_args": ["functools.wraps", "append", "inspect.signature"], "scipy.linalg._decomp_svd": [], "numpy.core.multiarray.can_cast": [], "scipy.linalg._decomp_lu": ["numpy.core.multiarray.can_cast"], "scipy.linalg._decomp_ldl": [], "scipy.linalg._decomp_cholesky": [], "scipy.linalg._decomp_qr": [], "scipy.linalg._decomp_qz": [], "scipy.linalg._decomp_schur": ["numpy.core.finfo"], "numpy.core.finfo": [], "scipy.linalg._decomp_polar": [], "scipy.linalg._matfuncs": ["numpy.core.finfo"], "scipy.linalg._expm_frechet": [], "scipy.linalg._matfuncs_sqrtm": [], "scipy.linalg._special_matrices": [], "scipy.linalg._solvers": [], "scipy.linalg._procrustes": [], "scipy.linalg._sketches": [], "scipy.linalg._decomp_cossin": [], "scipy.linalg.decomp": [], "scipy.linalg.decomp_cholesky": [], "scipy.linalg.decomp_lu": [], "scipy.linalg.decomp_qr": [], "scipy.linalg.decomp_svd": [], "scipy.linalg.decomp_schur": [], "scipy.linalg.basic": [], "scipy.linalg.misc": [], "scipy.linalg.special_matrices": [], "scipy.linalg.matfuncs": [], "scipy.sparse.linalg._isolve.minres": ["scipy._lib.deprecation._deprecate_positional_args", "scipy._lib.deprecation._deprecate_positional_args._inner_deprecate_positional_args"], "scipy.sparse.linalg._isolve.lgmres": ["scipy._lib.deprecation._deprecate_positional_args", "scipy._lib.deprecation._deprecate_positional_args._inner_deprecate_positional_args"], "scipy.sparse.linalg._isolve._gcrotmk": ["scipy._lib.deprecation._deprecate_positional_args", "scipy._lib.deprecation._deprecate_positional_args._inner_deprecate_positional_args"], "scipy.sparse.linalg._isolve.lsqr": ["numpy.core.finfo"], "scipy.sparse.linalg._isolve.lsmr": [], "scipy.sparse.linalg._isolve.tfqmr": ["scipy._lib.deprecation._deprecate_positional_args", "scipy._lib.deprecation._deprecate_positional_args._inner_deprecate_positional_args"], "scipy.sparse.linalg._dsolve": ["scipy._lib._testutils.PytestTester.__init__"], "scipy.sparse.linalg._dsolve.linsolve": ["<builtin>.dict"], "scipy.sparse.linalg._dsolve._add_newdocs": ["numpy.core.function_base.add_newdoc"], "scipy.sparse.linalg._eigen": ["scipy._lib._testutils.PytestTester.__init__"], "scipy.sparse.linalg._eigen.arpack": [], "scipy.sparse.linalg._eigen.arpack.arpack": ["scipy._lib._threadsafety.ReentrancyLock.__init__", "<map>.copy"], "scipy._lib._threadsafety": [], "scipy._lib.decorator": ["inspect.getfullargspec", "scipy._lib.decorator.decorator", "re.compile", "collections.namedtuple", "<builtin>.len"], "scipy._lib.decorator.FunctionMaker": ["<builtin>.classmethod"], "inspect.getfullargspec": ["append", "<builtin>.TypeError", "inspect._signature_from_callable"], "scipy._lib.decorator.decorator": ["inspect.isclass", "scipy._lib.decorator.decorate", "scipy._lib.decorator.get_init", "inspect.isfunction", "scipy._lib.decorator.FunctionMaker.create"], "scipy._lib.decorator.decorate": ["scipy._lib.decorator.FunctionMaker.create", "<builtin>.hasattr"], "scipy._lib.decorator.FunctionMaker.create": ["<str>.strip", "scipy._lib.decorator.FunctionMaker.make", "scipy._lib.decorator.FunctionMaker.__init__", "<str>.splitlines", "<builtin>.isinstance"], "scipy._lib.decorator.FunctionMaker.__init__": ["<builtin>.TypeError", "<builtin>.enumerate", "<builtin>.getattr", "<builtin>.list", "<builtin>.hasattr", "inspect.isfunction", "inspect.getfullargspec", "<builtin>.setattr"], "<str>.splitlines": [], "scipy._lib.decorator.FunctionMaker.make": ["<builtin>.next", "<builtin>.vars", "<builtin>.print", "<builtin>.exec", "<builtin>.compile", "<builtin>.set", "<builtin>.SyntaxError", "<builtin>.NameError", "<str>.endswith", "scipy._lib.decorator.FunctionMaker.update"], "<builtin>.NameError": [], "scipy._lib.decorator.FunctionMaker.update": ["<builtin>.getattr"], "scipy._lib.decorator.get_init": [], "<map>.copy": [], "scipy.sparse.linalg._eigen.arpack.arpack.IterOpInv": ["<builtin>.property"], "scipy._lib._threadsafety.ReentrancyLock.__init__": ["threading.RLock"], "scipy.sparse.linalg._eigen.lobpcg": ["scipy._lib._testutils.PytestTester.__init__", "<builtin>.dir"], "scipy.sparse.linalg._eigen.lobpcg.lobpcg": [], "scipy.sparse.linalg._eigen._svds": [], "scipy.sparse.linalg._svdp": [], "scipy.sparse.linalg._svdp._AProd": ["<builtin>.property"], "scipy.sparse.linalg._matfuncs": [], "scipy.sparse.linalg._expm_multiply": [], "scipy.sparse.linalg._onenormest": ["scipy.sparse.linalg._onenormest._blocked_elementwise"], "scipy.sparse.linalg._onenormest._blocked_elementwise": [], "scipy.sparse.linalg._matfuncs.MatrixPowerOperator": ["<builtin>.property"], "scipy.sparse.linalg._matfuncs.ProductOperator": ["<builtin>.property"], "scipy.sparse.linalg._matfuncs._ExpmPadeHelper": ["<builtin>.property"], "scipy.sparse.linalg._norm": [], "scipy.sparse.linalg._special_sparse_arrays": [], "scipy.sparse.linalg.isolve": [], "scipy.sparse.linalg.dsolve": [], "scipy.sparse.linalg.interface": [], "scipy.sparse.linalg.eigen": [], "scipy.sparse.linalg.matfuncs": [], "scipy.sparse.base": [], "scipy.sparse.bsr": [], "scipy.sparse.compressed": [], "scipy.sparse.construct": [], "scipy.sparse.coo": [], "scipy.sparse.csc": [], "scipy.sparse.csr": [], "scipy.sparse.data": [], "scipy.sparse.dia": [], "scipy.sparse.dok": [], "scipy.sparse.extract": [], "scipy.sparse.lil": [], "scipy.sparse.sparsetools": [], "scipy.sparse.sputils": [], "pandas.core.arrays.sparse.array.SparseArray": ["typing.overload", "<builtin>.property", "<builtin>.frozenset", "<builtin>.classmethod"], "pandas.core.arrays.sparse.accessor.SparseAccessor": ["<builtin>.classmethod"], "pandas.core.arrays.sparse.accessor.SparseFrameAccessor": ["<builtin>.property", "<builtin>.classmethod", "<builtin>.staticmethod"], "pandas.core.indexes.base.Index": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "typing.final", "<builtin>.property", "pandas.util._decorators.doc.decorator", "<builtin>.frozenset", "pandas.util._decorators.Appender.__init__", "typing.overload", "pandas.util._decorators.doc", "<builtin>.classmethod", "pandas.core.accessor.CachedAccessor.__init__", "pandas.core.indexes.base._maybe_return_indexers"], "pandas.core.indexes.base._maybe_return_indexers": ["typing.cast", "functools.wraps"], "pandas.core.arrays.arrow._arrow_utils": [], "pandas.core.arrays.arrow.dtype": [], "pandas.core.arrays.arrow.dtype.ArrowDtype": ["<builtin>.property", "<builtin>.classmethod"], "pandas.core.arrays.arrow.array.ArrowExtensionArray": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "<builtin>.property", "pandas.util._decorators.doc", "<builtin>.classmethod", "pandas.util._decorators.doc.decorator"], "pandas.core.arrays.string_arrow": [], "pandas.core.arrays.string_arrow.ArrowStringArray": ["<builtin>.property", "<builtin>.classmethod"], "pandas.core.dtypes.generic.create_pandas_abc_type": ["<builtin>.classmethod", "<builtin>.type"], "pandas.core.dtypes.base.ExtensionDtype": ["<builtin>.property", "<builtin>.classmethod"], "pandas.core.dtypes.base.StorageExtensionDtype": ["<builtin>.property"], "pandas.core.dtypes.base.Registry": ["typing.overload"], "pandas.core.dtypes.base.Registry.__init__": [], "pandas.core.dtypes.dtypes.PandasExtensionDtype": ["<builtin>.classmethod"], "pandas.core.dtypes.dtypes.CategoricalDtype": ["<builtin>.property", "<builtin>.classmethod", "<builtin>.staticmethod"], "pandas.core.dtypes.dtypes.DatetimeTZDtype": ["<builtin>.property", "<builtin>.classmethod", "re.compile"], "pandas.core.dtypes.dtypes.PeriodDtype": ["<builtin>.property", "<builtin>.classmethod", "re.compile"], "pandas.core.dtypes.dtypes.IntervalDtype": ["<builtin>.property", "<builtin>.classmethod", "re.compile"], "pandas.core.dtypes.dtypes.PandasDtype": ["<builtin>.property", "<builtin>.classmethod"], "pandas.core.dtypes.dtypes.BaseMaskedDtype": ["<builtin>.property", "<builtin>.classmethod"], "pandas._typing.BaseBuffer": ["<builtin>.property"], "pandas._typing.ReadCsvBuffer": ["<builtin>.property"], "pandas.compat.pyarrow": ["pandas.util.version.Version.__init__"], "pandas.core.config_init": ["pandas._config.config.deprecate_option", "pandas._config.config.config_prefix"], "pandas._config.config.deprecate_option": [], "pandas.tseries.api": [], "pandas.core.computation.api": [], "pandas.core.computation.eval": [], "pandas.core.computation.engines": ["<builtin>.frozenset"], "pandas.core.computation.align": ["pandas.core.computation.align._filter_special_cases"], "pandas.core.computation.align._filter_special_cases": ["functools.wraps"], "pandas.core.computation.engines.AbstractEngine": ["<builtin>.property", "abc.abstractmethod"], "pandas.core.reshape.api": [], "pandas.core.reshape.encoding": [], "pandas.core.reshape.merge": ["pandas.util._decorators.Substitution.__init__", "pandas.util._decorators.Appender.__init__"], "pandas.core.reshape.pivot": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "pandas.util._decorators.Substitution.__init__", "pandas.util._decorators.Appender.__init__"], "pandas.core.reshape.tile": [], "pandas.api": [], "pandas.api.extensions": [], "pandas.api.indexers": [], "pandas.api.interchange": [], "pandas.core.interchange.from_dataframe": [], "pandas.core.interchange.column": [], "pandas.core.interchange.buffer": ["pandas.util.version.Version.__init__"], "pandas.core.interchange.buffer.PandasBuffer": ["<builtin>.property"], "pandas.core.interchange.utils": [], "pandas.core.interchange.column.PandasColumn": ["<builtin>.property"], "pandas.io": [], "pandas.io.formats": [], "pandas.io.json": [], "pandas.io.json._json": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "typing.TypeVar.__init__", "typing.overload", "pandas.util._decorators.doc", "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg", "pandas.util._decorators.deprecate_kwarg", "pandas.util._decorators.doc.decorator"], "pandas.io.json._normalize": ["pandas.util._decorators.deprecate"], "pandas.util._decorators.deprecate": ["functools.wraps", "textwrap.dedent", "<builtin>.AssertionError"], "pandas.io.json._table_schema": [], "pandas.io.parsers.readers": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "pandas.util._decorators.Appender.__init__", "textwrap.fill", "typing.overload", "<builtin>.sorted", "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg", "pandas.util._decorators.deprecate_kwarg"], "pandas.io.parsers.arrow_parser_wrapper": [], "pandas.io.parsers.base_parser": [], "pandas.io.date_converters": [], "pandas.io.parsers.base_parser.ParserBase": ["typing.final", "<builtin>.property", "typing.overload"], "pandas.io.parsers.c_parser_wrapper": [], "pandas.io.parsers.python_parser": [], "textwrap.fill": ["textwrap.TextWrapper.fill", "textwrap.TextWrapper.__init__"], "textwrap.TextWrapper.__init__": [], "textwrap.TextWrapper.fill": ["textwrap.TextWrapper.wrap"], "textwrap.TextWrapper.wrap": ["textwrap.TextWrapper._wrap_chunks", "textwrap.TextWrapper._split_chunks", "textwrap.TextWrapper._fix_sentence_endings"], "textwrap.TextWrapper._split_chunks": ["textwrap.TextWrapper._split", "textwrap.TextWrapper._munge_whitespace"], "textwrap.TextWrapper._munge_whitespace": ["<str>.translate", "<str>.expandtabs"], "textwrap.TextWrapper._split": [], "textwrap.TextWrapper._fix_sentence_endings": ["<builtin>.len"], "textwrap.TextWrapper._wrap_chunks": ["<builtin>.sum", "textwrap.TextWrapper._handle_long_word", "<builtin>.map", "append", "<builtin>.ValueError", "<builtin>.len"], "textwrap.TextWrapper._handle_long_word": ["<builtin>.any", "append", "<builtin>.len"], "<builtin>.sum": [], "pandas.io.json._json.Writer": ["<builtin>.property", "abc.abstractmethod"], "pandas.io.json._json.SeriesWriter": ["<builtin>.property"], "pandas.io.json._json.FrameWriter": ["<builtin>.property"], "pandas.io.json._json.JSONTableWriter": ["<builtin>.property"], "pandas.io.json._json.JsonReader": ["typing.overload"], "pandas.io.stata": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "pandas.util._decorators.Appender.__init__"], "pandas.io.stata.StataMissingValue": ["<builtin>.chr", "<builtin>.range", "<builtin>.property", "<builtin>.classmethod"], "pandas.io.stata.StataReader": ["<builtin>.property", "pandas.util._decorators.Appender.__init__"], "pandas.io.stata.StataWriter": ["<builtin>.staticmethod"], "pandas.io.stata.StataWriter117": ["<builtin>.staticmethod"], "pandas.tseries": [], "pandas.testing": [], "pandas._testing": ["<map>.items", "<builtin>.float", "pandas._testing.set_testing_mode", "re.compile"], "pandas._config.localization": ["contextlib.contextmanager"], "pandas._testing._io": ["pandas._testing._io.optional_args"], "pandas._testing._random": ["<builtin>.range", "<builtin>.map", "<builtin>.list"], "pandas._testing.contexts": ["contextlib.contextmanager"], "pandas._testing._io.optional_args": ["functools.wraps"], "pandas._testing._warnings": ["contextlib.contextmanager"], "pandas._testing.asserters": [], "pandas._testing.compat": [], "pandas._testing.set_testing_mode": ["warnings.simplefilter"], "pandas._testing.SubclassedSeries": ["<builtin>.property"], "pandas._testing.SubclassedDataFrame": ["<builtin>.property"], "pandas._testing.SubclassedCategorical": ["<builtin>.property"], "pandas.util._print_versions": [], "pandas.io.api": [], "pandas.io.clipboards": [], "pandas.io.excel": ["pandas.io.excel._util.register_writer"], "pandas.io.excel._base": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "pandas.util._decorators.Appender.__init__", "textwrap.fill", "typing.overload", "<builtin>.map", "pandas.util._decorators.doc", "<builtin>.sorted", "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg", "pandas.util._decorators.deprecate_kwarg", "<builtin>.max", "pandas.util._decorators.doc.decorator"], "pandas.io.excel._util": ["typing.TypeVar.__init__", "typing.overload"], "pandas.io.parsers": [], "pandas.io.excel._base.BaseExcelReader": ["<builtin>.property", "abc.abstractmethod"], "pandas.io.excel._base.ExcelWriter": ["<builtin>.property", "<builtin>.classmethod", "abc.abstractmethod"], "pandas.io.excel._odfreader": [], "pandas.io.excel._odfreader.ODFReader": ["<builtin>.property"], "pandas.io.excel._openpyxl": [], "pandas.io.excel._openpyxl.OpenpyxlWriter": ["<builtin>.property", "<builtin>.classmethod"], "pandas.io.excel._openpyxl.OpenpyxlReader": ["<builtin>.property", "pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "pandas.io.excel._pyxlsb": [], "pandas.io.excel._pyxlsb.PyxlsbReader": ["<builtin>.property", "pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "pandas.io.excel._xlrd": [], "pandas.io.excel._xlrd.XlrdReader": ["<builtin>.property", "pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "pandas.io.excel._base.ExcelFile": ["<builtin>.property"], "pandas.io.excel._odswriter": [], "pandas.io.formats.excel": [], "pandas.io.formats._color_data": [], "pandas.io.formats.css": [], "pandas.io.formats.css.CSSResolver": ["pandas.io.formats.css._side_expander", "pandas.io.formats.css._border_expander", "<map>.copy", "<map>.update"], "pandas.io.formats.css._border_expander": [], "pandas.io.formats.css._side_expander": [], "pandas.io.formats.excel.ExcelFormatter": ["<builtin>.property", "pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "pandas.io.excel._odswriter.ODSWriter": ["<builtin>.property"], "pandas.io.excel._xlsxwriter": [], "pandas.io.excel._xlsxwriter._XlsxStyler": ["<builtin>.classmethod"], "pandas.io.excel._xlsxwriter.XlsxWriter": ["<builtin>.property"], "pandas.io.excel._xlwt": [], "pandas.io.excel._xlwt.XlwtWriter": ["<builtin>.property", "<builtin>.classmethod"], "pandas.io.excel._util.register_writer": ["<builtin>.ValueError", "<builtin>.callable"], "pandas.io.feather_format": ["pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "pandas.io.gbq": [], "pandas.io.html": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "re.compile"], "pandas.io.orc": [], "pandas.io.parquet": ["pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "pandas.io.parquet.BaseImpl": ["<builtin>.staticmethod"], "pandas.io.pickle": ["pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "pandas.io.sas": [], "pandas.io.sas.sasreader": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "typing.overload", "pandas.util._decorators.doc", "pandas.util._decorators.doc.decorator"], "pandas.io.sas.sasreader.ReaderBase": ["abc.abstractmethod"], "pandas.io.spss": [], "pandas.io.sql": ["typing.overload"], "pandas.io.sql.SQLDatabase": ["<builtin>.property", "<builtin>.staticmethod", "contextlib.contextmanager"], "pandas.io.sql.SQLiteDatabase": ["<builtin>.staticmethod", "contextlib.contextmanager"], "pandas.io.xml": ["pandas.util._decorators.deprecate_nonkeyword_arguments", "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate", "pandas.util._decorators.doc.decorator", "pandas.util._decorators.doc"], "xml.etree.ElementTree": ["<builtin>.set", "re.compile", "contextlib.contextmanager"], "xml.etree.ElementPath": ["re.compile"], "pandas.util._tester": ["posixpath.dirname", "ntpath.dirname"], "pandas._version": [], "pandas._version.get_versions": ["json.loads"], "handler.handle": ["pandas.core.frame.DataFrame.__init__", "<builtin>.print"], "pandas.core.frame.DataFrame.__init__": ["typing.cast", "pandas.core.internals.construction.mgr_to_mgr", "pandas.core.internals.construction.rec_array_to_mgr", "pandas.core.dtypes.cast.construct_1d_arraylike_from_scalar", "<builtin>.isinstance", "pandas.core.dtypes.cast.infer_dtype_from_scalar", "pandas.core.internals.construction.treat_as_nested", "pandas.core.internals.construction.dict_to_mgr", "pandas.core.generic.NDFrame._init_mgr", "pandas.core.internals.construction.ndarray_to_mgr", "<builtin>.ValueError", "<builtin>.len", "<builtin>.getattr", "pandas.core.internals.construction.nested_data_to_arrays", "pandas.util._exceptions.find_stack_level", "<builtin>.list", "warnings.warn", "pandas.core.internals.construction.arrays_to_mgr", "pandas.core.generic.NDFrame.__init__", "pandas.core.dtypes.inference.is_dataclass", "pandas.core.construction.sanitize_masked_array", "pandas.core.internals.construction.dataclasses_to_dicts", "pandas._config.config.CallableDynamicDoc.__init__", "pandas.core.generic.NDFrame._validate_dtype", "pandas.core.dtypes.cast.construct_2d_arraylike_from_scalar", "pandas.core.indexes.base.ensure_index", "<builtin>.hasattr", "<builtin>.range"], "pandas.core.generic.NDFrame._validate_dtype": ["pandas.core.dtypes.common.pandas_dtype", "<builtin>.NotImplementedError"], "pandas.core.generic.NDFrame.__init__": ["<builtin>.dict", "pandas.core.flags.Flags.__init__"], "pandas.core.flags.Flags.__init__": [], "pandas.core.indexes.base.ensure_index": ["copy", "<builtin>.list", "pandas.core.indexes.multi.MultiIndex.copy", "pandas.core.indexes.base.Index._with_infer", "<builtin>.type", "<builtin>.isinstance", "pandas.core.indexes.base.Index.copy", "<builtin>.len", "pandas.core.indexes.multi.MultiIndex.from_arrays"], "pandas.core.indexes.base.Index._with_infer": ["warnings.catch_warnings.__init__"], "pandas.core.indexes.multi.MultiIndex.from_arrays": ["<builtin>.TypeError", "<builtin>.getattr", "<builtin>.list", "pandas.core.arrays.categorical.factorize_from_iterables", "<builtin>.range", "<builtin>.ValueError", "<builtin>.len"], "pandas.core.arrays.categorical.factorize_from_iterables": ["pandas.core.arrays.categorical.factorize_from_iterable", "<builtin>.zip", "<builtin>.len", "<builtin>.list"], "pandas.core.arrays.categorical.factorize_from_iterable": ["pandas.core.indexes.api.CategoricalIndex", "<builtin>.TypeError", "pandas.core.arrays.categorical.Categorical.from_codes", "pandas.core.construction.extract_array", "pandas.core.arrays.categorical.Categorical.__init__", "<builtin>.len", "pandas.core.dtypes.common.is_categorical_dtype"], "pandas.core.dtypes.common.is_categorical_dtype": ["<builtin>.isinstance", "pandas.core.dtypes.base.ExtensionDtype.is_dtype"], "pandas.core.dtypes.base.ExtensionDtype.is_dtype": ["pandas.core.dtypes.base.ExtensionDtype.construct_from_string", "<builtin>.isinstance", "<builtin>.getattr"], "pandas.core.dtypes.base.ExtensionDtype.construct_from_string": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.type"], "pandas.core.arrays.categorical.Categorical.__init__": ["pandas.core.dtypes.dtypes.CategoricalDtype._from_values_or_dtype", "pandas.core.dtypes.dtypes.CategoricalDtype.__init__", "pandas.core.common.convert_to_list_like", "pandas.core.algorithms.factorize", "pandas.core.dtypes.cast.coerce_indexer_dtype", "pandas.core.arrays.categorical.Categorical.isna", "<builtin>.isinstance", "pandas.core.dtypes.common.is_categorical_dtype", "<builtin>.super", "pandas.core.arrays.categorical._get_codes_for_values", "<builtin>.NotImplementedError", "numpy.core.numeric.where", "<builtin>.len", "pandas.core.dtypes.dtypes.CategoricalDtype.update_dtype", "pandas.util._exceptions.find_stack_level", "warnings.warn", "pandas.core.arrays.categorical.recode_for_categories", "<builtin>.TypeError", "numpy.core.ones", "pandas.core.construction.sanitize_array", "pandas.core.construction.extract_array"], "pandas.core.dtypes.dtypes.CategoricalDtype._from_values_or_dtype": ["<builtin>.isinstance", "typing.cast", "pandas.core.dtypes.dtypes.CategoricalDtype.__init__", "<builtin>.repr", "pandas.core.dtypes.base.ExtensionDtype.is_dtype", "<builtin>.ValueError"], "pandas.core.dtypes.dtypes.CategoricalDtype.__init__": ["pandas.core.dtypes.dtypes.CategoricalDtype._finalize"], "pandas.core.dtypes.dtypes.CategoricalDtype._finalize": ["pandas.core.dtypes.dtypes.CategoricalDtype.validate_categories", "pandas.core.dtypes.dtypes.CategoricalDtype.validate_ordered"], "pandas.core.dtypes.dtypes.CategoricalDtype.validate_ordered": ["<builtin>.TypeError"], "pandas.core.dtypes.dtypes.CategoricalDtype.validate_categories": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.repr", "pandas.core.indexes.base.Index._with_infer", "<builtin>.ValueError"], "pandas.core.dtypes.cast.coerce_indexer_dtype": ["<builtin>.len"], "pandas.core.dtypes.dtypes.CategoricalDtype.update_dtype": ["typing.cast", "<builtin>.isinstance", "pandas.core.dtypes.dtypes.CategoricalDtype.__init__", "<builtin>.repr", "pandas.core.dtypes.base.ExtensionDtype.is_dtype", "<builtin>.ValueError"], "pandas.core.common.convert_to_list_like": ["<builtin>.isinstance", "<builtin>.list"], "pandas.core.construction.sanitize_array": ["typing.cast", "pandas.core.dtypes.cast.construct_1d_arraylike_from_scalar", "pandas.core.construction._try_cast", "pandas.core.dtypes.cast.maybe_infer_to_datetimelike", "<builtin>.isinstance", "pandas.core.dtypes.common.is_float_dtype", "pandas.core.dtypes.common.is_integer_dtype", "<builtin>.ValueError", "<builtin>.len", "pandas.core.construction.range_to_ndarray", "pandas.util._exceptions.find_stack_level", "<builtin>.list", "warnings.warn", "pandas.core.construction._sanitize_ndim", "<builtin>.type", "pandas.core.construction.sanitize_masked_array", "<builtin>.TypeError", "pandas.core.construction._sanitize_str_dtypes", "numpy.core._ufunc_config.errstate.__init__", "<builtin>.hasattr", "pandas.core.construction.sanitize_array", "pandas.core.construction.extract_array", "pandas.core.dtypes.cast.maybe_convert_platform"], "pandas.core.construction.sanitize_masked_array": ["copy", "pandas.core.dtypes.cast.maybe_upcast", "numpy.ma.core.getmaskarray"], "numpy.ma.core.getmaskarray": ["numpy.core.fromnumeric.shape", "numpy.ma.core.make_mask_none", "<builtin>.getattr", "numpy.ma.core.getmask"], "numpy.core.fromnumeric.shape": [], "numpy.ma.core.make_mask_none": ["numpy.ma.core.make_mask_descr"], "numpy.ma.core.make_mask_descr": ["numpy.ma.core._replace_dtype_fields"], "numpy.ma.core._replace_dtype_fields": ["numpy.ma.core._replace_dtype_fields_recursive"], "numpy.ma.core._replace_dtype_fields_recursive": ["<builtin>.tuple", "numpy.ma.core._replace_dtype_fields_recursive", "<builtin>.list", "append", "<builtin>.len"], "pandas.core.dtypes.cast.maybe_upcast": ["pandas.core.dtypes.cast.maybe_promote"], "pandas.core.dtypes.cast.maybe_promote": ["pandas.core.dtypes.cast._maybe_promote", "pandas.core.dtypes.cast._maybe_promote_cached", "<builtin>.type"], "pandas.core.dtypes.cast._maybe_promote": ["pandas.core.dtypes.cast._ensure_dtype_type", "pandas.core.dtypes.common.is_object_dtype", "pandas.core.dtypes.missing.is_valid_na_for_dtype", "pandas.core.dtypes.cast.ensure_dtype_can_hold_na", "numpy.core.multiarray.min_scalar_type", "<builtin>.issubclass", "<builtin>.ValueError", "pandas.core.dtypes.missing.na_value_for_dtype", "<builtin>.isinstance", "<builtin>.str", "pandas.core.dtypes.cast.infer_dtype_from_scalar", "pandas.core.dtypes.missing.isna", "numpy.core.multiarray.can_cast"], "pandas.core.dtypes.common.is_object_dtype": ["pandas.core.dtypes.common._is_dtype_type", "pandas.core.dtypes.common.classes"], "pandas.core.dtypes.common.classes": [], "pandas.core.dtypes.common._is_dtype_type": ["pandas.core.dtypes.common.classes_and_not_datetimelike.<lambda1>", "pandas.core.dtypes.common.pandas_dtype", "pandas.core.dtypes.common.classes.<lambda1>", "<builtin>.hasattr", "<builtin>.issubclass", "<builtin>.type", "<builtin>.isinstance"], "pandas.core.dtypes.common.classes.<lambda1>": ["<builtin>.issubclass"], "pandas.core.dtypes.missing.is_valid_na_for_dtype": ["<builtin>.isinstance", "pandas.core.dtypes.missing.is_valid_na_for_dtype", "pandas.core.dtypes.missing.isna"], "pandas.core.dtypes.missing.isna": [], "pandas.core.dtypes.cast.ensure_dtype_can_hold_na": [], "pandas.core.dtypes.missing.na_value_for_dtype": ["pandas.core.dtypes.common.is_float_dtype", "pandas.core.dtypes.common.is_bool_dtype", "pandas.core.dtypes.common.is_integer_dtype", "<builtin>.isinstance", "pandas.core.dtypes.common.needs_i8_conversion"], "pandas.core.dtypes.common.needs_i8_conversion": ["<builtin>.isinstance", "pandas.core.dtypes.common.get_dtype"], "pandas.core.dtypes.common.get_dtype": ["pandas.core.dtypes.common.pandas_dtype", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.hasattr"], "pandas.core.dtypes.common.is_float_dtype": ["pandas.core.dtypes.common._is_dtype_type", "pandas.core.dtypes.common.classes"], "pandas.core.dtypes.common.is_integer_dtype": ["pandas.core.dtypes.common.classes_and_not_datetimelike", "pandas.core.dtypes.common._is_dtype_type"], "pandas.core.dtypes.common.classes_and_not_datetimelike": [], "pandas.core.dtypes.common.classes_and_not_datetimelike.<lambda1>": ["<builtin>.issubclass"], "pandas.core.dtypes.common.is_bool_dtype": ["<builtin>.issubclass", "<builtin>.isinstance", "pandas.core.dtypes.common.get_dtype", "<builtin>.getattr"], "numpy.core.multiarray.min_scalar_type": [], "pandas.core.dtypes.cast.infer_dtype_from_scalar": ["<builtin>.isinstance", "pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__", "<builtin>.type", "<builtin>.ValueError", "pandas.core.dtypes.cast.infer_dtype_from_scalar"], "pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.type"], "pandas.core.dtypes.cast._ensure_dtype_type": [], "pandas.core.dtypes.cast._maybe_promote_cached": ["pandas.core.dtypes.cast._maybe_promote"], "pandas.core.construction.extract_array": [], "pandas.core.construction.range_to_ndarray": ["pandas.core.dtypes.cast.construct_1d_object_array_from_listlike", "<builtin>.list"], "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike": ["<builtin>.len"], "pandas.core.dtypes.cast.construct_1d_arraylike_from_scalar": ["pandas.core.dtypes.common.ensure_str", "pandas.core.dtypes.cast._maybe_unbox_datetimelike_tz_deprecation", "pandas.core.dtypes.common.is_integer_dtype", "<builtin>.isinstance", "pandas.core.dtypes.cast.infer_dtype_from_scalar", "pandas.core.dtypes.missing.isna"], "pandas.core.dtypes.cast._maybe_unbox_datetimelike_tz_deprecation": ["pandas.util._exceptions.find_stack_level", "pandas.core.dtypes.cast.maybe_box_datetimelike", "warnings.warn", "pandas.core.dtypes.cast._maybe_unbox_datetimelike", "<builtin>.isinstance"], "pandas.core.dtypes.cast.maybe_box_datetimelike": ["<builtin>.isinstance"], "pandas.core.dtypes.cast._maybe_unbox_datetimelike": ["pandas.core.dtypes.cast._disallow_mismatched_datetimelike", "<builtin>.isinstance", "pandas.core.dtypes.missing.is_valid_na_for_dtype", "<builtin>.TypeError"], "pandas.core.dtypes.cast._disallow_mismatched_datetimelike": ["<builtin>.TypeError", "<builtin>.repr", "<builtin>.getattr"], "pandas.core.dtypes.common.ensure_str": ["<builtin>.isinstance", "<builtin>.str"], "pandas.core.dtypes.cast.maybe_convert_platform": ["pandas.core.dtypes.cast.construct_1d_object_array_from_listlike", "pandas.core.dtypes.cast", "<builtin>.isinstance"], "pandas.core.dtypes.cast.maybe_infer_to_datetimelike": ["<builtin>.TypeError", "pandas.util._exceptions.find_stack_level", "warnings.warn", "pandas.core.dtypes.cast.maybe_infer_to_datetimelike.try_timedelta", "<builtin>.type", "pandas.core.dtypes.cast.maybe_infer_to_datetimelike.try_datetime", "<builtin>.isinstance", "<builtin>.len", "pandas.core.dtypes.missing.isna"], "pandas.core.dtypes.cast.maybe_infer_to_datetimelike.try_timedelta": [], "pandas.core.dtypes.cast.maybe_infer_to_datetimelike.try_datetime": ["pandas.core.arrays.datetimes.sequence_to_datetimes"], "pandas.core.arrays.datetimes.sequence_to_datetimes": ["pandas.core.arrays.datetimes._sequence_to_dt64ns", "pandas.core.arrays.datetimes.DatetimeArray._simple_new", "pandas.core.arrays.datetimes.tz_to_dtype"], "pandas.core.arrays.datetimes._sequence_to_dt64ns": ["pandas.core.dtypes.common.is_object_dtype", "pandas.core.arrays.datetimes.objects_to_datetime64ns", "pandas.core.dtypes.common.is_datetime64tz_dtype", "<builtin>.getattr", "pandas.core.arrays.datetimes.maybe_convert_dtype", "pandas.core.dtypes.common.is_datetime64_dtype", "pandas.core.dtypes.common.is_string_dtype", "pandas.core.arrays.datetimes.validate_tz_from_dtype", "pandas.core.arrays.datetimes._maybe_infer_tz", "<builtin>.type", "pandas.core.dtypes.common.is_sparse", "<builtin>.isinstance", "pandas.core.arrays.datetimelike.ensure_arraylike_for_datetimelike", "pandas.core.arrays.datetimes._validate_dt64_dtype"], "pandas.core.arrays.datetimes._validate_dt64_dtype": ["pandas.core.dtypes.common.is_dtype_equal", "<builtin>.isinstance", "typing.cast", "<builtin>.getattr", "pandas.core.dtypes.common.pandas_dtype", "pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__", "<builtin>.ValueError"], "pandas.core.dtypes.common.is_dtype_equal": ["pandas.core.dtypes.common.is_dtype_equal", "<builtin>.isinstance", "pandas.core.dtypes.common.get_dtype"], "pandas.core.arrays.datetimes.validate_tz_from_dtype": ["<builtin>.isinstance", "<builtin>.getattr", "pandas.core.dtypes.common.is_datetime64_dtype", "<builtin>.ValueError", "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_from_string"], "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_from_string": ["<builtin>.isinstance", "<builtin>.TypeError", "pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__", "<builtin>.type"], "pandas.core.dtypes.common.is_datetime64_dtype": ["<builtin>.isinstance", "pandas.core.dtypes.common._is_dtype_type", "pandas.core.dtypes.common.classes"], "pandas.core.arrays.datetimelike.ensure_arraylike_for_datetimelike": ["<builtin>.TypeError", "numpy.core.numeric.ndim", "<builtin>.list", "<builtin>.hasattr", "pandas.core.construction.extract_array", "<builtin>.isinstance"], "numpy.core.numeric.ndim": [], "pandas.core.arrays.datetimes.maybe_convert_dtype": ["pandas.core.dtypes.common.is_datetime64tz_dtype", "<builtin>.TypeError", "pandas.core.dtypes.common.is_timedelta64_dtype", "pandas.core.dtypes.common.is_extension_array_dtype", "pandas.util._exceptions.find_stack_level", "<builtin>.hasattr", "pandas.core.dtypes.common.is_period_dtype", "warnings.warn", "pandas.core.dtypes.common.is_bool_dtype", "pandas.core.dtypes.common.is_float_dtype", "<builtin>.len"], "pandas.core.dtypes.common.is_timedelta64_dtype": ["<builtin>.isinstance", "pandas.core.dtypes.common._is_dtype_type", "pandas.core.dtypes.common.classes"], "pandas.core.dtypes.common.is_period_dtype": ["<builtin>.isinstance", "pandas.core.dtypes.dtypes.PeriodDtype.is_dtype"], "pandas.core.dtypes.dtypes.PeriodDtype.is_dtype": ["<builtin>.isinstance", "pandas.core.dtypes.dtypes.PeriodDtype._parse_dtype_strict", "<builtin>.super"], "pandas.core.dtypes.dtypes.PeriodDtype._parse_dtype_strict": ["<builtin>.ValueError", "<builtin>.isinstance"], "pandas.core.dtypes.common.is_extension_array_dtype": ["<builtin>.isinstance", "<builtin>.getattr"], "pandas.core.dtypes.common.is_datetime64tz_dtype": ["<builtin>.isinstance", "pandas.core.dtypes.base.ExtensionDtype.is_dtype"], "pandas.core.dtypes.common.is_string_dtype": ["pandas.core.dtypes.common._is_dtype"], "pandas.core.dtypes.common._is_dtype": ["pandas.core.dtypes.common.is_string_dtype.condition", "pandas.core.dtypes.common.get_dtype"], "pandas.core.dtypes.common.is_string_dtype.condition": ["pandas.core.dtypes.common.is_string_dtype.is_excluded_dtype"], "pandas.core.dtypes.common.is_string_dtype.is_excluded_dtype": ["<builtin>.isinstance"], "pandas.core.dtypes.common.is_sparse": ["<builtin>.isinstance", "<builtin>.getattr"], "pandas.core.arrays.datetimes.objects_to_datetime64ns": ["pandas.core.dtypes.common.is_datetime64_dtype", "pandas.core.dtypes.common.is_object_dtype", "<builtin>.TypeError"], "pandas.core.arrays.datetimes._maybe_infer_tz": ["<builtin>.TypeError"], "pandas.core.arrays.datetimes.tz_to_dtype": ["pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__"], "pandas.core.arrays.datetimes.DatetimeArray._simple_new": ["<builtin>.isinstance", "<builtin>.super"], "pandas.core.construction._try_cast": ["typing.cast", "pandas.core.construction.ensure_wrapped_if_datetimelike", "pandas.core.dtypes.common.is_object_dtype", "pandas.core.dtypes.cast.sanitize_to_nanoseconds", "pandas.core.dtypes.cast.maybe_cast_to_datetime", "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike", "pandas.util._exceptions.find_stack_level", "pandas.core.arrays.datetimes.DatetimeArray._from_sequence", "pandas.core.dtypes.cast.maybe_cast_to_integer_array", "warnings.warn", "pandas.core.dtypes.cast.maybe_infer_to_datetimelike", "pandas.core.dtypes.common.is_integer_dtype", "<builtin>.isinstance", "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_array_type", "<builtin>.len"], "pandas.core.dtypes.cast.maybe_cast_to_datetime": ["pandas.core.dtypes.common.is_dtype_equal", "pandas.core.arrays.datetimes.sequence_to_datetimes", "pandas.core.dtypes.cast.maybe_infer_to_datetimelike", "<builtin>.isinstance", "pandas.core.dtypes.common.is_timedelta64_dtype", "pandas.core.dtypes.common.is_datetime64_dtype", "pandas.core.dtypes.common.is_string_dtype", "pandas.core.dtypes.astype.astype_nansafe", "<builtin>.ValueError", "pandas.core.dtypes.cast._disallow_mismatched_datetimelike", "pandas.core.dtypes.cast.sanitize_to_nanoseconds", "pandas.core.dtypes.common.is_datetime64tz_dtype", "<builtin>.getattr", "pandas.util._exceptions.find_stack_level", "warnings.warn", "pandas.core.dtypes.cast._ensure_nanosecond_dtype", "<builtin>.TypeError", "pandas.core.arrays.timedeltas.TimedeltaArray._from_sequence", "pandas.core.dtypes.cast"], "pandas.core.dtypes.cast._ensure_nanosecond_dtype": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.getattr"], "pandas.core.arrays.timedeltas.TimedeltaArray._from_sequence": ["pandas.core.arrays.timedeltas.sequence_to_td64ns", "pandas.core.arrays.timedeltas.TimedeltaArray._simple_new", "pandas.core.arrays.timedeltas._validate_td64_dtype", "pandas.core.arrays.datetimelike.validate_inferred_freq"], "pandas.core.arrays.timedeltas._validate_td64_dtype": ["pandas.core.dtypes.common.is_dtype_equal", "<builtin>.ValueError", "pandas.core.dtypes.common.pandas_dtype"], "pandas.core.arrays.timedeltas.sequence_to_td64ns": ["pandas.core.dtypes.common.is_object_dtype", "<builtin>.TypeError", "pandas.core.dtypes.common.is_timedelta64_dtype", "pandas.core.dtypes.common.is_string_dtype", "numpy.core.fromnumeric.round_", "pandas.core.arrays.timedeltas._objects_to_td64ns", "pandas.core.dtypes.common.is_float_dtype", "pandas.core.arrays.timedeltas.ints_to_td64ns", "pandas.core.dtypes.common.is_integer_dtype", "<builtin>.isinstance", "pandas.core.arrays.datetimelike.ensure_arraylike_for_datetimelike"], "numpy.core.fromnumeric.round_": ["numpy.core.fromnumeric.around"], "numpy.core.fromnumeric.around": ["numpy.core.fromnumeric._wrapfunc"], "pandas.core.arrays.timedeltas.ints_to_td64ns": [], "pandas.core.arrays.timedeltas._objects_to_td64ns": [], "pandas.core.arrays.datetimelike.validate_inferred_freq": ["<builtin>.ValueError"], "pandas.core.arrays.timedeltas.TimedeltaArray._simple_new": ["<builtin>.isinstance", "<builtin>.super", "<builtin>.type"], "pandas.core.dtypes.cast.sanitize_to_nanoseconds": [], "pandas.core.dtypes.astype.astype_nansafe": [], "pandas.core.construction.ensure_wrapped_if_datetimelike": ["<builtin>.isinstance", "pandas.core.arrays.datetimes.DatetimeArray._from_sequence", "pandas.core.arrays.timedeltas.TimedeltaArray._from_sequence"], "pandas.core.arrays.datetimes.DatetimeArray._from_sequence": ["pandas.core.arrays.datetimes.DatetimeArray._from_sequence_not_strict"], "pandas.core.arrays.datetimes.DatetimeArray._from_sequence_not_strict": ["pandas.core.arrays.datetimes.DatetimeArray._simple_new", "pandas.core.arrays.datetimes.tz_to_dtype", "pandas.core.arrays.datetimelike.maybe_infer_freq", "pandas.core.arrays.datetimelike.validate_inferred_freq", "pandas.core.arrays.datetimes._sequence_to_dt64ns", "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._validate_frequency"], "pandas.core.arrays.datetimelike.maybe_infer_freq": ["<builtin>.isinstance"], "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._validate_frequency": ["pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._generate_range", "numpy.core.numeric.array_equal", "<builtin>.ValueError", "<builtin>.str", "<builtin>.len"], "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._generate_range": ["pandas.errors.AbstractMethodError.__init__"], "pandas.errors.AbstractMethodError.__init__": ["<builtin>.ValueError"], "numpy.core.numeric.array_equal": ["<builtin>.bool"], "pandas.core.dtypes.cast.maybe_cast_to_integer_array": ["pandas.core.dtypes.common.is_unsigned_integer_dtype", "pandas.core.dtypes.common.is_object_dtype", "numpy.core.numeric.array_equal", "pandas.util._exceptions.find_stack_level", "warnings.warn", "<builtin>.ValueError", "pandas.core.dtypes.common.is_float_dtype", "pandas.core.dtypes.common.is_integer_dtype", "<builtin>.isinstance", "<builtin>.OverflowError"], "<builtin>.OverflowError": [], "pandas.core.dtypes.common.is_unsigned_integer_dtype": ["pandas.core.dtypes.common.classes_and_not_datetimelike", "pandas.core.dtypes.common._is_dtype_type"], "pandas.core.construction._sanitize_ndim": ["<builtin>.isinstance", "pandas.core.dtypes.common.is_object_dtype", "pandas.core.common.asarray_tuplesafe", "<builtin>.getattr", "pandas.core.arrays.datetimes.DatetimeArray._from_sequence", "pandas.core.construction._maybe_repeat", "<builtin>.ValueError", "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_array_type"], "pandas.core.common.asarray_tuplesafe": [], "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_array_type": [], "pandas.core.construction._maybe_repeat": ["<builtin>.len"], "pandas.core.construction._sanitize_str_dtypes": ["<builtin>.issubclass", "numpy.core.fromnumeric.all", "pandas.core.dtypes.missing.isna"], "pandas.core.arrays.categorical.Categorical.isna": [], "numpy.core.numeric.where": [], "pandas.core.arrays.categorical._get_codes_for_values": ["pandas.core.dtypes.cast.coerce_indexer_dtype", "pandas.core.arrays.categorical._get_codes_for_values"], "pandas.core.arrays.categorical.recode_for_categories": ["pandas.core.dtypes.cast.coerce_indexer_dtype", "<builtin>.len"], "pandas.core.algorithms.factorize": ["pandas.core.dtypes.common.is_object_dtype", "pandas.core.algorithms.factorize_array", "pandas.core.algorithms._ensure_arraylike", "pandas.core.algorithms.resolve_na_sentinel", "inspect.signature", "pandas.core.algorithms._reconstruct_data", "pandas.core.algorithms.safe_sort", "numpy.lib.function_base.append", "pandas.core.construction.extract_array", "pandas.core.dtypes.missing.na_value_for_dtype", "numpy.core.numeric.where", "warnings.catch_warnings.__init__", "pandas.core.algorithms._re_wrap_factorize", "<builtin>.isinstance", "<builtin>.len", "pandas.core.dtypes.missing.isna"], "pandas.core.algorithms.resolve_na_sentinel": ["warnings.warn", "<builtin>.ValueError", "pandas.util._exceptions.find_stack_level"], "pandas.core.algorithms._ensure_arraylike": ["pandas.core.dtypes.cast.construct_1d_object_array_from_listlike", "<builtin>.isinstance", "pandas.core.dtypes.inference.is_array_like", "<builtin>.list"], "pandas.core.dtypes.inference.is_array_like": ["<builtin>.hasattr"], "pandas.core.algorithms.factorize_array": ["pandas.core.algorithms._get_hashtable_algo", "pandas.core.algorithms._reconstruct_data", "<builtin>.len"], "pandas.core.algorithms._get_hashtable_algo": ["pandas.core.algorithms._check_object_for_strings", "pandas.core.algorithms._ensure_data"], "pandas.core.algorithms._ensure_data": ["typing.cast", "pandas.core.dtypes.common.is_object_dtype", "pandas.core.dtypes.cast.sanitize_to_nanoseconds", "pandas.core.dtypes.common.needs_i8_conversion", "pandas.core.algorithms._ensure_data", "pandas.core.dtypes.common.is_bool_dtype", "pandas.core.dtypes.common.is_float_dtype", "pandas.core.dtypes.common.is_complex_dtype", "pandas.core.construction.extract_array", "pandas.core.dtypes.common.is_integer_dtype", "<builtin>.isinstance", "pandas.core.dtypes.common.is_categorical_dtype"], "pandas.core.dtypes.common.is_complex_dtype": ["pandas.core.dtypes.common._is_dtype_type", "pandas.core.dtypes.common.classes"], "pandas.core.algorithms._check_object_for_strings": [], "pandas.core.algorithms._reconstruct_data": ["pandas.core.dtypes.common.is_datetime64_dtype", "<builtin>.isinstance", "pandas.core.dtypes.common.is_timedelta64_dtype"], "pandas.core.algorithms._re_wrap_factorize": ["pandas.core.construction.ensure_wrapped_if_datetimelike", "<builtin>.isinstance", "pandas.core.indexes.api.Index"], "pandas.core.indexes.api.Index": [], "pandas.core.algorithms.safe_sort": ["<builtin>.TypeError", "pandas.core.array_algos.take.take_nd", "pandas.core.indexes.multi.MultiIndex.take", "pandas.core.indexes.base.Index.take", "pandas.core.dtypes.common.is_extension_array_dtype", "pandas.core.algorithms._get_hashtable_algo", "<builtin>.ValueError", "pandas.core.algorithms._sort_mixed", "pandas.core.algorithms.unique", "numpy.core.multiarray.putmask", "pandas.core.algorithms._sort_tuples", "pandas.core.dtypes.cast.infer_dtype_from_array", "<builtin>.isinstance", "<builtin>.len"], "pandas.core.dtypes.cast.infer_dtype_from_array": ["pandas.core.dtypes.common.is_extension_array_dtype", "<builtin>.isinstance", "<builtin>.TypeError"], "pandas.core.algorithms._sort_mixed": ["numpy.core.numeric.concatenate", "<builtin>.isinstance", "numpy.core.fromnumeric.sort"], "numpy.core.fromnumeric.sort": [], "pandas.core.algorithms._sort_tuples": [], "pandas.core.algorithms.unique": ["pandas.core.algorithms.unique_with_mask"], "pandas.core.algorithms.unique_with_mask": ["pandas.core.algorithms._ensure_arraylike", "pandas.core.dtypes.common.is_extension_array_dtype", "pandas.core.algorithms._get_hashtable_algo", "pandas.core.algorithms._reconstruct_data", "<builtin>.len"], "pandas.core.array_algos.take.take_nd": [], "numpy.core.multiarray.putmask": [], "numpy.lib.function_base.append": ["numpy.core.fromnumeric.ravel", "numpy.core.numeric.concatenate"], "pandas.core.arrays.categorical.Categorical.from_codes": ["pandas.core.dtypes.dtypes.CategoricalDtype._from_values_or_dtype", "pandas.core.dtypes.common.is_extension_array_dtype", "pandas.core.arrays.categorical.Categorical.isna", "pandas.core.arrays.categorical.Categorical.__init__", "pandas.core.dtypes.common.is_integer_dtype", "<builtin>.ValueError", "<builtin>.len"], "pandas.core.indexes.api.CategoricalIndex": [], "pandas.core.dtypes.cast.construct_2d_arraylike_from_scalar": ["<builtin>.isinstance", "<builtin>.TypeError", "numpy.core.numeric.full", "pandas.core.dtypes.cast._maybe_unbox_datetimelike_tz_deprecation", "<builtin>.ValueError"], "pandas.core.internals.construction.ndarray_to_mgr": ["pandas.core.dtypes.common.is_dtype_equal", "pandas.core.dtypes.common.is_1d_only_ea_dtype", "<builtin>.any", "pandas.core.internals.managers.create_block_manager_from_blocks", "pandas.core.dtypes.cast.maybe_infer_to_datetimelike", "<builtin>.isinstance", "pandas.core.internals.construction._check_values_indices_shape_match", "pandas.core.construction.ensure_wrapped_if_datetimelike", "<builtin>.zip", "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype", "pandas.core.internals.array_manager.ArrayManager.__init__", "pandas.core.dtypes.common.is_integer_dtype", "<builtin>.len", "pandas.core.dtypes.common.is_object_dtype", "<builtin>.getattr", "<builtin>.list", "<builtin>.issubclass", "pandas.core.internals.construction.arrays_to_mgr", "pandas.core.internals.blocks.new_block_2d", "<builtin>.slice", "pandas.core.internals.blocks.ensure_block_shape", "pandas.core.indexes.base.ensure_index", "pandas.core.construction.sanitize_array", "<builtin>.range", "pandas.core.internals.construction._get_axes"], "pandas.core.dtypes.common.is_1d_only_ea_dtype": ["<builtin>.isinstance"], "pandas.core.internals.construction.arrays_to_mgr": ["<builtin>.isinstance", "pandas.core.internals.construction._extract_index", "pandas.core.internals.construction._homogenize", "pandas.core.indexes.base.ensure_index", "pandas.core.internals.managers.create_block_manager_from_column_arrays", "pandas.core.construction.extract_array", "pandas.core.internals.array_manager.ArrayManager.__init__", "<builtin>.ValueError", "<builtin>.len"], "pandas.core.internals.construction._extract_index": ["<builtin>.isinstance", "pandas.core.series.Series.keys", "<builtin>.getattr", "pandas.core.indexes.api.union_indexes", "<builtin>.list", "pandas.core.indexes.base.ensure_index", "pandas.core.indexes.api.default_index", "append", "<builtin>.set", "<builtin>.ValueError", "<builtin>.len"], "pandas.core.indexes.api.union_indexes": ["pandas.core.dtypes.common.is_dtype_equal", "pandas.core.indexes.api.union_indexes._find_common_index_dtype", "<builtin>.TypeError", "<builtin>.all", "pandas.core.indexes.base.get_unanimous_names", "<builtin>.AssertionError", "pandas.core.indexes.base.Index.rename", "<builtin>.sorted", "pandas.core.indexes.api._sanitize_and_check", "pandas.core.indexes.api.union_indexes._unique_indices", "<builtin>.isinstance", "<builtin>.len"], "pandas.core.indexes.api._sanitize_and_check": ["<builtin>.isinstance", "<builtin>.len", "<builtin>.list", "<builtin>.type"], "pandas.core.indexes.api.union_indexes._find_common_index_dtype": ["pandas.core.dtypes.cast.find_common_type", "<builtin>.isinstance"], "pandas.core.dtypes.cast.find_common_type": [], "pandas.core.indexes.api.union_indexes._unique_indices": ["pandas.core.indexes.api.union_indexes._unique_indices.conv"], "pandas.core.indexes.api.union_indexes._unique_indices.conv": ["<builtin>.isinstance"], "pandas.core.indexes.base.get_unanimous_names": ["<builtin>.tuple", "<builtin>.len"], "pandas.core.indexes.base.Index.rename": ["pandas.core.indexes.base.Index.set_names"], "pandas.core.indexes.base.Index.set_names": ["<builtin>.isinstance", "pandas.core.indexes.base.Index._set_names", "<builtin>.TypeError", "<builtin>.enumerate", "pandas.core.dtypes.inference.is_dict_like", "append", "pandas.core.indexes.base.Index._view", "<builtin>.ValueError"], "pandas.core.dtypes.inference.is_dict_like": ["<builtin>.isinstance", "<builtin>.all", "<builtin>.hasattr"], "pandas.core.indexes.base.Index._view": ["pandas.core.indexes.base.Index._simple_new"], "pandas.core.indexes.base.Index._simple_new": ["<builtin>.isinstance", "<builtin>.type"], "pandas.core.indexes.base.Index._set_names": ["pandas.core.dtypes.common.validate_all_hashable", "<builtin>.ValueError", "<builtin>.len", "<builtin>.type"], "pandas.core.dtypes.common.validate_all_hashable": ["pandas.core.dtypes.inference.is_hashable", "<builtin>.TypeError", "<builtin>.all"], "pandas.core.indexes.api.default_index": ["<builtin>.range", "pandas.core.indexes.range.RangeIndex._simple_new"], "pandas.core.indexes.range.RangeIndex._simple_new": ["<builtin>.isinstance"], "pandas.core.indexes.base.Index.copy": ["pandas.core.indexes.base.Index._validate_names", "pandas.core.indexes.base.Index._rename", "pandas.util._exceptions.find_stack_level", "warnings.warn", "<builtin>.type"], "pandas.core.indexes.base.Index._validate_names": ["<builtin>.TypeError", "pandas.core.dtypes.common.validate_all_hashable", "<builtin>.type", "<builtin>.ValueError", "copy.deepcopy", "<builtin>.len"], "pandas.core.indexes.base.Index._rename": ["pandas.core.indexes.base.Index._view"], "pandas.core.internals.construction._homogenize": ["pandas.core.indexes.multi.MultiIndex.astype", "<builtin>.dict", "pandas.core.common.require_length_match", "pandas.core.construction.sanitize_array", "append", "pandas.core.dtypes.cast.dict_compat", "<builtin>.isinstance"], "pandas.core.indexes.multi.MultiIndex.astype": ["pandas.core.dtypes.common.is_object_dtype", "<builtin>.TypeError", "pandas.core.indexes.multi.MultiIndex._view", "pandas.core.dtypes.common.pandas_dtype", "<builtin>.NotImplementedError", "pandas.core.dtypes.common.is_categorical_dtype"], "pandas.core.indexes.multi.MultiIndex._view": ["<builtin>.type"], "pandas.core.dtypes.cast.dict_compat": ["pandas.core.dtypes.cast.maybe_box_datetimelike"], "pandas.core.common.require_length_match": ["<builtin>.ValueError", "<builtin>.len"], "pandas.core.internals.array_manager.ArrayManager.__init__": ["pandas.core.internals.blocks.extract_pandas_array", "pandas.core.internals.array_manager.ArrayManager._verify_integrity", "pandas.core.internals.blocks.maybe_coerce_values", "pandas.core.indexes.base.ensure_index"], "pandas.core.internals.blocks.extract_pandas_array": ["<builtin>.isinstance", "numpy.core.shape_base.atleast_2d"], "numpy.core.shape_base.atleast_2d": ["append", "<builtin>.len"], "pandas.core.internals.blocks.maybe_coerce_values": ["pandas.core.construction.ensure_wrapped_if_datetimelike", "<builtin>.issubclass", "<builtin>.isinstance"], "pandas.core.internals.array_manager.ArrayManager._verify_integrity": ["<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.len", "<builtin>.type"], "pandas.core.internals.managers.create_block_manager_from_column_arrays": ["pandas.core.internals.managers._form_blocks", "pandas.core.internals.managers.construction_error", "pandas.core.internals.managers.BlockManager.__init__", "pandas.core.internals.managers.BlockManager._consolidate_inplace", "<builtin>.len"], "pandas.core.internals.managers._form_blocks": ["pandas.core.internals.managers._tuples_to_blocks_no_consolidate", "pandas.core.construction.ensure_wrapped_if_datetimelike", "<builtin>.enumerate", "pandas.core.internals.blocks.ensure_block_shape", "pandas.core.dtypes.common.is_1d_only_ea_dtype", "extend", "<builtin>.list", "<builtin>.issubclass", "pandas.core.internals.blocks.get_block_type", "pandas.core.internals.managers._stack_arrays", "append", "<builtin>.isinstance"], "pandas.core.internals.managers._tuples_to_blocks_no_consolidate": ["pandas.core.internals.blocks.new_block_2d", "pandas.core.internals.blocks.ensure_block_shape"], "pandas.core.internals.blocks.ensure_block_shape": ["typing.cast", "pandas.core.dtypes.common.is_1d_only_ea_dtype"], "pandas.core.internals.blocks.new_block_2d": ["pandas.core.internals.blocks.get_block_type", "pandas.core.internals.blocks.maybe_coerce_values"], "pandas.core.internals.blocks.get_block_type": ["<builtin>.isinstance"], "pandas.core.internals.managers._stack_arrays": ["<builtin>.zip", "<builtin>.len", "<builtin>.enumerate"], "pandas.core.internals.managers.BlockManager.__init__": ["pandas.core.internals.managers.BlockManager._verify_integrity", "pandas.core.internals.blocks.ensure_block_shape", "<builtin>.AssertionError", "pandas.util._exceptions.find_stack_level", "warnings.warn", "<builtin>.isinstance"], "pandas.core.internals.managers.BlockManager._verify_integrity": ["<builtin>.AssertionError", "<builtin>.sum", "<builtin>.len", "pandas.core.internals.managers.construction_error"], "pandas.core.internals.managers.construction_error": ["<builtin>.tuple", "<builtin>.map", "<builtin>.list", "<builtin>.ValueError", "<builtin>.len"], "pandas.core.internals.managers.BlockManager._consolidate_inplace": ["pandas.core.internals.managers.BlockManager.is_consolidated", "pandas.core.internals.managers._consolidate_with_refs", "pandas.core.internals.managers._consolidate"], "pandas.core.internals.managers.BlockManager.is_consolidated": ["pandas.core.internals.managers.BlockManager._consolidate_check"], "pandas.core.internals.managers.BlockManager._consolidate_check": ["<builtin>.set", "<builtin>.len"], "pandas.core.internals.managers._consolidate_with_refs": ["<builtin>.tuple", "pandas.core.internals.blocks.extend_blocks", "pandas.core.internals.managers._merge_blocks", "<builtin>.list", "<builtin>.sorted", "<builtin>.zip"], "pandas.core.internals.managers._merge_blocks": ["typing.cast", "numpy.core.numeric.concatenate", "<builtin>.isinstance", "numpy.core.fromnumeric.argsort", "pandas.core.internals.blocks.new_block_2d", "numpy.core.vstack", "<builtin>.len"], "numpy.core.vstack": [], "numpy.core.fromnumeric.argsort": ["numpy.core.fromnumeric._wrapfunc"], "pandas.core.internals.blocks.extend_blocks": ["append", "<builtin>.isinstance", "extend", "<builtin>.type"], "pandas.core.internals.managers._consolidate": ["<builtin>.tuple", "pandas.core.internals.blocks.extend_blocks", "pandas.core.internals.managers._merge_blocks", "<builtin>.list", "<builtin>.sorted"], "pandas.core.indexes.multi.MultiIndex.copy": ["pandas.core.indexes.base.Index._validate_names", "pandas.util._exceptions.find_stack_level", "warnings.warn", "<builtin>.type", "copy.deepcopy"], "pandas.core.internals.construction._get_axes": ["pandas.core.indexes.api.default_index", "pandas.core.indexes.base.ensure_index"], "pandas.core.internals.construction._check_values_indices_shape_match": ["<builtin>.ValueError", "<builtin>.len"], "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype": ["pandas.core.dtypes.common._is_dtype_type", "pandas.core.dtypes.common.classes"], "pandas.core.internals.managers.create_block_manager_from_blocks": ["pandas.core.internals.managers.BlockManager.__init__", "pandas.core.internals.managers.BlockManager._consolidate_inplace", "<builtin>.sum", "pandas.core.internals.managers.construction_error"], "pandas.core.internals.construction.dict_to_mgr": ["pandas.core.series.Series.__init__", "pandas.core.internals.construction._extract_index", "pandas.core.dtypes.cast.construct_1d_arraylike_from_scalar", "<builtin>.list", "pandas.core.indexes.base.ensure_index", "<builtin>.hasattr", "pandas.core.internals.construction.arrays_to_mgr", "pandas.core.construction.sanitize_array", "<map>.keys", "pandas.core.series.Series.isna", "pandas.core.dtypes.common.is_integer_dtype", "pandas.core.common.maybe_iterable_to_list", "<builtin>.range", "<builtin>.isinstance", "<builtin>.len"], "pandas.core.common.maybe_iterable_to_list": ["typing.cast", "<builtin>.isinstance", "<builtin>.list"], "pandas.core.series.Series.__init__": ["pandas.core.internals.array_manager.BaseArrayManager.copy", "<builtin>.AssertionError", "pandas.core.dtypes.inference.is_dict_like", "pandas.core.indexes.base.maybe_extract_name", "<builtin>.isinstance", "pandas.core.common.require_length_match", "<builtin>.NotImplementedError", "pandas.core.indexes.api.default_index", "pandas.core.construction.is_empty_data", "pandas.core.series.Series._init_dict", "pandas.core.internals.array_manager.SingleArrayManager.from_array", "<builtin>.ValueError", "<builtin>.len", "pandas.util._exceptions.find_stack_level", "warnings.warn", "<builtin>.type", "pandas.core.generic.NDFrame.__init__", "pandas.core.internals.array_manager.BaseArrayManager.astype", "pandas._config.config.CallableDynamicDoc.__init__", "pandas.core.internals.managers.SingleBlockManager.from_array", "pandas.core.generic.NDFrame._validate_dtype", "copy", "pandas.core.internals.managers.BaseBlockManager.astype", "pandas.core.indexes.base.ensure_index", "pandas.core.internals.managers.BaseBlockManager.copy", "pandas.core.construction.sanitize_array", "pandas.core.series.Series._set_axis", "pandas.core.common.maybe_iterable_to_list"], "pandas.core.indexes.base.maybe_extract_name": ["<builtin>.isinstance", "<builtin>.TypeError", "pandas.core.dtypes.inference.is_hashable"], "pandas.core.construction.is_empty_data": ["<builtin>.hasattr"], "pandas.core.series.Series._init_dict": ["<builtin>.tuple", "pandas.core.dtypes.common.pandas_dtype", "<builtin>.list", "pandas.core.series.Series.reindex", "pandas.core.dtypes.missing.na_value_for_dtype", "pandas.core.construction.create_series_with_explicit_dtype"], "pandas.core.construction.create_series_with_explicit_dtype": ["pandas.core.series.Series.__init__", "pandas.core.construction.is_empty_data"], "pandas.core.series.Series.reindex": ["<builtin>.TypeError", "<builtin>.len", "<builtin>.super"], "pandas.core.internals.array_manager.SingleArrayManager.from_array": ["pandas.core.internals.array_manager.SingleArrayManager.__init__"], "pandas.core.internals.array_manager.SingleArrayManager.__init__": ["pandas.core.internals.blocks.maybe_coerce_values", "pandas.core.internals.array_manager.SingleArrayManager._verify_integrity", "pandas.core.indexes.base.ensure_index", "pandas.core.internals.blocks.extract_pandas_array", "<builtin>.len"], "pandas.core.internals.array_manager.SingleArrayManager._verify_integrity": ["<builtin>.ValueError", "<builtin>.len"], "pandas.core.internals.managers.SingleBlockManager.from_array": ["pandas.core.internals.blocks.new_block", "pandas.core.internals.managers.SingleBlockManager.__init__", "<builtin>.slice", "<builtin>.len"], "pandas.core.internals.blocks.new_block": ["pandas.core.internals.blocks.get_block_type", "<builtin>.isinstance", "pandas.core.internals.blocks.maybe_coerce_values", "pandas.core.internals.blocks.check_ndim"], "pandas.core.internals.blocks.check_ndim": ["pandas.core.dtypes.common.is_1d_only_ea_dtype", "<builtin>.ValueError", "<builtin>.len"], "pandas.core.internals.managers.SingleBlockManager.__init__": ["warnings.warn", "pandas.util._exceptions.find_stack_level", "pandas.core.internals.managers._using_copy_on_write"], "pandas.core.internals.managers._using_copy_on_write": ["pandas._config.config.CallableDynamicDoc.__init__"], "pandas.core.internals.array_manager.BaseArrayManager.copy": ["<builtin>.type", "<builtin>.list", "pandas.core.internals.array_manager.BaseArrayManager.copy.copy_func"], "pandas.core.internals.array_manager.BaseArrayManager.copy.copy_func": [], "pandas.core.internals.managers.BaseBlockManager.copy": ["pandas.core.internals.managers._using_copy_on_write", "pandas.core.internals.managers.BaseBlockManager.copy.copy_func", "pandas.core.internals.managers.BaseBlockManager.apply", "<builtin>.list"], "pandas.core.internals.managers.BaseBlockManager.copy.copy_func": [], "pandas.core.internals.managers.BaseBlockManager.apply": ["pandas.core.internals.blocks.extend_blocks", "<builtin>.getattr", "pandas.core.internals.managers.BaseBlockManager._combine", "<builtin>.type", "<builtin>.isinstance", "<builtin>.callable"], "pandas.core.internals.managers.BaseBlockManager._combine": ["numpy.core.numeric.concatenate", "<builtin>.list", "<builtin>.type", "pandas.core.internals.managers.BaseBlockManager.make_empty", "<builtin>.len", "numpy.core.fromnumeric.sort"], "pandas.core.internals.managers.BaseBlockManager.make_empty": ["<builtin>.isinstance", "<builtin>.slice", "<builtin>.type"], "pandas.core.series.Series._set_axis": ["<builtin>.isinstance", "<builtin>.type", "pandas.core.indexes.base.ensure_index"], "pandas.core.series.Series.isna": ["pandas.core.generic.NDFrame.isna"], "pandas.core.generic.NDFrame.isna": ["pandas.core.generic.NDFrame.isna"], "pandas.core.series.Series.keys": [], "pandas.core.dtypes.inference.is_dataclass": ["<builtin>.isinstance", "dataclasses.is_dataclass"], "dataclasses.is_dataclass": ["<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.type"], "pandas.core.internals.construction.dataclasses_to_dicts": ["<builtin>.map", "<builtin>.list"], "pandas.core.internals.construction.treat_as_nested": ["<builtin>.isinstance", "<builtin>.len", "<builtin>.getattr"], "pandas.core.internals.construction.nested_data_to_arrays": ["pandas.core.dtypes.inference.is_named_tuple", "pandas.core.internals.construction._get_names_from_index", "pandas.core.indexes.base.ensure_index", "pandas.core.indexes.api.default_index", "<builtin>.isinstance", "<builtin>.len", "pandas.core.internals.construction.to_arrays"], "pandas.core.dtypes.inference.is_named_tuple": ["<builtin>.isinstance", "<builtin>.hasattr"], "pandas.core.internals.construction.to_arrays": ["<builtin>.tuple", "pandas.core.internals.construction._finalize_columns_and_data", "<builtin>.enumerate", "pandas.util._exceptions.find_stack_level", "<builtin>.list", "pandas.core.indexes.base.ensure_index", "warnings.warn", "<builtin>.ValueError", "pandas.core.indexes.api.default_index", "pandas.core.internals.construction._list_to_arrays", "pandas.core.internals.construction._list_of_series_to_arrays", "pandas.core.internals.construction._list_of_dict_to_arrays", "<builtin>.range", "<builtin>.isinstance", "<builtin>.len"], "pandas.core.internals.construction._list_to_arrays": ["<builtin>.isinstance"], "pandas.core.internals.construction._list_of_series_to_arrays": ["<builtin>.getattr", "numpy.core.vstack", "<builtin>.id", "pandas.core.indexes.api.default_index", "append", "pandas.core.construction.extract_array", "pandas.core.indexes.api.get_objs_combined_axis", "<builtin>.isinstance", "<builtin>.len"], "pandas.core.indexes.api.get_objs_combined_axis": ["pandas.core.indexes.api._get_combined_index"], "pandas.core.indexes.api._get_combined_index": ["pandas.core.indexes.api.union_indexes", "pandas.core.indexes.api.safe_sort_index", "pandas.core.indexes.base.ensure_index", "pandas.core.indexes.multi.MultiIndex.copy", "pandas.core.indexes.api._get_distinct_objs", "pandas.core.indexes.base.Index.copy", "<builtin>.len"], "pandas.core.indexes.api._get_distinct_objs": ["<builtin>.set", "append", "<builtin>.id"], "pandas.core.indexes.api.safe_sort_index": ["pandas.core.algorithms.safe_sort"], "pandas.core.indexes.multi.MultiIndex.take": ["append", "pandas.core.indexes.base.Index._maybe_disallow_fill", "pandas.compat.numpy.function.CompatValidator.__init__"], "pandas.core.indexes.base.Index._maybe_disallow_fill": ["<builtin>.ValueError", "<builtin>.type"], "pandas.core.indexes.base.Index.take": ["<builtin>.TypeError", "pandas.core.indexes.base.Index._maybe_disallow_fill", "pandas.core.algorithms.take", "<builtin>.isinstance", "pandas.compat.numpy.function.CompatValidator.__init__"], "pandas.core.algorithms.take": ["pandas.core.indexers.utils.validate_indices", "pandas.core.dtypes.inference.is_array_like", "pandas.core.array_algos.take.take_nd"], "pandas.core.indexers.utils.validate_indices": ["<builtin>.ValueError", "<builtin>.IndexError", "<builtin>.len"], "<builtin>.IndexError": [], "pandas.core.internals.construction._list_of_dict_to_arrays": ["<builtin>.dict", "<builtin>.list", "pandas.core.indexes.base.ensure_index", "<builtin>.any", "<builtin>.type", "<builtin>.isinstance"], "pandas.core.internals.construction._finalize_columns_and_data": ["pandas.core.internals.construction._convert_object_array", "<builtin>.list", "pandas.core.internals.construction._validate_or_indexify_columns", "<builtin>.ValueError", "<builtin>.len"], "pandas.core.internals.construction._validate_or_indexify_columns": ["<builtin>.isinstance", "<builtin>.all", "<builtin>.AssertionError", "pandas.core.indexes.api.default_index", "<builtin>.ValueError", "<builtin>.len"], "pandas.core.internals.construction._convert_object_array": ["pandas.core.internals.construction._convert_object_array.convert"], "pandas.core.internals.construction._convert_object_array.convert": ["pandas.core.dtypes.cast.maybe_cast_to_datetime"], "pandas.core.internals.construction._get_names_from_index": ["<builtin>.enumerate", "<builtin>.getattr", "<builtin>.list", "pandas.core.indexes.api.default_index", "<builtin>.any", "<builtin>.range", "<builtin>.len"], "pandas.core.internals.array_manager.BaseArrayManager.astype": ["pandas.core.internals.array_manager.BaseArrayManager.apply"], "pandas.core.internals.array_manager.BaseArrayManager.apply": ["<builtin>.enumerate", "<builtin>.getattr", "<builtin>.type", "<builtin>.isinstance", "<builtin>.callable"], "pandas.core.internals.managers.BaseBlockManager.astype": ["pandas.core.internals.managers.BaseBlockManager.apply"], "pandas.core.internals.construction.rec_array_to_mgr": ["typing.cast", "pandas.core.internals.array_manager.BaseArrayManager.copy", "pandas.core.internals.construction.reorder_arrays", "pandas.core.indexes.base.ensure_index", "pandas.core.indexes.api.default_index", "pandas.core.internals.construction.fill_masked_arrays", "numpy.ma.core.getdata", "pandas.core.internals.construction.arrays_to_mgr", "pandas.core.internals.managers.BaseBlockManager.copy", "<builtin>.isinstance", "<builtin>.len", "pandas.core.internals.construction.to_arrays"], "pandas.core.internals.construction.fill_masked_arrays": ["append", "pandas.core.dtypes.cast.maybe_upcast", "numpy.ma.core.getmaskarray"], "pandas.core.internals.construction.reorder_arrays": ["pandas.core.indexes.multi.MultiIndex.equals", "<builtin>.len", "<builtin>.enumerate"], "pandas.core.indexes.multi.MultiIndex.equals": ["pandas.core.dtypes.missing.array_equivalent", "numpy.core.numeric.array_equal", "<builtin>.range", "pandas.core.indexes.base.Index.is_", "pandas.core.indexes.base.Index._should_compare", "<builtin>.isinstance", "<builtin>.len"], "pandas.core.indexes.base.Index.is_": ["<builtin>.hasattr"], "pandas.core.indexes.base.Index._should_compare": ["pandas.core.dtypes.common.is_object_dtype", "pandas.core.indexes.base.Index.is_numeric", "pandas.core.indexes.base.unpack_nested_dtype", "pandas.core.indexes.base.Index._is_comparable_dtype", "pandas.core.indexes.base.Index.is_boolean"], "pandas.core.indexes.base.Index.is_numeric": [], "pandas.core.indexes.base.Index.is_boolean": [], "pandas.core.indexes.base.unpack_nested_dtype": ["pandas.core.dtypes.common.is_categorical_dtype"], "pandas.core.indexes.base.Index._is_comparable_dtype": ["pandas.core.dtypes.common.is_numeric_dtype"], "pandas.core.dtypes.common.is_numeric_dtype": ["pandas.core.dtypes.common.classes_and_not_datetimelike", "pandas.core.dtypes.common._is_dtype_type"], "pandas.core.dtypes.missing.array_equivalent": ["pandas.core.dtypes.common.is_dtype_equal", "pandas.core.dtypes.common.is_datetimelike_v_numeric", "pandas.core.dtypes.common.is_string_or_object_np_dtype", "numpy.core.numeric.array_equal", "pandas.core.dtypes.missing._array_equivalent_object", "pandas.core.dtypes.common.is_float_dtype", "pandas.core.dtypes.common.is_complex_dtype", "pandas.core.dtypes.missing._array_equivalent_float", "pandas.core.dtypes.missing._array_equivalent_datetimelike", "pandas.core.dtypes.common.needs_i8_conversion", "pandas.core.dtypes.missing.isna"], "pandas.core.dtypes.common.is_datetimelike_v_numeric": ["pandas.core.dtypes.common.is_datetimelike_v_numeric.is_numeric", "pandas.core.dtypes.common.needs_i8_conversion", "<builtin>.hasattr"], "pandas.core.dtypes.common.is_datetimelike_v_numeric.is_numeric": ["pandas.core.dtypes.common.is_integer_dtype", "pandas.core.dtypes.common.is_float_dtype"], "pandas.core.dtypes.common.is_string_or_object_np_dtype": [], "pandas.core.dtypes.missing._array_equivalent_object": ["numpy.core.fromnumeric.any", "<builtin>.isinstance", "<builtin>.zip", "<builtin>.str"], "pandas.core.dtypes.missing._array_equivalent_datetimelike": ["numpy.core.numeric.array_equal"], "pandas.core.dtypes.missing._array_equivalent_float": ["<builtin>.bool"], "pandas.core.generic.NDFrame._init_mgr": ["pandas.core.dtypes.common.is_dtype_equal", "copy", "pandas.core.generic.NDFrame._get_block_manager_axis", "pandas.core.indexes.base.ensure_index", "<map>.items", "<builtin>.isinstance", "<builtin>.len"], "pandas.core.generic.NDFrame._get_block_manager_axis": ["pandas.core.generic.NDFrame._get_axis_number"], "pandas.core.generic.NDFrame._get_axis_number": ["<builtin>.ValueError"], "pandas.core.internals.construction.mgr_to_mgr": ["pandas.core.internals.managers.SingleBlockManager.from_array", "copy", "<builtin>.ValueError", "pandas.core.internals.construction.arrays_to_mgr", "pandas.core.internals.array_manager.SingleArrayManager.__init__", "<builtin>.len", "pandas.core.internals.array_manager.ArrayManager.__init__", "<builtin>.range", "<builtin>.isinstance", "pandas.core.internals.managers.BlockManager.iget_values", "pandas.core.internals.array_manager.ArrayManager.iget_values"], "pandas.core.internals.array_manager.ArrayManager.iget_values": [], "pandas.core.internals.managers.BlockManager.iget_values": []}