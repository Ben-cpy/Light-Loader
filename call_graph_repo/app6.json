{
    "handler": [
        "pandas",
        "numpy"
    ],
    "numpy": [
        "numpy.random",
        "numpy.matrixlib",
        "numpy._globals",
        "<builtin>.ImportError",
        "<builtin>.int",
        "numpy.fft",
        "numpy._pytesttester",
        "numpy.lib",
        "numpy.compat",
        "<builtin>.tuple",
        "numpy.version",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy._mac_os_check",
        "numpy._sanity_check",
        "<builtin>.len",
        "numpy.__config__",
        "numpy.ma",
        "<map>.update",
        "extend",
        "remove",
        "<builtin>.RuntimeError",
        "numpy.core.getlimits._register_known_types",
        "<builtin>.str",
        "numpy._distributor_init",
        "numpy.linalg",
        "numpy.core",
        "_multiarray_umath._set_madvise_hugepage",
        "<builtin>.getattr",
        "numpy.ctypeslib",
        "numpy.polynomial"
    ],
    "numpy._globals": [
        "numpy._globals._NoValueType",
        "numpy._globals.VisibleDeprecationWarning",
        "<builtin>.globals",
        "numpy._globals.ModuleDeprecationWarning",
        "numpy._globals._CopyMode",
        "<builtin>.RuntimeError"
    ],
    "<builtin>.globals": [],
    "<builtin>.RuntimeError": [],
    "numpy._globals.ModuleDeprecationWarning": [],
    "numpy._globals.VisibleDeprecationWarning": [],
    "numpy._globals._NoValueType": [],
    "numpy._globals._CopyMode": [],
    "numpy.__config__": [],
    "<builtin>.ImportError": [],
    "numpy._distributor_init": [],
    "numpy.core": [
        "numpy.core.defchararray",
        "numpy.core._methods",
        "numpy.core._dtype_ctypes",
        "<builtin>.ImportError",
        "numpy._pytesttester",
        "numpy.version",
        "numpy.core.numeric",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.core.memmap",
        "numpy.core.einsumfunc",
        "numpy.core._add_newdocs_scalars",
        "numpy.core._machar",
        "<builtin>.type",
        "numpy.core.numerictypes",
        "<str>.format",
        "numpy.core._dtype",
        "numpy.core.records",
        "numpy.core.shape_base",
        "numpy.core._internal",
        "numpy.core.function_base",
        "numpy.core.getlimits",
        "append",
        "numpy.core._add_newdocs",
        "numpy.core.fromnumeric",
        "numpy.core.umath",
        "<builtin>.hasattr",
        "numpy.core.multiarray"
    ],
    "numpy.version": [
        "numpy._version",
        "numpy._version.get_versions"
    ],
    "numpy._version": [],
    "numpy._version.get_versions": [],
    "append": [],
    "numpy.core.multiarray": [
        "numpy.core.overrides"
    ],
    "numpy.core.overrides": [
        "numpy.compat._inspect",
        "<builtin>.bool",
        "numpy.core._multiarray_umath.add_docstring",
        "<builtin>.int"
    ],
    "numpy.compat._inspect": [],
    "<builtin>.int": [],
    "<builtin>.bool": [],
    "numpy.core._multiarray_umath.add_docstring": [],
    "numpy.core.umath": [],
    "<builtin>.hasattr": [],
    "<str>.format": [],
    "numpy.core.numerictypes": [
        "numpy.core.overrides.set_module.decorator",
        "numpy.core._string_helpers",
        "append",
        "numpy.core.numerictypes._typedict",
        "<builtin>.sorted",
        "numpy.core.numerictypes._construct_lookups",
        "<builtin>.globals",
        "numpy.core.numerictypes._register_types",
        "numpy.core.overrides",
        "<builtin>.len",
        "numpy.core._type_aliases",
        "numpy.core._dtype",
        "numpy.compat",
        "<builtin>.tuple",
        "numpy.core.multiarray",
        "numpy.core.overrides.set_module"
    ],
    "numpy.core._string_helpers": [
        "<str>.join",
        "<builtin>.range",
        "<builtin>.chr"
    ],
    "<builtin>.chr": [],
    "<builtin>.range": [],
    "<str>.join": [],
    "numpy.core._type_aliases": [
        "numpy.core._string_helpers",
        "numpy.core._type_aliases._set_up_aliases",
        "numpy.core._type_aliases._add_integer_aliases",
        "<map>.items",
        "<builtin>.isinstance",
        "numpy.core._type_aliases._add_aliases",
        "numpy.core._string_helpers.english_lower",
        "numpy.core._type_aliases._add_types",
        "numpy.core._type_aliases._set_array_types",
        "numpy.core._dtype",
        "numpy.compat",
        "numpy.core.multiarray",
        "<builtin>.list"
    ],
    "numpy.compat": [
        "numpy.compat.py3k",
        "numpy.compat._inspect",
        "extend",
        "numpy.compat._pep440"
    ],
    "numpy.compat._pep440": [
        "numpy.compat._pep440.LegacyVersion",
        "numpy.compat._pep440._BaseVersion",
        "numpy.compat._pep440.InvalidVersion",
        "numpy.compat._pep440.NegativeInfinity",
        "numpy.compat._pep440.Version",
        "numpy.compat._pep440.Infinity"
    ],
    "numpy.compat._pep440.Infinity": [],
    "numpy.compat._pep440.NegativeInfinity": [],
    "numpy.compat._pep440.InvalidVersion": [],
    "numpy.compat._pep440._BaseVersion": [],
    "numpy.compat._pep440.LegacyVersion": [
        "<builtin>.property"
    ],
    "<builtin>.property": [],
    "numpy.compat._pep440.Version": [
        "<builtin>.property"
    ],
    "numpy.compat.py3k": [
        "numpy.compat.py3k.contextlib_nullcontext"
    ],
    "numpy.compat.py3k.contextlib_nullcontext": [],
    "extend": [],
    "numpy.core._dtype": [
        "numpy"
    ],
    "numpy.core._string_helpers.english_lower": [],
    "<builtin>.isinstance": [],
    "<map>.items": [],
    "numpy.core._type_aliases._add_types": [
        "<map>.items"
    ],
    "<builtin>.list": [],
    "numpy.core._type_aliases._add_aliases": [
        "<map>.items",
        "numpy.core._type_aliases.bitname"
    ],
    "numpy.core._type_aliases.bitname": [
        "numpy.core._type_aliases._bits_of",
        "numpy.core._dtype._kind_name"
    ],
    "numpy.core._type_aliases._bits_of": [
        "<map>.values",
        "<builtin>.ValueError",
        "<builtin>.next"
    ],
    "<map>.values": [],
    "<builtin>.next": [],
    "<builtin>.ValueError": [],
    "numpy.core._dtype._kind_name": [
        "<str>.format",
        "<builtin>.RuntimeError"
    ],
    "numpy.core._type_aliases._add_integer_aliases": [
        "<builtin>.zip",
        "<builtin>.set"
    ],
    "<builtin>.set": [],
    "<builtin>.zip": [],
    "numpy.core._type_aliases._set_up_aliases": [],
    "numpy.core._type_aliases._set_array_types": [
        "numpy.core._type_aliases._add_array_type",
        "<builtin>.len"
    ],
    "numpy.core._type_aliases._add_array_type": [],
    "<builtin>.len": [],
    "numpy.core.overrides.set_module": [],
    "numpy.core.overrides.set_module.decorator": [],
    "numpy.core.numerictypes._typedict": [],
    "numpy.core.numerictypes._construct_lookups": [
        "<builtin>.len"
    ],
    "<builtin>.sorted": [],
    "<builtin>.tuple": [],
    "numpy.core.numerictypes._register_types": [],
    "numpy.core.numeric": [
        "numpy.core.shape_base",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.numeric.ComplexWarning",
        "numpy.core.overrides.set_array_function_like_doc",
        "numpy.core.arrayprint",
        "numpy.core._asarray",
        "numpy.core.numeric.extend_all",
        "numpy.core._ufunc_config",
        "numpy.core.overrides",
        "<builtin>.type",
        "numpy.core.numerictypes",
        "numpy.core.fromnumeric",
        "numpy.core.umath",
        "numpy.core._exceptions",
        "numpy.core.multiarray",
        "numpy",
        "numpy.core.overrides.set_module"
    ],
    "numpy.core.shape_base": [
        "numpy.core.numeric",
        "numpy.core.overrides",
        "numpy.core.fromnumeric",
        "<builtin>.getattr",
        "numpy.core.multiarray"
    ],
    "numpy.core.fromnumeric": [
        "numpy.core._methods",
        "numpy.core.overrides",
        "numpy.core.numerictypes",
        "numpy.core.umath",
        "numpy.core.multiarray",
        "numpy"
    ],
    "numpy.core._methods": [
        "numpy._globals",
        "numpy.core.numerictypes",
        "numpy.core.umath",
        "numpy.compat",
        "numpy.core._exceptions",
        "numpy.core.multiarray",
        "<map>.update"
    ],
    "numpy.core._exceptions": [
        "numpy.core._exceptions.TooHardError",
        "numpy.core._exceptions._UFuncOutputCastingError",
        "numpy.core._exceptions._UFuncBinaryResolutionError",
        "numpy.core._exceptions._ArrayMemoryError",
        "numpy.core._exceptions._UFuncCastingError",
        "numpy.core._exceptions.UFuncTypeError",
        "numpy.core.overrides",
        "numpy.core._exceptions._UFuncInputCastingError",
        "numpy.core._exceptions.AxisError",
        "numpy.core._exceptions._UFuncNoLoopError"
    ],
    "numpy.core._exceptions.UFuncTypeError": [],
    "numpy.core._exceptions._UFuncBinaryResolutionError": [],
    "numpy.core._exceptions._UFuncNoLoopError": [],
    "numpy.core._exceptions._UFuncCastingError": [],
    "numpy.core._exceptions._UFuncInputCastingError": [],
    "numpy.core._exceptions._UFuncOutputCastingError": [],
    "numpy.core._exceptions.TooHardError": [],
    "numpy.core._exceptions.AxisError": [],
    "numpy.core._exceptions._ArrayMemoryError": [
        "<builtin>.property",
        "<builtin>.staticmethod"
    ],
    "<builtin>.staticmethod": [],
    "<map>.update": [],
    "<builtin>.getattr": [],
    "numpy.core._ufunc_config": [
        "numpy.core.overrides.set_module.decorator",
        "numpy.core._ufunc_config.errstate",
        "numpy.core._ufunc_config._setdef",
        "numpy.core.overrides",
        "<map>.items",
        "numpy.core.umath",
        "numpy.core._ufunc_config._unspecified",
        "numpy.core.overrides.set_module"
    ],
    "numpy.core._ufunc_config._unspecified": [],
    "numpy.core._ufunc_config.errstate": [],
    "numpy.core._ufunc_config._setdef": [],
    "<builtin>.type": [],
    "numpy.core.numeric.ComplexWarning": [],
    "numpy.core.overrides.set_array_function_like_doc": [],
    "numpy.core.arrayprint": [
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.arrayprint.SubArrayFormat",
        "numpy.core.arrayprint._TimelikeFormat",
        "numpy.core.overrides",
        "numpy.core.arrayprint._recursive_guard.decorating_function",
        "numpy.core.numeric",
        "numpy.core.arrayprint.BoolFormat",
        "numpy",
        "<builtin>.issubclass",
        "numpy.core.arrayprint.TimedeltaFormat",
        "numpy.core.arrayprint.DatetimeFormat",
        "numpy.core.numerictypes",
        "<builtin>.getattr",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.overrides.set_module",
        "numpy.core.arrayprint.StructuredVoidFormat",
        "append",
        "numpy.core.fromnumeric",
        "numpy.core.arrayprint.FloatingFormat",
        "numpy.core.arrayprint._recursive_guard",
        "numpy.core.umath",
        "numpy.core.multiarray",
        "numpy.core.arrayprint.ComplexFloatingFormat",
        "numpy.core.arrayprint.IntegerFormat"
    ],
    "numpy.core.arrayprint._recursive_guard": [],
    "numpy.core.arrayprint._recursive_guard.decorating_function": [
        "<builtin>.set"
    ],
    "numpy.core.overrides.array_function_dispatch": [],
    "numpy.core.overrides.array_function_dispatch.decorator": [
        "numpy.core._multiarray_umath.add_docstring"
    ],
    "numpy.core.arrayprint.FloatingFormat": [],
    "numpy.core.arrayprint.IntegerFormat": [],
    "numpy.core.arrayprint.BoolFormat": [],
    "numpy.core.arrayprint.ComplexFloatingFormat": [],
    "numpy.core.arrayprint._TimelikeFormat": [],
    "numpy.core.arrayprint.DatetimeFormat": [],
    "numpy.core.arrayprint.TimedeltaFormat": [],
    "numpy.core.arrayprint.SubArrayFormat": [],
    "numpy.core.arrayprint.StructuredVoidFormat": [
        "<builtin>.classmethod"
    ],
    "<builtin>.classmethod": [],
    "<builtin>.issubclass": [],
    "numpy.core._asarray": [
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.overrides.set_module",
        "numpy.core.overrides",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.multiarray",
        "numpy.core.overrides.set_array_function_like_doc"
    ],
    "numpy.core.numeric.extend_all": [
        "<builtin>.getattr",
        "append",
        "<builtin>.set"
    ],
    "numpy.core.defchararray": [
        "numpy.core.defchararray.chararray",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.numeric",
        "numpy.core.overrides",
        "numpy.core.numerictypes",
        "numpy.compat",
        "numpy.core.multiarray",
        "numpy",
        "numpy.core.overrides.set_module"
    ],
    "numpy.core.defchararray.chararray": [],
    "numpy.core.records": [
        "numpy.core.arrayprint",
        "numpy.core.records.recarray",
        "numpy.core.numeric",
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.records.format_parser",
        "numpy.core.records.record",
        "numpy.core.overrides",
        "numpy.core.numerictypes",
        "numpy.compat",
        "numpy.core.overrides.set_module"
    ],
    "numpy.core.records.format_parser": [],
    "numpy.core.records.record": [],
    "numpy.core.records.recarray": [],
    "numpy.core.memmap": [
        "numpy.core.numeric",
        "numpy.core.overrides",
        "numpy.core.memmap.memmap",
        "numpy.compat",
        "numpy"
    ],
    "numpy.core.memmap.memmap": [],
    "numpy.core.function_base": [
        "numpy.core.numeric",
        "numpy.core.multiarray",
        "numpy.core.overrides"
    ],
    "numpy.core._machar": [
        "numpy.core._ufunc_config",
        "numpy.core.fromnumeric",
        "numpy.core._machar.MachAr",
        "numpy.core.overrides"
    ],
    "numpy.core._machar.MachAr": [],
    "numpy.core.getlimits": [
        "numpy.core.numeric",
        "numpy.core.getlimits.finfo",
        "numpy.core.getlimits.MachArLike",
        "<builtin>.dict",
        "numpy.core.overrides",
        "numpy.core._machar",
        "numpy.core.numerictypes",
        "numpy.core.umath",
        "numpy.core.getlimits.iinfo"
    ],
    "numpy.core.getlimits.MachArLike": [
        "<builtin>.property"
    ],
    "<builtin>.dict": [],
    "numpy.core.getlimits.finfo": [
        "<builtin>.property"
    ],
    "numpy.core.getlimits.iinfo": [
        "<builtin>.property"
    ],
    "numpy.core.einsumfunc": [
        "numpy.core.numeric",
        "<builtin>.set",
        "numpy.core.overrides",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.multiarray"
    ],
    "numpy.core._add_newdocs": [
        "numpy.core._add_newdocs.refer_to_array_attribute",
        "numpy.core.overrides",
        "numpy.core.function_base",
        "<str>.replace",
        "numpy.core.function_base.add_newdoc"
    ],
    "numpy.core.function_base.add_newdoc": [
        "<str>.strip",
        "<builtin>.globals",
        "numpy.core.function_base._add_docstring",
        "<builtin>.isinstance",
        "<builtin>.__import__",
        "<builtin>.getattr"
    ],
    "<builtin>.__import__": [],
    "numpy.core.function_base._add_docstring": [
        "numpy.core.function_base._needs_add_docstring"
    ],
    "numpy.core.function_base._needs_add_docstring": [
        "<builtin>.isinstance"
    ],
    "<str>.strip": [],
    "<str>.replace": [],
    "numpy.core._add_newdocs.refer_to_array_attribute": [],
    "numpy.core._add_newdocs_scalars": [
        "numpy.core._add_newdocs_scalars.numeric_type_aliases",
        "numpy.core.numerictypes",
        "numpy.core.function_base",
        "numpy.core._add_newdocs_scalars.add_newdoc_for_scalar_type",
        "numpy.core",
        "numpy.core.function_base.add_newdoc"
    ],
    "numpy.core._add_newdocs_scalars.numeric_type_aliases": [
        "numpy.core._add_newdocs_scalars.numeric_type_aliases.type_aliases_gen",
        "<builtin>.list"
    ],
    "numpy.core._add_newdocs_scalars.numeric_type_aliases.type_aliases_gen": [
        "<builtin>.getattr"
    ],
    "numpy.core._add_newdocs_scalars.add_newdoc_for_scalar_type": [
        "<builtin>.getattr",
        "<str>.strip",
        "numpy.core.function_base.add_newdoc"
    ],
    "numpy.core._dtype_ctypes": [
        "numpy"
    ],
    "numpy.core._internal": [
        "numpy.core._internal._ctypes",
        "numpy.core._internal._missing_ctypes",
        "numpy.core._internal._Stream",
        "<map>.keys",
        "numpy.core._internal.dummy_ctype",
        "numpy.core.multiarray"
    ],
    "numpy.core._internal.dummy_ctype": [],
    "numpy.core._internal._missing_ctypes": [
        "numpy.core._internal._missing_ctypes.c_void_p"
    ],
    "numpy.core._internal._missing_ctypes.c_void_p": [],
    "numpy.core._internal._ctypes": [
        "<builtin>.property"
    ],
    "<map>.keys": [],
    "numpy.core._internal._Stream": [
        "<builtin>.property"
    ],
    "numpy._pytesttester": [
        "numpy._pytesttester.PytestTester"
    ],
    "numpy._pytesttester.PytestTester": [],
    "numpy._pytesttester.PytestTester.__init__": [],
    "numpy.lib": [
        "numpy.lib.twodim_base",
        "numpy.lib._version",
        "numpy._pytesttester",
        "numpy.lib.scimath",
        "numpy.version",
        "numpy.lib.arrayterator",
        "numpy.lib.nanfunctions",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.lib.utils",
        "numpy.lib.arraysetops",
        "numpy.lib.mixins",
        "numpy.lib.polynomial",
        "numpy.lib.shape_base",
        "numpy.lib.npyio",
        "numpy.lib.index_tricks",
        "numpy.lib.function_base",
        "numpy.lib.arraypad",
        "numpy.lib.type_check",
        "numpy.lib.stride_tricks",
        "numpy.lib.histograms",
        "numpy.lib.ufunclike"
    ],
    "numpy.lib.mixins": [
        "numpy.core.umath",
        "numpy.lib.mixins.NDArrayOperatorsMixin"
    ],
    "numpy.lib.mixins.NDArrayOperatorsMixin": [
        "numpy.lib.mixins._reflected_binary_method",
        "numpy.lib.mixins._unary_method",
        "numpy.lib.mixins._numeric_methods",
        "numpy.lib.mixins._binary_method"
    ],
    "numpy.lib.mixins._binary_method": [],
    "numpy.lib.mixins._numeric_methods": [
        "numpy.lib.mixins._inplace_binary_method",
        "numpy.lib.mixins._reflected_binary_method",
        "numpy.lib.mixins._binary_method"
    ],
    "numpy.lib.mixins._reflected_binary_method": [],
    "numpy.lib.mixins._inplace_binary_method": [],
    "numpy.lib.mixins._unary_method": [],
    "numpy.lib.scimath": [
        "numpy.core.numeric",
        "numpy.core.overrides",
        "numpy.core.numerictypes",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.lib.type_check"
    ],
    "numpy.lib.type_check": [
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.numeric",
        "numpy.core.overrides",
        "numpy.lib.ufunclike",
        "numpy.core.overrides.set_module"
    ],
    "numpy.lib.ufunclike": [
        "numpy.lib.ufunclike._deprecate_out_named_y",
        "numpy.core.numeric",
        "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y",
        "numpy.core.overrides",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.lib.ufunclike._deprecate_out_named_y": [],
    "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y": [
        "numpy.lib.ufunclike._deprecate_out_named_y",
        "numpy.lib.ufunclike._fix_out_named_y"
    ],
    "numpy.lib.ufunclike._fix_out_named_y": [],
    "numpy.lib.index_tricks": [
        "numpy.lib.index_tricks.nd_grid",
        "numpy.core.overrides.set_module.decorator",
        "numpy.lib.index_tricks.CClass.__init__",
        "numpy.matrixlib",
        "numpy.lib.index_tricks.ndindex",
        "numpy.lib.index_tricks.CClass",
        "numpy.core.overrides",
        "numpy.core.numeric",
        "numpy.lib.index_tricks.AxisConcatenator",
        "numpy.lib.index_tricks.OGridClass",
        "numpy.lib.index_tricks.RClass.__init__",
        "numpy.core.numerictypes",
        "numpy.core.overrides.set_module",
        "numpy.lib.index_tricks.IndexExpression",
        "numpy.lib.index_tricks.MGridClass",
        "numpy.lib.function_base",
        "numpy.lib.index_tricks.ndenumerate",
        "numpy.lib.index_tricks.RClass",
        "numpy.lib.index_tricks.OGridClass.__init__",
        "numpy.lib.index_tricks.MGridClass.__init__",
        "numpy.lib.index_tricks.IndexExpression.__init__",
        "numpy.lib.stride_tricks",
        "numpy.core",
        "numpy.core.multiarray"
    ],
    "numpy.matrixlib": [
        "numpy.matrixlib.defmatrix",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy._pytesttester"
    ],
    "numpy.matrixlib.defmatrix": [
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.numeric",
        "numpy.linalg",
        "numpy.core.overrides",
        "numpy.matrixlib.defmatrix.matrix",
        "numpy.core.overrides.set_module"
    ],
    "numpy.linalg": [
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.linalg.linalg",
        "numpy._pytesttester"
    ],
    "numpy.linalg.linalg": [
        "numpy.linalg.linalg._determine_error_states",
        "numpy.linalg.linalg.LinAlgError",
        "numpy.lib.twodim_base",
        "numpy.core.overrides",
        "numpy.core",
        "numpy.core.multiarray"
    ],
    "numpy.lib.twodim_base": [
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.numeric",
        "numpy.core.overrides.set_array_function_like_doc",
        "numpy.core.getlimits.iinfo.__init__",
        "numpy.lib.stride_tricks",
        "numpy.core.overrides",
        "numpy.core",
        "numpy.core.overrides.set_module"
    ],
    "numpy.lib.stride_tricks": [
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.numeric",
        "numpy.lib.stride_tricks.DummyArray",
        "numpy.core.overrides",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy.core.overrides.array_function_dispatch",
        "numpy",
        "numpy.core.overrides.set_module"
    ],
    "numpy.lib.stride_tricks.DummyArray": [],
    "numpy.core.getlimits.iinfo.__init__": [
        "<builtin>.ValueError",
        "<builtin>.type"
    ],
    "numpy.linalg.linalg.LinAlgError": [],
    "numpy.linalg.linalg._determine_error_states": [
        "numpy.core.arrayprint.errstate",
        "numpy.core._ufunc_config.errstate.__init__"
    ],
    "numpy.core.arrayprint.errstate": [],
    "numpy.core._ufunc_config.errstate.__init__": [],
    "numpy.matrixlib.defmatrix.matrix": [
        "<builtin>.property"
    ],
    "numpy.lib.function_base": [
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.numeric",
        "numpy.lib.function_base.vectorize",
        "<builtin>.dict",
        "numpy.lib.twodim_base",
        "numpy.core.overrides",
        "numpy.core.numerictypes",
        "numpy.core.function_base",
        "numpy.core.fromnumeric",
        "numpy.lib.histograms",
        "numpy.core",
        "numpy.core.umath",
        "numpy.core.multiarray",
        "numpy",
        "numpy.core.overrides.set_module"
    ],
    "numpy.lib.histograms": [
        "numpy",
        "numpy.core.overrides"
    ],
    "numpy.lib.function_base.vectorize": [],
    "numpy.lib.index_tricks.nd_grid": [],
    "numpy.lib.index_tricks.MGridClass": [],
    "numpy.lib.index_tricks.MGridClass.__init__": [
        "<builtin>.super"
    ],
    "<builtin>.super": [],
    "numpy.lib.index_tricks.OGridClass": [],
    "numpy.lib.index_tricks.OGridClass.__init__": [
        "<builtin>.super"
    ],
    "numpy.lib.index_tricks.AxisConcatenator": [
        "<builtin>.staticmethod"
    ],
    "numpy.lib.index_tricks.RClass": [],
    "numpy.lib.index_tricks.RClass.__init__": [
        "numpy.lib.index_tricks.AxisConcatenator.__init__"
    ],
    "numpy.lib.index_tricks.AxisConcatenator.__init__": [],
    "numpy.lib.index_tricks.CClass": [],
    "numpy.lib.index_tricks.CClass.__init__": [
        "numpy.lib.index_tricks.AxisConcatenator.__init__"
    ],
    "numpy.lib.index_tricks.ndenumerate": [],
    "numpy.lib.index_tricks.ndindex": [],
    "numpy.lib.index_tricks.IndexExpression": [],
    "numpy.lib.index_tricks.IndexExpression.__init__": [],
    "numpy.lib.nanfunctions": [
        "numpy.core.overrides",
        "numpy",
        "numpy.lib.function_base"
    ],
    "numpy.lib.shape_base": [
        "numpy.core.shape_base",
        "numpy.core.numeric",
        "numpy.matrixlib.defmatrix",
        "numpy.core.overrides",
        "numpy.lib.index_tricks",
        "numpy.core.fromnumeric",
        "numpy.core",
        "numpy.core.multiarray"
    ],
    "numpy.lib.polynomial": [
        "numpy.core.numeric",
        "numpy.lib.twodim_base",
        "numpy.linalg",
        "numpy.core.overrides",
        "numpy.lib.polynomial.RankWarning",
        "numpy.core",
        "numpy.lib.function_base",
        "numpy.lib.type_check",
        "numpy.lib.polynomial.poly1d"
    ],
    "numpy.lib.polynomial.RankWarning": [],
    "numpy.lib.polynomial.poly1d": [
        "<builtin>.property"
    ],
    "numpy.lib.utils": [
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.overrides",
        "numpy.core.numerictypes",
        "numpy.core",
        "numpy.lib.utils._Deprecate",
        "numpy",
        "numpy.core.overrides.set_module"
    ],
    "numpy.lib.utils._Deprecate": [],
    "numpy.lib.arraysetops": [
        "numpy",
        "numpy.core.overrides"
    ],
    "numpy.lib.npyio": [
        "numpy.core.overrides.set_module.decorator",
        "numpy.lib._datasource",
        "numpy.core.overrides.set_array_function_like_doc",
        "numpy.lib.format",
        "numpy.lib._iotools",
        "<builtin>.sorted",
        "numpy.core.overrides",
        "numpy.lib.npyio.BagObj",
        "numpy.compat",
        "numpy.core.multiarray",
        "numpy",
        "numpy.core.overrides.set_module",
        "numpy.lib.npyio.NpzFile"
    ],
    "numpy.lib.format": [
        "numpy.compat",
        "numpy.lib.utils",
        "numpy",
        "<builtin>.len"
    ],
    "numpy.lib._datasource": [
        "numpy.lib._datasource.DataSource",
        "numpy.core.overrides",
        "numpy.lib._datasource.Repository",
        "numpy.lib._datasource._FileOpeners",
        "numpy.lib._datasource._FileOpeners.__init__"
    ],
    "numpy.lib._datasource._FileOpeners": [],
    "numpy.lib._datasource._FileOpeners.__init__": [],
    "numpy.lib._datasource.DataSource": [],
    "numpy.lib._datasource.Repository": [],
    "numpy.lib._iotools": [
        "numpy.lib._iotools.StringConverter",
        "numpy.core.numeric",
        "numpy.lib._iotools.LineSplitter",
        "numpy.lib._iotools.ConverterLockError",
        "numpy.lib._iotools.ConversionWarning",
        "numpy.lib._iotools.NameValidator",
        "numpy.compat",
        "numpy.lib._iotools.ConverterError",
        "numpy"
    ],
    "numpy.lib._iotools.LineSplitter": [],
    "numpy.lib._iotools.NameValidator": [
        "<builtin>.set"
    ],
    "numpy.lib._iotools.ConverterError": [],
    "numpy.lib._iotools.ConverterLockError": [],
    "numpy.lib._iotools.ConversionWarning": [],
    "numpy.lib._iotools.StringConverter": [
        "append",
        "<builtin>.classmethod",
        "extend"
    ],
    "numpy.lib.npyio.BagObj": [],
    "numpy.lib.npyio.NpzFile": [],
    "numpy.lib.arrayterator": [
        "numpy.lib.arrayterator.Arrayterator"
    ],
    "numpy.lib.arrayterator.Arrayterator": [
        "<builtin>.property"
    ],
    "numpy.lib.arraypad": [
        "numpy.core.overrides",
        "numpy.lib.index_tricks",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy.core.overrides.array_function_dispatch",
        "numpy"
    ],
    "numpy.lib._version": [
        "numpy.lib._version.NumpyVersion"
    ],
    "numpy.lib._version.NumpyVersion": [],
    "numpy.fft": [
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.fft.helper",
        "copy",
        "numpy._pytesttester",
        "numpy.fft._pocketfft"
    ],
    "numpy.fft._pocketfft": [
        "numpy.core.multiarray",
        "numpy.core",
        "numpy.core.overrides"
    ],
    "numpy.fft.helper": [
        "numpy.core.overrides.set_module.decorator",
        "numpy.core.overrides",
        "numpy.core.overrides.array_function_dispatch.decorator",
        "numpy.core",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.overrides.set_module"
    ],
    "copy": [],
    "numpy.polynomial": [
        "numpy.polynomial.hermite_e",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.polynomial.laguerre",
        "numpy.polynomial.polynomial",
        "numpy.polynomial.legendre",
        "numpy.polynomial.hermite",
        "numpy.polynomial.chebyshev",
        "numpy._pytesttester"
    ],
    "numpy.polynomial.polynomial": [
        "numpy.polynomial._polybase",
        "numpy.linalg",
        "numpy.polynomial.polyutils",
        "numpy.polynomial.polynomial.Polynomial",
        "numpy.core.multiarray",
        "numpy"
    ],
    "numpy.polynomial.polyutils": [
        "numpy.polynomial.polyutils.RankWarning",
        "numpy"
    ],
    "numpy.polynomial.polyutils.RankWarning": [],
    "numpy.polynomial._polybase": [
        "numpy.polynomial._polybase.ABCPolyBase",
        "numpy",
        "numpy.polynomial.polyutils"
    ],
    "numpy.polynomial._polybase.ABCPolyBase": [
        "<builtin>.property",
        "<builtin>.staticmethod",
        "<builtin>.classmethod"
    ],
    "numpy.polynomial.polynomial.Polynomial": [
        "<builtin>.classmethod",
        "<builtin>.staticmethod"
    ],
    "numpy.polynomial.chebyshev": [
        "numpy.polynomial.chebyshev.Chebyshev",
        "numpy.polynomial._polybase",
        "numpy.linalg",
        "numpy.polynomial.polyutils",
        "numpy.core.multiarray",
        "numpy"
    ],
    "numpy.polynomial.chebyshev.Chebyshev": [
        "<builtin>.classmethod",
        "<builtin>.staticmethod"
    ],
    "numpy.polynomial.legendre": [
        "numpy.polynomial._polybase",
        "numpy.linalg",
        "numpy.polynomial.polyutils",
        "numpy.polynomial.legendre.Legendre",
        "numpy.core.multiarray",
        "numpy"
    ],
    "numpy.polynomial.legendre.Legendre": [
        "<builtin>.staticmethod"
    ],
    "numpy.polynomial.hermite": [
        "numpy.polynomial.hermite.Hermite",
        "numpy.polynomial._polybase",
        "numpy.linalg",
        "numpy.polynomial.polyutils",
        "numpy.core.multiarray",
        "numpy"
    ],
    "numpy.polynomial.hermite.Hermite": [
        "<builtin>.staticmethod"
    ],
    "numpy.polynomial.hermite_e": [
        "numpy.polynomial._polybase",
        "numpy.linalg",
        "numpy.polynomial.hermite_e.HermiteE",
        "numpy.polynomial.polyutils",
        "numpy.core.multiarray",
        "numpy"
    ],
    "numpy.polynomial.hermite_e.HermiteE": [
        "<builtin>.staticmethod"
    ],
    "numpy.polynomial.laguerre": [
        "numpy.polynomial._polybase",
        "numpy.linalg",
        "numpy.polynomial.laguerre.Laguerre",
        "numpy.polynomial.polyutils",
        "numpy.core.multiarray",
        "numpy"
    ],
    "numpy.polynomial.laguerre.Laguerre": [
        "<builtin>.staticmethod"
    ],
    "numpy.random": [
        "numpy._pytesttester",
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.random._pickle"
    ],
    "numpy.random._pickle": [],
    "numpy.ctypeslib": [
        "numpy.ctypeslib._ndptr",
        "numpy.ctypeslib._concrete_ndptr",
        "numpy.core._internal",
        "numpy.core._internal._getintp_ctype",
        "numpy.ctypeslib._get_scalar_type_map",
        "numpy.core.multiarray",
        "numpy"
    ],
    "numpy.core._internal._getintp_ctype": [
        "numpy.core._internal.dummy_ctype.__init__",
        "numpy"
    ],
    "numpy.core._internal.dummy_ctype.__init__": [],
    "numpy.ctypeslib._ndptr": [
        "<builtin>.classmethod"
    ],
    "numpy.ctypeslib._concrete_ndptr": [
        "<builtin>.property"
    ],
    "numpy.ctypeslib._get_scalar_type_map": [],
    "numpy.ma": [
        "numpy._pytesttester.PytestTester.__init__",
        "numpy.ma.extras",
        "numpy.ma.core",
        "numpy._pytesttester"
    ],
    "numpy.ma.core": [
        "numpy.ma.core._DomainCheckInterval",
        "numpy.ma.core.mvoid",
        "numpy.ma.core._DomainGreater.__init__",
        "numpy.ma.core._DomainGreaterEqual",
        "numpy.compat",
        "numpy.ma.core._DomainTan.__init__",
        "numpy.ma.core._DomainTan",
        "numpy.core.numeric",
        "numpy.ma.core._MaskedBinaryOperation",
        "numpy.ma.core.doc_note",
        "numpy.ma.core._DomainSafeDivide",
        "numpy.ma.core._MaskedBinaryOperation.__init__",
        "numpy.ma.core._convert2ma",
        "numpy.core.numerictypes",
        "numpy.ma.core._MaskedUnaryOperation.__init__",
        "numpy.ma.core._MaskedPrintOption",
        "numpy.ma.core.MaskedIterator",
        "numpy.ma.core._extrema_operation.__init__",
        "numpy.ma.core._DomainGreater",
        "numpy.ma.core.MAError",
        "<builtin>.complex",
        "numpy.ma.core._DomainedBinaryOperation.__init__",
        "<builtin>.dict",
        "numpy.ma.core.MaskError",
        "numpy.ma.core.MaskedArrayFutureWarning",
        "numpy.ma.core.MaskedArray",
        "numpy.lib.function_base",
        "numpy.ma.core._DomainGreaterEqual.__init__",
        "numpy.ma.core._DomainedBinaryOperation",
        "numpy.ma.core._frommethod",
        "numpy.ma.core._MaskedPrintOption.__init__",
        "numpy.ma.core._DomainSafeDivide.__init__",
        "numpy.ma.core._extrema_operation",
        "numpy.ma.core.MaskedConstant",
        "numpy.ma.core._frommethod.__init__",
        "numpy.ma.core._MaskedUFunc",
        "numpy.ma.core._DomainCheckInterval.__init__",
        "numpy.ma.core._convert2ma.__init__",
        "numpy.core.umath",
        "numpy",
        "numpy.ma.core._MaskedUnaryOperation"
    ],
    "numpy.ma.core.MaskedArrayFutureWarning": [],
    "numpy.ma.core.MAError": [],
    "numpy.ma.core.MaskError": [],
    "<builtin>.complex": [],
    "numpy.ma.core._DomainCheckInterval": [],
    "numpy.ma.core._DomainTan": [],
    "numpy.ma.core._DomainSafeDivide": [],
    "numpy.ma.core._DomainGreater": [],
    "numpy.ma.core._DomainGreaterEqual": [],
    "numpy.ma.core._MaskedUFunc": [],
    "numpy.ma.core._MaskedUnaryOperation": [],
    "numpy.ma.core._MaskedBinaryOperation": [],
    "numpy.ma.core._DomainedBinaryOperation": [],
    "numpy.ma.core._MaskedUnaryOperation.__init__": [
        "<builtin>.super"
    ],
    "numpy.ma.core._DomainGreaterEqual.__init__": [],
    "numpy.ma.core._DomainGreater.__init__": [],
    "numpy.ma.core._DomainTan.__init__": [],
    "numpy.ma.core._DomainCheckInterval.__init__": [],
    "numpy.ma.core._MaskedBinaryOperation.__init__": [
        "<builtin>.super"
    ],
    "numpy.ma.core._DomainSafeDivide.__init__": [],
    "numpy.ma.core._DomainedBinaryOperation.__init__": [
        "<builtin>.super"
    ],
    "numpy.ma.core._MaskedPrintOption": [],
    "numpy.ma.core._MaskedPrintOption.__init__": [],
    "numpy.ma.core.MaskedIterator": [],
    "numpy.ma.core.MaskedArray": [
        "<builtin>.property",
        "numpy.ma.core._arraymethod"
    ],
    "numpy.ma.core._arraymethod": [
        "<builtin>.getattr"
    ],
    "numpy.ma.core.mvoid": [
        "<builtin>.property"
    ],
    "numpy.ma.core.MaskedConstant": [
        "<builtin>.classmethod"
    ],
    "numpy.ma.core._extrema_operation": [],
    "numpy.ma.core._frommethod": [],
    "numpy.ma.core._frommethod.__init__": [
        "numpy.ma.core._frommethod.getdoc"
    ],
    "numpy.ma.core._frommethod.getdoc": [
        "<builtin>.getattr",
        "numpy.ma.core.get_object_signature"
    ],
    "numpy.ma.core.get_object_signature": [
        "numpy.compat._inspect.getargspec",
        "numpy.compat._inspect.formatargspec"
    ],
    "numpy.compat._inspect.getargspec": [
        "numpy.compat._inspect.ismethod",
        "numpy.compat._inspect.getargs",
        "<builtin>.TypeError",
        "numpy.compat._inspect.isfunction"
    ],
    "numpy.compat._inspect.ismethod": [
        "<builtin>.isinstance"
    ],
    "numpy.compat._inspect.isfunction": [
        "<builtin>.isinstance"
    ],
    "<builtin>.TypeError": [],
    "numpy.compat._inspect.getargs": [
        "<builtin>.range",
        "<builtin>.TypeError",
        "numpy.compat._inspect.iscode",
        "<builtin>.list"
    ],
    "numpy.compat._inspect.iscode": [
        "<builtin>.isinstance"
    ],
    "numpy.compat._inspect.formatargspec": [
        "append",
        "numpy.compat._inspect.strseq",
        "<builtin>.range",
        "<builtin>.len",
        "numpy.compat._inspect.<lambda3>"
    ],
    "numpy.compat._inspect.strseq": [
        "numpy.compat._inspect.strseq",
        "numpy.compat._inspect.joinseq",
        "<builtin>.type"
    ],
    "numpy.compat._inspect.joinseq": [
        "<builtin>.len"
    ],
    "numpy.compat._inspect.<lambda3>": [
        "<builtin>.repr"
    ],
    "<builtin>.repr": [],
    "numpy.ma.core._extrema_operation.__init__": [
        "<builtin>.super"
    ],
    "numpy.ma.core.doc_note": [],
    "numpy.ma.core._convert2ma": [],
    "numpy.ma.core._convert2ma.__init__": [
        "<builtin>.getattr",
        "numpy.ma.core._convert2ma.getdoc"
    ],
    "numpy.ma.core._convert2ma.getdoc": [
        "<builtin>.getattr",
        "numpy.ma.core.get_object_signature",
        "numpy.ma.core._convert2ma._replace_return_type"
    ],
    "numpy.ma.core._convert2ma._replace_return_type": [
        "<builtin>.RuntimeError"
    ],
    "numpy.ma.extras": [
        "numpy.core.numeric",
        "numpy.ma.extras._fromnxfunction_args",
        "numpy.ma.extras.mr_class",
        "numpy.ma.extras.mr_class.__init__",
        "numpy.ma.core.doc_note",
        "numpy.ma.extras._fromnxfunction",
        "numpy.ma.core",
        "numpy.ma.extras._fromnxfunction_single",
        "numpy.lib.index_tricks",
        "numpy.ma.extras._fromnxfunction_allargs",
        "numpy.lib.function_base",
        "numpy.ma.extras.MAxisConcatenator",
        "numpy.ma.extras._fromnxfunction_seq",
        "numpy.core.multiarray",
        "numpy"
    ],
    "numpy.ma.extras._fromnxfunction": [],
    "numpy.ma.extras._fromnxfunction_single": [],
    "numpy.ma.extras._fromnxfunction_seq": [],
    "numpy.ma.extras._fromnxfunction_args": [],
    "numpy.ma.extras._fromnxfunction_allargs": [],
    "numpy.ma.extras.MAxisConcatenator": [
        "<builtin>.classmethod",
        "<builtin>.staticmethod"
    ],
    "numpy.ma.extras.mr_class": [],
    "numpy.ma.extras.mr_class.__init__": [
        "numpy.lib.index_tricks.AxisConcatenator.__init__"
    ],
    "numpy.core.getlimits._register_known_types": [
        "numpy.core._ufunc_config.errstate.__init__",
        "numpy.core.getlimits.MachArLike.__init__",
        "numpy.core.arrayprint.errstate",
        "numpy.core.getlimits._register_type"
    ],
    "numpy.core.getlimits.MachArLike.__init__": [
        "numpy.core.getlimits.MachArLike._float_conv",
        "numpy.core.getlimits.MachArLike._float_to_float",
        "numpy.core.getlimits.MachArLike._float_to_str",
        "<builtin>.int"
    ],
    "numpy.core.getlimits.MachArLike._float_to_float": [
        "numpy.core.getlimits.MachArLike._float_conv",
        "numpy.core.getlimits._fr1"
    ],
    "numpy.core.getlimits.MachArLike._float_conv": [],
    "numpy.core.getlimits._fr1": [],
    "numpy.core.getlimits.MachArLike._float_to_str": [
        "numpy.core.getlimits._fr0"
    ],
    "numpy.core.getlimits._fr0": [],
    "numpy.core.getlimits._register_type": [],
    "remove": [],
    "numpy._sanity_check": [
        "<builtin>.abs",
        "<builtin>.RuntimeError",
        "<builtin>.AssertionError"
    ],
    "<builtin>.abs": [],
    "<builtin>.AssertionError": [],
    "numpy._mac_os_check": [],
    "<builtin>.str": [],
    "_multiarray_umath._set_madvise_hugepage": [],
    "pandas": [
        "pandas.core.arrays.sparse",
        "pandas.tseries.api",
        "pandas.core.reshape.api",
        "pandas._version.get_versions",
        "pandas.core.config_init",
        "pandas.io.api",
        "<builtin>.ImportError",
        "pandas.compat",
        "pandas.core.computation.api",
        "pandas.io",
        "pandas.plotting",
        "pandas.core.api",
        "pandas.tseries",
        "pandas.testing",
        "<builtin>.__import__",
        "pandas.util._print_versions",
        "pandas.api",
        "pandas.util._tester",
        "pandas.io.json",
        "pandas.errors",
        "pandas._version",
        "append",
        "pandas._config",
        "pandas.tseries.offsets",
        "pandas.arrays"
    ],
    "pandas.compat": [
        "pandas.compat.numpy",
        "pandas._typing",
        "pandas.compat.pyarrow"
    ],
    "pandas._typing": [
        "pandas._libs.tslibs",
        "pandas.core.series",
        "pandas._typing.WriteBuffer",
        "pandas.core.dtypes.dtypes",
        "pandas._typing.WriteExcelBuffer",
        "numpy.typing",
        "pandas._libs",
        "pandas.core.groupby.generic",
        "pandas._typing.ReadBuffer",
        "pandas",
        "pandas._typing.BaseBuffer",
        "pandas.core.arrays.base",
        "typing.TypeVar",
        "pandas.core.indexes.base",
        "pandas.core.internals",
        "pandas.io.formats.format",
        "pandas._typing.ReadPickleBuffer",
        "pandas.core.resample",
        "pandas._typing.ReadCsvBuffer",
        "pandas.core.window.rolling",
        "pandas.core.generic",
        "numpy",
        "pandas.core.frame"
    ],
    "numpy.typing": [
        "numpy._pytesttester.PytestTester.__init__",
        "numpy._typing._add_docstring",
        "numpy._typing",
        "numpy._pytesttester"
    ],
    "numpy._typing": [
        "numpy._typing._nested_sequence",
        "numpy.core.overrides",
        "numpy._typing._256Bit",
        "numpy._typing._16Bit",
        "numpy._typing._32Bit",
        "numpy._typing._64Bit",
        "numpy._typing._array_like",
        "numpy._typing._scalars",
        "numpy._typing._generic_alias",
        "numpy._typing.NBitBase",
        "numpy._typing._128Bit",
        "numpy._typing._8Bit",
        "numpy._typing._char_codes",
        "numpy._typing._shape",
        "numpy._typing._nbit",
        "numpy._typing._80Bit",
        "numpy._typing._dtype_like",
        "numpy._typing._96Bit",
        "numpy"
    ],
    "numpy._typing.NBitBase": [],
    "numpy._typing._256Bit": [],
    "numpy._typing._128Bit": [],
    "numpy._typing._96Bit": [],
    "numpy._typing._80Bit": [],
    "numpy._typing._64Bit": [],
    "numpy._typing._32Bit": [],
    "numpy._typing._16Bit": [],
    "numpy._typing._8Bit": [],
    "numpy._typing._nested_sequence": [
        "numpy._typing._nested_sequence._NestedSequence",
        "typing.TypeVar"
    ],
    "typing.TypeVar": [],
    "numpy._typing._nested_sequence._NestedSequence": [
        "typing.overload"
    ],
    "typing.overload": [],
    "numpy._typing._nbit": [],
    "numpy._typing._char_codes": [],
    "numpy._typing._scalars": [
        "numpy"
    ],
    "numpy._typing._shape": [],
    "numpy._typing._dtype_like": [
        "typing.TypeVar",
        "numpy._typing._char_codes",
        "numpy._typing._shape",
        "numpy._typing._dtype_like._DTypeDictBase",
        "numpy._typing._generic_alias",
        "numpy",
        "numpy._typing._dtype_like._SupportsDType",
        "numpy._typing._dtype_like._DTypeDict"
    ],
    "numpy._typing._generic_alias": [
        "numpy._typing._generic_alias._GenericAlias.__init__",
        "numpy",
        "typing.TypeVar",
        "numpy._typing._generic_alias._GenericAlias"
    ],
    "numpy._typing._generic_alias._GenericAlias": [
        "<builtin>.property",
        "<builtin>.frozenset"
    ],
    "<builtin>.frozenset": [],
    "numpy._typing._generic_alias._GenericAlias.__init__": [
        "numpy._typing._generic_alias._parse_parameters",
        "<builtin>.isinstance",
        "<builtin>.tuple"
    ],
    "numpy._typing._generic_alias._parse_parameters": [
        "<builtin>.hasattr",
        "<builtin>.isinstance"
    ],
    "numpy._typing._dtype_like._DTypeDictBase": [],
    "numpy._typing._dtype_like._DTypeDict": [],
    "numpy._typing._dtype_like._SupportsDType": [
        "<builtin>.property"
    ],
    "numpy._typing._array_like": [
        "numpy._typing._array_like._SupportsArray",
        "numpy._typing._array_like._UnknownType",
        "typing.TypeVar",
        "numpy._typing._nested_sequence",
        "numpy._typing._array_like._SupportsArrayFunc",
        "numpy"
    ],
    "numpy._typing._array_like._SupportsArray": [],
    "numpy._typing._array_like._SupportsArrayFunc": [],
    "numpy._typing._array_like._UnknownType": [],
    "numpy._typing._add_docstring": [
        "<builtin>.repr",
        "numpy._typing._generic_alias",
        "numpy._typing._add_docstring._parse_docstrings",
        "numpy._typing._add_docstring.add_newdoc"
    ],
    "numpy._typing._add_docstring.add_newdoc": [
        "append"
    ],
    "numpy._typing._add_docstring._parse_docstrings": [
        "append",
        "pop"
    ],
    "pop": [],
    "pandas._libs": [
        "pandas._libs.tslibs"
    ],
    "pandas._libs.tslibs": [],
    "pandas.core.dtypes.dtypes": [
        "pandas._libs.tslibs",
        "pandas.core.dtypes.dtypes.PandasExtensionDtype",
        "pandas.core.dtypes.dtypes.CategoricalDtype",
        "pandas.core.dtypes.dtypes.CategoricalDtypeType",
        "pandas.core.dtypes.dtypes.IntervalDtype",
        "pandas.core.arrays",
        "pandas.core.dtypes.generic",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype",
        "pandas.core.dtypes.dtypes.PeriodDtype",
        "pandas.core.dtypes.base",
        "pandas.core.dtypes.dtypes.PandasDtype",
        "pandas.core.dtypes.dtypes.BaseMaskedDtype",
        "pytz",
        "pandas",
        "numpy",
        "pandas._typing",
        "pandas.core.dtypes.inference"
    ],
    "pytz": [
        "pytz.tzinfo",
        "pytz._CountryTimezoneDict",
        "pytz.UTC",
        "pytz.tzfile",
        "pytz._CountryNameDict",
        "pytz.exceptions",
        "pytz.resource_exists",
        "pytz._FixedOffset",
        "pytz.lazy"
    ],
    "pytz.exceptions": [
        "pytz.exceptions.InvalidTimeError",
        "pytz.exceptions.UnknownTimeZoneError",
        "pytz.exceptions.Error",
        "pytz.exceptions.AmbiguousTimeError",
        "pytz.exceptions.NonExistentTimeError"
    ],
    "pytz.exceptions.Error": [],
    "pytz.exceptions.UnknownTimeZoneError": [],
    "pytz.exceptions.InvalidTimeError": [],
    "pytz.exceptions.AmbiguousTimeError": [],
    "pytz.exceptions.NonExistentTimeError": [],
    "pytz.lazy": [
        "pytz.lazy.LazySet",
        "pytz.lazy.LazyDict",
        "pytz.lazy.LazyList",
        "<builtin>.hasattr",
        "threading.RLock"
    ],
    "threading.RLock": [],
    "pytz.lazy.LazyDict": [],
    "pytz.lazy.LazyList": [],
    "pytz.lazy.LazySet": [],
    "pytz.tzinfo": [
        "pytz.tzinfo.DstTzInfo",
        "pytz.tzinfo.memorized_timedelta",
        "datetime.datetime",
        "pytz.tzinfo.BaseTzInfo",
        "pytz",
        "pytz.exceptions",
        "pytz.tzinfo.StaticTzInfo"
    ],
    "datetime.datetime": [],
    "pytz.tzinfo.memorized_timedelta": [
        "datetime.timedelta"
    ],
    "datetime.timedelta": [],
    "pytz.tzinfo.BaseTzInfo": [],
    "pytz.tzinfo.StaticTzInfo": [],
    "pytz.tzinfo.DstTzInfo": [],
    "pytz.tzfile": [
        "pytz.tzinfo",
        "pytz.tzfile._byte_string"
    ],
    "pytz.tzfile._byte_string": [
        "<str>.encode"
    ],
    "<str>.encode": [],
    "pytz.UTC": [],
    "pytz._CountryTimezoneDict": [],
    "pytz._CountryNameDict": [],
    "pytz._FixedOffset": [],
    "pytz.resource_exists": [
        "pytz.open_resource"
    ],
    "pytz.open_resource": [
        "<builtin>.open",
        "pkg_resources.resource_stream",
        "<builtin>.ValueError"
    ],
    "pkg_resources.resource_stream": [],
    "<builtin>.open": [],
    "pandas.core.dtypes.base": [
        "pandas.errors",
        "typing.TypeVar",
        "pandas.core.arrays",
        "pandas.core.dtypes.generic",
        "pandas.core.dtypes.base.Registry",
        "pandas.core.dtypes.base.StorageExtensionDtype",
        "pandas.core.dtypes.base.Registry.__init__",
        "pandas.core.dtypes.base.ExtensionDtype",
        "numpy",
        "pandas._typing"
    ],
    "pandas.errors": [
        "pandas._libs.tslibs",
        "pandas.errors.UndefinedVariableError",
        "pandas.errors.NullFrequencyError",
        "pandas.errors.PyperclipWindowsException",
        "pandas.errors.DatabaseError",
        "pandas.errors.UnsortedIndexError",
        "pandas.errors.IncompatibilityWarning",
        "pandas.errors.IndexingError",
        "pandas.errors.IntCastingNaNError",
        "pandas.errors.NumExprClobberingError",
        "pandas.errors.AttributeConflictWarning",
        "pandas.errors.ParserError",
        "pandas.errors.PerformanceWarning",
        "pandas.errors.DataError",
        "pandas.errors.AccessorRegistrationWarning",
        "pandas.errors.MergeError",
        "pandas.errors.EmptyDataError",
        "pandas.errors.UnsupportedFunctionCall",
        "pandas.errors.ParserWarning",
        "pandas.errors.ValueLabelTypeMismatch",
        "pandas.errors.NumbaUtilError",
        "pandas.errors.CategoricalConversionWarning",
        "pandas.errors.SettingWithCopyError",
        "pandas.errors.PossiblePrecisionLoss",
        "pandas._config.config",
        "pandas.errors.SpecificationError",
        "pandas.errors.AbstractMethodError",
        "pandas.errors.DtypeWarning",
        "pandas.errors.SettingWithCopyWarning",
        "pandas.errors.InvalidIndexError",
        "pandas.errors.InvalidColumnName",
        "pandas.errors.PossibleDataLossError",
        "pandas.errors.DuplicateLabelError",
        "pandas.errors.ClosedFileError",
        "pandas.errors.CSSWarning",
        "pandas.errors.PyperclipException"
    ],
    "pandas._config.config": [
        "pandas._config.config.DictWrapper.__init__",
        "pandas._config.config.is_instance_factory",
        "pandas._config.config.CallableDynamicDoc",
        "pandas._config.config.OptionError",
        "contextlib.contextmanager",
        "pandas._config.config.CallableDynamicDoc.__init__",
        "pandas._config.config.DeprecatedOption",
        "pandas._config.config.DictWrapper",
        "pandas.util._exceptions",
        "pandas._config.config.option_context",
        "pandas._config.config.is_type_factory",
        "pandas._config.config.RegisteredOption",
        "pandas._typing"
    ],
    "pandas.util._exceptions": [],
    "pandas._config.config.DeprecatedOption": [],
    "pandas._config.config.RegisteredOption": [],
    "pandas._config.config.OptionError": [],
    "pandas._config.config.DictWrapper": [],
    "pandas._config.config.CallableDynamicDoc": [
        "<builtin>.property"
    ],
    "pandas._config.config.CallableDynamicDoc.__init__": [],
    "pandas._config.config.DictWrapper.__init__": [],
    "pandas._config.config.option_context": [],
    "contextlib.contextmanager": [],
    "pandas._config.config.is_type_factory": [],
    "pandas._config.config.is_instance_factory": [
        "<builtin>.isinstance",
        "<builtin>.tuple",
        "<builtin>.map"
    ],
    "<builtin>.map": [],
    "pandas.errors.IntCastingNaNError": [],
    "pandas.errors.NullFrequencyError": [],
    "pandas.errors.PerformanceWarning": [],
    "pandas.errors.UnsupportedFunctionCall": [],
    "pandas.errors.UnsortedIndexError": [],
    "pandas.errors.ParserError": [],
    "pandas.errors.DtypeWarning": [],
    "pandas.errors.EmptyDataError": [],
    "pandas.errors.ParserWarning": [],
    "pandas.errors.MergeError": [],
    "pandas.errors.AccessorRegistrationWarning": [],
    "pandas.errors.AbstractMethodError": [],
    "pandas.errors.NumbaUtilError": [],
    "pandas.errors.DuplicateLabelError": [],
    "pandas.errors.InvalidIndexError": [],
    "pandas.errors.DataError": [],
    "pandas.errors.SpecificationError": [],
    "pandas.errors.SettingWithCopyError": [],
    "pandas.errors.SettingWithCopyWarning": [],
    "pandas.errors.NumExprClobberingError": [],
    "pandas.errors.UndefinedVariableError": [],
    "pandas.errors.IndexingError": [],
    "pandas.errors.PyperclipException": [],
    "pandas.errors.PyperclipWindowsException": [],
    "pandas.errors.CSSWarning": [],
    "pandas.errors.PossibleDataLossError": [],
    "pandas.errors.ClosedFileError": [],
    "pandas.errors.IncompatibilityWarning": [],
    "pandas.errors.AttributeConflictWarning": [],
    "pandas.errors.DatabaseError": [],
    "pandas.errors.PossiblePrecisionLoss": [],
    "pandas.errors.ValueLabelTypeMismatch": [],
    "pandas.errors.InvalidColumnName": [],
    "pandas.errors.CategoricalConversionWarning": [],
    "pandas.core.dtypes.generic": [
        "pandas.core.generic",
        "pandas.core.arrays",
        "typing.cast",
        "pandas.core.dtypes.generic.create_pandas_abc_type",
        "pandas"
    ],
    "pandas.core.arrays": [
        "pandas.core.arrays.sparse",
        "pandas.core.arrays.arrow",
        "pandas.core.arrays.period",
        "pandas.core.arrays.floating",
        "pandas.core.arrays.string_",
        "pandas.core.arrays.masked",
        "pandas.core.arrays.string_arrow",
        "pandas.core.arrays.numpy_",
        "pandas.core.arrays.interval",
        "pandas.core.arrays.timedeltas",
        "pandas.core.arrays.categorical",
        "pandas.core.arrays.boolean",
        "pandas.core.arrays.datetimes",
        "pandas.core.arrays.integer",
        "pandas.core.arrays.base"
    ],
    "pandas.core.arrays.arrow": [
        "pandas.core.arrays.arrow.dtype",
        "pandas.core.arrays.arrow.array"
    ],
    "pandas.core.arrays.arrow.array": [
        "pandas.util._decorators",
        "pandas.core.indexers",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray",
        "pandas.core.algorithms",
        "typing.TypeVar",
        "pandas.core.arrays.base",
        "pandas.core.arraylike",
        "pandas.core.arrays.arrow.dtype",
        "pandas.core.arrays.arrow._arrow_utils",
        "pandas.compat",
        "pandas.core.dtypes.missing",
        "pandas",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.util._decorators": [
        "pandas.util._decorators.Substitution",
        "pandas.util._exceptions",
        "pandas.util._decorators.Appender",
        "pandas._typing"
    ],
    "pandas.util._decorators.Substitution": [],
    "pandas.util._decorators.Appender": [],
    "pandas.core.dtypes.common": [
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.generic",
        "pandas.core.dtypes.base",
        "pandas._libs",
        "pandas.util._exceptions",
        "numpy",
        "pandas._typing",
        "pandas.core.dtypes.inference"
    ],
    "pandas.core.dtypes.inference": [
        "pandas.util._exceptions",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.dtypes.missing": [
        "pandas._libs.tslibs",
        "typing.overload",
        "pandas._typing",
        "pandas.core.indexes.base",
        "pandas._config",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.generic",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas.core.dtypes.inference"
    ],
    "pandas._config": [
        "pandas._config.config",
        "pandas._config.dates",
        "pandas._config.display"
    ],
    "pandas._config.dates": [
        "pandas._config.config",
        "pandas._config.config.config_prefix"
    ],
    "pandas._config.config.config_prefix": [
        "pandas._config.config.config_prefix.wrap"
    ],
    "pandas._config.config.config_prefix.wrap": [
        "typing.cast"
    ],
    "typing.cast": [],
    "pandas._config.display": [
        "pandas._config.config",
        "pandas._config.config.config_prefix"
    ],
    "pandas.core.indexes.base": [
        "pandas.core.arrays.sparse",
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.core.arrays.string_",
        "pandas.core.arraylike",
        "pandas.core.indexes.frozen",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.generic",
        "pandas.core.ops",
        "pandas.core.sorting",
        "pandas._libs",
        "<builtin>.frozenset",
        "pandas.core.ops.invalid",
        "pandas.util._exceptions",
        "pandas.core.base",
        "pandas.core.dtypes.concat",
        "pandas._typing",
        "pandas.core.dtypes.astype",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.core.indexes.base.Index",
        "pandas.compat.numpy.function",
        "pandas.core.dtypes.missing",
        "pandas.core.common",
        "pandas",
        "pandas.core.arrays.datetimes",
        "pandas.core.dtypes.cast",
        "pandas.errors",
        "typing.TypeVar",
        "pandas.core.arrays",
        "pandas.core.array_algos.putmask",
        "pandas.core.dtypes.common",
        "pandas.core.dtypes.inference",
        "pandas._config",
        "pandas.core.missing",
        "pandas.core.accessor",
        "pandas.core.strings",
        "numpy",
        "pandas.io.formats.printing"
    ],
    "pandas.compat.numpy.function": [
        "pandas.errors",
        "typing.TypeVar",
        "typing.overload",
        "pandas.compat.numpy.function.CompatValidator",
        "pandas.util._validators",
        "pandas.compat.numpy.function.CompatValidator.__init__",
        "numpy",
        "pandas._typing"
    ],
    "pandas.util._validators": [
        "typing.TypeVar",
        "pandas.core.dtypes.common",
        "pandas.util._exceptions",
        "numpy",
        "typing.overload"
    ],
    "pandas.compat.numpy.function.CompatValidator": [],
    "pandas.compat.numpy.function.CompatValidator.__init__": [],
    "pandas.core.dtypes.astype": [
        "pandas._libs.tslibs",
        "pandas.errors",
        "typing.overload",
        "pandas.core.dtypes.dtypes",
        "pandas.core.arrays",
        "pandas.core.dtypes.common",
        "pandas.core.dtypes.missing",
        "pandas.util._exceptions",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.dtypes.cast": [
        "pandas._libs.tslibs",
        "dateutil.parser",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.generic",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.dtypes.astype",
        "pandas.core.dtypes.missing",
        "pandas",
        "pandas.util._validators",
        "pandas.errors",
        "typing.TypeVar",
        "pandas.core.arrays",
        "numpy.core.getlimits.iinfo.__init__",
        "pandas.core.dtypes.common",
        "pandas.core.dtypes.inference",
        "pandas.core.dtypes.cast.LossySetitemError",
        "numpy.core.iinfo",
        "numpy",
        "typing.overload"
    ],
    "dateutil.parser": [
        "dateutil.parser.isoparser",
        "dateutil.parser.__deprecated_private_func",
        "dateutil.parser._parser",
        "dateutil.parser.__deprecate_private_class"
    ],
    "dateutil.parser._parser": [
        "dateutil.parser._parser.ParserError",
        "dateutil.parser._parser.UnknownTimezoneWarning",
        "dateutil.parser._parser._resultbase",
        "dateutil.parser._parser._tzparser",
        "dateutil.parser._parser._timelex",
        "dateutil.parser._parser.parser.__init__",
        "six",
        "dateutil.parser._parser.parser",
        "dateutil",
        "dateutil.parser._parser.parserinfo",
        "dateutil.parser._parser._ymd"
    ],
    "six": [
        "six._LazyModule",
        "six.Module_six_moves_urllib_request",
        "<builtin>.int",
        "six.MovedAttribute",
        "<builtin>.enumerate",
        "six._MovedItems",
        "six.Module_six_moves_urllib_error",
        "<builtin>.globals",
        "<builtin>.len",
        "<builtin>.type",
        "<builtin>.isinstance",
        "six.Module_six_moves_urllib_robotparser",
        "<builtin>.setattr",
        "six._SixMetaPathImporter._add_module",
        "six.Module_six_moves_urllib_parse",
        "six.Module_six_moves_urllib_response",
        "six._SixMetaPathImporter",
        "six.Module_six_moves_urllib",
        "six.Iterator",
        "six.MovedAttribute.__init__",
        "six._LazyDescr",
        "six.exec_",
        "six._SixMetaPathImporter.__init__",
        "six.MovedModule",
        "six._add_doc",
        "<builtin>.getattr",
        "six.MovedModule.__init__",
        "six.X"
    ],
    "six.X": [],
    "six._LazyDescr": [],
    "six.MovedModule": [],
    "six._LazyModule": [],
    "six.MovedAttribute": [],
    "six._SixMetaPathImporter": [],
    "six._SixMetaPathImporter.__init__": [],
    "six._MovedItems": [],
    "six.MovedAttribute.__init__": [
        "<builtin>.super"
    ],
    "six.MovedModule.__init__": [
        "<builtin>.super"
    ],
    "<builtin>.setattr": [],
    "six._SixMetaPathImporter._add_module": [],
    "six.Module_six_moves_urllib_parse": [],
    "six.Module_six_moves_urllib_error": [],
    "six.Module_six_moves_urllib_request": [],
    "six.Module_six_moves_urllib_response": [],
    "six.Module_six_moves_urllib_robotparser": [],
    "six.Module_six_moves_urllib": [
        "six._SixMetaPathImporter._get_module"
    ],
    "six._SixMetaPathImporter._get_module": [],
    "six.Iterator": [],
    "six._add_doc": [],
    "six.exec_": [
        "<builtin>.exec"
    ],
    "<builtin>.exec": [],
    "<builtin>.enumerate": [],
    "dateutil": [
        "dateutil._version"
    ],
    "dateutil._version": [],
    "dateutil.parser._parser._timelex": [
        "<builtin>.classmethod"
    ],
    "dateutil.parser._parser._resultbase": [],
    "dateutil.parser._parser.parserinfo": [],
    "dateutil.parser._parser._ymd": [
        "<builtin>.property"
    ],
    "dateutil.parser._parser.parser": [
        "dateutil.parser._parser.parser._result"
    ],
    "dateutil.parser._parser.parser._result": [],
    "dateutil.parser._parser.parser.__init__": [
        "dateutil.parser._parser.parserinfo.__init__"
    ],
    "dateutil.parser._parser.parserinfo.__init__": [
        "dateutil.parser._parser.parserinfo._convert"
    ],
    "dateutil.parser._parser.parserinfo._convert": [
        "<builtin>.enumerate",
        "<builtin>.isinstance"
    ],
    "dateutil.parser._parser._tzparser": [
        "dateutil.parser._parser._tzparser._result"
    ],
    "dateutil.parser._parser._tzparser._result": [
        "dateutil.parser._parser._tzparser._result._attr"
    ],
    "dateutil.parser._parser._tzparser._result._attr": [],
    "dateutil.parser._parser.ParserError": [],
    "dateutil.parser._parser.UnknownTimezoneWarning": [],
    "dateutil.parser.isoparser": [
        "dateutil.parser.isoparser.isoparser.__init__",
        "dateutil.parser.isoparser.isoparser",
        "six",
        "dateutil.tz"
    ],
    "dateutil.tz": [
        "dateutil.tz.DeprecatedTzFormatWarning",
        "dateutil.tz.tz"
    ],
    "dateutil.tz.tz": [
        "dateutil.tz.tz._ttinfo",
        "dateutil.tz.tz.tzrange",
        "dateutil.tz.tz._tzicalvtz",
        "dateutil.tz.tz._tzicalvtzcomp",
        "dateutil.tz.tz.__get_gettz",
        "dateutil.tz.tz._tzfile",
        "dateutil.tz.win",
        "dateutil.tz.tz.tzfile",
        "dateutil.tz.tz.tzical",
        "dateutil.tz.tz._nullcontext",
        "dateutil.tz._factories",
        "six",
        "dateutil.tz._common",
        "dateutil.tz.tz.tzstr",
        "dateutil.tz.tz.tzlocal",
        "dateutil.tz.tz.tzutc",
        "dateutil.tz.tz.tzoffset"
    ],
    "dateutil.tz._common": [
        "dateutil.tz._common.tzrangebase",
        "dateutil.tz._common._tzinfo",
        "dateutil.tz._common._DatetimeWithFold",
        "datetime.timedelta",
        "six",
        "<builtin>.hasattr"
    ],
    "dateutil.tz._common._DatetimeWithFold": [
        "<builtin>.property"
    ],
    "dateutil.tz._common._tzinfo": [
        "dateutil.tz._common._validate_fromutc_inputs"
    ],
    "dateutil.tz._common._validate_fromutc_inputs": [
        "functools.wraps"
    ],
    "functools.wraps": [],
    "dateutil.tz._common.tzrangebase": [
        "<builtin>.property",
        "dateutil.tz._common.tzname_in_python2"
    ],
    "dateutil.tz._common.tzname_in_python2": [
        "functools.wraps"
    ],
    "dateutil.tz._factories": [
        "dateutil.tz._factories._TzOffsetFactory",
        "dateutil.tz._factories._TzFactory",
        "dateutil.tz._factories._TzSingleton",
        "dateutil.tz._factories._TzStrFactory"
    ],
    "dateutil.tz._factories._TzSingleton": [],
    "dateutil.tz._factories._TzFactory": [],
    "dateutil.tz._factories._TzOffsetFactory": [],
    "dateutil.tz._factories._TzStrFactory": [],
    "dateutil.tz.win": [
        "dateutil.tz.win.tzres",
        "dateutil.tz.win._settzkeyname",
        "dateutil.tz.win.tzwinlocal",
        "<builtin>.ImportError",
        "dateutil.tz.win.tzwin",
        "dateutil.tz.win.tzwinbase",
        "six",
        "dateutil.tz._common"
    ],
    "dateutil.tz.win._settzkeyname": [],
    "dateutil.tz.win.tzres": [],
    "dateutil.tz.win.tzwinbase": [
        "<builtin>.property",
        "<builtin>.staticmethod"
    ],
    "dateutil.tz.win.tzwin": [],
    "dateutil.tz.win.tzwinlocal": [],
    "dateutil.tz.tz.tzutc": [
        "dateutil.tz._common.tzname_in_python2",
        "dateutil.tz._common._validate_fromutc_inputs"
    ],
    "dateutil.tz.tz.tzoffset": [
        "dateutil.tz._common.tzname_in_python2",
        "dateutil.tz._common._validate_fromutc_inputs"
    ],
    "dateutil.tz.tz.tzlocal": [
        "dateutil.tz._common.tzname_in_python2"
    ],
    "dateutil.tz.tz._ttinfo": [],
    "dateutil.tz.tz._tzfile": [],
    "dateutil.tz.tz.tzfile": [
        "dateutil.tz._common.tzname_in_python2"
    ],
    "dateutil.tz.tz.tzrange": [
        "<builtin>.property"
    ],
    "dateutil.tz.tz.tzstr": [],
    "dateutil.tz.tz._tzicalvtzcomp": [],
    "dateutil.tz.tz._tzicalvtz": [
        "dateutil.tz._common.tzname_in_python2"
    ],
    "dateutil.tz.tz.tzical": [],
    "dateutil.tz.tz.__get_gettz": [
        "dateutil.tz.tz.__get_gettz.GettzFunc",
        "dateutil.tz.tz.__get_gettz.GettzFunc.__init__"
    ],
    "dateutil.tz.tz.__get_gettz.GettzFunc": [
        "<builtin>.staticmethod"
    ],
    "dateutil.tz.tz.__get_gettz.GettzFunc.__init__": [
        "collections.OrderedDict"
    ],
    "collections.OrderedDict": [],
    "dateutil.tz.tz._nullcontext": [],
    "dateutil.tz.DeprecatedTzFormatWarning": [],
    "dateutil.parser.isoparser.isoparser": [
        "dateutil.parser.isoparser._takes_ascii"
    ],
    "dateutil.parser.isoparser._takes_ascii": [
        "functools.wraps"
    ],
    "dateutil.parser.isoparser.isoparser.__init__": [
        "<builtin>.ValueError",
        "<builtin>.ord",
        "<builtin>.len"
    ],
    "<builtin>.ord": [],
    "dateutil.parser.__deprecate_private_class": [
        "dateutil.parser.__deprecate_private_class.private_class"
    ],
    "dateutil.parser.__deprecate_private_class.private_class": [],
    "dateutil.parser.__deprecated_private_func": [
        "functools.wraps"
    ],
    "numpy.core.iinfo": [],
    "pandas.core.dtypes.cast.LossySetitemError": [],
    "pandas.core.dtypes.concat": [
        "pandas.core.arrays.sparse",
        "pandas.core.dtypes.astype",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.generic",
        "pandas.core.arrays",
        "pandas.core.dtypes.common",
        "pandas.util._exceptions",
        "numpy",
        "pandas.core.dtypes.cast",
        "pandas._typing"
    ],
    "pandas.core.arrays.sparse": [
        "pandas.core.arrays.sparse.accessor",
        "pandas.core.arrays.sparse.dtype",
        "pandas.core.arrays.sparse.array"
    ],
    "pandas.core.arrays.sparse.accessor": [
        "pandas.compat._optional",
        "pandas.core.arrays.sparse.accessor.SparseFrameAccessor",
        "pandas.core.arrays.sparse.dtype",
        "pandas.core.arrays.sparse.array",
        "pandas.core.arrays.sparse.accessor.SparseAccessor",
        "pandas",
        "pandas.core.accessor",
        "pandas.core.arrays.sparse.accessor.BaseAccessor",
        "numpy",
        "pandas.core.dtypes.cast"
    ],
    "pandas.compat._optional": [
        "pandas.util._exceptions",
        "pandas.util.version"
    ],
    "pandas.util.version": [
        "pandas.util.version.InvalidVersion",
        "pandas.util.version.Version",
        "pandas.util.version.NegativeInfinityType",
        "pandas.util.version.InfinityType",
        "pandas.util.version._BaseVersion",
        "pandas.util.version.LegacyVersion"
    ],
    "pandas.util.version.InfinityType": [],
    "pandas.util.version.NegativeInfinityType": [],
    "pandas.util.version.InvalidVersion": [],
    "pandas.util.version._BaseVersion": [],
    "pandas.util.version.LegacyVersion": [
        "<builtin>.property"
    ],
    "pandas.util.version.Version": [
        "<builtin>.property"
    ],
    "pandas.core.accessor": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators",
        "pandas.core.accessor.CachedAccessor",
        "pandas.core.accessor.DirNamesMixin",
        "pandas.core.accessor.PandasDelegate",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._exceptions"
    ],
    "pandas.core.accessor.DirNamesMixin": [
        "<builtin>.set",
        "<builtin>.frozenset"
    ],
    "pandas.core.accessor.PandasDelegate": [
        "<builtin>.classmethod"
    ],
    "pandas.core.accessor.CachedAccessor": [],
    "pandas.util._decorators.doc": [],
    "pandas.util._decorators.doc.decorator": [
        "<builtin>.hasattr",
        "<builtin>.isinstance",
        "textwrap.dedent"
    ],
    "textwrap.dedent": [],
    "pandas.core.arrays.sparse.array": [
        "pandas._libs.tslibs",
        "pandas.core.algorithms",
        "pandas.core.arraylike",
        "pandas.core.dtypes.generic",
        "pandas.core.ops",
        "pandas.util._exceptions",
        "pandas.core.base",
        "pandas._typing",
        "pandas.core.dtypes.astype",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.core.array_algos.quantile",
        "pandas.compat.numpy.function",
        "<builtin>.type",
        "pandas.core.common",
        "pandas.util._validators",
        "pandas.core.dtypes.missing",
        "pandas",
        "pandas.core.dtypes.cast",
        "pandas.core.arrays.sparse.array.ellipsis",
        "pandas.errors",
        "typing.TypeVar",
        "pandas.core.arrays",
        "pandas.core.arrays.sparse.array.SparseArray",
        "pandas.core.dtypes.common",
        "pandas.core.missing",
        "pandas.core.arrays.sparse.dtype",
        "pandas.core.nanops",
        "numpy",
        "typing.overload",
        "pandas.io.formats.printing"
    ],
    "pandas.core.arraylike": [
        "pandas.core.construction",
        "pandas.core.dtypes.generic",
        "pandas.core.roperator",
        "pandas.core.ops.common",
        "pandas.util._exceptions",
        "pandas.core.arraylike.OpsMixin",
        "numpy"
    ],
    "pandas.core.roperator": [],
    "pandas.core.construction": [
        "pandas.util._exceptions",
        "pandas",
        "pandas.errors",
        "typing.overload",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.cast",
        "pandas.core.dtypes.generic",
        "pandas.core.dtypes.base",
        "pandas.core.dtypes.common",
        "pandas.core.common",
        "pandas.core.dtypes.missing",
        "numpy.ma",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.common": [
        "pandas",
        "typing.overload",
        "pandas.core.dtypes.cast",
        "pandas.core.dtypes.generic",
        "pandas.core.dtypes.inference",
        "pandas.core.dtypes.missing",
        "pandas.util._exceptions",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.ops.common": [
        "pandas.core.dtypes.generic",
        "pandas._typing"
    ],
    "pandas.core.arraylike.OpsMixin": [
        "pandas.core.ops.common.unpack_zerodim_and_defer",
        "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper"
    ],
    "pandas.core.ops.common.unpack_zerodim_and_defer": [],
    "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper": [
        "pandas.core.ops.common._unpack_zerodim_and_defer"
    ],
    "pandas.core.ops.common._unpack_zerodim_and_defer": [
        "functools.wraps",
        "<str>.strip"
    ],
    "pandas.core.algorithms": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.generic",
        "pandas.util._decorators.doc.decorator",
        "pandas._libs",
        "pandas.util._exceptions",
        "pandas.core.dtypes.concat",
        "pandas._typing",
        "pandas.core.algorithms.SelectNSeries",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.core.array_algos.take",
        "pandas.core.dtypes.missing",
        "pandas",
        "pandas.core.dtypes.cast",
        "pandas.core.arrays",
        "pandas.core.algorithms.SelectN",
        "pandas.core.algorithms.SelectNFrame",
        "pandas.core.dtypes.common",
        "textwrap.dedent",
        "numpy",
        "typing.overload"
    ],
    "pandas.core.array_algos.take": [
        "pandas.core.construction",
        "typing.overload",
        "pandas.core.arrays.base",
        "pandas.core.arrays._mixins",
        "pandas.core.dtypes.cast",
        "pandas.core.dtypes.missing",
        "pandas.core.array_algos.take._view_wrapper",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.arrays._mixins": [
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.core.dtypes.dtypes",
        "pandas._typing",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.core.array_algos.quantile",
        "pandas.core.dtypes.missing",
        "pandas",
        "pandas.util._validators",
        "pandas.core.arrays.base",
        "pandas.errors",
        "typing.TypeVar",
        "pandas.core.arrays._mixins.NDArrayBackedExtensionArray",
        "pandas.core.array_algos.transforms",
        "pandas.core.dtypes.common",
        "pandas.core.missing",
        "pandas.core.sorting",
        "numpy"
    ],
    "pandas.core.missing": [
        "pandas.compat._optional",
        "pandas.core.dtypes.cast",
        "pandas.core.missing._datetimelike_compat",
        "pandas.core.dtypes.missing",
        "pandas",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.missing._datetimelike_compat": [
        "functools.wraps",
        "typing.cast"
    ],
    "pandas.core.array_algos.quantile": [
        "pandas.core.dtypes.missing",
        "pandas.compat.numpy",
        "numpy",
        "pandas._typing"
    ],
    "pandas.compat.numpy": [
        "<builtin>.ImportError",
        "pandas.util.version.Version.__init__",
        "numpy",
        "pandas.util.version"
    ],
    "pandas.util.version.Version.__init__": [
        "<builtin>.int",
        "pandas.util.version._parse_letter_version",
        "pandas.util.version._parse_local_version",
        "pandas.util.version._cmpkey",
        "<builtin>.tuple"
    ],
    "pandas.util.version._parse_letter_version": [
        "<str>.lower",
        "<builtin>.int"
    ],
    "<str>.lower": [],
    "pandas.util.version._parse_local_version": [
        "<builtin>.tuple",
        "<builtin>.int"
    ],
    "pandas.util.version._cmpkey": [
        "<builtin>.reversed",
        "<builtin>.isinstance",
        "<builtin>.tuple",
        "<builtin>.list"
    ],
    "<builtin>.reversed": [],
    "pandas.core.array_algos.transforms": [
        "numpy"
    ],
    "pandas.core.arrays.base": [
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.core.arraylike",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.generic",
        "pandas.core.arrays.base.ExtensionOpsMixin",
        "pandas.core.arrays.base.ExtensionScalarOpsMixin",
        "pandas.compat",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.array_algos.quantile",
        "pandas.compat.numpy.function",
        "pandas.core.dtypes.missing",
        "pandas.util._validators",
        "pandas.core.arrays.base.ExtensionArraySupportsAnyAll",
        "pandas.core.dtypes.cast",
        "pandas.errors",
        "typing.TypeVar",
        "pandas.core.dtypes.common",
        "pandas.core.arrays.base.ExtensionArray",
        "pandas.core.missing",
        "pandas.core.roperator",
        "pandas.core.sorting",
        "numpy"
    ],
    "pandas.core.sorting": [
        "pandas.core.construction",
        "pandas.core.indexes.base",
        "pandas.core.arrays",
        "pandas.core.dtypes.generic",
        "pandas.core.dtypes.missing",
        "pandas",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.arrays.base.ExtensionArraySupportsAnyAll": [],
    "pandas.core.arrays.base.ExtensionArray": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property",
        "pandas.util._decorators.Substitution.__init__",
        "<builtin>.classmethod",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.util._decorators.Appender.__init__",
        "typing.overload"
    ],
    "pandas.util._decorators.deprecate_nonkeyword_arguments": [],
    "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate": [
        "pandas.util._decorators.future_version_msg",
        "functools.wraps",
        "<builtin>.len"
    ],
    "pandas.util._decorators.future_version_msg": [],
    "pandas.util._decorators.Appender.__init__": [
        "pandas.util._decorators.indent"
    ],
    "pandas.util._decorators.indent": [
        "<str>.split",
        "<builtin>.isinstance"
    ],
    "pandas.util._decorators.Substitution.__init__": [
        "<builtin>.AssertionError"
    ],
    "pandas._libs.properties.cache_readonly": [],
    "pandas.core.arrays.base.ExtensionOpsMixin": [
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.base.ExtensionScalarOpsMixin": [
        "<builtin>.classmethod"
    ],
    "pandas.core.indexers": [
        "pandas.core.indexers.utils"
    ],
    "pandas.core.indexers.utils": [
        "pandas.core.frame",
        "pandas.core.indexes.base",
        "pandas.core.dtypes.generic",
        "pandas.util._exceptions",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.frame": [
        "pandas.core.arrays.sparse",
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.core.series",
        "pandas.core.arraylike",
        "pandas.core.dtypes.dtypes",
        "pandas.core.ops",
        "pandas.io.common",
        "pandas.core.sorting",
        "pandas.io.formats.console",
        "pandas.util._exceptions",
        "pandas.core.groupby.generic",
        "pandas._typing",
        "pandas.core.ops.methods.add_flex_arithmetic_methods",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.core.indexing",
        "pandas.plotting",
        "pandas.core.array_algos.take",
        "pandas.compat.numpy.function",
        "pandas.core.shared_docs",
        "pandas.core.common",
        "pandas.util._validators",
        "pandas.core.dtypes.missing",
        "numpy.ma",
        "pandas.core.indexes.api",
        "pandas.core.indexes.multi",
        "pandas.core.dtypes.cast",
        "pandas.compat._optional",
        "pandas.io.formats.info",
        "pandas.errors",
        "pandas.io.formats.style",
        "pandas.core.internals",
        "pandas.core.arrays",
        "pandas.io.formats.format",
        "pandas.compat.numpy",
        "pandas.core.resample",
        "pandas.core.apply",
        "pandas.core.internals.construction",
        "pandas.core.interchange.dataframe_protocol",
        "pandas.core.generic.NDFrame._add_numeric_operations",
        "pandas.core.dtypes.common",
        "pandas._config",
        "pandas.core.generic",
        "pandas.core.reshape.melt",
        "pandas.core.frame.DataFrame",
        "pandas.core.nanops",
        "pandas.core.accessor",
        "numpy"
    ],
    "pandas.core.nanops": [
        "pandas.core.nanops.bottleneck_switch",
        "pandas.core.nanops.disallow",
        "pandas.core.dtypes.dtypes",
        "pandas._libs",
        "pandas._typing",
        "pandas.core.construction",
        "pandas.core.nanops._datetimelike_compat",
        "pandas.compat._optional.import_optional_dependency",
        "pandas.core.nanops.set_use_bottleneck",
        "pandas.core.dtypes.missing",
        "pandas.compat._optional",
        "pandas.core.nanops.bottleneck_switch.__init__",
        "pandas.core.dtypes.common",
        "pandas.core.nanops._nanminmax",
        "pandas._config",
        "pandas._config.config.CallableDynamicDoc.__init__",
        "pandas.core.nanops.disallow.__init__",
        "pandas.core.nanops.make_nancomp",
        "pandas.core.nanops.maybe_operate_rowwise",
        "numpy"
    ],
    "pandas.compat._optional.import_optional_dependency": [
        "pandas.util.version.Version.__init__",
        "<str>.split",
        "<builtin>.ImportError",
        "pandas.compat._optional.get_version",
        "<map>.get",
        "pandas.util._exceptions.find_stack_level"
    ],
    "<map>.get": [],
    "<str>.split": [],
    "pandas.compat._optional.get_version": [
        "<builtin>.getattr",
        "<builtin>.ImportError"
    ],
    "pandas.util._exceptions.find_stack_level": [
        "pandas"
    ],
    "pandas.core.nanops.set_use_bottleneck": [],
    "pandas.core.nanops.disallow": [],
    "pandas.core.nanops.bottleneck_switch": [],
    "pandas.core.nanops.maybe_operate_rowwise": [
        "typing.cast"
    ],
    "pandas.core.nanops._datetimelike_compat": [
        "typing.cast"
    ],
    "pandas.core.nanops.disallow.__init__": [
        "<builtin>.super",
        "<builtin>.tuple",
        "pandas.core.dtypes.common.pandas_dtype"
    ],
    "pandas.core.dtypes.common.pandas_dtype": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.inference.is_hashable",
        "<builtin>.TypeError"
    ],
    "pandas.core.dtypes.inference.is_hashable": [
        "<builtin>.hash"
    ],
    "<builtin>.hash": [],
    "pandas.core.nanops.bottleneck_switch.__init__": [],
    "pandas.core.nanops._nanminmax": [
        "pandas.core.nanops.bottleneck_switch.__init__",
        "pandas.core.nanops._datetimelike_compat"
    ],
    "pandas.core.nanops.make_nancomp": [],
    "pandas.core.ops": [
        "pandas.util._decorators",
        "pandas",
        "pandas.core.algorithms",
        "pandas.core.ops.invalid",
        "pandas.core.dtypes.generic",
        "pandas.core.ops.mask_ops",
        "pandas.core.ops.array_ops",
        "pandas.core.roperator",
        "pandas.core.ops.docstrings",
        "pandas.core.ops.methods",
        "pandas.core.ops.common",
        "pandas.core.dtypes.missing",
        "pandas.util._exceptions",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.ops.array_ops": [
        "pandas.core.construction",
        "pandas._libs.tslibs",
        "pandas.core.ops.invalid",
        "pandas.core.ops.missing",
        "pandas.core.dtypes.cast",
        "pandas.core.dtypes.generic",
        "pandas.core.ops",
        "pandas.core.computation.expressions",
        "pandas.core.dtypes.common",
        "pandas.core.ops.dispatch",
        "pandas._libs",
        "pandas.core.dtypes.missing",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.computation.expressions": [
        "pandas._config",
        "pandas.core.ops",
        "pandas._config.config.CallableDynamicDoc.__init__",
        "pandas.core.computation.expressions.set_use_numexpr",
        "pandas.core.computation.check",
        "pandas.util._exceptions",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.computation.check": [
        "pandas.compat._optional",
        "pandas.compat._optional.import_optional_dependency"
    ],
    "pandas.core.computation.expressions.set_use_numexpr": [],
    "pandas.core.ops.missing": [
        "pandas.core.ops",
        "numpy",
        "pandas.core.dtypes.common"
    ],
    "pandas.core.ops.dispatch": [
        "pandas.core.dtypes.generic",
        "pandas._typing"
    ],
    "pandas.core.ops.invalid": [
        "numpy"
    ],
    "pandas.core.ops.docstrings": [
        "<builtin>.list"
    ],
    "pandas.core.ops.mask_ops": [
        "numpy"
    ],
    "pandas.core.ops.methods": [
        "pandas.core.ops",
        "pandas.core.dtypes.generic"
    ],
    "pandas.core.apply": [
        "pandas.core.apply.NDFrameApply",
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.core.apply.GroupByApply",
        "pandas.core.dtypes.generic",
        "pandas.core.apply.Apply",
        "pandas.util._exceptions",
        "pandas.core.base",
        "pandas._typing",
        "pandas.core.construction",
        "pandas.core.apply.FrameApply",
        "pandas.core.apply.SeriesApply",
        "pandas.core.apply.FrameColumnApply",
        "pandas.core.common",
        "pandas",
        "pandas.core.dtypes.cast",
        "pandas.core.apply.ResamplerWindowApply",
        "pandas.errors",
        "pandas.core.resample",
        "pandas.core.groupby",
        "pandas.core.window.rolling",
        "pandas.core.dtypes.common",
        "pandas._config",
        "pandas.core.apply.FrameRowApply",
        "numpy"
    ],
    "pandas.core.base": [
        "pandas.util._decorators",
        "pandas.core.base.IndexOpsMixin",
        "pandas.core.algorithms",
        "pandas.core.arraylike",
        "pandas.core.dtypes.generic",
        "pandas.core.ops",
        "pandas.compat",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.construction",
        "pandas.core.base.PandasObject",
        "pandas.compat.numpy.function",
        "pandas.core.dtypes.missing",
        "pandas",
        "pandas.errors",
        "typing.TypeVar",
        "pandas.core.arrays",
        "pandas.core.base.SelectionMixin",
        "pandas.core.base.NoNewAttributesMixin",
        "pandas.core.dtypes.common",
        "pandas.core.nanops",
        "pandas.core.accessor",
        "numpy"
    ],
    "pandas.core.base.PandasObject": [
        "<builtin>.property"
    ],
    "pandas.core.base.NoNewAttributesMixin": [],
    "pandas.core.base.SelectionMixin": [
        "typing.final",
        "<builtin>.property",
        "<builtin>.set",
        "pandas._libs.properties.cache_readonly"
    ],
    "typing.final": [],
    "pandas.core.base.IndexOpsMixin": [
        "pandas.util._decorators.doc",
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property",
        "typing.final",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.frozenset",
        "typing.overload"
    ],
    "pandas.core.groupby": [
        "pandas.core.groupby.generic",
        "pandas.core.groupby.grouper",
        "pandas.core.groupby.groupby"
    ],
    "pandas.core.groupby.generic": [
        "pandas.util._decorators",
        "pandas.core.groupby.base",
        "pandas.core.algorithms",
        "pandas.core.series",
        "pandas._libs",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.groupby.generic.SeriesGroupBy",
        "pandas.core.construction",
        "pandas.plotting",
        "pandas.core.groupby.grouper",
        "pandas.core.shared_docs",
        "pandas.core.common",
        "pandas.core.dtypes.missing",
        "pandas.core.indexes.api",
        "pandas.core.groupby.generic.NamedAgg",
        "pandas.errors",
        "typing.TypeVar",
        "pandas.core.apply",
        "pandas.core.arrays.categorical",
        "pandas.core.groupby.groupby",
        "pandas.core.dtypes.common",
        "pandas.core.groupby.generic.DataFrameGroupBy",
        "pandas.core.indexes.category",
        "pandas.core.generic",
        "pandas.core.nanops",
        "pandas.core.util.numba_",
        "numpy",
        "pandas.core.frame"
    ],
    "pandas.core.arrays.categorical": [
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.core.arraylike",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.generic",
        "pandas.core.ops",
        "pandas.core.sorting",
        "pandas._libs",
        "pandas.io.formats.console",
        "pandas.util._exceptions",
        "pandas.core.strings.object_array",
        "pandas.core.arrays.categorical.CategoricalAccessor",
        "pandas.core.base",
        "pandas._typing",
        "pandas.core.arrays.categorical.Categorical",
        "pandas.core.construction",
        "pandas.core.arrays._mixins",
        "pandas.compat.numpy.function",
        "pandas.core.dtypes.missing",
        "pandas.util._validators",
        "pandas.core.common",
        "pandas",
        "pandas.core.dtypes.cast",
        "typing.TypeVar",
        "pandas.core.ops.common",
        "pandas.core.dtypes.common",
        "pandas._config",
        "pandas.core.accessor",
        "numpy"
    ],
    "pandas.core.strings.object_array": [
        "pandas.core.strings.object_array.ObjectStringArrayMixin",
        "pandas",
        "pandas.core.dtypes.missing",
        "pandas.core.strings.base",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.strings.base": [
        "pandas",
        "numpy",
        "pandas._typing",
        "pandas.core.strings.base.BaseStringArrayMethods"
    ],
    "pandas.core.strings.base.BaseStringArrayMethods": [],
    "pandas.core.strings.object_array.ObjectStringArrayMixin": [],
    "pandas.io.formats.console": [],
    "pandas.core.arrays.categorical.Categorical": [
        "<builtin>.property",
        "pandas.core.arrays.categorical._cat_compare_op",
        "<builtin>.classmethod",
        "pandas.core.arrays._mixins.ravel_compat",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "<builtin>.frozenset",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.util._decorators.deprecate_kwarg",
        "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg",
        "typing.overload"
    ],
    "pandas.core.arrays.categorical._cat_compare_op": [
        "pandas.core.ops.common.unpack_zerodim_and_defer",
        "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper"
    ],
    "pandas.core.arrays._mixins.ravel_compat": [],
    "pandas.util._decorators.deprecate_kwarg": [
        "<builtin>.hasattr",
        "<builtin>.TypeError",
        "<builtin>.callable"
    ],
    "<builtin>.callable": [],
    "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg": [
        "functools.wraps",
        "typing.cast"
    ],
    "pandas.core.arrays.categorical.CategoricalAccessor": [
        "<builtin>.property",
        "<builtin>.staticmethod"
    ],
    "pandas.core.groupby.base": [
        "pandas.core.groupby.base.OutputKey",
        "<builtin>.frozenset"
    ],
    "pandas.core.groupby.base.OutputKey": [],
    "pandas.core.groupby.groupby": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators",
        "pandas.core.groupby.numba_",
        "pandas.core.groupby.base",
        "pandas.core.algorithms",
        "pandas.core.series",
        "pandas.core._numba.executor",
        "pandas.core.window",
        "pandas.core.internals.blocks",
        "pandas.core.groupby.groupby.GroupBy",
        "pandas.util._decorators.doc.decorator",
        "pandas._libs",
        "pandas.core.groupby.ops",
        "pandas.util._exceptions",
        "pandas.core.base",
        "pandas._typing",
        "pandas.compat.numpy.function",
        "pandas.core.common",
        "pandas.core.dtypes.missing",
        "pandas.core.indexes.api",
        "pandas.core.groupby.indexing",
        "pandas.core.dtypes.cast",
        "pandas.errors",
        "pandas.core.groupby.groupby.GroupByPlot",
        "pandas.core.groupby.groupby.BaseGroupBy",
        "typing.TypeVar",
        "pandas.core.arrays",
        "pandas._config.config",
        "pandas.core.dtypes.common",
        "pandas.core.generic",
        "pandas.core.sample",
        "pandas.core.nanops",
        "pandas.core.util.numba_",
        "pandas.core.sorting",
        "numpy",
        "pandas.core.frame"
    ],
    "pandas.core._numba.executor": [
        "pandas.compat._optional",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.generic": [
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.core.series",
        "pandas.core.arraylike",
        "pandas.core.reshape.concat",
        "pandas.core.dtypes.generic",
        "pandas.core.array_algos.replace",
        "pandas.core.ops",
        "pandas.core.window",
        "pandas.core.sorting",
        "pandas.util._exceptions",
        "pandas.core.base",
        "pandas._typing",
        "pandas.core.indexing",
        "pandas.core.construction",
        "pandas.core.frame",
        "pandas.io.pytables",
        "pandas.compat.numpy.function",
        "pandas.core.describe",
        "pandas.core.shared_docs",
        "pandas.core.common",
        "pandas.util._validators",
        "pandas.core.dtypes.missing",
        "pandas.core.indexes.api",
        "pandas.compat._optional",
        "pandas.errors",
        "pandas.core.internals",
        "pandas.core.arrays",
        "pandas.io.formats.format",
        "pandas.core.resample",
        "pandas._config.config",
        "pandas.core.internals.construction",
        "pandas.core.dtypes.common",
        "pandas.core.dtypes.inference",
        "pandas.core.generic.NDFrame",
        "pandas.core.sample",
        "pandas.core.missing",
        "pandas.core.nanops",
        "pandas.core.indexers.objects",
        "pandas.core.flags",
        "numpy",
        "pandas.io.formats.printing"
    ],
    "pandas.core.indexing": [
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.core.dtypes.generic",
        "pandas.core.indexing.IndexingMixin",
        "<builtin>.slice",
        "pandas.util._exceptions",
        "pandas.core.dtypes.concat",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.core.indexing._LocationIndexer",
        "pandas.core.indexing._IndexSlice",
        "pandas.core.indexing._iLocIndexer",
        "pandas.core.indexing._iAtIndexer",
        "pandas.core.common",
        "pandas",
        "pandas.core.dtypes.missing",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.cast",
        "pandas.errors",
        "typing.TypeVar",
        "pandas.core.indexing._ScalarAccessIndexer",
        "pandas.core.dtypes.common",
        "pandas.core.indexing._LocIndexer",
        "pandas.core.indexing._AtIndexer",
        "numpy"
    ],
    "pandas.core.indexes.api": [
        "pandas.core.indexes.datetimes",
        "pandas.core.indexes.range",
        "pandas.core.indexes.category",
        "pandas.core.algorithms",
        "pandas.errors",
        "pandas.core.indexes.base",
        "pandas.core.indexes.numeric",
        "pandas.core.dtypes.cast",
        "pandas.core.indexes.period",
        "pandas.core.indexes.interval",
        "pandas.core.indexes.timedeltas",
        "pandas._libs",
        "pandas.core.indexes.multi",
        "numpy",
        "pandas.core.dtypes.common"
    ],
    "pandas.core.indexes.category": [
        "pandas.core.construction",
        "pandas.util._decorators",
        "pandas.core.indexes.base",
        "<builtin>.dict",
        "pandas.core.indexes.extension",
        "pandas.io.formats.printing",
        "pandas.core.arrays.categorical",
        "pandas.core.dtypes.missing",
        "pandas.util._exceptions",
        "pandas.core.indexes.category.CategoricalIndex",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.indexes.extension": [
        "pandas.core.indexes.extension.NDArrayBackedExtensionIndex",
        "pandas.util._decorators",
        "typing.TypeVar",
        "pandas.core.indexes.base",
        "pandas.core.arrays._mixins",
        "pandas.core.arrays",
        "pandas.core.dtypes.generic",
        "pandas.core.indexes.extension.ExtensionIndex",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.indexes.extension.ExtensionIndex": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators.doc.decorator",
        "pandas._libs.properties.cache_readonly"
    ],
    "pandas.core.indexes.extension.NDArrayBackedExtensionIndex": [],
    "pandas.io.formats.printing": [
        "pandas._config",
        "pandas.io.formats.printing.PrettyDict",
        "typing.TypeVar",
        "pandas.core.dtypes.inference"
    ],
    "pandas.io.formats.printing.PrettyDict": [],
    "pandas.core.indexes.category.CategoricalIndex": [
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.doc",
        "<builtin>.property",
        "pandas.util._decorators.doc.decorator"
    ],
    "pandas.core.indexes.datetimes": [
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas",
        "pandas.core.indexes.base",
        "pandas.core.indexes.datetimelike",
        "pandas.core.tools.times",
        "pandas.core.indexes.extension",
        "pandas.core.indexes.datetimes.DatetimeIndex",
        "pandas.core.dtypes.common",
        "pandas._libs",
        "pandas.core.common",
        "pandas.core.dtypes.missing",
        "pandas.util._exceptions",
        "pandas.core.arrays.datetimes",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.arrays.datetimes": [
        "pandas._libs.tslibs",
        "pandas.tseries.frequencies",
        "pandas.core.arrays._ranges",
        "pandas.core.dtypes.dtypes",
        "pandas.util._exceptions",
        "pandas.core.arrays.datetimelike",
        "pandas._typing",
        "pandas.core.dtypes.astype",
        "datetime.time",
        "pandas.core.common",
        "pandas",
        "pandas.util._validators",
        "pandas.core.dtypes.missing",
        "pandas.errors",
        "pandas.core.arrays",
        "pandas.core.dtypes.common",
        "pandas.core.arrays.datetimes.DatetimeArray",
        "pandas._libs.tslibs.offsets.BDay",
        "pandas.tseries.offsets",
        "numpy"
    ],
    "pandas.core.arrays.datetimelike": [
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.tseries.frequencies",
        "pandas.core.arraylike",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.generic",
        "pandas.core.ops",
        "pandas.core.ops.invalid",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.core.arrays.datetimelike.TimelikeOps",
        "pandas.core.arrays._mixins",
        "pandas.compat.numpy.function",
        "pandas.core.common",
        "pandas.core.dtypes.missing",
        "pandas.core.arrays.base",
        "pandas.errors",
        "typing.TypeVar",
        "pandas.core.arrays",
        "pandas.core.ops.common",
        "pandas.core.arrays.datetimelike.DatelikeOps",
        "pandas.core.dtypes.common",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin",
        "pandas.core.arrays.datetimelike.InvalidComparison",
        "pandas.core.nanops",
        "pandas.core.arrays.integer",
        "numpy",
        "typing.overload"
    ],
    "pandas.core.arrays.integer": [
        "pandas.core.arrays.integer.UInt64Dtype",
        "pandas.core.arrays.integer.Int64Dtype",
        "pandas.core.arrays.integer.Int8Dtype",
        "pandas.core.arrays.integer.IntegerArray",
        "pandas.core.dtypes.base",
        "pandas.core.arrays.numeric",
        "pandas.core.arrays.integer.IntegerDtype",
        "pandas.core.arrays.integer.Int16Dtype",
        "pandas.core.arrays.integer.Int32Dtype",
        "pandas.core.arrays.integer.UInt16Dtype",
        "pandas.core.arrays.integer.UInt8Dtype",
        "pandas.core.arrays.integer.UInt32Dtype",
        "numpy",
        "pandas.core.dtypes.common"
    ],
    "pandas.core.arrays.numeric": [
        "pandas.util._decorators",
        "pandas.errors",
        "typing.TypeVar",
        "pandas.core.arrays.numeric.NumericDtype",
        "pandas.core.arrays.numeric.NumericArray",
        "pandas.core.arrays.masked",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.arrays.masked": [
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.core.arraylike",
        "pandas.core.dtypes.dtypes",
        "pandas.core.ops",
        "pandas.core.array_algos.masked_reductions",
        "pandas._typing",
        "pandas.core.dtypes.astype",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.core.array_algos.quantile",
        "pandas.compat.numpy.function",
        "pandas.core.dtypes.missing",
        "pandas.util._validators",
        "pandas",
        "pandas.errors",
        "typing.TypeVar",
        "pandas.core.arrays",
        "pandas.core.arrays.masked.BaseMaskedArray",
        "pandas.core.dtypes.common",
        "pandas.core.dtypes.inference",
        "pandas.core.missing",
        "pandas.core.dtypes.base",
        "pandas.core.nanops",
        "numpy"
    ],
    "pandas.core.array_algos.masked_reductions": [
        "pandas.core.nanops",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.arrays.masked.BaseMaskedArray": [
        "pandas.util._decorators.doc",
        "<builtin>.property",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.classmethod",
        "typing.overload"
    ],
    "pandas.core.arrays.numeric.NumericDtype": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.numeric.NumericArray": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.integer.IntegerDtype": [
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.integer.IntegerArray": [],
    "pandas.core.arrays.integer.Int8Dtype": [],
    "pandas.core.arrays.integer.Int16Dtype": [],
    "pandas.core.arrays.integer.Int32Dtype": [],
    "pandas.core.arrays.integer.Int64Dtype": [],
    "pandas.core.arrays.integer.UInt8Dtype": [],
    "pandas.core.arrays.integer.UInt16Dtype": [],
    "pandas.core.arrays.integer.UInt32Dtype": [],
    "pandas.core.arrays.integer.UInt64Dtype": [],
    "pandas.tseries.frequencies": [
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas.tseries.frequencies._TimedeltaFrequencyInferer",
        "pandas.core.algorithms",
        "pandas.core.dtypes.generic",
        "pandas.core.dtypes.common",
        "pandas.tseries.frequencies._FrequencyInferer",
        "pandas.util._exceptions",
        "numpy",
        "pandas._typing"
    ],
    "pandas.tseries.frequencies._FrequencyInferer": [
        "pandas._libs.properties.cache_readonly"
    ],
    "pandas.tseries.frequencies._TimedeltaFrequencyInferer": [],
    "pandas.core.arrays.datetimelike.InvalidComparison": [],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin": [
        "pandas._libs.properties.cache_readonly",
        "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper",
        "<builtin>.property",
        "typing.final",
        "<builtin>.classmethod",
        "pandas.core.arrays._mixins.ravel_compat",
        "pandas.core.ops.common.unpack_zerodim_and_defer",
        "typing.overload",
        "pandas.core.ops.invalid.make_invalid_op"
    ],
    "pandas.core.ops.invalid.make_invalid_op": [],
    "pandas.core.arrays.datetimelike.DatelikeOps": [
        "pandas.util._decorators.Substitution.__init__"
    ],
    "pandas.core.arrays.datetimelike.TimelikeOps": [
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays._ranges": [
        "pandas._libs.tslibs",
        "numpy",
        "pandas._typing"
    ],
    "pandas.tseries.offsets": [],
    "datetime.time": [],
    "pandas.core.arrays.datetimes.DatetimeArray": [
        "pandas.core.arrays.datetimes._field_accessor",
        "<builtin>.property",
        "<builtin>.classmethod",
        "pandas.core.arrays._mixins.ravel_compat"
    ],
    "pandas.core.arrays.datetimes._field_accessor": [
        "<builtin>.property"
    ],
    "pandas._libs.tslibs.offsets.BDay": [],
    "pandas.core.indexes.datetimelike": [
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas._libs",
        "pandas.util._exceptions",
        "pandas.core.arrays.datetimelike",
        "pandas.core.dtypes.concat",
        "pandas.core.indexes.datetimelike.DatetimeTimedeltaMixin",
        "pandas.core.indexes.extension",
        "pandas.compat.numpy.function",
        "pandas.core.common",
        "pandas",
        "pandas.core.indexes.range",
        "typing.TypeVar",
        "pandas.core.indexes.base",
        "<builtin>.dict",
        "pandas.core.arrays",
        "pandas.core.dtypes.common",
        "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin",
        "pandas.core.tools.timedeltas",
        "numpy"
    ],
    "pandas.core.indexes.range": [
        "pandas.core.construction",
        "pandas.util._decorators",
        "pandas",
        "pandas.core.indexes.range.RangeIndex",
        "pandas.core.algorithms",
        "pandas.core.indexes.base",
        "pandas.core.indexes.numeric",
        "<builtin>.range",
        "pandas.core.dtypes.generic",
        "pandas.core.ops",
        "pandas.compat.numpy.function",
        "pandas.core.dtypes.common",
        "pandas.core.ops.common",
        "pandas.core.common",
        "pandas.util._exceptions",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.indexes.numeric": [
        "pandas.util._decorators",
        "pandas.core.indexes.numeric.Int64Index",
        "pandas.core.indexes.base",
        "pandas.core.indexes.numeric.UInt64Index",
        "pandas.core.indexes.numeric.IntegerIndex",
        "pandas.core.indexes.numeric.NumericIndex",
        "pandas.core.dtypes.generic",
        "pandas.core.indexes.numeric.Float64Index",
        "pandas.util._exceptions",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.indexes.numeric.NumericIndex": [
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.doc",
        "<builtin>.property",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.classmethod"
    ],
    "pandas.core.indexes.numeric.IntegerIndex": [
        "<builtin>.property"
    ],
    "pandas.core.indexes.numeric.Int64Index": [
        "<builtin>.property"
    ],
    "pandas.core.indexes.numeric.UInt64Index": [
        "<builtin>.property"
    ],
    "pandas.core.indexes.numeric.Float64Index": [
        "<builtin>.property"
    ],
    "pandas.core.indexes.range.RangeIndex": [
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.doc",
        "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper",
        "<builtin>.property",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.classmethod",
        "pandas.core.ops.common.unpack_zerodim_and_defer"
    ],
    "pandas.core.tools.timedeltas": [
        "pandas._libs.tslibs",
        "typing.overload",
        "pandas.core.dtypes.generic",
        "pandas.core.arrays.timedeltas",
        "pandas",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.arrays.timedeltas": [
        "pandas.core.arrays.timedeltas.TimedeltaArray",
        "pandas._libs.tslibs",
        "pandas",
        "pandas.core.arrays._ranges",
        "pandas.compat.numpy.function",
        "pandas.core.dtypes.common",
        "pandas.core.ops.common",
        "pandas.core.nanops",
        "pandas.core.common",
        "pandas.core.dtypes.missing",
        "pandas.util._validators",
        "pandas.core.arrays.datetimelike",
        "numpy",
        "pandas._typing",
        "pandas.core.dtypes.astype"
    ],
    "pandas.core.arrays.timedeltas.TimedeltaArray": [
        "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper",
        "pandas.core.arrays.timedeltas._field_accessor",
        "<builtin>.property",
        "<builtin>.classmethod",
        "pandas.core.ops.common.unpack_zerodim_and_defer"
    ],
    "pandas.core.arrays.timedeltas._field_accessor": [
        "<builtin>.property"
    ],
    "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin": [
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.doc",
        "<builtin>.property",
        "typing.final",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.indexes.datetimelike.DatetimeTimedeltaMixin": [
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.doc",
        "<builtin>.property",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.tools.times": [
        "pandas.core.dtypes.missing",
        "pandas.core.dtypes.generic",
        "numpy"
    ],
    "pandas.core.indexes.datetimes.DatetimeIndex": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.property",
        "pandas._libs.properties.cache_readonly"
    ],
    "pandas.core.indexes.interval": [
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.core.dtypes.dtypes",
        "pandas.core.arrays.interval",
        "pandas.core.indexes.timedeltas",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.indexers",
        "pandas.core.indexes.datetimes",
        "pandas.core.indexes.extension",
        "pandas.core.common",
        "pandas.core.dtypes.missing",
        "pandas.core.indexes.multi",
        "pandas.core.dtypes.cast",
        "pandas.errors",
        "pandas.core.indexes.base",
        "<builtin>.dict",
        "pandas.core.dtypes.common",
        "pandas.core.indexes.interval.IntervalIndex",
        "numpy"
    ],
    "pandas.core.arrays.interval": [
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.generic",
        "pandas.core.ops",
        "pandas._typing",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.compat.numpy.function",
        "pandas.core.common",
        "pandas.core.dtypes.missing",
        "pandas",
        "pandas.core.arrays.base",
        "pandas.core.dtypes.cast",
        "pandas.errors",
        "pandas.core.indexes.base",
        "typing.TypeVar",
        "pandas.core.dtypes.common",
        "pandas._config",
        "pandas.core.arrays.interval.IntervalArray",
        "numpy"
    ],
    "pandas.core.arrays.interval.IntervalArray": [
        "pandas.core.ops.common.unpack_zerodim_and_defer.wrapper",
        "<builtin>.property",
        "<builtin>.classmethod",
        "pandas.core.ops.common.unpack_zerodim_and_defer",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.util._decorators.Appender.__init__",
        "typing.overload"
    ],
    "pandas.core.indexes.multi": [
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.core.indexes.frozen",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.generic",
        "pandas.core.ops.invalid",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.compat.numpy.function",
        "pandas.core.indexes.multi.MultiIndexPyIntEngine",
        "pandas.core.common",
        "pandas.core.dtypes.missing",
        "pandas",
        "pandas.core.dtypes.cast",
        "pandas.errors",
        "pandas.core.indexes.base",
        "<builtin>.dict",
        "pandas.core.arrays",
        "pandas.core.indexes.multi.MultiIndex",
        "pandas.core.arrays.categorical",
        "pandas.core.dtypes.common",
        "pandas._config",
        "pandas.core.indexes.multi.MultiIndexUIntEngine",
        "pandas.core.sorting",
        "numpy",
        "pandas.io.formats.printing"
    ],
    "pandas.core.indexes.frozen": [
        "pandas.core.base",
        "pandas.core.indexes.frozen.FrozenList",
        "pandas.io.formats.printing"
    ],
    "pandas.core.indexes.frozen.FrozenList": [],
    "pandas.core.indexes.multi.MultiIndexUIntEngine": [],
    "pandas.core.indexes.multi.MultiIndexPyIntEngine": [],
    "pandas.core.indexes.multi.MultiIndex": [
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.doc",
        "<builtin>.property",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.classmethod",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "<builtin>.frozenset",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.util._decorators.Appender.__init__",
        "pandas.core.indexes.multi.names_compat",
        "pandas.core.ops.invalid.make_invalid_op"
    ],
    "pandas.core.indexes.multi.names_compat": [
        "functools.wraps",
        "typing.cast"
    ],
    "pandas.core.indexes.timedeltas": [
        "pandas._libs.tslibs",
        "pandas.core.indexes.timedeltas.TimedeltaIndex",
        "pandas.core.indexes.base",
        "pandas.core.indexes.datetimelike",
        "pandas.core.indexes.extension",
        "pandas.core.arrays.timedeltas",
        "pandas.core.common",
        "pandas.core.arrays.datetimelike",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.indexes.timedeltas.TimedeltaIndex": [
        "<builtin>.property"
    ],
    "pandas.core.indexes.interval.IntervalIndex": [
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "pandas.core.indexes.period": [
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas.core.indexes.datetimes",
        "pandas.core.arrays.period",
        "pandas.core.indexes.base",
        "pandas.core.indexes.datetimelike",
        "pandas.core.indexes.numeric",
        "<builtin>.dict",
        "pandas.core.dtypes.dtypes",
        "pandas.core.indexes.extension",
        "pandas.core.indexes.period.PeriodIndex",
        "pandas.core.dtypes.common",
        "pandas.core.common",
        "pandas.core.dtypes.missing",
        "pandas.util._exceptions",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.arrays.period": [
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "typing.TypeVar",
        "pandas.core.arrays.base",
        "typing.overload",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.generic",
        "pandas.core.arrays",
        "pandas.core.common",
        "pandas.core.arrays.period.PeriodArray",
        "pandas.core.dtypes.missing",
        "pandas.core.arrays.datetimelike",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.arrays.period.PeriodArray": [
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.doc",
        "pandas.core.arrays.period._field_accessor",
        "<builtin>.property",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.classmethod",
        "pandas.core.arrays._mixins.ravel_compat"
    ],
    "pandas.core.arrays.period._field_accessor": [
        "<builtin>.property"
    ],
    "pandas.core.indexes.period.PeriodIndex": [
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.doc",
        "<builtin>.property",
        "pandas.util._decorators.doc.decorator"
    ],
    "<builtin>.slice": [],
    "pandas.core.indexing._IndexSlice": [],
    "pandas.core.indexing.IndexingMixin": [
        "<builtin>.property"
    ],
    "pandas.core.indexing._LocationIndexer": [
        "typing.final"
    ],
    "pandas.core.indexing._LocIndexer": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators.doc.decorator"
    ],
    "pandas.core.indexing._iLocIndexer": [],
    "pandas.core.indexing._ScalarAccessIndexer": [],
    "pandas.core.indexing._AtIndexer": [
        "<builtin>.property"
    ],
    "pandas.core.indexing._iAtIndexer": [],
    "pandas.core.sample": [
        "pandas.core.generic",
        "pandas.core.dtypes.generic",
        "numpy"
    ],
    "pandas.core.array_algos.replace": [
        "pandas.core.dtypes.missing",
        "pandas.core.dtypes.common",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.describe": [
        "pandas._libs.tslibs",
        "pandas",
        "pandas.core.describe.NDFrameDescriberAbstract",
        "pandas.core.reshape.concat",
        "pandas.io.formats.format",
        "pandas.core.dtypes.common",
        "pandas.core.describe.DataFrameDescriber",
        "pandas.core.describe.SeriesDescriber",
        "pandas.util._validators",
        "pandas.util._exceptions",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.reshape.concat": [
        "pandas.util._decorators",
        "pandas",
        "typing.overload",
        "numpy",
        "pandas.core.internals",
        "pandas.core.generic",
        "pandas.core.dtypes.generic",
        "pandas.core.reshape.concat._Concatenator",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.core.arrays.categorical",
        "pandas.core.common",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.core.dtypes.missing",
        "pandas.util._exceptions",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.concat",
        "pandas._typing",
        "pandas.core.dtypes.inference"
    ],
    "pandas.core.internals": [
        "pandas.core.internals.base",
        "pandas.core.internals.concat",
        "pandas.core.internals.blocks",
        "pandas.core.internals.managers",
        "pandas.core.internals.array_manager",
        "pandas.core.internals.api"
    ],
    "pandas.core.internals.api": [
        "pandas.core.construction",
        "pandas.core.arrays",
        "pandas.core.internals.blocks",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.internals.blocks": [
        "pandas.core.arrays.sparse",
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas.core.internals.blocks.DatetimeTZBlock",
        "pandas.core.algorithms",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.generic",
        "pandas.core.array_algos.replace",
        "pandas._libs",
        "pandas.util._exceptions",
        "pandas.core.base",
        "pandas._typing",
        "pandas.core.dtypes.astype",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.core.internals.blocks.NDArrayBackedExtensionBlock",
        "pandas.core.arrays._mixins",
        "pandas.core.array_algos.quantile",
        "pandas.core.dtypes.missing",
        "pandas.util._validators",
        "pandas.core.common",
        "pandas",
        "pandas.core.internals.blocks.NumericBlock",
        "pandas.core.internals.blocks.ObjectBlock",
        "pandas.core.dtypes.cast",
        "pandas.errors",
        "pandas.core.arrays",
        "pandas.core.internals.blocks.CategoricalBlock",
        "pandas.core.array_algos.transforms",
        "pandas.core.computation.expressions",
        "pandas.core.array_algos.putmask",
        "pandas.core.internals.blocks.Block",
        "pandas.core.dtypes.common",
        "pandas.core.dtypes.inference",
        "pandas.core.internals.blocks.DatetimeLikeBlock",
        "pandas.core.missing",
        "pandas.core.internals.blocks.EABackedBlock",
        "pandas.core.internals.blocks.ExtensionBlock",
        "numpy",
        "pandas.core.internals.blocks.NumpyBlock"
    ],
    "pandas.core.array_algos.putmask": [
        "pandas.core.arrays",
        "pandas.core.dtypes.cast",
        "pandas.compat",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.internals.blocks.Block": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property",
        "typing.final",
        "pandas.core.internals.blocks.maybe_split"
    ],
    "pandas.core.internals.blocks.maybe_split": [
        "functools.wraps",
        "typing.cast"
    ],
    "pandas.core.internals.blocks.EABackedBlock": [
        "pandas._libs.properties.cache_readonly"
    ],
    "pandas.core.internals.blocks.ExtensionBlock": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property",
        "typing.final"
    ],
    "pandas.core.internals.blocks.NumpyBlock": [
        "<builtin>.property"
    ],
    "pandas.core.internals.blocks.NumericBlock": [],
    "pandas.core.internals.blocks.NDArrayBackedExtensionBlock": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.core.internals.blocks.DatetimeLikeBlock": [],
    "pandas.core.internals.blocks.DatetimeTZBlock": [],
    "pandas.core.internals.blocks.ObjectBlock": [
        "pandas.core.internals.blocks.maybe_split"
    ],
    "pandas.core.internals.blocks.CategoricalBlock": [
        "<builtin>.property"
    ],
    "pandas.core.internals.array_manager": [
        "pandas.core.arrays.sparse",
        "pandas.core.algorithms",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.generic",
        "pandas.core.internals.blocks",
        "pandas.core.internals.array_manager.ArrayManager",
        "pandas._libs",
        "pandas._typing",
        "pandas.core.dtypes.astype",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.core.internals.base",
        "pandas.core.array_algos.take",
        "pandas.core.array_algos.quantile",
        "pandas.core.internals.array_manager.BaseArrayManager",
        "pandas.core.dtypes.missing",
        "pandas.util._validators",
        "pandas.core.indexes.api",
        "pandas",
        "pandas.core.dtypes.cast",
        "pandas.core.internals.array_manager.SingleArrayManager",
        "typing.TypeVar",
        "pandas.core.arrays",
        "pandas.core.dtypes.common",
        "pandas.core.dtypes.inference",
        "numpy",
        "pandas.core.internals.array_manager.NullArrayProxy"
    ],
    "pandas.core.internals.base": [
        "pandas.core.internals.base.SingleDataManager",
        "pandas.errors",
        "typing.TypeVar",
        "pandas.core.internals.base.DataManager",
        "pandas.core.indexes.api",
        "pandas.core.base",
        "numpy",
        "pandas.core.dtypes.cast",
        "pandas._typing"
    ],
    "pandas.core.internals.base.DataManager": [
        "<builtin>.property",
        "typing.final"
    ],
    "pandas.core.internals.base.SingleDataManager": [
        "<builtin>.property",
        "<builtin>.classmethod",
        "typing.final"
    ],
    "pandas.core.internals.array_manager.BaseArrayManager": [
        "<builtin>.property",
        "<builtin>.staticmethod"
    ],
    "pandas.core.internals.array_manager.ArrayManager": [
        "<builtin>.property"
    ],
    "pandas.core.internals.array_manager.SingleArrayManager": [
        "<builtin>.property",
        "<builtin>.staticmethod",
        "<builtin>.classmethod"
    ],
    "pandas.core.internals.array_manager.NullArrayProxy": [
        "<builtin>.property"
    ],
    "pandas.core.internals.concat": [
        "pandas.core.arrays.sparse",
        "pandas.util._decorators",
        "pandas.core.construction",
        "pandas.core.internals.concat.JoinUnit",
        "pandas.core.algorithms",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.cast",
        "pandas.core.arrays",
        "pandas.core.dtypes.concat",
        "pandas.core.internals.blocks",
        "pandas.core.dtypes.common",
        "pandas.core.internals.managers",
        "pandas._libs",
        "pandas.core.internals.array_manager",
        "pandas.core.dtypes.missing",
        "pandas",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.internals.managers": [
        "pandas.core.arrays.sparse",
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.generic",
        "pandas.core.internals.blocks",
        "pandas.core.internals.ops",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.core.internals.base",
        "pandas.core.arrays._mixins",
        "pandas.core.internals.managers.BlockManager",
        "pandas.core.common",
        "pandas.util._validators",
        "pandas.core.dtypes.missing",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.cast",
        "pandas.errors",
        "typing.TypeVar",
        "pandas.core.dtypes.common",
        "pandas.core.internals.managers.SingleBlockManager",
        "pandas._config",
        "pandas.core.internals.managers.BaseBlockManager",
        "numpy"
    ],
    "pandas.core.internals.ops": [
        "pandas.core.internals.blocks",
        "pandas.core.internals.managers",
        "pandas.core.internals.ops.BlockPairInfo",
        "pandas._typing"
    ],
    "pandas.core.internals.ops.BlockPairInfo": [],
    "pandas.core.internals.managers.BaseBlockManager": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.internals.managers.BlockManager": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "pandas.core.internals.managers.SingleBlockManager": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.internals.concat.JoinUnit": [
        "pandas._libs.properties.cache_readonly"
    ],
    "pandas.core.reshape.concat._Concatenator": [
        "pandas._libs.properties.cache_readonly"
    ],
    "pandas.io.formats.format": [
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas.core.reshape.concat",
        "pandas.io.formats.format.EngFormatter",
        "pandas.core.dtypes.dtypes",
        "pandas.io.common",
        "pandas.core.indexes.timedeltas",
        "pandas.io.formats.format.TextAdjustment",
        "contextlib.contextmanager",
        "pandas.io.formats.format.ExtensionArrayFormatter",
        "pandas.core.base",
        "pandas._typing",
        "pandas.core.construction",
        "pandas.core.indexes.datetimes",
        "pandas.io.formats.format.Datetime64TZFormatter",
        "pandas.io.formats.format.CategoricalFormatter",
        "pandas.io.formats.format.SeriesFormatter",
        "pandas.core.common",
        "pandas",
        "pandas.core.dtypes.missing",
        "pandas.core.indexes.api",
        "pandas.io.formats.format.FloatArrayFormatter",
        "pandas.io.formats.format.IntArrayFormatter",
        "pandas.io.formats.format.GenericArrayFormatter",
        "pandas.core.arrays",
        "pandas.io.formats.format.Timedelta64Formatter",
        "pandas.io.formats.format.Datetime64Formatter",
        "pandas._config.config",
        "pandas.core.dtypes.common",
        "pandas.io.formats.format.DataFrameFormatter",
        "pandas.io.formats.format.DataFrameRenderer",
        "pandas.io.formats.format.EastAsianTextAdjustment",
        "numpy",
        "pandas.io.formats.printing"
    ],
    "pandas.io.common": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators",
        "pandas.util._decorators.doc.decorator",
        "pandas.compat",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.io.common.IOHandles",
        "pandas.core.shared_docs",
        "pandas.io.common._BytesIOWrapper",
        "pandas.io.common._BytesZipFile",
        "pandas.compat._optional",
        "<map>.values",
        "typing.TypeVar",
        "pandas.io.common._BytesTarFile",
        "<builtin>.set",
        "pandas.io.common._IOWrapper",
        "pandas.core.dtypes.common",
        "pandas.io.common._BufferedWriter",
        "pandas.io.common.IOArgs",
        "typing.overload"
    ],
    "pandas.core.shared_docs": [],
    "pandas.io.common.IOArgs": [],
    "pandas.io.common.IOHandles": [],
    "pandas.io.common._BufferedWriter": [
        "abc.abstractmethod"
    ],
    "abc.abstractmethod": [],
    "pandas.io.common._BytesTarFile": [],
    "pandas.io.common._BytesZipFile": [],
    "pandas.io.common._IOWrapper": [],
    "pandas.io.common._BytesIOWrapper": [],
    "pandas.io.formats.format.CategoricalFormatter": [],
    "pandas.io.formats.format.SeriesFormatter": [],
    "pandas.io.formats.format.TextAdjustment": [],
    "pandas.io.formats.format.EastAsianTextAdjustment": [],
    "pandas.io.formats.format.DataFrameFormatter": [
        "<builtin>.property"
    ],
    "pandas.io.formats.format.DataFrameRenderer": [
        "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg",
        "pandas.util._decorators.deprecate_kwarg"
    ],
    "pandas.io.formats.format.GenericArrayFormatter": [],
    "pandas.io.formats.format.FloatArrayFormatter": [],
    "pandas.io.formats.format.IntArrayFormatter": [],
    "pandas.io.formats.format.Datetime64Formatter": [],
    "pandas.io.formats.format.ExtensionArrayFormatter": [],
    "pandas.io.formats.format.Datetime64TZFormatter": [],
    "pandas.io.formats.format.Timedelta64Formatter": [],
    "pandas.io.formats.format.EngFormatter": [],
    "pandas.core.describe.NDFrameDescriberAbstract": [
        "abc.abstractmethod"
    ],
    "pandas.core.describe.SeriesDescriber": [],
    "pandas.core.describe.DataFrameDescriber": [],
    "pandas.core.flags": [
        "pandas.core.flags.Flags"
    ],
    "pandas.core.flags.Flags": [
        "<builtin>.property"
    ],
    "pandas.core.internals.construction": [
        "pandas.core.construction",
        "pandas.util._exceptions",
        "pandas.core.algorithms",
        "numpy.ma.mrecords",
        "pandas.core.arrays",
        "pandas.core.dtypes.generic",
        "pandas.core.internals.blocks",
        "pandas.core.dtypes.common",
        "pandas.core.internals.managers",
        "pandas.core.internals.array_manager",
        "pandas.core.common",
        "numpy.ma",
        "pandas.core.indexes.api",
        "numpy",
        "pandas.core.dtypes.cast",
        "pandas._typing"
    ],
    "numpy.ma.mrecords": [
        "numpy.core.records",
        "numpy.ma",
        "numpy.ma.mrecords.MaskedRecords",
        "numpy"
    ],
    "numpy.ma.mrecords.MaskedRecords": [
        "<builtin>.property"
    ],
    "pandas.core.window": [
        "pandas.core.window.ewm",
        "pandas.core.window.rolling",
        "pandas.core.window.expanding"
    ],
    "pandas.core.window.ewm": [
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas.core.window.doc",
        "pandas.core.window.numba_",
        "pandas.core.window.ewm.ExponentialMovingWindow",
        "pandas.core.window.online",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.window.ewm.ExponentialMovingWindowGroupby",
        "pandas.compat.numpy.function",
        "pandas.core.common",
        "pandas.core.dtypes.missing",
        "pandas",
        "pandas.core.indexers.objects",
        "pandas.core.window.ewm.OnlineExponentialMovingWindow",
        "pandas.core.window.common",
        "pandas.core.window.rolling",
        "pandas.core.dtypes.common",
        "pandas.core.generic",
        "pandas.core.util.numba_",
        "numpy"
    ],
    "pandas.core.indexers.objects": [
        "pandas.util._decorators",
        "pandas.core.indexers.objects.ExpandingIndexer",
        "pandas.core.indexers.objects.FixedForwardWindowIndexer",
        "pandas.core.indexers.objects.VariableWindowIndexer",
        "pandas.tseries.offsets",
        "pandas.core.indexers.objects.BaseIndexer",
        "pandas.core.indexers.objects.ExponentialMovingWindowIndexer",
        "pandas.core.indexers.objects.GroupbyIndexer",
        "pandas.core.indexers.objects.FixedWindowIndexer",
        "pandas.core.indexers.objects.VariableOffsetWindowIndexer",
        "numpy",
        "pandas.core.dtypes.common"
    ],
    "pandas.core.indexers.objects.BaseIndexer": [
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.indexers.objects.FixedWindowIndexer": [
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.indexers.objects.VariableWindowIndexer": [
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.indexers.objects.VariableOffsetWindowIndexer": [
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.indexers.objects.ExpandingIndexer": [
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.indexers.objects.FixedForwardWindowIndexer": [
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.indexers.objects.GroupbyIndexer": [
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.indexers.objects.ExponentialMovingWindowIndexer": [
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.util.numba_": [
        "pandas.compat._optional",
        "numpy",
        "pandas.errors"
    ],
    "pandas.core.window.common": [
        "pandas.core.indexes.api",
        "pandas.util._exceptions",
        "pandas.core.dtypes.generic",
        "numpy"
    ],
    "pandas.core.window.doc": [
        "<builtin>.dict",
        "textwrap.dedent",
        "pandas.core.shared_docs"
    ],
    "pandas.core.window.numba_": [
        "pandas.compat._optional",
        "pandas.core.util.numba_",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.window.online": [
        "pandas.compat._optional",
        "pandas.core.window.online.EWMMeanState",
        "numpy"
    ],
    "pandas.core.window.online.EWMMeanState": [],
    "pandas.core.window.rolling": [
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas.core.window.doc",
        "pandas.core.algorithms",
        "pandas.core.window.numba_",
        "pandas.core.reshape.concat",
        "pandas.core._numba.executor",
        "pandas.core.dtypes.generic",
        "pandas.core.groupby.ops",
        "pandas.util._exceptions",
        "pandas.core.base",
        "pandas._typing",
        "pandas.core.window.rolling.BaseWindow",
        "pandas.compat.numpy.function",
        "pandas.core.indexes.api",
        "pandas.core.common",
        "pandas.core.dtypes.missing",
        "pandas",
        "pandas.compat._optional",
        "pandas.core.window.rolling.RollingAndExpandingMixin",
        "pandas.errors",
        "pandas.core.window.rolling.Rolling",
        "pandas.core.arrays",
        "pandas.core.apply",
        "pandas.core.window.common",
        "pandas.core.window.rolling.BaseWindowGroupby",
        "pandas.core.util.numba_",
        "pandas.core.dtypes.common",
        "pandas.core.window.rolling.RollingGroupby",
        "pandas.core.window.rolling.Window",
        "pandas.core.generic",
        "pandas.core.indexers.objects",
        "numpy"
    ],
    "pandas.core.groupby.ops": [
        "pandas.util._decorators",
        "pandas.core.arrays.string_",
        "pandas.core.series",
        "pandas.core.dtypes.dtypes",
        "pandas._libs",
        "pandas._typing",
        "pandas.core.groupby.grouper",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.missing",
        "pandas.core.groupby.ops.BaseGrouper",
        "pandas.core.dtypes.cast",
        "pandas.core.groupby.ops.FrameSplitter",
        "pandas.core.groupby.ops.BinGrouper",
        "pandas.errors",
        "pandas.core.arrays",
        "pandas.core.groupby.ops.WrappedCythonOp",
        "pandas.core.arrays.boolean",
        "pandas.core.dtypes.common",
        "pandas.core.groupby.ops.DataSplitter",
        "pandas.core.arrays.floating",
        "pandas.core.generic",
        "pandas.core.arrays.masked",
        "pandas.core.groupby.ops.SeriesSplitter",
        "pandas.core.sorting",
        "pandas.core.arrays.integer",
        "numpy",
        "pandas.core.frame"
    ],
    "pandas.core.arrays.boolean": [
        "pandas.core.arrays.boolean.BooleanArray",
        "pandas.core.dtypes.dtypes",
        "pandas.core.ops",
        "pandas.core.arrays.masked",
        "pandas.core.arrays.boolean.BooleanDtype",
        "pandas.core.dtypes.missing",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.arrays.boolean.BooleanDtype": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.boolean.BooleanArray": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.floating": [
        "pandas.core.arrays.floating.FloatingArray",
        "pandas.core.dtypes.dtypes",
        "pandas.core.arrays.floating.Float32Dtype",
        "pandas.core.arrays.floating.Float64Dtype",
        "pandas.core.arrays.numeric",
        "pandas.core.arrays.floating.FloatingDtype",
        "numpy",
        "pandas.core.dtypes.common"
    ],
    "pandas.core.arrays.floating.FloatingDtype": [
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.floating.FloatingArray": [],
    "pandas.core.arrays.floating.Float32Dtype": [],
    "pandas.core.arrays.floating.Float64Dtype": [],
    "pandas.core.arrays.string_": [
        "pandas.core.ops",
        "pandas.core.arrays.numpy_",
        "pandas.compat",
        "pandas.core.arrays.string_.StringArray",
        "pandas.core.array_algos.masked_reductions",
        "pandas._typing",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.compat.numpy.function",
        "pandas",
        "pandas.core.arrays",
        "pandas.core.arrays.string_.StringDtype",
        "pandas.core.dtypes.common",
        "pandas.core.arrays.floating",
        "pandas.core.arrays.string_.BaseStringArray",
        "pandas._config",
        "pandas.core.missing",
        "pandas.core.dtypes.base",
        "pandas.core.arrays.integer",
        "numpy"
    ],
    "pandas.core.arrays.numpy_": [
        "pandas.core.construction",
        "pandas.core.arraylike",
        "pandas.core.arrays._mixins",
        "pandas.core.dtypes.dtypes",
        "pandas.core.ops",
        "pandas.compat.numpy.function",
        "pandas.core.arrays.numpy_.PandasArray",
        "pandas.core.nanops",
        "pandas.core.dtypes.missing",
        "pandas.core.strings.object_array",
        "numpy",
        "pandas.core.dtypes.cast",
        "pandas._typing"
    ],
    "pandas.core.arrays.numpy_.PandasArray": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "pandas.core.arrays.string_.StringDtype": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.string_.BaseStringArray": [],
    "pandas.core.arrays.string_.StringArray": [
        "<builtin>.classmethod"
    ],
    "pandas.core.groupby.grouper": [
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.core.series",
        "pandas.core.groupby.grouper.Grouper",
        "pandas.core.groupby.ops",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.frame",
        "pandas.core.groupby.grouper.Grouping",
        "pandas.core.common",
        "pandas.core.groupby.categorical",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.cast",
        "pandas.errors",
        "pandas.core.arrays",
        "pandas.core.dtypes.common",
        "pandas.core.generic",
        "numpy",
        "pandas.io.formats.printing"
    ],
    "pandas.core.groupby.categorical": [
        "pandas.core.indexes.api",
        "pandas.core.algorithms",
        "pandas.core.arrays.categorical",
        "numpy"
    ],
    "pandas.core.series": [
        "pandas.core.arrays.sparse",
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.core.dtypes.generic",
        "pandas.core.ops",
        "pandas.core.sorting",
        "pandas.util._exceptions",
        "pandas.core.groupby.generic",
        "pandas.core.base",
        "pandas._typing",
        "pandas.core.ops.methods.add_flex_arithmetic_methods",
        "pandas.core.construction",
        "pandas.core.indexers",
        "pandas.core.indexing",
        "pandas.core.tools.datetimes",
        "pandas.plotting",
        "pandas.compat.numpy.function",
        "pandas.core.shared_docs",
        "pandas.core.common",
        "pandas.util._validators",
        "pandas.core.dtypes.missing",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.cast",
        "pandas.io.formats.info",
        "pandas.core.series.Series",
        "pandas.errors",
        "pandas.core.indexes.base",
        "pandas.core.internals",
        "pandas.core.arrays",
        "pandas.io.formats.format",
        "pandas.core.resample",
        "pandas.core.apply",
        "pandas.core.arrays.categorical",
        "pandas.core.dtypes.common",
        "pandas.core.dtypes.inference",
        "pandas._config",
        "pandas.core.generic",
        "pandas.core.indexes.accessors",
        "pandas.core.missing",
        "pandas.core.nanops",
        "pandas.core.accessor",
        "pandas.core.strings",
        "numpy",
        "pandas.core.frame"
    ],
    "pandas.core.indexes.accessors": [
        "pandas.core.indexes.accessors.DatetimeProperties",
        "pandas.core.indexes.datetimes",
        "pandas",
        "pandas.core.indexes.accessors.CombinedDatetimelikeProperties",
        "pandas.core.arrays",
        "pandas.core.dtypes.generic",
        "pandas.core.indexes.accessors.Properties",
        "pandas.core.indexes.accessors.TimedeltaProperties",
        "pandas.core.indexes.accessors.PeriodProperties",
        "pandas.core.indexes.timedeltas",
        "pandas.util._exceptions",
        "pandas.core.accessor",
        "pandas.core.base",
        "numpy",
        "pandas.core.dtypes.common"
    ],
    "pandas.core.indexes.accessors.Properties": [],
    "pandas.core.indexes.accessors.DatetimeProperties": [
        "<builtin>.property"
    ],
    "pandas.core.indexes.accessors.TimedeltaProperties": [
        "<builtin>.property"
    ],
    "pandas.core.indexes.accessors.PeriodProperties": [],
    "pandas.core.indexes.accessors.CombinedDatetimelikeProperties": [],
    "pandas.core.strings": [
        "pandas.core.strings.base",
        "pandas.core.strings.accessor"
    ],
    "pandas.core.strings.accessor": [
        "pandas.core.construction",
        "pandas.util._decorators",
        "pandas",
        "pandas.core.dtypes.generic",
        "pandas.core.strings.accessor.StringMethods",
        "pandas.core.dtypes.missing",
        "pandas.util._exceptions",
        "pandas.core.base",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.strings.accessor.StringMethods": [
        "pandas.core.strings.accessor.forbid_nonstring_types",
        "pandas.core.strings.accessor.forbid_nonstring_types._forbid_nonstring_types",
        "pandas.core.strings.accessor._map_and_wrap",
        "<builtin>.staticmethod",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.strings.accessor.forbid_nonstring_types": [
        "<builtin>.set"
    ],
    "pandas.core.strings.accessor.forbid_nonstring_types._forbid_nonstring_types": [
        "functools.wraps",
        "typing.cast"
    ],
    "pandas.core.strings.accessor._map_and_wrap": [
        "pandas.core.strings.accessor.forbid_nonstring_types",
        "pandas.core.strings.accessor.forbid_nonstring_types._forbid_nonstring_types"
    ],
    "pandas.core.tools.datetimes": [
        "pandas.core.construction",
        "pandas._libs.tslibs",
        "pandas.core.indexes.datetimes",
        "pandas",
        "pandas.core.algorithms",
        "typing.overload",
        "pandas.core.arrays.base",
        "pandas.core.indexes.base",
        "pandas.core.tools.datetimes.YearMonthDayDict",
        "pandas.core.dtypes.generic",
        "pandas.arrays",
        "pandas.core.tools.datetimes.FulldatetimeDict",
        "pandas.core.dtypes.missing",
        "pandas.util._exceptions",
        "pandas.core.arrays.datetimes",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.arrays": [
        "pandas.core.arrays"
    ],
    "pandas.core.tools.datetimes.YearMonthDayDict": [],
    "pandas.core.tools.datetimes.FulldatetimeDict": [],
    "pandas.io.formats.info": [
        "pandas.io.formats.info.DataFrameTableBuilder",
        "pandas.io.formats.info.SeriesInfoPrinter",
        "pandas._typing",
        "pandas.io.formats.info.SeriesInfo",
        "pandas.io.formats.printing",
        "pandas.io.formats.info.SeriesTableBuilderNonVerbose",
        "pandas",
        "pandas.io.formats.format",
        "pandas.io.formats.info.InfoPrinterAbstract",
        "pandas.io.formats.info.DataFrameInfoPrinter",
        "pandas.io.formats.info.SeriesTableBuilderVerbose",
        "pandas.io.formats.info.SeriesTableBuilder",
        "pandas.io.formats.info.DataFrameTableBuilderNonVerbose",
        "pandas.io.formats.info.DataFrameTableBuilderVerbose",
        "pandas._config",
        "textwrap.dedent",
        "pandas.io.formats.info.TableBuilderAbstract",
        "pandas.io.formats.info.TableBuilderVerboseMixin",
        "pandas.io.formats.info.DataFrameInfo",
        "pandas.io.formats.info.BaseInfo"
    ],
    "pandas.io.formats.info.BaseInfo": [
        "<builtin>.property",
        "abc.abstractmethod"
    ],
    "pandas.io.formats.info.DataFrameInfo": [
        "<builtin>.property"
    ],
    "pandas.io.formats.info.SeriesInfo": [
        "<builtin>.property"
    ],
    "pandas.io.formats.info.InfoPrinterAbstract": [
        "abc.abstractmethod"
    ],
    "pandas.io.formats.info.DataFrameInfoPrinter": [
        "<builtin>.property"
    ],
    "pandas.io.formats.info.SeriesInfoPrinter": [],
    "pandas.io.formats.info.TableBuilderAbstract": [
        "<builtin>.property",
        "abc.abstractmethod"
    ],
    "pandas.io.formats.info.DataFrameTableBuilder": [
        "<builtin>.property",
        "abc.abstractmethod"
    ],
    "pandas.io.formats.info.DataFrameTableBuilderNonVerbose": [],
    "pandas.io.formats.info.TableBuilderVerboseMixin": [
        "<builtin>.property",
        "abc.abstractmethod"
    ],
    "pandas.io.formats.info.DataFrameTableBuilderVerbose": [
        "<builtin>.property"
    ],
    "pandas.io.formats.info.SeriesTableBuilder": [
        "<builtin>.property",
        "abc.abstractmethod"
    ],
    "pandas.io.formats.info.SeriesTableBuilderNonVerbose": [],
    "pandas.io.formats.info.SeriesTableBuilderVerbose": [
        "<builtin>.property"
    ],
    "pandas.plotting": [
        "pandas.plotting._core",
        "pandas.plotting._misc"
    ],
    "pandas.plotting._core": [
        "pandas.util._decorators",
        "pandas",
        "pandas.util._decorators.Appender.__init__",
        "pandas._config",
        "pandas.core.dtypes.generic",
        "pandas.plotting._core.PlotAccessor",
        "pandas.util._decorators.Substitution.__init__",
        "pandas.util._exceptions",
        "pandas.core.base",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.plotting._core.PlotAccessor": [
        "pandas.util._decorators.Substitution.__init__",
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.staticmethod"
    ],
    "pandas.plotting._misc": [
        "pandas.plotting._misc._Options.__init__",
        "pandas.plotting._misc._Options",
        "pandas.plotting._core",
        "pandas",
        "numpy"
    ],
    "pandas.plotting._misc._Options": [
        "contextlib.contextmanager"
    ],
    "pandas.plotting._misc._Options.__init__": [
        "<builtin>.super"
    ],
    "pandas.core.resample": [
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.tseries.frequencies",
        "pandas.core.resample._add_downsample_kernel",
        "pandas.core.dtypes.generic",
        "pandas.core.indexes.period",
        "pandas.core.indexes.timedeltas",
        "pandas.core.groupby.ops",
        "pandas.core.groupby.generic",
        "pandas.util._exceptions",
        "pandas.core.base",
        "pandas._typing",
        "pandas.core.indexes.datetimes",
        "pandas.core.groupby.grouper",
        "pandas.compat.numpy.function",
        "pandas.core.common",
        "pandas",
        "pandas.core.resample.PeriodIndexResamplerGroupby",
        "pandas.core.resample.Resampler",
        "pandas.core.resample.TimedeltaIndexResamplerGroupby",
        "pandas.errors",
        "pandas.core.resample.DatetimeIndexResampler",
        "pandas.core.resample.TimeGrouper",
        "pandas.core.resample.DatetimeIndexResamplerGroupby",
        "pandas.core.resample.TimedeltaIndexResampler",
        "pandas.core.resample._GroupByMixin",
        "pandas.core.apply",
        "pandas.core.resample.PeriodIndexResampler",
        "pandas.core.groupby.groupby",
        "pandas.core.generic",
        "pandas.tseries.offsets",
        "numpy"
    ],
    "pandas.core.resample.Resampler": [
        "pandas.util._decorators.doc",
        "<builtin>.property",
        "textwrap.dedent",
        "typing.final",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "<builtin>.frozenset",
        "pandas.util._decorators.Substitution.__init__",
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.resample._add_downsample_kernel": [
        "<builtin>.getattr",
        "<builtin>.setattr"
    ],
    "pandas.core.resample._GroupByMixin": [
        "typing.final",
        "typing.no_type_check"
    ],
    "typing.no_type_check": [],
    "pandas.core.resample.DatetimeIndexResampler": [
        "<builtin>.property"
    ],
    "pandas.core.resample.DatetimeIndexResamplerGroupby": [
        "<builtin>.property"
    ],
    "pandas.core.resample.PeriodIndexResampler": [
        "<builtin>.property"
    ],
    "pandas.core.resample.PeriodIndexResamplerGroupby": [
        "<builtin>.property"
    ],
    "pandas.core.resample.TimedeltaIndexResampler": [
        "<builtin>.property"
    ],
    "pandas.core.resample.TimedeltaIndexResamplerGroupby": [
        "<builtin>.property"
    ],
    "pandas.core.resample.TimeGrouper": [],
    "pandas.core.series.Series": [
        "pandas.util._decorators.doc",
        "pandas.core.accessor.CachedAccessor.__init__",
        "<builtin>.property",
        "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg",
        "textwrap.dedent",
        "pandas.util._decorators.Substitution.__init__",
        "<builtin>.len",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "<builtin>.frozenset",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.util._decorators.Appender.__init__",
        "pandas.util._decorators.deprecate_kwarg",
        "pandas.core.series._coerce_method",
        "typing.overload"
    ],
    "pandas.core.series._coerce_method": [],
    "pandas.core.accessor.CachedAccessor.__init__": [],
    "pandas.core.ops.methods.add_flex_arithmetic_methods": [
        "pandas.core.ops.methods._get_method_wrappers",
        "pandas.core.ops.methods._create_methods",
        "<builtin>.any",
        "pandas.core.ops.methods._add_methods",
        "<map>.update"
    ],
    "pandas.core.ops.methods._get_method_wrappers": [
        "<builtin>.issubclass",
        "pandas.core.ops"
    ],
    "pandas.core.ops.methods._create_methods": [
        "<map>.items",
        "<builtin>.issubclass",
        "<map>.update"
    ],
    "<builtin>.any": [],
    "pandas.core.ops.methods._add_methods": [
        "<map>.items",
        "<builtin>.setattr"
    ],
    "pandas.core.groupby.grouper.Grouper": [
        "<builtin>.property",
        "typing.final"
    ],
    "pandas.core.groupby.grouper.Grouping": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.core.groupby.ops.WrappedCythonOp": [
        "<builtin>.classmethod",
        "typing.final",
        "<builtin>.frozenset"
    ],
    "pandas.core.groupby.ops.BaseGrouper": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property",
        "typing.final"
    ],
    "pandas.core.groupby.ops.BinGrouper": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.core.groupby.ops.DataSplitter": [
        "pandas._libs.properties.cache_readonly"
    ],
    "pandas.core.groupby.ops.SeriesSplitter": [],
    "pandas.core.groupby.ops.FrameSplitter": [],
    "pandas.core.window.rolling.BaseWindow": [
        "<builtin>.property",
        "<builtin>.frozenset"
    ],
    "pandas.core.window.rolling.BaseWindowGroupby": [],
    "pandas.core.window.rolling.Window": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators.doc.decorator",
        "pandas.core.window.doc.create_section_header",
        "textwrap.dedent"
    ],
    "pandas.core.window.doc.create_section_header": [
        "<builtin>.len"
    ],
    "pandas.core.window.rolling.RollingAndExpandingMixin": [],
    "pandas.core.window.rolling.Rolling": [
        "pandas.util._decorators.doc",
        "pandas.core.window.doc.window_agg_numba_parameters",
        "textwrap.dedent",
        "pandas.util._decorators.doc.decorator",
        "pandas.core.window.doc.create_section_header"
    ],
    "pandas.core.window.doc.window_agg_numba_parameters": [
        "textwrap.dedent"
    ],
    "pandas.core.window.rolling.RollingGroupby": [],
    "pandas.core.window.ewm.ExponentialMovingWindow": [
        "pandas.util._decorators.doc",
        "pandas.core.window.doc.window_agg_numba_parameters",
        "textwrap.dedent",
        "pandas.util._decorators.doc.decorator",
        "pandas.core.window.doc.create_section_header"
    ],
    "pandas.core.window.ewm.ExponentialMovingWindowGroupby": [],
    "pandas.core.window.ewm.OnlineExponentialMovingWindow": [],
    "pandas.core.window.expanding": [
        "pandas.util._decorators",
        "pandas.core.window.doc",
        "pandas.core.window.expanding.ExpandingGroupby",
        "pandas.core.generic",
        "pandas.compat.numpy.function",
        "pandas.core.window.expanding.Expanding",
        "pandas.core.window.common",
        "pandas",
        "pandas.core.indexers.objects",
        "pandas.core.window.rolling",
        "pandas._typing"
    ],
    "pandas.core.window.expanding.Expanding": [
        "pandas.util._decorators.doc",
        "pandas.core.window.doc.window_agg_numba_parameters",
        "textwrap.dedent",
        "pandas.util._decorators.doc.decorator",
        "pandas.core.window.doc.create_section_header"
    ],
    "pandas.core.window.expanding.ExpandingGroupby": [],
    "pandas.io.pytables": [
        "pandas.io.pytables.SeriesFixed",
        "pandas.util._decorators",
        "pandas.io.pytables.Fixed",
        "pandas.io.pytables.GenericIndexCol",
        "pandas.io.pytables.Table",
        "pandas.io.pytables.AppendableMultiFrameTable",
        "pandas.io.pytables.AppendableTable",
        "pandas.io.common",
        "pandas.io.pytables.DataIndexableCol",
        "pandas._config.config.config_prefix",
        "pandas.util._exceptions",
        "pandas.io.pytables.TableIterator",
        "pandas.io.pytables.HDFStore",
        "pandas.io.pytables.AppendableFrameTable",
        "pandas._typing",
        "pandas.io.pytables.GenericFixed",
        "pandas.core.construction",
        "pandas.io.pytables.AppendableSeriesTable",
        "pandas.io.pytables.AppendableMultiSeriesTable",
        "pandas.io.pytables.IndexCol",
        "pandas.core.api",
        "pandas.io.pytables.Selection",
        "pandas.core.common",
        "pandas",
        "pandas.core.dtypes.missing",
        "pandas.core.indexes.api",
        "pandas.io.pytables.FrameFixed",
        "pandas.io.pytables.BlockManagerFixed",
        "pandas.compat.pickle_compat",
        "pandas.compat._optional",
        "pandas.errors",
        "pandas.core.internals",
        "pandas.core.arrays",
        "pandas.io.pytables.DataCol",
        "pandas._config.config",
        "pandas.core.dtypes.common",
        "pandas.io.pytables.GenericDataIndexableCol",
        "pandas._config",
        "pandas.core.computation.pytables",
        "pandas.io.pytables.WORMTable",
        "pandas.io.pytables.GenericTable",
        "numpy",
        "typing.overload",
        "pandas.io.formats.printing"
    ],
    "pandas.compat.pickle_compat": [
        "pandas._libs.tslibs",
        "pandas.core.internals",
        "pandas.core.arrays",
        "pandas.compat.pickle_compat._LoadSparseSeries",
        "pandas.compat.pickle_compat._LoadSparseFrame",
        "pandas",
        "pandas.compat.pickle_compat.Unpickler",
        "numpy"
    ],
    "pandas.compat.pickle_compat._LoadSparseSeries": [],
    "pandas.compat.pickle_compat._LoadSparseFrame": [],
    "pandas.compat.pickle_compat.Unpickler": [],
    "pandas.core.api": [
        "pandas.core.algorithms",
        "pandas.core.arrays.string_",
        "pandas.core.series",
        "pandas.core.dtypes.dtypes",
        "pandas.core.indexes.period",
        "pandas.core.indexes.timedeltas",
        "pandas._libs",
        "pandas.core.construction",
        "pandas.core.indexes.datetimes",
        "pandas.core.indexing",
        "pandas.core.tools.datetimes",
        "pandas.core.arrays.arrow",
        "pandas.core.tools.numeric",
        "pandas.core.indexes.interval",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.missing",
        "pandas.core.arrays",
        "pandas.io.formats.format",
        "pandas.core.arrays.boolean",
        "pandas.core.groupby",
        "pandas.core.arrays.floating",
        "pandas.core.tools.timedeltas",
        "pandas.tseries.offsets",
        "pandas.core.flags",
        "pandas.core.arrays.integer",
        "pandas.core.frame"
    ],
    "pandas.core.tools.numeric": [
        "pandas.core.dtypes.cast",
        "pandas.core.dtypes.generic",
        "pandas.core.arrays.numeric",
        "pandas",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.computation.pytables": [
        "pandas.core.computation.pytables.TermValue",
        "pandas._libs.tslibs",
        "pandas.core.computation.pytables.Constant",
        "pandas.core.computation.pytables.BinOp",
        "pandas.core.computation.pytables.UnaryOp",
        "pandas.compat.chainmap",
        "pandas.core.computation.pytables.PyTablesScope",
        "pandas.core.computation.pytables.JointFilterBinOp",
        "pandas._typing",
        "pandas.core.construction",
        "pandas.core.computation.ops",
        "pandas.core.computation.scope",
        "pandas.core.computation.pytables.PyTablesExpr",
        "pandas.core.computation.pytables.FilterBinOp",
        "pandas.core.common",
        "pandas.core.computation.pytables.ConditionBinOp",
        "pandas.errors",
        "pandas.core.indexes.base",
        "pandas.core.computation.pytables.PyTablesExprVisitor",
        "pandas.core.computation.common",
        "pandas.core.dtypes.common",
        "pandas.core.computation.pytables.JointConditionBinOp",
        "pandas.core.computation.pytables.Term",
        "numpy",
        "pandas.core.computation.expr",
        "pandas.io.formats.printing"
    ],
    "pandas.core.computation.expr": [
        "pandas.core.computation.expr.BaseExprVisitor",
        "<builtin>.map",
        "pandas.core.computation.expr._is_type",
        "pandas.compat",
        "<builtin>.frozenset",
        "pandas.core.computation.expr.Expr",
        "pandas.core.computation.ops",
        "pandas.core.computation.scope",
        "<builtin>.issubclass",
        "<builtin>.isinstance",
        "pandas.core.common",
        "pandas.core.computation.expr._compose",
        "pandas.core.computation.parsing",
        "pandas.errors",
        "typing.TypeVar",
        "pandas.core.computation.expr.PandasExprVisitor",
        "pandas.core.computation.expr.PythonExprVisitor",
        "pandas.core.computation.expr._filter_nodes",
        "<builtin>.dir",
        "<builtin>.getattr",
        "numpy",
        "pandas.io.formats.printing"
    ],
    "pandas.core.computation.ops": [
        "<map>.update",
        "pandas._libs.tslibs",
        "pandas.core.computation.scope",
        "pandas.core.computation.ops.Term",
        "pandas.core.computation.ops.Op",
        "pandas.core.computation.ops.UnaryOp",
        "<builtin>.zip",
        "<builtin>.dict",
        "pandas.core.computation.ops.FuncNode",
        "pandas.core.computation.ops.BinOp",
        "pandas.core.computation.ops.Constant",
        "pandas.core.computation.ops.MathCall",
        "pandas.core.computation.common",
        "pandas.core.common",
        "pandas.core.computation.ops.Div",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas.io.formats.printing"
    ],
    "pandas.core.computation.common": [
        "pandas._config",
        "numpy"
    ],
    "pandas.core.computation.scope": [
        "pandas._libs.tslibs",
        "pandas.core.computation.scope.Scope",
        "pandas.errors",
        "pandas.compat.chainmap",
        "numpy"
    ],
    "pandas.compat.chainmap": [
        "pandas.compat.chainmap.DeepChainMap",
        "typing.TypeVar"
    ],
    "pandas.compat.chainmap.DeepChainMap": [],
    "pandas.core.computation.scope.Scope": [
        "<builtin>.property"
    ],
    "pandas.core.computation.ops.Term": [
        "<builtin>.property"
    ],
    "pandas.core.computation.ops.Constant": [
        "<builtin>.property"
    ],
    "pandas.core.computation.ops.Op": [
        "<builtin>.property"
    ],
    "pandas.core.computation.ops.BinOp": [],
    "pandas.core.computation.ops.Div": [],
    "pandas.core.computation.ops.UnaryOp": [
        "<builtin>.property"
    ],
    "pandas.core.computation.ops.MathCall": [],
    "pandas.core.computation.ops.FuncNode": [],
    "pandas.core.computation.parsing": [],
    "pandas.core.computation.expr._compose": [
        "functools.reduce",
        "<builtin>.len"
    ],
    "functools.reduce": [],
    "pandas.core.computation.expr._is_type": [],
    "<builtin>.dir": [],
    "pandas.core.computation.expr._filter_nodes": [
        "<builtin>.issubclass",
        "<builtin>.frozenset"
    ],
    "pandas.core.computation.expr.BaseExprVisitor": [
        "<builtin>.zip",
        "<builtin>.dict"
    ],
    "pandas.core.computation.expr.PandasExprVisitor": [
        "pandas.core.computation.expr._compose",
        "functools.partial"
    ],
    "functools.partial": [],
    "pandas.core.computation.expr.PythonExprVisitor": [],
    "pandas.core.computation.expr.Expr": [
        "<builtin>.property"
    ],
    "pandas.core.computation.pytables.PyTablesScope": [],
    "pandas.core.computation.pytables.Term": [
        "<builtin>.property"
    ],
    "pandas.core.computation.pytables.Constant": [],
    "pandas.core.computation.pytables.BinOp": [
        "<builtin>.property"
    ],
    "pandas.core.computation.pytables.FilterBinOp": [],
    "pandas.core.computation.pytables.JointFilterBinOp": [],
    "pandas.core.computation.pytables.ConditionBinOp": [],
    "pandas.core.computation.pytables.JointConditionBinOp": [],
    "pandas.core.computation.pytables.UnaryOp": [],
    "pandas.core.computation.pytables.PyTablesExprVisitor": [],
    "pandas.core.computation.pytables.PyTablesExpr": [],
    "pandas.core.computation.pytables.TermValue": [],
    "pandas.io.pytables.HDFStore": [
        "<builtin>.property"
    ],
    "pandas.io.pytables.TableIterator": [],
    "pandas.io.pytables.IndexCol": [
        "<builtin>.property"
    ],
    "pandas.io.pytables.GenericIndexCol": [
        "<builtin>.property"
    ],
    "pandas.io.pytables.DataCol": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.io.pytables.DataIndexableCol": [
        "<builtin>.classmethod"
    ],
    "pandas.io.pytables.GenericDataIndexableCol": [],
    "pandas.io.pytables.Fixed": [
        "<builtin>.property"
    ],
    "pandas.io.pytables.GenericFixed": [
        "<map>.items",
        "<builtin>.property"
    ],
    "pandas.io.pytables.SeriesFixed": [
        "<builtin>.property"
    ],
    "pandas.io.pytables.BlockManagerFixed": [
        "<builtin>.property"
    ],
    "pandas.io.pytables.FrameFixed": [],
    "pandas.io.pytables.Table": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property",
        "<builtin>.classmethod",
        "<builtin>.staticmethod"
    ],
    "pandas.io.pytables.WORMTable": [],
    "pandas.io.pytables.AppendableTable": [],
    "pandas.io.pytables.AppendableFrameTable": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.io.pytables.AppendableSeriesTable": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.io.pytables.AppendableMultiSeriesTable": [],
    "pandas.io.pytables.GenericTable": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.io.pytables.AppendableMultiFrameTable": [
        "<builtin>.property"
    ],
    "pandas.io.pytables.Selection": [],
    "pandas.core.generic.NDFrame": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators.rewrite_axis_style_signature.decorate",
        "<builtin>.property",
        "typing.final",
        "<builtin>.set",
        "pandas.util._decorators.rewrite_axis_style_signature",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.classmethod",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "<builtin>.frozenset",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.util._decorators.deprecate_kwarg",
        "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg",
        "typing.overload"
    ],
    "pandas.util._decorators.rewrite_axis_style_signature": [],
    "pandas.util._decorators.rewrite_axis_style_signature.decorate": [
        "append",
        "functools.wraps",
        "typing.cast"
    ],
    "pandas.core.groupby.numba_": [
        "pandas.compat._optional",
        "pandas.core.util.numba_",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.groupby.indexing": [
        "pandas.core.groupby.groupby",
        "pandas.util._decorators",
        "pandas.core.groupby.indexing.GroupByPositionalSelector",
        "pandas.core.groupby.indexing.GroupByNthSelector",
        "pandas",
        "pandas.core.groupby.indexing.GroupByIndexingMixin",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.groupby.indexing.GroupByIndexingMixin": [
        "pandas._libs.properties.cache_readonly"
    ],
    "pandas.core.groupby.indexing.GroupByPositionalSelector": [],
    "pandas.core.groupby.indexing.GroupByNthSelector": [],
    "pandas.core.groupby.groupby.GroupByPlot": [],
    "pandas.core.groupby.groupby.BaseGroupBy": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property",
        "textwrap.dedent",
        "typing.final",
        "<builtin>.frozenset",
        "pandas.util._decorators.Substitution.__init__",
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.groupby.groupby.GroupBy": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.property",
        "typing.final",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.Substitution.__init__",
        "contextlib.contextmanager"
    ],
    "pandas.core.groupby.generic.NamedAgg": [],
    "pandas.core.groupby.generic.SeriesGroupBy": [
        "pandas.util._decorators.doc",
        "textwrap.dedent",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.Substitution.__init__",
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.groupby.generic.DataFrameGroupBy": [
        "pandas.util._decorators.doc",
        "textwrap.dedent",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.Substitution.__init__",
        "pandas.util._decorators.Appender.__init__"
    ],
    "pandas.core.apply.Apply": [],
    "pandas.core.apply.NDFrameApply": [
        "<builtin>.property"
    ],
    "pandas.core.apply.FrameApply": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.core.apply.FrameRowApply": [
        "<builtin>.property"
    ],
    "pandas.core.apply.FrameColumnApply": [
        "<builtin>.property"
    ],
    "pandas.core.apply.SeriesApply": [],
    "pandas.core.apply.GroupByApply": [],
    "pandas.core.apply.ResamplerWindowApply": [],
    "pandas.core.reshape.melt": [
        "pandas.util._decorators",
        "pandas",
        "pandas.core.algorithms",
        "pandas.util._decorators.Appender.__init__",
        "pandas.core.reshape.concat",
        "numpy",
        "pandas.core.tools.numeric",
        "pandas.core.arrays",
        "pandas.core.reshape.util",
        "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg",
        "pandas.core.common",
        "pandas.core.shared_docs",
        "pandas.core.dtypes.missing",
        "pandas.util._exceptions",
        "pandas.core.indexes.api",
        "pandas.util._decorators.deprecate_kwarg",
        "pandas.core.dtypes.concat",
        "pandas.core.dtypes.common"
    ],
    "pandas.core.reshape.util": [
        "pandas.core.dtypes.common",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.interchange.dataframe_protocol": [
        "pandas.core.interchange.dataframe_protocol.DlpackDeviceType",
        "pandas.core.interchange.dataframe_protocol.ColumnBuffers",
        "pandas.core.interchange.dataframe_protocol.ColumnNullType",
        "pandas.core.interchange.dataframe_protocol.DtypeKind",
        "pandas.core.interchange.dataframe_protocol.Column",
        "pandas.core.interchange.dataframe_protocol.Buffer",
        "pandas.core.interchange.dataframe_protocol.DataFrame",
        "pandas.core.interchange.dataframe_protocol.CategoricalDescription"
    ],
    "pandas.core.interchange.dataframe_protocol.DlpackDeviceType": [],
    "pandas.core.interchange.dataframe_protocol.DtypeKind": [],
    "pandas.core.interchange.dataframe_protocol.ColumnNullType": [],
    "pandas.core.interchange.dataframe_protocol.ColumnBuffers": [],
    "pandas.core.interchange.dataframe_protocol.CategoricalDescription": [],
    "pandas.core.interchange.dataframe_protocol.Buffer": [
        "<builtin>.property",
        "abc.abstractmethod"
    ],
    "pandas.core.interchange.dataframe_protocol.Column": [
        "<builtin>.property",
        "abc.abstractmethod"
    ],
    "pandas.core.interchange.dataframe_protocol.DataFrame": [
        "<builtin>.property",
        "abc.abstractmethod"
    ],
    "pandas.io.formats.style": [
        "pandas.compat._optional",
        "pandas.util._decorators",
        "pandas",
        "pandas.io.formats.style_render",
        "pandas.compat._optional.import_optional_dependency",
        "pandas._config",
        "pandas.core.generic",
        "pandas.io.formats.format",
        "pandas.io.formats.style.Styler",
        "contextlib.contextmanager",
        "pandas.core.shared_docs",
        "pandas.core.common",
        "pandas.util._exceptions",
        "numpy",
        "pandas._typing",
        "pandas.core.frame"
    ],
    "pandas.io.formats.style_render": [
        "pandas.compat._optional",
        "pandas.compat._optional.import_optional_dependency",
        "pandas._config",
        "pandas.core.dtypes.generic",
        "pandas.api.types",
        "pandas.io.formats.style_render.Tooltips",
        "pandas.io.formats.style_render.StylerRenderer",
        "pandas.core.common",
        "pandas",
        "pandas.io.formats.style_render.CSSDict",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.api.types": [
        "pandas.core.dtypes.api",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.concat"
    ],
    "pandas.core.dtypes.api": [
        "pandas.core.dtypes.common"
    ],
    "pandas.io.formats.style_render.CSSDict": [],
    "pandas.io.formats.style_render.StylerRenderer": [],
    "pandas.io.formats.style_render.Tooltips": [
        "<builtin>.property"
    ],
    "pandas.io.formats.style.Styler": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.classmethod",
        "pandas.util._decorators.Substitution.__init__",
        "typing.overload"
    ],
    "pandas.core.frame.DataFrame": [
        "pandas.util._decorators.doc",
        "pandas.core.accessor.CachedAccessor.__init__",
        "pandas.util._decorators.rewrite_axis_style_signature.decorate",
        "<builtin>.property",
        "textwrap.dedent",
        "pandas.util._decorators.rewrite_axis_style_signature",
        "<builtin>.len",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.classmethod",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "<builtin>.frozenset",
        "pandas.util._decorators.Substitution.__init__",
        "pandas.util._decorators.Appender.__init__",
        "pandas.util._decorators.deprecate_kwarg",
        "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg",
        "typing.overload"
    ],
    "pandas.core.generic.NDFrame._add_numeric_operations": [
        "pandas.util._decorators.doc",
        "pandas.core.generic._doc_params",
        "pandas.util._decorators.doc.decorator",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "<builtin>.setattr"
    ],
    "pandas.core.generic._doc_params": [
        "<builtin>.enumerate"
    ],
    "pandas.core.arrays._mixins.NDArrayBackedExtensionArray": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.classmethod",
        "typing.overload"
    ],
    "pandas.core.array_algos.take._view_wrapper": [],
    "pandas.core.algorithms.SelectN": [
        "<builtin>.staticmethod",
        "typing.final"
    ],
    "pandas.core.algorithms.SelectNSeries": [],
    "pandas.core.algorithms.SelectNFrame": [],
    "pandas.core.arrays.sparse.dtype": [
        "pandas.errors",
        "pandas.core.arrays.sparse.dtype.SparseDtype",
        "pandas.core.dtypes.base",
        "pandas.core.dtypes.common",
        "pandas.core.arrays.sparse.array",
        "pandas.core.dtypes.missing",
        "pandas.util._exceptions",
        "numpy",
        "pandas._typing",
        "pandas.core.dtypes.astype"
    ],
    "pandas.core.arrays.sparse.dtype.SparseDtype": [
        "<builtin>.property",
        "<builtin>.classmethod",
        "<builtin>.staticmethod"
    ],
    "pandas.core.arrays.sparse.array.ellipsis": [],
    "pandas.core.arrays.sparse.array.SparseArray": [
        "typing.overload",
        "<builtin>.classmethod",
        "<builtin>.property",
        "<builtin>.frozenset"
    ],
    "pandas.core.arrays.sparse.accessor.BaseAccessor": [],
    "pandas.core.arrays.sparse.accessor.SparseAccessor": [
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.sparse.accessor.SparseFrameAccessor": [
        "<builtin>.classmethod",
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "pandas.core.indexes.base.Index": [
        "pandas._libs.properties.cache_readonly",
        "pandas.util._decorators.doc",
        "pandas.core.accessor.CachedAccessor.__init__",
        "<builtin>.property",
        "typing.final",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.classmethod",
        "pandas.core.indexes.base._maybe_return_indexers",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "<builtin>.frozenset",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.util._decorators.Appender.__init__",
        "typing.overload"
    ],
    "pandas.core.indexes.base._maybe_return_indexers": [
        "typing.cast"
    ],
    "pandas.core.arrays.arrow._arrow_utils": [
        "pandas.util._exceptions",
        "numpy",
        "pandas.errors"
    ],
    "pandas.core.arrays.arrow.dtype": [
        "pandas.util._decorators",
        "pandas.core.arrays.arrow.dtype.ArrowDtype",
        "pandas.core.dtypes.base",
        "pandas.compat",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.arrays.arrow.dtype.ArrowDtype": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.arrays.arrow.array.ArrowExtensionArray": [
        "pandas.util._decorators.doc",
        "<builtin>.property",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.classmethod",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.util._decorators.deprecate_nonkeyword_arguments"
    ],
    "pandas.core.arrays.string_arrow": [
        "pandas.core.arrays.string_arrow.ArrowStringArray",
        "pandas.core.arrays.arrow",
        "pandas.core.arrays.string_",
        "pandas.core.arrays.arrow._arrow_utils",
        "pandas.core.arrays.numeric",
        "pandas.compat",
        "pandas.core.strings.object_array",
        "pandas.core.dtypes.missing",
        "pandas.core.arrays.boolean",
        "pandas.core.arrays.integer",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.arrays.string_arrow.ArrowStringArray": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "pandas.core.dtypes.generic.create_pandas_abc_type": [
        "<builtin>.classmethod",
        "<builtin>.type"
    ],
    "pandas.core.dtypes.base.ExtensionDtype": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.dtypes.base.StorageExtensionDtype": [
        "<builtin>.property"
    ],
    "pandas.core.dtypes.base.Registry": [
        "typing.overload"
    ],
    "pandas.core.dtypes.base.Registry.__init__": [],
    "pandas.core.dtypes.dtypes.PandasExtensionDtype": [
        "<builtin>.classmethod"
    ],
    "pandas.core.dtypes.dtypes.CategoricalDtypeType": [],
    "pandas.core.dtypes.dtypes.CategoricalDtype": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.classmethod",
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "pandas.core.dtypes.dtypes.DatetimeTZDtype": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.dtypes.dtypes.PeriodDtype": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.dtypes.dtypes.IntervalDtype": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.dtypes.dtypes.PandasDtype": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.core.dtypes.dtypes.BaseMaskedDtype": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas._typing.BaseBuffer": [
        "<builtin>.property"
    ],
    "pandas._typing.ReadBuffer": [],
    "pandas._typing.WriteBuffer": [],
    "pandas._typing.ReadPickleBuffer": [],
    "pandas._typing.WriteExcelBuffer": [],
    "pandas._typing.ReadCsvBuffer": [
        "<builtin>.property"
    ],
    "pandas.compat.pyarrow": [
        "pandas.util.version.Version.__init__",
        "pandas.util.version"
    ],
    "pandas.core.config_init": [
        "pandas._config.config",
        "pandas.util._exceptions",
        "pandas._config.config.deprecate_option",
        "pandas._config.config.config_prefix"
    ],
    "pandas._config.config.deprecate_option": [
        "<str>.lower"
    ],
    "pandas.tseries.api": [
        "pandas.tseries.offsets",
        "pandas.tseries.frequencies"
    ],
    "pandas.core.computation.api": [
        "pandas.core.computation.eval"
    ],
    "pandas.core.computation.eval": [
        "pandas.core.computation.ops",
        "pandas.core.computation.scope",
        "pandas.core.computation.engines",
        "pandas.core.generic",
        "pandas.io.formats.printing",
        "pandas.util._validators",
        "pandas.util._exceptions",
        "pandas.core.computation.expr",
        "pandas.core.computation.parsing"
    ],
    "pandas.core.computation.engines": [
        "pandas.core.computation.engines.NumExprEngine",
        "pandas.core.computation.ops",
        "pandas.errors",
        "pandas.core.computation.engines.AbstractEngine",
        "pandas.core.computation.align",
        "<builtin>.frozenset",
        "pandas.core.computation.engines.PythonEngine",
        "pandas.core.computation.expr",
        "pandas.io.formats.printing"
    ],
    "pandas.core.computation.align": [
        "pandas.errors",
        "pandas.core.generic",
        "pandas.core.dtypes.generic",
        "pandas.core.computation.align._filter_special_cases",
        "pandas.core.computation.common",
        "pandas.core.common",
        "pandas.util._exceptions",
        "pandas.core.indexes.api",
        "pandas.core.base",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.computation.align._filter_special_cases": [
        "functools.wraps"
    ],
    "pandas.core.computation.engines.AbstractEngine": [
        "<builtin>.property"
    ],
    "pandas.core.computation.engines.NumExprEngine": [],
    "pandas.core.computation.engines.PythonEngine": [],
    "pandas.core.reshape.api": [
        "pandas.core.reshape.tile",
        "pandas.core.reshape.concat",
        "pandas.core.reshape.pivot",
        "pandas.core.reshape.melt",
        "pandas.core.reshape.merge",
        "pandas.core.reshape.encoding"
    ],
    "pandas.core.reshape.encoding": [
        "pandas.core.frame",
        "pandas.core.series",
        "pandas.core.arrays",
        "pandas.core.arrays.categorical",
        "pandas.core.indexes.api",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.core.reshape.merge": [
        "pandas.util._decorators",
        "pandas.core.algorithms",
        "pandas.core.reshape.merge._AsOfMerge",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.generic",
        "pandas.core.reshape.merge._OrderedMerge",
        "pandas._libs",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.core.construction",
        "pandas.core.arrays._mixins",
        "pandas.core.reshape.merge._MergeOperation",
        "pandas.core.common",
        "pandas",
        "pandas.core.dtypes.missing",
        "pandas.core.dtypes.cast",
        "pandas.errors",
        "pandas.core.arrays",
        "pandas.util._decorators.Substitution.__init__",
        "pandas.core.groupby",
        "pandas.core.dtypes.common",
        "pandas.util._decorators.Appender.__init__",
        "pandas.core.sorting",
        "numpy",
        "pandas.core.frame"
    ],
    "pandas.core.reshape.merge._MergeOperation": [
        "pandas._libs.properties.cache_readonly"
    ],
    "pandas.core.reshape.merge._OrderedMerge": [],
    "pandas.core.reshape.merge._AsOfMerge": [],
    "pandas.core.reshape.pivot": [
        "pandas.util._decorators",
        "pandas.core.series",
        "pandas.core.reshape.concat",
        "pandas.core.dtypes.generic",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas",
        "pandas.core.common",
        "pandas.core.indexes.api",
        "pandas.core.dtypes.cast",
        "pandas.core.reshape.util",
        "pandas.util._decorators.Substitution.__init__",
        "pandas.core.groupby",
        "pandas.core.dtypes.common",
        "pandas.util._decorators.Appender.__init__",
        "numpy",
        "pandas.core.frame"
    ],
    "pandas.core.reshape.tile": [
        "pandas.core.algorithms",
        "pandas.core.dtypes.generic",
        "pandas._libs",
        "pandas.core.nanops",
        "pandas.core.dtypes.missing",
        "pandas",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.api": [
        "pandas.api.extensions",
        "pandas.api.types",
        "pandas.api.indexers",
        "pandas.api.interchange"
    ],
    "pandas.api.extensions": [
        "pandas.core.dtypes.base",
        "pandas.core.accessor",
        "pandas.core.algorithms",
        "pandas.core.arrays"
    ],
    "pandas.api.indexers": [
        "pandas.core.indexers.objects",
        "pandas.core.indexers"
    ],
    "pandas.api.interchange": [
        "pandas.core.interchange.from_dataframe",
        "pandas.core.interchange.dataframe_protocol"
    ],
    "pandas.core.interchange.from_dataframe": [
        "numpy",
        "pandas.core.interchange.dataframe_protocol",
        "pandas.core.interchange.column",
        "pandas",
        "pandas.core.interchange.utils"
    ],
    "pandas.core.interchange.column": [
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas.core.interchange.column.PandasColumn",
        "pandas.api.types",
        "pandas.core.interchange.dataframe_protocol",
        "pandas.core.interchange.buffer",
        "pandas.core.interchange.utils",
        "pandas",
        "numpy"
    ],
    "pandas.core.interchange.buffer": [
        "pandas.util.version.Version.__init__",
        "pandas.core.interchange.buffer.PandasBuffer",
        "pandas.core.interchange.dataframe_protocol",
        "numpy",
        "pandas.util.version"
    ],
    "pandas.core.interchange.buffer.PandasBuffer": [
        "<builtin>.property"
    ],
    "pandas.core.interchange.utils": [
        "pandas.core.interchange.utils.ArrowCTypes",
        "pandas.core.interchange.utils.Endianness",
        "pandas.core.interchange.utils.NoBufferPresent",
        "pandas.api.types",
        "pandas",
        "numpy",
        "pandas._typing"
    ],
    "pandas.core.interchange.utils.ArrowCTypes": [],
    "pandas.core.interchange.utils.Endianness": [],
    "pandas.core.interchange.utils.NoBufferPresent": [],
    "pandas.core.interchange.column.PandasColumn": [
        "pandas._libs.properties.cache_readonly",
        "<builtin>.property"
    ],
    "pandas.io": [
        "pandas.io.formats",
        "pandas.io.stata",
        "pandas.io.json"
    ],
    "pandas.io.formats": [
        "pandas.io.formats.style"
    ],
    "pandas.io.json": [
        "pandas.io.json._table_schema",
        "pandas.io.json._json",
        "pandas.io.json._normalize"
    ],
    "pandas.io.json._json": [
        "pandas.util._decorators.doc",
        "pandas._libs.tslibs",
        "pandas.util._decorators",
        "pandas.core.reshape.concat",
        "pandas.io.json._json.SeriesParser",
        "pandas.util._decorators.doc.decorator",
        "pandas.io.common",
        "pandas._typing",
        "pandas.core.construction",
        "pandas.io.parsers.readers",
        "pandas.io.json._json.Writer",
        "pandas.io.json._json.FrameWriter",
        "pandas.core.shared_docs",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas",
        "pandas.io.json._normalize",
        "pandas.io.json._json.FrameParser",
        "pandas.io.json._table_schema",
        "pandas.io.json._json.JSONTableWriter",
        "pandas.errors",
        "typing.TypeVar",
        "pandas.io.json._json.JsonReader",
        "pandas.util._decorators.deprecate_kwarg",
        "pandas.io.json._json.SeriesWriter",
        "pandas.core.dtypes.common",
        "pandas.core.generic",
        "pandas.io.json._json.Parser",
        "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg",
        "numpy",
        "typing.overload"
    ],
    "pandas.io.json._normalize": [
        "pandas.util._decorators",
        "pandas.util._decorators.deprecate",
        "pandas",
        "numpy",
        "pandas._typing"
    ],
    "pandas.util._decorators.deprecate": [
        "functools.wraps",
        "textwrap.dedent",
        "<builtin>.AssertionError"
    ],
    "pandas.io.json._table_schema": [
        "pandas",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.base",
        "pandas.core.common",
        "pandas.util._exceptions",
        "pandas.core.indexes.multi",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.io.parsers.readers": [
        "pandas.util._decorators",
        "pandas.io.parsers.arrow_parser_wrapper",
        "<builtin>.sorted",
        "pandas.io.parsers.readers.TextFileReader",
        "pandas.io.parsers.base_parser",
        "pandas.io.common",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.io.parsers.c_parser_wrapper",
        "pandas.core.shared_docs",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.core.indexes.api",
        "pandas.util._validators",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.errors",
        "pandas.util._decorators.deprecate_kwarg",
        "pandas.io.parsers.python_parser",
        "pandas.core.dtypes.common",
        "textwrap.fill",
        "pandas.io.parsers.readers._DeprecationConfig",
        "pandas.util._decorators.Appender.__init__",
        "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg",
        "numpy",
        "typing.overload",
        "pandas.core.frame"
    ],
    "pandas.io.parsers.arrow_parser_wrapper": [
        "pandas.compat._optional",
        "pandas.io.parsers.arrow_parser_wrapper.ArrowParserWrapper",
        "pandas.io.parsers.base_parser",
        "pandas",
        "pandas._typing",
        "pandas.core.dtypes.inference"
    ],
    "pandas.io.parsers.base_parser": [
        "pandas.core.tools.datetimes",
        "pandas",
        "pandas.core.algorithms",
        "pandas.errors",
        "pandas.core.series",
        "pandas.core.dtypes.dtypes",
        "pandas.core.arrays",
        "pandas.core.dtypes.common",
        "pandas.io.parsers.base_parser.ParserBase",
        "pandas.io.date_converters",
        "pandas.core.dtypes.missing",
        "pandas.util._exceptions",
        "pandas.core.indexes.api",
        "numpy",
        "pandas._typing",
        "pandas.core.dtypes.astype"
    ],
    "pandas.io.date_converters": [
        "pandas.util._exceptions",
        "numpy",
        "pandas._typing"
    ],
    "pandas.io.parsers.base_parser.ParserBase": [
        "pandas.io.parsers.base_parser.ParserBase.BadLineHandleMethod",
        "<builtin>.property",
        "typing.final",
        "typing.overload"
    ],
    "pandas.io.parsers.base_parser.ParserBase.BadLineHandleMethod": [],
    "pandas.io.parsers.arrow_parser_wrapper.ArrowParserWrapper": [],
    "pandas.io.parsers.c_parser_wrapper": [
        "pandas",
        "pandas.errors",
        "pandas.io.parsers.c_parser_wrapper.CParserWrapper",
        "pandas.core.dtypes.dtypes",
        "pandas.core.dtypes.concat",
        "pandas.io.parsers.base_parser",
        "pandas.core.indexes.api",
        "pandas.util._exceptions",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.io.parsers.c_parser_wrapper.CParserWrapper": [],
    "pandas.io.parsers.python_parser": [
        "pandas",
        "pandas.errors",
        "pandas.io.parsers.python_parser.FixedWidthFieldParser",
        "pandas.io.parsers.python_parser.FixedWidthReader",
        "pandas.io.parsers.base_parser",
        "pandas.io.parsers.python_parser.PythonParser",
        "pandas.core.dtypes.inference",
        "pandas.util._exceptions",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.io.parsers.python_parser.PythonParser": [],
    "pandas.io.parsers.python_parser.FixedWidthReader": [],
    "pandas.io.parsers.python_parser.FixedWidthFieldParser": [],
    "textwrap.fill": [],
    "pandas.io.parsers.readers._DeprecationConfig": [],
    "pandas.io.parsers.readers.TextFileReader": [],
    "pandas.io.json._json.Writer": [
        "<builtin>.property",
        "abc.abstractmethod"
    ],
    "pandas.io.json._json.SeriesWriter": [
        "<builtin>.property"
    ],
    "pandas.io.json._json.FrameWriter": [
        "<builtin>.property"
    ],
    "pandas.io.json._json.JSONTableWriter": [
        "<builtin>.property"
    ],
    "pandas.io.json._json.JsonReader": [
        "typing.overload"
    ],
    "pandas.io.json._json.Parser": [],
    "pandas.io.json._json.SeriesParser": [],
    "pandas.io.json._json.FrameParser": [],
    "pandas.io.stata": [
        "pandas.util._decorators",
        "dateutil.relativedelta",
        "pandas.core.series",
        "pandas.io.stata.StataNonCatValueLabel",
        "pandas.io.stata.StataParser",
        "pandas.io.stata.StataWriter",
        "pandas.io.common",
        "pandas.io.stata.StataValueLabel",
        "pandas.io.stata.StataStrLWriter",
        "pandas.util._exceptions",
        "pandas._typing",
        "pandas.io.stata.StataWriter117",
        "pandas.core.shared_docs",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas",
        "pandas.errors",
        "pandas.core.indexes.base",
        "pandas.core.arrays.boolean",
        "pandas.core.dtypes.common",
        "pandas.io.stata.StataReader",
        "pandas.io.stata.StataWriterUTF8",
        "pandas.io.stata.StataMissingValue",
        "pandas.util._decorators.Appender.__init__",
        "pandas.core.arrays.integer",
        "numpy",
        "pandas.core.frame"
    ],
    "dateutil.relativedelta": [
        "dateutil._common",
        "<builtin>.range",
        "dateutil._common.weekday.__init__",
        "six",
        "<builtin>.tuple",
        "dateutil.relativedelta.relativedelta"
    ],
    "dateutil._common": [
        "dateutil._common.weekday"
    ],
    "dateutil._common.weekday": [],
    "dateutil._common.weekday.__init__": [],
    "dateutil.relativedelta.relativedelta": [
        "<builtin>.property"
    ],
    "pandas.io.stata.StataValueLabel": [],
    "pandas.io.stata.StataNonCatValueLabel": [],
    "pandas.io.stata.StataMissingValue": [
        "<builtin>.range",
        "<builtin>.classmethod",
        "<builtin>.chr",
        "<builtin>.property"
    ],
    "pandas.io.stata.StataParser": [],
    "pandas.io.stata.StataReader": [
        "pandas.util._decorators.Appender.__init__",
        "<builtin>.property"
    ],
    "pandas.io.stata.StataWriter": [
        "<builtin>.staticmethod"
    ],
    "pandas.io.stata.StataStrLWriter": [],
    "pandas.io.stata.StataWriter117": [
        "<builtin>.staticmethod"
    ],
    "pandas.io.stata.StataWriterUTF8": [],
    "pandas.tseries": [
        "pandas.tseries.offsets",
        "pandas.tseries.frequencies"
    ],
    "pandas.testing": [
        "pandas._testing"
    ],
    "pandas._testing": [
        "<builtin>.float",
        "pandas._config.localization",
        "pandas._testing.contexts",
        "pandas.compat",
        "pandas._testing._warnings",
        "pandas._testing._random",
        "pandas._typing",
        "pandas.core.construction",
        "pandas.core.arrays._mixins",
        "pandas._testing.asserters",
        "pandas.core.api",
        "<map>.items",
        "decimal.Decimal",
        "pandas._testing.SubclassedCategorical",
        "pandas",
        "pandas._testing.set_testing_mode",
        "pandas.core.arrays",
        "pandas._testing.SubclassedSeries",
        "pandas._testing.SubclassedDataFrame",
        "pandas.core.dtypes.common",
        "pandas._testing.compat",
        "pandas._testing._io",
        "numpy"
    ],
    "pandas._config.localization": [
        "pandas._config.config",
        "contextlib.contextmanager"
    ],
    "pandas._testing._io": [
        "pandas.compat._optional",
        "pandas._testing.contexts",
        "pandas.io.common",
        "pandas.compat",
        "pandas._testing._io.optional_args",
        "pandas",
        "pandas._testing._random",
        "pandas._typing"
    ],
    "pandas._testing._random": [
        "<builtin>.range",
        "<builtin>.map",
        "numpy",
        "<builtin>.list"
    ],
    "pandas._testing.contexts": [
        "pandas._testing.contexts.RNGContext",
        "contextlib.contextmanager",
        "pandas.io.common",
        "pandas",
        "numpy"
    ],
    "pandas._testing.contexts.RNGContext": [],
    "pandas._testing._io.optional_args": [
        "functools.wraps"
    ],
    "pandas._testing._warnings": [
        "contextlib.contextmanager"
    ],
    "pandas._testing.asserters": [
        "pandas",
        "pandas.core.algorithms",
        "pandas.core.arrays.string_",
        "pandas.core.dtypes.dtypes",
        "pandas.core.arrays",
        "pandas.core.dtypes.missing",
        "pandas.util._exceptions",
        "pandas.core.indexes.api",
        "pandas.core.arrays.datetimelike",
        "numpy",
        "pandas.core.dtypes.common",
        "pandas.io.formats.printing"
    ],
    "pandas._testing.compat": [
        "pandas"
    ],
    "<builtin>.float": [],
    "decimal.Decimal": [],
    "pandas._testing.set_testing_mode": [],
    "pandas._testing.SubclassedSeries": [
        "<builtin>.property"
    ],
    "pandas._testing.SubclassedDataFrame": [
        "<builtin>.property"
    ],
    "pandas._testing.SubclassedCategorical": [
        "<builtin>.property"
    ],
    "pandas.util._print_versions": [
        "pandas.compat._optional",
        "pandas._typing"
    ],
    "pandas.io.api": [
        "pandas.io.sql",
        "pandas.io.sas",
        "pandas.io.feather_format",
        "pandas.io.parquet",
        "pandas.io.pytables",
        "pandas.io.spss",
        "pandas.io.stata",
        "pandas.io.pickle",
        "pandas.io.html",
        "pandas.io.xml",
        "pandas.io.excel",
        "pandas.io.gbq",
        "pandas.io.parsers",
        "pandas.io.clipboards",
        "pandas.io.orc",
        "pandas.io.json"
    ],
    "pandas.io.clipboards": [
        "pandas.util._exceptions",
        "pandas",
        "pandas.core.dtypes.generic"
    ],
    "pandas.io.excel": [
        "pandas.io.excel._openpyxl",
        "pandas.io.excel._xlwt",
        "pandas.io.excel._xlsxwriter",
        "pandas.io.excel._odswriter",
        "pandas.io.excel._base",
        "pandas.io.excel._util.register_writer",
        "pandas.io.excel._util"
    ],
    "pandas.io.excel._base": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators",
        "<builtin>.map",
        "pandas.io.excel._base.BaseExcelReader",
        "<builtin>.max",
        "<builtin>.sorted",
        "pandas.util._decorators.doc.decorator",
        "pandas.io.common",
        "pandas.io.excel._base.ExcelWriter",
        "pandas.util._exceptions",
        "pandas.io.parsers",
        "pandas.io.excel._base.ExcelFile",
        "pandas._typing",
        "pandas.io.parsers.readers",
        "pandas.core.frame",
        "pandas.core.shared_docs",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.compat._optional",
        "pandas.errors",
        "pandas.util._decorators.deprecate_kwarg",
        "pandas._config.config",
        "pandas.core.dtypes.common",
        "pandas.io.excel._util",
        "textwrap.fill",
        "pandas.util._decorators.Appender.__init__",
        "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg",
        "typing.overload",
        "pandas.util.version"
    ],
    "pandas.io.excel._util": [
        "pandas.compat._optional",
        "typing.TypeVar",
        "pandas.io.excel._base",
        "pandas.core.dtypes.common",
        "typing.overload"
    ],
    "pandas.io.parsers": [
        "pandas.io.parsers.readers"
    ],
    "pandas.io.excel._base.BaseExcelReader": [
        "<builtin>.property"
    ],
    "pandas.io.excel._base.ExcelWriter": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "<builtin>.max": [],
    "pandas.io.excel._base.ExcelFile": [
        "pandas.io.excel._openpyxl",
        "<builtin>.property",
        "pandas.io.excel._xlrd",
        "pandas.io.excel._odfreader",
        "pandas.io.excel._pyxlsb"
    ],
    "pandas.io.excel._odfreader": [
        "pandas.compat._optional",
        "pandas.util._decorators",
        "pandas.io.excel._base",
        "pandas.io.excel._odfreader.ODFReader",
        "pandas.core.shared_docs",
        "pandas",
        "numpy",
        "pandas._typing"
    ],
    "pandas.io.excel._odfreader.ODFReader": [
        "<builtin>.property"
    ],
    "pandas.io.excel._openpyxl": [
        "pandas.compat._optional",
        "pandas.util._decorators",
        "pandas.io.excel._openpyxl.OpenpyxlWriter",
        "pandas.io.excel._base",
        "pandas.io.excel._openpyxl.OpenpyxlReader",
        "pandas.core.shared_docs",
        "numpy",
        "pandas._typing",
        "pandas.io.excel._util"
    ],
    "pandas.io.excel._openpyxl.OpenpyxlWriter": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.io.excel._openpyxl.OpenpyxlReader": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.property"
    ],
    "pandas.io.excel._pyxlsb": [
        "pandas.compat._optional",
        "pandas.util._decorators",
        "pandas.io.excel._base",
        "pandas.io.excel._pyxlsb.PyxlsbReader",
        "pandas.core.shared_docs",
        "pandas._typing"
    ],
    "pandas.io.excel._pyxlsb.PyxlsbReader": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.property"
    ],
    "pandas.io.excel._xlrd": [
        "pandas.compat._optional",
        "pandas.util._decorators",
        "pandas.io.excel._base",
        "pandas.core.shared_docs",
        "pandas.io.excel._xlrd.XlrdReader",
        "numpy",
        "pandas._typing"
    ],
    "pandas.io.excel._xlrd.XlrdReader": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.property"
    ],
    "pandas.io.excel._odswriter": [
        "pandas.io.excel._odswriter.ODSWriter",
        "pandas.io.excel._base",
        "pandas.io.formats.excel",
        "pandas._typing",
        "pandas.io.excel._util"
    ],
    "pandas.io.formats.excel": [
        "pandas.util._decorators",
        "pandas",
        "pandas.io.formats.excel.ExcelCell",
        "pandas.io.formats.format",
        "pandas.io.formats.excel.ExcelFormatter",
        "pandas.io.formats._color_data",
        "pandas.core.dtypes.common",
        "pandas.io.formats.excel.CssExcelCell",
        "pandas.io.formats.printing",
        "pandas.core.common",
        "pandas.core.shared_docs",
        "pandas.core.dtypes.missing",
        "pandas.util._exceptions",
        "pandas.io.formats.excel.CSSToExcelConverter",
        "numpy",
        "pandas._typing",
        "pandas.io.formats.css"
    ],
    "pandas.io.formats._color_data": [],
    "pandas.io.formats.css": [
        "pandas.util._exceptions",
        "pandas.io.formats.css.CSSResolver",
        "pandas.errors"
    ],
    "pandas.io.formats.css.CSSResolver": [
        "pandas.io.formats.css._side_expander",
        "<map>.copy",
        "<map>.update",
        "pandas.io.formats.css._border_expander"
    ],
    "<map>.copy": [],
    "pandas.io.formats.css._border_expander": [],
    "pandas.io.formats.css._side_expander": [],
    "pandas.io.formats.excel.ExcelCell": [],
    "pandas.io.formats.excel.CssExcelCell": [],
    "pandas.io.formats.excel.CSSToExcelConverter": [],
    "pandas.io.formats.excel.ExcelFormatter": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators.doc.decorator",
        "<builtin>.property"
    ],
    "pandas.io.excel._odswriter.ODSWriter": [
        "<builtin>.property"
    ],
    "pandas.io.excel._xlsxwriter": [
        "pandas.io.excel._xlsxwriter._XlsxStyler",
        "pandas.io.excel._base",
        "pandas.io.excel._xlsxwriter.XlsxWriter",
        "pandas._typing",
        "pandas.io.excel._util"
    ],
    "pandas.io.excel._xlsxwriter._XlsxStyler": [
        "<builtin>.classmethod"
    ],
    "pandas.io.excel._xlsxwriter.XlsxWriter": [
        "<builtin>.property"
    ],
    "pandas.io.excel._xlwt": [
        "pandas.io.excel._util",
        "pandas.io.excel._xlwt.XlwtWriter",
        "pandas._typing",
        "pandas.io.excel._base"
    ],
    "pandas.io.excel._xlwt.XlwtWriter": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "pandas.io.excel._util.register_writer": [
        "<builtin>.callable",
        "<builtin>.ValueError"
    ],
    "pandas.io.feather_format": [
        "pandas.compat._optional",
        "pandas.util._decorators.doc",
        "pandas.util._decorators",
        "pandas.core.api",
        "pandas.util._decorators.doc.decorator",
        "pandas.io.common",
        "pandas.core.shared_docs",
        "pandas._typing"
    ],
    "pandas.io.gbq": [
        "pandas.compat._optional",
        "pandas"
    ],
    "pandas.io.html": [
        "pandas.compat._optional",
        "pandas.core.construction",
        "pandas.util._decorators",
        "pandas.io.html._HtmlFrameParser",
        "pandas.errors",
        "pandas.core.indexes.base",
        "pandas.io.html._LxmlFrameParser",
        "pandas.io.html._BeautifulSoupHtml5LibFrameParser",
        "pandas.io.parsers",
        "pandas.io.common",
        "pandas.io.formats.printing",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas",
        "pandas.core.indexes.multi",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.io.html._HtmlFrameParser": [],
    "pandas.io.html._BeautifulSoupHtml5LibFrameParser": [],
    "pandas.io.html._LxmlFrameParser": [],
    "pandas.io.orc": [
        "pandas.compat._optional",
        "pandas.io.common",
        "pandas",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.io.parquet": [
        "pandas.compat._optional",
        "pandas.io.parquet.FastParquetImpl",
        "pandas.util._decorators",
        "pandas.io.parquet.PyArrowImpl",
        "pandas.util._decorators.doc",
        "pandas.errors",
        "pandas.util._decorators.doc.decorator",
        "pandas.io.common",
        "pandas.core.shared_docs",
        "pandas.io.parquet.BaseImpl",
        "pandas",
        "pandas._typing",
        "pandas.util.version"
    ],
    "pandas.io.parquet.BaseImpl": [
        "<builtin>.staticmethod"
    ],
    "pandas.io.parquet.PyArrowImpl": [],
    "pandas.io.parquet.FastParquetImpl": [],
    "pandas.io.pickle": [
        "pandas.util._decorators.doc",
        "pandas.util._decorators",
        "pandas.util._decorators.doc.decorator",
        "pandas.io.common",
        "pandas.core.shared_docs",
        "pandas._typing",
        "pandas.compat.pickle_compat"
    ],
    "pandas.io.sas": [
        "pandas.io.sas.sasreader"
    ],
    "pandas.io.sas.sasreader": [
        "pandas.io.sas.sasreader.ReaderBase",
        "pandas.util._decorators.doc",
        "pandas.util._decorators",
        "typing.overload",
        "pandas.util._decorators.doc.decorator",
        "pandas.io.common",
        "pandas.core.shared_docs",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas",
        "pandas._typing"
    ],
    "pandas.io.sas.sasreader.ReaderBase": [
        "abc.abstractmethod"
    ],
    "pandas.io.spss": [
        "pandas.compat._optional",
        "pandas",
        "pandas.io.common",
        "pandas.core.dtypes.inference"
    ],
    "pandas.io.sql": [
        "pandas.io.sql.SQLiteDatabase",
        "pandas.io.sql.BaseEngine",
        "pandas.core.dtypes.dtypes",
        "pandas.util._exceptions",
        "pandas.core.base",
        "pandas._typing",
        "pandas.core.tools.datetimes",
        "pandas.core.api",
        "pandas.io.sql.SQLAlchemyEngine",
        "pandas.io.sql.PandasSQL",
        "pandas.core.common",
        "pandas",
        "pandas.core.dtypes.missing",
        "pandas.io.sql.SQLiteTable",
        "pandas.compat._optional",
        "pandas.io.sql.SQLDatabase",
        "pandas.errors",
        "pandas.io.sql.SQLTable",
        "pandas.core.dtypes.common",
        "numpy",
        "typing.overload"
    ],
    "pandas.io.sql.SQLTable": [],
    "pandas.io.sql.PandasSQL": [],
    "pandas.io.sql.BaseEngine": [],
    "pandas.io.sql.SQLAlchemyEngine": [],
    "pandas.io.sql.SQLDatabase": [
        "contextlib.contextmanager",
        "<builtin>.property",
        "<builtin>.staticmethod"
    ],
    "pandas.io.sql.SQLiteTable": [],
    "pandas.io.sql.SQLiteDatabase": [
        "contextlib.contextmanager",
        "<builtin>.staticmethod"
    ],
    "pandas.io.xml": [
        "pandas.compat._optional",
        "pandas.util._decorators.doc",
        "pandas.util._decorators",
        "pandas",
        "pandas.io.xml._EtreeFrameParser",
        "pandas.errors",
        "pandas.io.xml._LxmlFrameParser",
        "pandas.io.xml._XMLFrameParser",
        "pandas.util._decorators.doc.decorator",
        "pandas.io.common",
        "pandas.core.shared_docs",
        "pandas.util._decorators.deprecate_nonkeyword_arguments.decorate",
        "pandas.util._decorators.deprecate_nonkeyword_arguments",
        "pandas.io.parsers",
        "pandas.core.dtypes.common",
        "pandas._typing"
    ],
    "pandas.io.xml._XMLFrameParser": [],
    "pandas.io.xml._EtreeFrameParser": [],
    "pandas.io.xml._LxmlFrameParser": [],
    "pandas.util._tester": [
        "pandas.compat._optional"
    ],
    "pandas._version": [],
    "pandas._version.get_versions": [],
    "handler.handle": [
        "pandas.core.series.Series.__init__"
    ],
    "pandas.core.series.Series.__init__": [
        "pandas.core.generic.NDFrame._validate_dtype",
        "pandas.core.indexes.base.maybe_extract_name",
        "pandas.core.dtypes.inference.is_dict_like",
        "pandas.util._exceptions.find_stack_level",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.series.Series._init_dict",
        "pandas.core.construction.is_empty_data",
        "pandas.core.common.maybe_iterable_to_list",
        "<builtin>.type",
        "<builtin>.len",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "pandas.core.series.Series._set_axis",
        "pandas.core.internals.managers.BaseBlockManager.copy",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.generic.NDFrame.__init__",
        "<builtin>.NotImplementedError",
        "<builtin>.AssertionError",
        "pandas.core.common.require_length_match",
        "pandas.core.internals.managers.SingleBlockManager.from_array",
        "<map>.copy",
        "pandas.core.construction.sanitize_array",
        "pandas._config.config.CallableDynamicDoc.__init__",
        "pandas.core.internals.array_manager.BaseArrayManager.copy",
        "copy",
        "pandas.core.internals.array_manager.SingleArrayManager.from_array",
        "pandas.core.indexes.base.ensure_index",
        "pandas.core.indexes.api.default_index"
    ],
    "pandas.core.generic.NDFrame.__init__": [
        "pandas.core.flags.Flags.__init__",
        "<builtin>.dict"
    ],
    "pandas.core.flags.Flags.__init__": [],
    "pandas.core.indexes.base.maybe_extract_name": [
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "pandas.core.dtypes.inference.is_hashable"
    ],
    "pandas.core.construction.is_empty_data": [
        "<builtin>.hasattr"
    ],
    "pandas.core.indexes.base.ensure_index": [
        "pandas.core.indexes.multi.MultiIndex.copy",
        "pandas.core.indexes.multi.MultiIndex.from_arrays",
        "pandas.core.indexes.base.Index.copy",
        "<map>.copy",
        "pandas.core.indexes.base.Index._with_infer",
        "<builtin>.type",
        "<builtin>.len",
        "copy",
        "<builtin>.isinstance",
        "pandas.core.indexes.multi",
        "<builtin>.list"
    ],
    "pandas.core.indexes.base.Index._with_infer": [],
    "pandas.core.indexes.multi.MultiIndex.from_arrays": [
        "<builtin>.range",
        "<builtin>.ValueError",
        "<builtin>.len",
        "pandas.core.arrays.categorical.factorize_from_iterables",
        "<builtin>.getattr",
        "<builtin>.TypeError",
        "<builtin>.list"
    ],
    "pandas.core.arrays.categorical.factorize_from_iterables": [
        "pandas.core.arrays.categorical.factorize_from_iterable",
        "<builtin>.zip",
        "<builtin>.list",
        "<builtin>.len"
    ],
    "pandas.core.arrays.categorical.factorize_from_iterable": [
        "pandas.core.arrays.categorical.Categorical.__init__",
        "<builtin>.len",
        "pandas.core.arrays.categorical.Categorical.from_codes",
        "pandas.core.construction.extract_array",
        "pandas.core.indexes.api.CategoricalIndex",
        "pandas",
        "pandas.core.dtypes.common.is_categorical_dtype",
        "<builtin>.TypeError"
    ],
    "pandas.core.dtypes.common.is_categorical_dtype": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.base.ExtensionDtype.is_dtype"
    ],
    "pandas.core.dtypes.base.ExtensionDtype.is_dtype": [
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_from_string",
        "<builtin>.isinstance",
        "<builtin>.getattr",
        "pandas.core.dtypes.dtypes.CategoricalDtype.construct_from_string",
        "pandas.core.dtypes.base.ExtensionDtype.construct_from_string"
    ],
    "pandas.core.dtypes.base.ExtensionDtype.construct_from_string": [
        "pandas.core.dtypes.dtypes.CategoricalDtype.__init__",
        "<builtin>.type",
        "<builtin>.isinstance",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__",
        "<builtin>.TypeError"
    ],
    "pandas.core.dtypes.dtypes.CategoricalDtype.__init__": [
        "pandas.core.dtypes.dtypes.CategoricalDtype._finalize"
    ],
    "pandas.core.dtypes.dtypes.CategoricalDtype._finalize": [
        "pandas.core.dtypes.dtypes.CategoricalDtype.validate_categories",
        "pandas.core.dtypes.dtypes.CategoricalDtype.validate_ordered"
    ],
    "pandas.core.dtypes.dtypes.CategoricalDtype.validate_ordered": [
        "<builtin>.TypeError"
    ],
    "pandas.core.dtypes.dtypes.CategoricalDtype.validate_categories": [
        "pandas.core.indexes.base",
        "<builtin>.repr",
        "pandas.core.indexes.base.Index._with_infer",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "<builtin>.TypeError"
    ],
    "pandas.core.dtypes.dtypes.CategoricalDtype.construct_from_string": [
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "pandas.core.dtypes.dtypes.CategoricalDtype.__init__",
        "<builtin>.type"
    ],
    "pandas.core.arrays.categorical.Categorical.__init__": [
        "pandas.core.dtypes.dtypes.CategoricalDtype.__init__",
        "pandas.core.common.convert_to_list_like",
        "pandas.core.dtypes.dtypes.CategoricalDtype.update_dtype",
        "pandas.core.dtypes.common.is_categorical_dtype",
        "pandas.core.arrays.categorical.Categorical.isna",
        "pandas.core.arrays.categorical._get_codes_for_values",
        "pandas.util._exceptions.find_stack_level",
        "pandas.core.arrays.categorical.recode_for_categories",
        "pandas.core.dtypes.dtypes.CategoricalDtype._from_values_or_dtype",
        "<builtin>.len",
        "<builtin>.super",
        "<builtin>.isinstance",
        "pandas.core.dtypes.cast.coerce_indexer_dtype",
        "numpy.core.numeric.ones",
        "pandas.core.construction.extract_array",
        "<builtin>.NotImplementedError",
        "warnings.warn",
        "<builtin>.TypeError",
        "numpy.core.multiarray.where",
        "numpy.core.numeric.where",
        "pandas.core.construction.sanitize_array",
        "numpy.core.ones",
        "pandas.core.algorithms.factorize"
    ],
    "pandas.core.dtypes.dtypes.CategoricalDtype._from_values_or_dtype": [
        "pandas.core.dtypes.dtypes.CategoricalDtype.__init__",
        "<builtin>.repr",
        "<builtin>.ValueError",
        "typing.cast",
        "<builtin>.isinstance",
        "pandas.core.dtypes.base.ExtensionDtype.is_dtype"
    ],
    "pandas.core.dtypes.cast.coerce_indexer_dtype": [
        "<builtin>.len"
    ],
    "pandas.core.dtypes.dtypes.CategoricalDtype.update_dtype": [
        "pandas.core.dtypes.dtypes.CategoricalDtype.__init__",
        "<builtin>.repr",
        "typing.cast",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "pandas.core.dtypes.base.ExtensionDtype.is_dtype"
    ],
    "warnings.warn": [],
    "pandas.core.common.convert_to_list_like": [
        "<builtin>.isinstance",
        "<builtin>.list"
    ],
    "pandas.core.construction.sanitize_array": [
        "pandas.core.dtypes.common.is_integer_dtype",
        "pandas.util._exceptions.find_stack_level",
        "numpy.core.arrayprint.errstate",
        "<builtin>.ValueError",
        "<builtin>.len",
        "<builtin>.type",
        "<builtin>.isinstance",
        "pandas.core.construction.sanitize_masked_array",
        "pandas.core.construction._sanitize_str_dtypes",
        "pandas.core.construction._try_cast",
        "pandas.core.dtypes.cast.maybe_convert_platform",
        "pandas.core.dtypes.common.is_float_dtype",
        "pandas.core.construction.range_to_ndarray",
        "pandas.core.dtypes.cast.maybe_infer_to_datetimelike",
        "pandas.core.construction.extract_array",
        "pandas.core.dtypes.cast.construct_1d_arraylike_from_scalar",
        "<builtin>.TypeError",
        "numpy.core._ufunc_config.errstate.__init__",
        "<builtin>.list",
        "<map>.copy",
        "pandas.core.construction.sanitize_array",
        "typing.cast",
        "copy",
        "<builtin>.hasattr",
        "pandas.core.construction._sanitize_ndim"
    ],
    "pandas.core.construction.sanitize_masked_array": [
        "<map>.copy",
        "copy",
        "numpy.ma.core.getmaskarray",
        "pandas.core.dtypes.cast.maybe_upcast"
    ],
    "numpy.ma.core.getmaskarray": [
        "<builtin>.getattr",
        "numpy.ma.core.make_mask_none",
        "numpy.core.fromnumeric.shape",
        "numpy.ma.core.getmask"
    ],
    "numpy.ma.core.getmask": [
        "<builtin>.getattr"
    ],
    "numpy.core.fromnumeric.shape": [],
    "numpy.ma.core.make_mask_none": [
        "numpy.ma.core.make_mask_descr"
    ],
    "numpy.ma.core.make_mask_descr": [
        "numpy.ma.core._replace_dtype_fields"
    ],
    "numpy.ma.core._replace_dtype_fields": [
        "numpy.ma.core._replace_dtype_fields_recursive"
    ],
    "numpy.ma.core._replace_dtype_fields_recursive": [
        "<builtin>.len",
        "append",
        "<builtin>.tuple",
        "numpy.ma.core._replace_dtype_fields_recursive",
        "<builtin>.list"
    ],
    "pandas.core.dtypes.cast.maybe_upcast": [
        "pandas.core.dtypes.cast.maybe_promote"
    ],
    "pandas.core.dtypes.cast.maybe_promote": [
        "pandas.core.dtypes.cast._maybe_promote",
        "pandas.core.dtypes.cast._maybe_promote_cached",
        "<builtin>.type"
    ],
    "pandas.core.dtypes.cast._maybe_promote": [
        "<builtin>.str",
        "numpy.core.multiarray.can_cast",
        "pandas.core.dtypes.missing.na_value_for_dtype",
        "<builtin>.issubclass",
        "pandas.core.dtypes.cast.infer_dtype_from_scalar",
        "numpy.core.multiarray.min_scalar_type",
        "pandas._libs.tslibs.timestamps.Timestamp",
        "pandas.core.dtypes.missing.is_valid_na_for_dtype",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "pandas.core.dtypes.missing.isna",
        "pandas.core.dtypes.common.is_object_dtype",
        "pandas.core.dtypes.cast._ensure_dtype_type",
        "pandas.core.dtypes.cast.ensure_dtype_can_hold_na"
    ],
    "pandas.core.dtypes.common.is_object_dtype": [
        "pandas.core.dtypes.common.classes",
        "pandas.core.dtypes.common._is_dtype_type"
    ],
    "pandas.core.dtypes.common.classes": [],
    "pandas.core.dtypes.common._is_dtype_type": [
        "<builtin>.issubclass",
        "pandas.core.dtypes.common.classes.<lambda1>",
        "<builtin>.type",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.classes_and_not_datetimelike.<lambda1>",
        "pandas.core.dtypes.common.pandas_dtype",
        "<builtin>.hasattr"
    ],
    "pandas.core.dtypes.common.classes.<lambda1>": [
        "<builtin>.issubclass"
    ],
    "pandas.core.dtypes.missing.is_valid_na_for_dtype": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.missing.is_valid_na_for_dtype",
        "pandas.core.dtypes.missing.isna"
    ],
    "pandas.core.dtypes.missing.isna": [],
    "pandas.core.dtypes.cast.ensure_dtype_can_hold_na": [],
    "pandas.core.dtypes.missing.na_value_for_dtype": [
        "pandas.core.dtypes.common.is_integer_dtype",
        "pandas.core.dtypes.common.needs_i8_conversion",
        "pandas.core.dtypes.common.is_float_dtype",
        "<builtin>.isinstance",
        "pandas.core.dtypes.base.ExtensionDtype.type",
        "pandas.core.dtypes.common.is_bool_dtype"
    ],
    "pandas.core.dtypes.common.needs_i8_conversion": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.get_dtype"
    ],
    "pandas.core.dtypes.common.get_dtype": [
        "<builtin>.hasattr",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "pandas.core.dtypes.common.pandas_dtype"
    ],
    "pandas.core.dtypes.common.is_float_dtype": [
        "pandas.core.dtypes.common.classes",
        "pandas.core.dtypes.common._is_dtype_type"
    ],
    "pandas.core.dtypes.common.is_integer_dtype": [
        "pandas.core.dtypes.common.classes_and_not_datetimelike",
        "pandas.core.dtypes.common._is_dtype_type"
    ],
    "pandas.core.dtypes.common.classes_and_not_datetimelike": [],
    "pandas.core.dtypes.common.classes_and_not_datetimelike.<lambda1>": [
        "<builtin>.issubclass"
    ],
    "pandas.core.dtypes.common.is_bool_dtype": [
        "<builtin>.getattr",
        "<builtin>.issubclass",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.get_dtype"
    ],
    "numpy.core.multiarray.min_scalar_type": [],
    "numpy.core.multiarray.can_cast": [],
    "pandas.core.dtypes.cast.infer_dtype_from_scalar": [
        "pandas.core.dtypes.cast.infer_dtype_from_scalar",
        "pandas._libs.tslibs.timestamps.Timestamp",
        "<builtin>.type",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "pandas._libs.tslibs.timedeltas.Timedelta",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__"
    ],
    "pandas._libs.tslibs.timedeltas.Timedelta": [],
    "pandas._libs.tslibs.timestamps.Timestamp": [],
    "pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__": [
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "<builtin>.type"
    ],
    "pandas.core.dtypes.cast._ensure_dtype_type": [],
    "pandas.core.dtypes.cast._maybe_promote_cached": [
        "pandas.core.dtypes.cast._maybe_promote"
    ],
    "pandas.core.construction.extract_array": [],
    "pandas.core.construction.range_to_ndarray": [
        "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike",
        "<builtin>.list"
    ],
    "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike": [
        "<builtin>.len"
    ],
    "pandas.core.dtypes.cast.construct_1d_arraylike_from_scalar": [
        "pandas.core.dtypes.common.is_integer_dtype",
        "pandas.core.dtypes.cast.infer_dtype_from_scalar",
        "pandas.core.dtypes.cast._maybe_unbox_datetimelike_tz_deprecation",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.ensure_str",
        "pandas.core.dtypes.missing.isna"
    ],
    "pandas.core.dtypes.cast._maybe_unbox_datetimelike_tz_deprecation": [
        "pandas.core.dtypes.cast.maybe_box_datetimelike",
        "<builtin>.isinstance",
        "pandas.core.dtypes.cast._maybe_unbox_datetimelike",
        "pandas.util._exceptions.find_stack_level"
    ],
    "pandas.core.dtypes.cast.maybe_box_datetimelike": [
        "<builtin>.isinstance",
        "pandas._libs.tslibs.timestamps.Timestamp",
        "pandas._libs.tslibs.timedeltas.Timedelta"
    ],
    "pandas.core.dtypes.cast._maybe_unbox_datetimelike": [
        "pandas.core.dtypes.cast._disallow_mismatched_datetimelike",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "pandas.core.dtypes.missing.is_valid_na_for_dtype"
    ],
    "pandas.core.dtypes.cast._disallow_mismatched_datetimelike": [
        "<builtin>.getattr",
        "<builtin>.repr",
        "<builtin>.TypeError"
    ],
    "pandas.core.dtypes.common.ensure_str": [
        "<builtin>.str",
        "<builtin>.isinstance"
    ],
    "pandas.core.dtypes.cast.maybe_convert_platform": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike",
        "typing.cast"
    ],
    "pandas.core.dtypes.cast.maybe_infer_to_datetimelike": [
        "pandas.core.dtypes.cast.maybe_infer_to_datetimelike.try_datetime",
        "<builtin>.len",
        "<builtin>.type",
        "<builtin>.isinstance",
        "pandas.core.dtypes.missing.isna",
        "<builtin>.TypeError",
        "pandas.util._exceptions.find_stack_level",
        "pandas.core.dtypes.cast.maybe_infer_to_datetimelike.try_timedelta"
    ],
    "pandas.core.dtypes.cast.maybe_infer_to_datetimelike.try_timedelta": [
        "pandas._libs.tslibs.timedeltas.array_to_timedelta64"
    ],
    "pandas._libs.tslibs.timedeltas.array_to_timedelta64": [],
    "pandas.core.dtypes.cast.maybe_infer_to_datetimelike.try_datetime": [
        "pandas.core.arrays.datetimes",
        "pandas.core.arrays.datetimes.sequence_to_datetimes"
    ],
    "pandas.core.arrays.datetimes.sequence_to_datetimes": [
        "pandas.core.arrays.datetimes.tz_to_dtype",
        "pandas.core.arrays.datetimes._sequence_to_dt64ns",
        "pandas.core.arrays.datetimes.DatetimeArray._simple_new"
    ],
    "pandas.core.arrays.datetimes._sequence_to_dt64ns": [
        "pandas._libs.tslibs.vectorized.tz_convert_from_utc",
        "pandas.core.arrays.datetimelike.ensure_arraylike_for_datetimelike",
        "pandas.core.dtypes.common.is_object_dtype",
        "pandas._libs.tslibs.np_datetime.astype_overflowsafe",
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.dtypes.common.is_sparse",
        "<builtin>.type",
        "<builtin>.isinstance",
        "pandas.core.arrays.datetimes._validate_dt64_dtype",
        "pandas.core.dtypes.common.is_datetime64_dtype",
        "pandas.core.internals.managers.BaseBlockManager.copy",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.datetimes._maybe_infer_tz",
        "pandas.core.dtypes.common.is_string_dtype",
        "pandas.core.dtypes.common.is_datetime64tz_dtype",
        "pandas.core.arrays.datetimes.validate_tz_from_dtype",
        "pandas.core.arrays.datetimes.maybe_convert_dtype",
        "<map>.copy",
        "pandas.core.internals.array_manager.BaseArrayManager.copy",
        "copy",
        "<builtin>.getattr",
        "pandas.core.arrays.datetimes.objects_to_datetime64ns"
    ],
    "pandas.core.arrays.datetimes._validate_dt64_dtype": [
        "<builtin>.ValueError",
        "typing.cast",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.is_dtype_equal",
        "pandas.core.dtypes.common.pandas_dtype",
        "<builtin>.getattr",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__"
    ],
    "pandas.core.dtypes.common.is_dtype_equal": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.get_dtype",
        "pandas.core.dtypes.common.is_dtype_equal"
    ],
    "pandas.core.arrays.datetimes.validate_tz_from_dtype": [
        "pandas.core.dtypes.common.is_datetime64_dtype",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "<builtin>.getattr",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_from_string"
    ],
    "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_from_string": [
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "<builtin>.type"
    ],
    "pandas.core.dtypes.common.is_datetime64_dtype": [
        "pandas.core.dtypes.common.classes",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common._is_dtype_type"
    ],
    "pandas.core.arrays.datetimelike.ensure_arraylike_for_datetimelike": [
        "numpy.core.fromnumeric.ndim",
        "numpy.core.numeric.ndim",
        "<builtin>.isinstance",
        "pandas.core.construction.extract_array",
        "<builtin>.hasattr",
        "<builtin>.TypeError",
        "<builtin>.list"
    ],
    "numpy.core.fromnumeric.ndim": [],
    "numpy.core.numeric.ndim": [],
    "pandas.core.arrays.datetimes.maybe_convert_dtype": [
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.dtypes.common.is_timedelta64_dtype",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.dtypes.common.is_period_dtype",
        "pandas.core.dtypes.common.is_float_dtype",
        "<builtin>.len",
        "pandas.core.dtypes.common.is_bool_dtype",
        "pandas.core.dtypes.common.is_datetime64tz_dtype",
        "<builtin>.hasattr",
        "pandas.core.dtypes.common.is_extension_array_dtype",
        "<builtin>.TypeError",
        "pandas.util._exceptions.find_stack_level"
    ],
    "pandas.core.dtypes.common.is_timedelta64_dtype": [
        "pandas.core.dtypes.common.classes",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common._is_dtype_type"
    ],
    "pandas.core.dtypes.common.is_period_dtype": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.dtypes.PeriodDtype.is_dtype"
    ],
    "pandas.core.dtypes.dtypes.PeriodDtype.is_dtype": [
        "<builtin>.super",
        "<builtin>.isinstance",
        "pandas.core.dtypes.dtypes.PeriodDtype._parse_dtype_strict"
    ],
    "pandas.core.dtypes.dtypes.PeriodDtype._parse_dtype_strict": [
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "pandas._libs.tslibs.offsets.to_offset"
    ],
    "pandas._libs.tslibs.offsets.to_offset": [],
    "pandas.core.dtypes.common.is_extension_array_dtype": [
        "<builtin>.getattr",
        "<builtin>.isinstance"
    ],
    "pandas.core.dtypes.common.is_datetime64tz_dtype": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.base.ExtensionDtype.is_dtype"
    ],
    "pandas.core.dtypes.common.is_string_dtype": [
        "pandas.core.dtypes.common._is_dtype"
    ],
    "pandas.core.dtypes.common._is_dtype": [
        "pandas.core.dtypes.common.get_dtype",
        "pandas.core.dtypes.common.is_string_dtype.condition"
    ],
    "pandas.core.dtypes.common.is_string_dtype.condition": [
        "pandas.core.dtypes.common.is_string_dtype.is_excluded_dtype"
    ],
    "pandas.core.dtypes.common.is_string_dtype.is_excluded_dtype": [
        "<builtin>.isinstance"
    ],
    "pandas.core.dtypes.common.is_sparse": [
        "<builtin>.getattr",
        "pandas.core.arrays.sparse",
        "<builtin>.isinstance"
    ],
    "pandas.core.arrays.datetimes.objects_to_datetime64ns": [
        "pandas._libs.tslibs.np_datetime.OutOfBoundsDatetime",
        "<builtin>.TypeError",
        "pandas.core.dtypes.common.is_datetime64_dtype",
        "pandas.core.dtypes.common.is_object_dtype"
    ],
    "pandas._libs.tslibs.np_datetime.OutOfBoundsDatetime": [],
    "pandas._libs.tslibs.vectorized.tz_convert_from_utc": [],
    "pandas._libs.tslibs.np_datetime.astype_overflowsafe": [],
    "pandas.core.arrays.datetimes._maybe_infer_tz": [
        "<builtin>.TypeError"
    ],
    "pandas.core.arrays.datetimes.tz_to_dtype": [
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__"
    ],
    "pandas.core.arrays.datetimes.DatetimeArray._simple_new": [
        "pandas._libs.tslibs.np_datetime.is_unitless",
        "<builtin>.isinstance",
        "pandas._libs.tslibs.np_datetime.py_get_unit_from_dtype",
        "<builtin>.super"
    ],
    "pandas._libs.tslibs.np_datetime.py_get_unit_from_dtype": [],
    "pandas._libs.tslibs.np_datetime.is_unitless": [],
    "pandas.core.construction._try_cast": [
        "",
        "pandas.core.dtypes.cast.sanitize_to_nanoseconds",
        "pandas.core.dtypes.cast.maybe_cast_to_integer_array",
        "pandas.core.dtypes.common.is_integer_dtype",
        "pandas.util._exceptions.find_stack_level",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_array_type",
        "<map>.copy",
        "typing.cast",
        "<builtin>.len",
        "pandas.core.dtypes.cast.maybe_infer_to_datetimelike",
        "<builtin>.isinstance",
        "copy",
        "<map>",
        "pandas.core.dtypes.common.is_object_dtype",
        "pandas.core.arrays.datetimes.DatetimeArray._from_sequence",
        "pandas.core.construction.ensure_wrapped_if_datetimelike",
        "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike",
        "pandas.core.dtypes.cast.maybe_cast_to_datetime"
    ],
    "pandas.core.dtypes.cast.maybe_cast_to_datetime": [
        "pandas.core.arrays.timedeltas.TimedeltaArray._from_sequence",
        "pandas.util._exceptions.find_stack_level",
        "pandas.core.dtypes.astype.astype_nansafe",
        "pandas.core.arrays.datetimes.sequence_to_datetimes",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "pandas.core.arrays.datetimes",
        "pandas.core.dtypes.common.is_datetime64_dtype",
        "pandas.core.dtypes.cast._disallow_mismatched_datetimelike",
        "pandas.core.dtypes.cast.maybe_infer_to_datetimelike",
        "pandas.core.arrays.timedeltas",
        "pandas.core.dtypes.common.is_dtype_equal",
        "pandas.core.dtypes.common.is_datetime64tz_dtype",
        "pandas.core.dtypes.common.is_string_dtype",
        "<builtin>.TypeError",
        "pandas.core.dtypes.cast.sanitize_to_nanoseconds",
        "pandas.core.dtypes.common.is_timedelta64_dtype",
        "typing.cast",
        "<builtin>.getattr",
        "pandas.core.dtypes.cast._ensure_nanosecond_dtype"
    ],
    "pandas.core.dtypes.cast._ensure_nanosecond_dtype": [
        "<builtin>.getattr",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays.timedeltas.TimedeltaArray._from_sequence": [
        "pandas.core.arrays.timedeltas.TimedeltaArray._simple_new",
        "pandas.core.arrays.timedeltas._validate_td64_dtype",
        "pandas.core.arrays.timedeltas.sequence_to_td64ns",
        "pandas.core.arrays.datetimelike.validate_inferred_freq"
    ],
    "pandas.core.arrays.timedeltas._validate_td64_dtype": [
        "<builtin>.ValueError",
        "pandas.core.dtypes.common.is_dtype_equal",
        "pandas.core.dtypes.common.pandas_dtype"
    ],
    "pandas.core.arrays.timedeltas.sequence_to_td64ns": [
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.arrays.timedeltas._objects_to_td64ns",
        "pandas._libs.tslibs.timedeltas.parse_timedelta_unit",
        "pandas.core.dtypes.common.is_integer_dtype",
        "pandas.core.dtypes.common.is_timedelta64_dtype",
        "numpy.core.fromnumeric.round_",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas.core.arrays.datetimelike.ensure_arraylike_for_datetimelike",
        "pandas.core.dtypes.common.is_float_dtype",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.is_string_dtype",
        "pandas.core.dtypes.common.is_object_dtype",
        "pandas._libs.tslibs.conversion.precision_from_unit",
        "<builtin>.TypeError",
        "pandas._libs.tslibs.np_datetime.astype_overflowsafe",
        "pandas.core.arrays.timedeltas.ints_to_td64ns"
    ],
    "pandas._libs.tslibs.timedeltas.parse_timedelta_unit": [],
    "pandas._libs.tslibs.conversion.precision_from_unit": [],
    "numpy.core.fromnumeric.round_": [
        "numpy.core.fromnumeric.around"
    ],
    "numpy.core.fromnumeric.around": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "numpy.core.fromnumeric._wrapfunc": [
        "<builtin>.getattr",
        "numpy.core.fromnumeric._wrapit"
    ],
    "numpy.core.fromnumeric._wrapit": [
        "<builtin>.getattr",
        "",
        "<builtin>.isinstance",
        "<map>"
    ],
    "pandas.core.arrays.timedeltas.ints_to_td64ns": [
        "pandas.core.internals.array_manager.BaseArrayManager.astype",
        "pandas.core.internals.managers.BaseBlockManager.astype",
        "pandas._libs.tslibs.np_datetime.astype_overflowsafe"
    ],
    "pandas.core.arrays.timedeltas._objects_to_td64ns": [
        "pandas._libs.tslibs.timedeltas.array_to_timedelta64"
    ],
    "pandas.core.arrays.datetimelike.validate_inferred_freq": [
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays.timedeltas.TimedeltaArray._simple_new": [
        "<builtin>.super",
        "<builtin>.isinstance",
        "pandas._libs.tslibs.np_datetime.is_unitless",
        "<builtin>.type"
    ],
    "pandas.core.dtypes.cast.sanitize_to_nanoseconds": [
        "copy",
        "<map>.copy",
        "pandas._libs.tslibs.np_datetime.astype_overflowsafe"
    ],
    "pandas.core.dtypes.astype.astype_nansafe": [],
    "pandas.core.construction.ensure_wrapped_if_datetimelike": [
        "pandas.core.arrays.datetimes.DatetimeArray._from_sequence",
        "<builtin>.isinstance",
        "pandas.core.arrays",
        "pandas.core.arrays.timedeltas.TimedeltaArray._from_sequence"
    ],
    "pandas.core.arrays.datetimes.DatetimeArray._from_sequence": [
        "pandas.core.arrays.datetimes.DatetimeArray._from_sequence_not_strict"
    ],
    "pandas.core.arrays.datetimes.DatetimeArray._from_sequence_not_strict": [
        "pandas.core.arrays.datetimes.DatetimeArray._simple_new",
        "pandas._libs.tslibs.offsets.to_offset",
        "pandas.core.arrays.datetimes.tz_to_dtype",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._validate_frequency",
        "pandas.core.arrays.datetimelike.validate_inferred_freq",
        "pandas.core.arrays.datetimelike.maybe_infer_freq",
        "pandas.core.arrays.datetimes._sequence_to_dt64ns"
    ],
    "pandas.core.arrays.datetimelike.maybe_infer_freq": [
        "<builtin>.isinstance",
        "pandas._libs.tslibs.offsets.to_offset"
    ],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._validate_frequency": [
        "<builtin>.str",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._generate_range",
        "pandas.core.arrays.datetimes.DatetimeArray._generate_range",
        "<builtin>.len",
        "<builtin>.ValueError",
        "numpy.core.numeric.array_equal"
    ],
    "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin._generate_range": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.errors.AbstractMethodError.__init__": [
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays.datetimes.DatetimeArray._generate_range": [
        "numpy.core.linspace",
        "pandas.core.arrays.datetimes.DatetimeArray._simple_new",
        "pandas.core.arrays.datetimes._maybe_normalize_endpoints",
        "pandas.core.arrays.datetimes._maybe_localize_point",
        "pandas._libs.tslibs.timestamps.Timestamp",
        "pandas.core.arrays.datetimelike.validate_periods",
        "numpy.core.function_base.linspace",
        "pandas._libs.tslibs.offsets.to_offset",
        "<builtin>.ValueError",
        "pandas.core.arrays.datetimes.generate_range",
        "<builtin>.isinstance",
        "pandas.core.arrays.datetimes._infer_tz_from_endpoints",
        "<builtin>.len",
        "<builtin>.any",
        "pandas.core.arrays.datetimes.tz_to_dtype",
        "pandas.core.arrays._ranges.generate_regular_range",
        "pandas.util._validators.validate_inclusive",
        "pandas.core.common.count_not_none"
    ],
    "pandas.core.arrays.datetimelike.validate_periods": [],
    "pandas.core.common.count_not_none": [
        "<builtin>.sum"
    ],
    "<builtin>.sum": [],
    "pandas.util._validators.validate_inclusive": [
        "<builtin>.isinstance",
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays.datetimes._maybe_normalize_endpoints": [],
    "pandas.core.arrays.datetimes._infer_tz_from_endpoints": [
        "<builtin>.TypeError",
        "<builtin>.AssertionError"
    ],
    "pandas.core.arrays.datetimes._maybe_localize_point": [
        "<builtin>.isinstance"
    ],
    "numpy.core.linspace": [],
    "numpy.core.function_base.linspace": [
        "<builtin>.float",
        "numpy.core.fromnumeric.ndim",
        "numpy.core.numerictypes.issubdtype",
        "<builtin>.ValueError",
        "numpy.core.multiarray.result_type",
        "numpy.core.numeric.isscalar",
        "numpy.core.numeric.moveaxis",
        "numpy.core.fromnumeric.any"
    ],
    "numpy.core.multiarray.result_type": [],
    "numpy.core.numeric.isscalar": [
        "<builtin>.isinstance",
        "<builtin>.type"
    ],
    "numpy.core.fromnumeric.any": [
        "numpy.core.fromnumeric._wrapreduction"
    ],
    "numpy.core.fromnumeric._wrapreduction": [
        "<builtin>.getattr",
        "<builtin>.type"
    ],
    "numpy.core.numeric.moveaxis": [
        "numpy.core.numeric.normalize_axis_tuple",
        "<builtin>.zip",
        "<builtin>.range",
        "<builtin>.sorted",
        "<builtin>.ValueError",
        "<builtin>.len"
    ],
    "numpy.core.numeric.normalize_axis_tuple": [
        "<builtin>.set",
        "<builtin>.ValueError",
        "<builtin>.len",
        "<builtin>.type",
        "<builtin>.tuple"
    ],
    "numpy.core.numerictypes.issubdtype": [
        "<builtin>.issubclass",
        "numpy.core.numerictypes.issubclass_"
    ],
    "numpy.core.numerictypes.issubclass_": [
        "<builtin>.issubclass"
    ],
    "pandas.core.arrays.datetimes.generate_range": [
        "<builtin>.ValueError",
        "pandas._libs.tslibs.timestamps.Timestamp",
        "pandas._libs.tslibs.offsets.to_offset"
    ],
    "pandas.core.arrays._ranges.generate_regular_range": [
        "numpy.core.arrayprint.errstate",
        "numpy.core._ufunc_config.errstate.__init__",
        "pandas.core.arrays._ranges._generate_range_overflow_safe",
        "<builtin>.ValueError"
    ],
    "pandas.core.arrays._ranges._generate_range_overflow_safe": [
        "pandas.core.arrays._ranges._generate_range_overflow_safe_signed",
        "pandas._libs.tslibs.np_datetime.OutOfBoundsDatetime",
        "numpy.core.arrayprint.errstate",
        "pandas.core.arrays._ranges._generate_range_overflow_safe",
        "numpy.core._ufunc_config.errstate.__init__"
    ],
    "pandas.core.arrays._ranges._generate_range_overflow_safe_signed": [
        "pandas._libs.tslibs.np_datetime.OutOfBoundsDatetime",
        "numpy.core.arrayprint.errstate",
        "numpy.core._ufunc_config.errstate.__init__"
    ],
    "numpy.core.numeric.array_equal": [
        "<builtin>.bool"
    ],
    "pandas.core.dtypes.cast.maybe_cast_to_integer_array": [
        "pandas.core.dtypes.common.is_integer_dtype",
        "pandas.util._exceptions.find_stack_level",
        "<builtin>.OverflowError",
        "pandas.core.dtypes.common.is_unsigned_integer_dtype",
        "pandas.core.dtypes.common.is_float_dtype",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.is_object_dtype",
        "numpy.core.numeric.array_equal"
    ],
    "<builtin>.OverflowError": [],
    "pandas.core.dtypes.common.is_unsigned_integer_dtype": [
        "pandas.core.dtypes.common.classes_and_not_datetimelike",
        "pandas.core.dtypes.common._is_dtype_type"
    ],
    "pandas.core.construction._sanitize_ndim": [
        "pandas.core.common.asarray_tuplesafe",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_array_type",
        "pandas.core.construction._maybe_repeat",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.is_object_dtype",
        "<builtin>.getattr",
        "pandas.core.arrays.datetimes.DatetimeArray._from_sequence"
    ],
    "pandas.core.common.asarray_tuplesafe": [],
    "pandas.core.construction._maybe_repeat": [
        "<builtin>.len"
    ],
    "pandas.core.construction._sanitize_str_dtypes": [
        "<builtin>.issubclass",
        "pandas.core.dtypes.missing.isna",
        "numpy.core.fromnumeric.all"
    ],
    "numpy.core.fromnumeric.all": [
        "numpy.core.fromnumeric._wrapreduction"
    ],
    "pandas.core.arrays.categorical.Categorical.isna": [],
    "numpy.core.multiarray.where": [],
    "numpy.core.numeric.where": [],
    "<builtin>.NotImplementedError": [],
    "pandas.core.arrays.categorical._get_codes_for_values": [
        "pandas.core.dtypes.cast.coerce_indexer_dtype",
        "pandas.core.arrays.categorical._get_codes_for_values"
    ],
    "pandas.core.arrays.categorical.recode_for_categories": [
        "pandas.core.dtypes.cast.coerce_indexer_dtype",
        "<builtin>.len"
    ],
    "pandas.core.algorithms.factorize": [
        "pandas.core.algorithms.factorize_array",
        "pandas.core.algorithms.safe_sort",
        "numpy.lib.function_base.append",
        "pandas.core.dtypes.missing.na_value_for_dtype",
        "pandas.core.algorithms._ensure_arraylike",
        "pandas.core.algorithms._re_wrap_factorize",
        "pandas.core.algorithms.resolve_na_sentinel",
        "numpy.core.multiarray.where",
        "numpy.core.numeric.where",
        "pandas.core.algorithms._reconstruct_data",
        "<builtin>.len",
        "<builtin>.isinstance",
        "pandas.core.construction.extract_array",
        "pandas.core.dtypes.missing.isna",
        "pandas.core.dtypes.common.is_object_dtype"
    ],
    "pandas.core.algorithms.resolve_na_sentinel": [
        "pandas.util._exceptions.find_stack_level",
        "<builtin>.ValueError"
    ],
    "pandas.core.algorithms._ensure_arraylike": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike",
        "pandas.core.dtypes.inference.is_array_like",
        "<builtin>.list"
    ],
    "pandas.core.dtypes.inference.is_array_like": [
        "<builtin>.hasattr"
    ],
    "pandas.core.algorithms.factorize_array": [
        "pandas.core.algorithms._get_hashtable_algo",
        "pandas.core.algorithms._reconstruct_data",
        "<builtin>.len"
    ],
    "pandas.core.algorithms._get_hashtable_algo": [
        "pandas.core.algorithms._check_object_for_strings",
        "pandas.core.algorithms._ensure_data"
    ],
    "pandas.core.algorithms._ensure_data": [
        "pandas.core.dtypes.cast.sanitize_to_nanoseconds",
        "pandas.core.dtypes.common.is_integer_dtype",
        "pandas.core.dtypes.common.needs_i8_conversion",
        "pandas.core.algorithms._ensure_data",
        "pandas.core.dtypes.common.is_float_dtype",
        "typing.cast",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.is_complex_dtype",
        "pandas.core.construction.extract_array",
        "pandas.core.dtypes.common.is_bool_dtype",
        "pandas.core.dtypes.common.is_object_dtype",
        "pandas.core.dtypes.common.is_categorical_dtype"
    ],
    "pandas.core.dtypes.common.is_complex_dtype": [
        "pandas.core.dtypes.common.classes",
        "pandas.core.dtypes.common._is_dtype_type"
    ],
    "pandas.core.algorithms._check_object_for_strings": [],
    "pandas.core.algorithms._reconstruct_data": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.is_datetime64_dtype",
        "pandas.core.dtypes.common.is_timedelta64_dtype"
    ],
    "pandas.core.algorithms._re_wrap_factorize": [
        "pandas",
        "<builtin>.isinstance",
        "pandas.core.indexes.api.Index",
        "pandas.core.construction.ensure_wrapped_if_datetimelike"
    ],
    "pandas.core.indexes.api.Index": [],
    "pandas.core.algorithms.safe_sort": [
        "pandas.core.algorithms.unique",
        "pandas.core.algorithms._sort_mixed",
        "pandas.core.array_algos.take.take_nd",
        "pandas.core.algorithms._sort_tuples",
        "pandas.core.algorithms._get_hashtable_algo",
        "numpy.core.multiarray.putmask",
        "<builtin>.len",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.is_extension_array_dtype",
        "<builtin>.TypeError",
        "pandas.core.dtypes.cast.infer_dtype_from_array"
    ],
    "pandas.core.dtypes.cast.infer_dtype_from_array": [
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.is_extension_array_dtype",
        "<builtin>.TypeError"
    ],
    "pandas.core.algorithms._sort_mixed": [
        "numpy.core.numeric.concatenate",
        "numpy.core.fromnumeric.sort",
        "numpy.core.arrayprint.concatenate",
        "numpy.core.fromnumeric.concatenate",
        "<builtin>.isinstance",
        "numpy.core.multiarray.concatenate"
    ],
    "numpy.core.fromnumeric.sort": [],
    "numpy.core.arrayprint.concatenate": [],
    "numpy.core.multiarray.concatenate": [
        "append",
        "<builtin>.list"
    ],
    "numpy.core.fromnumeric.concatenate": [],
    "numpy.core.numeric.concatenate": [],
    "pandas.core.algorithms._sort_tuples": [],
    "pandas.core.algorithms.unique": [
        "pandas.core.algorithms.unique_with_mask"
    ],
    "pandas.core.algorithms.unique_with_mask": [
        "pandas.core.algorithms._ensure_arraylike",
        "pandas.core.algorithms._get_hashtable_algo",
        "pandas.core.algorithms._reconstruct_data",
        "<builtin>.len",
        "pandas._libs.hashtable",
        "pandas.core.dtypes.common.is_extension_array_dtype"
    ],
    "pandas._libs.hashtable": [],
    "pandas.core.array_algos.take.take_nd": [],
    "numpy.core.multiarray.putmask": [],
    "numpy.lib.function_base.append": [
        "numpy.core.multiarray.concatenate",
        "numpy.core.numeric.concatenate",
        "numpy.core.fromnumeric.ravel"
    ],
    "numpy.core.fromnumeric.ravel": [
        "<builtin>.isinstance"
    ],
    "numpy.core.numeric.ones": [
        "numpy.core.multiarray.copyto"
    ],
    "numpy.core.multiarray.copyto": [],
    "numpy.core.ones": [],
    "pandas.core.arrays.categorical.Categorical.from_codes": [
        "pandas.core.dtypes.common.is_integer_dtype",
        "pandas.core.dtypes.dtypes.CategoricalDtype._from_values_or_dtype",
        "<builtin>.ValueError",
        "<builtin>.len",
        "pandas.core.dtypes.common.is_extension_array_dtype",
        "pandas.core.arrays.categorical.Categorical.__init__",
        "pandas.core.arrays.categorical.Categorical.isna"
    ],
    "pandas.core.indexes.api.CategoricalIndex": [],
    "pandas.core.generic.NDFrame._validate_dtype": [
        "<builtin>.NotImplementedError",
        "pandas.core.dtypes.common.pandas_dtype"
    ],
    "pandas.core.dtypes.inference.is_dict_like": [
        "<builtin>.all",
        "<builtin>.hasattr",
        "<builtin>.isinstance"
    ],
    "<builtin>.all": [],
    "pandas.core.common.maybe_iterable_to_list": [
        "<builtin>.isinstance",
        "typing.cast",
        "<builtin>.list"
    ],
    "pandas.core.series.Series._init_dict": [
        "<map>.values",
        "pandas.core.dtypes.missing.na_value_for_dtype",
        "pandas.core.series.Series.reindex",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas.core.construction.create_series_with_explicit_dtype",
        "<map>.keys",
        "<builtin>.tuple",
        "<builtin>.list"
    ],
    "pandas.core.dtypes.base.ExtensionDtype.type": [
        "pandas.errors.AbstractMethodError.__init__"
    ],
    "pandas.core.construction.create_series_with_explicit_dtype": [
        "pandas.core.construction.is_empty_data",
        "pandas.core.series.Series.__init__",
        "pandas.core.series"
    ],
    "pandas.core.series.Series.reindex": [
        "<builtin>.super",
        "<builtin>.TypeError",
        "<builtin>.len"
    ],
    "pandas.core.common.require_length_match": [
        "<builtin>.ValueError",
        "<builtin>.len"
    ],
    "pandas.core.indexes.api.default_index": [
        "<builtin>.range",
        "pandas.core.indexes.range.RangeIndex._simple_new"
    ],
    "pandas.core.indexes.range.RangeIndex._simple_new": [
        "<builtin>.isinstance"
    ],
    "<map>": [],
    "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_array_type": [
        "pandas.core.arrays"
    ],
    "pandas.core.internals.array_manager.SingleArrayManager.from_array": [
        "pandas.core.internals.array_manager.SingleArrayManager.__init__"
    ],
    "pandas.core.internals.array_manager.SingleArrayManager.__init__": [
        "pandas.core.internals.blocks.maybe_coerce_values",
        "pandas.core.internals.blocks.extract_pandas_array",
        "<builtin>.len",
        "pandas.core.internals.array_manager.SingleArrayManager._verify_integrity",
        "pandas.core.indexes.base.ensure_index"
    ],
    "pandas.core.internals.blocks.maybe_coerce_values": [
        "<builtin>.issubclass",
        "<builtin>.isinstance",
        "pandas.core.construction.ensure_wrapped_if_datetimelike"
    ],
    "pandas.core.internals.blocks.extract_pandas_array": [
        "numpy.core.shape_base.atleast_2d",
        "<builtin>.isinstance"
    ],
    "numpy.core.shape_base.atleast_2d": [
        "append",
        "<builtin>.len"
    ],
    "pandas.core.internals.array_manager.SingleArrayManager._verify_integrity": [
        "<builtin>.ValueError",
        "<builtin>.len"
    ],
    "pandas.core.internals.managers.SingleBlockManager.from_array": [
        "pandas.core.internals.managers.SingleBlockManager.__init__",
        "pandas.core.internals.blocks.new_block",
        "<builtin>.slice",
        "<builtin>.len"
    ],
    "pandas.core.internals.blocks.new_block": [
        "pandas.core.internals.blocks.maybe_coerce_values",
        "pandas._libs.internals.BlockPlacement",
        "<builtin>.isinstance",
        "pandas.core.internals.blocks.check_ndim",
        "pandas.core.internals.blocks.get_block_type"
    ],
    "pandas._libs.internals.BlockPlacement": [],
    "pandas.core.internals.blocks.check_ndim": [
        "<builtin>.ValueError",
        "pandas.core.dtypes.common.is_1d_only_ea_dtype",
        "<builtin>.len"
    ],
    "pandas.core.dtypes.common.is_1d_only_ea_dtype": [
        "<builtin>.isinstance"
    ],
    "pandas.core.internals.blocks.get_block_type": [
        "<builtin>.isinstance"
    ],
    "pandas.core.internals.array_manager.BaseArrayManager.astype": [
        "pandas.core.internals.array_manager.SingleArrayManager.apply",
        "pandas.core.internals.array_manager.BaseArrayManager.apply"
    ],
    "pandas.core.internals.array_manager.SingleArrayManager.apply": [
        "<builtin>.getattr",
        "pandas.core.dtypes.astype.astype_array_safe",
        "<builtin>.callable",
        "<builtin>.type"
    ],
    "pandas.core.dtypes.astype.astype_array_safe": [
        "pandas.core.dtypes.common.is_datetime64_dtype",
        "<builtin>.issubclass",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.is_dtype_equal",
        "pandas.core.dtypes.astype.astype_array",
        "pandas.core.dtypes.common.pandas_dtype",
        "pandas._libs.tslibs.np_datetime.is_unitless",
        "<builtin>.TypeError",
        "<builtin>.list"
    ],
    "pandas.core.dtypes.astype.astype_array": [
        "pandas.core.dtypes.common.is_datetime64_dtype",
        "pandas.core.dtypes.astype.astype_dt64_to_dt64tz",
        "pandas.core.dtypes.astype.astype_nansafe",
        "<builtin>.issubclass",
        "<builtin>.isinstance",
        "pandas.core.dtypes.common.is_dtype_equal",
        "pandas.core.dtypes.common.is_datetime64tz_dtype",
        "<builtin>.TypeError"
    ],
    "pandas.core.dtypes.astype.astype_dt64_to_dt64tz": [
        "pandas.core.construction",
        "<map>.copy",
        "typing.cast",
        "<builtin>.isinstance",
        "copy",
        "pandas.core.construction.ensure_wrapped_if_datetimelike",
        "<builtin>.NotImplementedError",
        "pandas.util._exceptions.find_stack_level"
    ],
    "pandas.core.internals.array_manager.BaseArrayManager.apply": [
        "<builtin>.enumerate",
        "pandas.core.dtypes.astype.astype_array_safe",
        "<builtin>.callable",
        "<builtin>.type",
        "<builtin>.isinstance",
        "<builtin>.getattr"
    ],
    "pandas.core.internals.array_manager.BaseArrayManager.copy": [
        "<builtin>.type",
        "pandas.core.internals.array_manager.BaseArrayManager.copy.copy_func",
        "<builtin>.list"
    ],
    "pandas.core.internals.array_manager.BaseArrayManager.copy.copy_func": [],
    "pandas.core.internals.managers.SingleBlockManager.__init__": [
        "pandas.core.internals.managers._using_copy_on_write",
        "pandas.util._exceptions.find_stack_level"
    ],
    "pandas.core.internals.managers._using_copy_on_write": [
        "pandas._config.config.CallableDynamicDoc.__init__"
    ],
    "pandas.core.internals.managers.BaseBlockManager.copy": [
        "pandas.core.internals.managers._using_copy_on_write",
        "pandas.core.internals.managers.BaseBlockManager.copy.copy_func",
        "pandas.core.internals.managers.BaseBlockManager.apply",
        "<builtin>.list"
    ],
    "pandas.core.internals.managers.BaseBlockManager.copy.copy_func": [],
    "pandas.core.internals.managers.BaseBlockManager.apply": [
        "pandas.core.internals.blocks.extend_blocks",
        "<builtin>.callable",
        "<builtin>.type",
        "<builtin>.isinstance",
        "<builtin>.getattr",
        "pandas.core.internals.managers.BaseBlockManager._combine"
    ],
    "pandas.core.internals.blocks.extend_blocks": [
        "append",
        "<builtin>.isinstance",
        "extend",
        "<builtin>.type"
    ],
    "pandas.core.internals.managers.BaseBlockManager._combine": [
        "numpy.core.numeric.concatenate",
        "numpy.core.fromnumeric.sort",
        "numpy.core.arrayprint.concatenate",
        "pandas._libs.internals.BlockPlacement",
        "numpy.core.fromnumeric.concatenate",
        "<builtin>.len",
        "<builtin>.type",
        "pandas.core.internals.managers.BaseBlockManager.make_empty",
        "numpy.core.multiarray.concatenate",
        "<builtin>.list"
    ],
    "pandas.core.internals.managers.BaseBlockManager.make_empty": [
        "<builtin>.isinstance",
        "pandas._libs.internals.BlockPlacement",
        "<builtin>.slice",
        "<builtin>.type"
    ],
    "pandas.core.internals.managers.BaseBlockManager.astype": [
        "pandas.core.internals.managers.BaseBlockManager.apply"
    ],
    "pandas.core.series.Series._set_axis": [
        "<builtin>.isinstance",
        "pandas.core.indexes.base.ensure_index",
        "<builtin>.type"
    ],
    "pandas.core.indexes.base.Index.copy": [
        "pandas.core.indexes.base.Index._rename",
        "pandas.core.indexes.base.Index._validate_names",
        "pandas.util._exceptions.find_stack_level",
        "<builtin>.type"
    ],
    "pandas.core.indexes.base.Index._validate_names": [
        "<builtin>.ValueError",
        "<builtin>.type",
        "<builtin>.len",
        "copy.deepcopy",
        "pandas.core.dtypes.common.validate_all_hashable",
        "<builtin>.TypeError"
    ],
    "copy.deepcopy": [],
    "pandas.core.dtypes.common.validate_all_hashable": [
        "<builtin>.all",
        "pandas.core.dtypes.inference.is_hashable",
        "<builtin>.TypeError"
    ],
    "pandas.core.indexes.base.Index._rename": [
        "pandas.core.indexes.base.Index._view"
    ],
    "pandas.core.indexes.base.Index._view": [
        "pandas.core.indexes.base.Index._simple_new"
    ],
    "pandas.core.indexes.base.Index._simple_new": [
        "<builtin>.isinstance",
        "<builtin>.type"
    ],
    "pandas.core.indexes.multi.MultiIndex.copy": [
        "copy.deepcopy",
        "pandas.core.indexes.base.Index._validate_names",
        "pandas.util._exceptions.find_stack_level",
        "<builtin>.type"
    ]
}