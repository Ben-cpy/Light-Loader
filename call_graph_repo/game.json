{"handler": ["<builtin>.print"], "pygame": ["copyreg.pickle", "<builtin>.print", "posixpath.basename", "posixpath.split", "ntpath.basename", "os.add_dll_directory", "pygame.MissingModule.__init__", "ntpath.split"], "os": ["<builtin>.set", "extend", "<builtin>.ImportError", "os._exists", "os._createenviron", "<builtin>.globals", "os._add", "os._fscodec", "os._Environ.__init__", "<builtin>.type", "append"], "abc": [], "_py_abc": [], "_weakrefset": [], "types": ["types._c", "types._g", "types._cell_factory", "<builtin>.globals", "<builtin>.type", "<builtin>.object", "types._ag"], "<builtin>.type": [], "types._cell_factory": [], "types._g": [], "types._c": [], "types._ag": [], "<builtin>.object": [], "types._GeneratorWrapper": ["<builtin>.property"], "<builtin>.property": [], "<builtin>.globals": [], "_weakrefset.WeakSet": ["<builtin>.classmethod"], "<builtin>.classmethod": [], "stat": [], "<builtin>.ImportError": [], "append": [], "ntpath": ["<builtin>.hasattr"], "genericpath": [], "<builtin>.hasattr": [], "extend": [], "posixpath": [], "os._exists": ["<builtin>.globals"], "<builtin>.set": [], "os._add": [], "os._createenviron": ["os._Environ.__init__", "os._createenviron.encodekey"], "os._createenviron.encodekey": ["os._createenviron.encode"], "os._createenviron.encode": ["<builtin>.TypeError", "<builtin>.isinstance", "<builtin>.type"], "<builtin>.isinstance": [], "<builtin>.TypeError": [], "os._Environ.__init__": [], "os._fscodec": [], "os.PathLike": ["<builtin>.classmethod", "abc.abstractmethod"], "abc.abstractmethod": [], "ntpath.basename": ["ntpath.split"], "ntpath.split": ["os._fspath", "ntpath._get_bothseps", "ntpath.splitdrive", "<builtin>.len"], "os._fspath": ["<builtin>.isinstance", "<builtin>.type", "<builtin>.hasattr", "<builtin>.TypeError", "<str>.format"], "<str>.format": [], "ntpath._get_bothseps": ["<builtin>.isinstance"], "ntpath.splitdrive": ["os._fspath", "<builtin>.len", "<builtin>.isinstance"], "<builtin>.len": [], "posixpath.basename": ["posixpath._get_sep", "os._fspath"], "posixpath._get_sep": ["<builtin>.isinstance"], "posixpath.split": ["posixpath._get_sep", "os._fspath", "<builtin>.len"], "os.add_dll_directory": ["os._AddedDllDirectory.__init__"], "os._AddedDllDirectory.__init__": [], "pygame.version": [], "pygame.version.SoftwareVersion": ["<builtin>.property"], "pygame.MissingModule.__init__": ["<builtin>.str", "pygame.MissingModule.warn"], "<builtin>.str": [], "pygame.MissingModule.warn": ["<builtin>.print", "warnings.warn"], "warnings": ["warnings.simplefilter", "warnings._processoptions", "warnings.filterwarnings", "<builtin>.hasattr"], "warnings._processoptions": ["<builtin>.print", "warnings._setoption"], "warnings._setoption": ["warnings.filterwarnings", "warnings._getcategory", "re.escape", "<builtin>.int", "warnings._getaction", "<builtin>.len"], "warnings._getaction": [], "warnings._getcategory": ["<builtin>.issubclass", "<builtin>.getattr", "<builtin>.__import__"], "<builtin>.__import__": [], "<builtin>.getattr": [], "<builtin>.issubclass": [], "re": ["copyreg.pickle", "<builtin>.chr", "functools.lru_cache.decorating_function", "sre_compile.compile", "<builtin>.globals", "<builtin>.type", "functools.lru_cache"], "enum": ["<builtin>.object"], "enum.EnumMeta": ["<builtin>.classmethod", "<builtin>.staticmethod", "<builtin>.property"], "<builtin>.staticmethod": [], "enum.Enum": ["<builtin>.classmethod", "types.DynamicClassAttribute.__init__"], "types.DynamicClassAttribute.__init__": ["<builtin>.bool", "<builtin>.getattr"], "<builtin>.bool": [], "enum.Flag": ["<builtin>.classmethod"], "enum.IntFlag": ["<builtin>.classmethod"], "sre_compile": ["<builtin>.tuple"], "sre_parse": ["<builtin>.frozenset"], "sre_constants": ["sre_constants._makecodes"], "sre_constants._makecodes": ["<builtin>.globals", "<builtin>.enumerate", "<str>.strip", "<str>.split"], "<str>.strip": [], "<str>.split": [], "<builtin>.enumerate": [], "<builtin>.frozenset": [], "sre_parse.State": ["<builtin>.property"], "sre_parse.Tokenizer": ["<builtin>.property"], "<builtin>.tuple": [], "functools": ["<builtin>.object", "collections.namedtuple"], "collections": [], "keyword": ["<builtin>.frozenset"], "operator": [], "reprlib": ["reprlib.Repr.__init__"], "reprlib.Repr.__init__": [], "collections.OrderedDict": ["reprlib.recursive_repr.decorating_function", "<builtin>.object", "<builtin>.classmethod", "reprlib.recursive_repr"], "reprlib.recursive_repr": [], "reprlib.recursive_repr.decorating_function": ["<builtin>.set", "<builtin>.getattr"], "collections.Counter": ["<builtin>.classmethod"], "collections.ChainMap": ["reprlib.recursive_repr.decorating_function", "<builtin>.property", "<builtin>.classmethod", "reprlib.recursive_repr"], "collections.UserDict": ["<builtin>.classmethod"], "functools.partial": ["reprlib.recursive_repr.decorating_function", "reprlib.recursive_repr"], "functools.partialmethod": ["<builtin>.property", "<builtin>.classmethod"], "collections.namedtuple": ["<builtin>.map", "<builtin>.str", "<str>.split", "<builtin>.ValueError", "<str>.replace", "<builtin>.reversed", "<builtin>.TypeError", "<builtin>.eval", "<builtin>.set", "<str>.join", "<builtin>.tuple", "<builtin>.dict", "<builtin>.classmethod", "<builtin>.isinstance", "<builtin>.enumerate", "<builtin>.zip", "<builtin>.list", "collections.<lambda1>", "<builtin>.type", "<builtin>.len"], "<builtin>.map": [], "<builtin>.list": [], "<builtin>.ValueError": [], "<builtin>.reversed": [], "<builtin>.zip": [], "<builtin>.dict": [], "<str>.join": [], "<builtin>.eval": [], "collections.<lambda1>": ["<builtin>.property", "operator.itemgetter.__init__"], "operator.itemgetter.__init__": [], "functools.singledispatchmethod": ["<builtin>.property"], "functools.cached_property": ["<builtin>.classmethod"], "<builtin>.chr": [], "sre_compile.compile": ["sre_parse.parse", "<builtin>.print", "<map>.items", "sre_compile.dis", "sre_compile._code", "<builtin>.tuple", "sre_compile.isstring"], "sre_compile.isstring": ["<builtin>.isinstance"], "sre_parse.parse": ["sre_parse.fix_flags", "sre_parse.SubPattern.dump", "sre_parse.State.__init__", "sre_constants.error.__init__", "sre_parse.Tokenizer.error", "sre_parse.Tokenizer.__init__", "sre_parse.Tokenizer.seek", "sre_parse._parse_sub"], "sre_parse.Tokenizer.__init__": ["sre_parse.Tokenizer.__next", "<builtin>.isinstance", "<builtin>.str"], "sre_parse.Tokenizer.__next": ["sre_parse.Tokenizer.error", "<builtin>.len"], "sre_parse.Tokenizer.error": ["sre_parse.Tokenizer.error", "sre_parse.Tokenizer.tell"], "sre_parse.Tokenizer.tell": ["<builtin>.len"], "sre_parse.State.__init__": [], "sre_parse._parse_sub": ["", "extend", "sre_parse.SubPattern.append", "sre_parse.Tokenizer.match", "sre_parse.SubPattern.__init__", "sre_parse.Tokenizer.tell", "append", "<builtin>.len"], "sre_parse.Tokenizer.match": ["sre_parse.Tokenizer.__next"], "sre_parse.SubPattern.__init__": [], "sre_parse.SubPattern.append": ["append"], "sre_parse.Tokenizer.seek": ["sre_parse.Tokenizer.__next"], "sre_parse.fix_flags": ["<builtin>.isinstance", "<builtin>.ValueError"], "sre_constants.error.__init__": ["<builtin>.isinstance", "<str>.rfind", "<builtin>.super", "<str>.count"], "<str>.count": [], "<str>.rfind": [], "<builtin>.super": [], "sre_parse.SubPattern.dump": ["<builtin>.enumerate", "<builtin>.isinstance", "<builtin>.str", "<builtin>.print"], "<builtin>.print": [], "sre_compile._code": ["sre_compile._compile_info", "append", "sre_compile._compile"], "sre_compile._compile_info": ["", "extend", "sre_parse.SubPattern.getwidth", "sre_compile._get_literal_prefix", "sre_compile._get_charset_prefix", "sre_compile._optimize_charset", "sre_compile._compile_charset", "<builtin>.len"], "sre_parse.SubPattern.getwidth": ["<builtin>.max", "<builtin>.min"], "<builtin>.min": [], "<builtin>.max": [], "sre_compile._get_literal_prefix": ["", "sre_compile._get_iscased", "extend", "sre_compile._combine_flags", "sre_compile._get_literal_prefix", "<builtin>.len"], "sre_compile._get_iscased": [], "sre_compile._combine_flags": [], "sre_compile._get_charset_prefix": ["", "<builtin>.range", "sre_compile._get_iscased", "<builtin>.map", "sre_compile._combine_flags", "<builtin>.any"], "<builtin>.range": [], "<builtin>.any": [], "sre_compile._optimize_charset": ["sre_compile._bytes_to_codes", "<builtin>.range", "<builtin>.bytearray", "sre_compile._mk_bitmap", "<builtin>.map", "<builtin>.len", "<builtin>.bytes", "append", "<builtin>.any"], "<builtin>.bytearray": [], "sre_compile._mk_bitmap": ["<builtin>.range", "<builtin>.len"], "<builtin>.bytes": [], "sre_compile._bytes_to_codes": ["<builtin>.memoryview", "<builtin>.len"], "<builtin>.memoryview": [], "sre_compile._compile_charset": ["", "extend", "sre_constants.error.__init__"], "sre_compile._compile": ["", "sre_compile._compile", "sre_constants.error.__init__", "sre_compile._combine_flags", "sre_compile._simple", "sre_compile._optimize_charset", "sre_compile._compile_charset"], "sre_compile._simple": ["sre_compile._simple", "<builtin>.len"], "sre_compile.dis": ["<builtin>.set", "<builtin>.str", "sre_compile.dis.dis_", "<builtin>.len"], "sre_compile.dis.dis_": ["<builtin>.ValueError", "<builtin>.chr", "sre_compile.dis.dis_", "<builtin>.range", "sre_compile._hex_code", "<builtin>.map", "<builtin>.str", "sre_compile.dis.dis_.print_", "<builtin>.list", "<builtin>.bin", "sre_compile.dis.dis_.print_2"], "<builtin>.bin": [], "sre_compile.dis.dis_.print_": ["<builtin>.print"], "sre_compile.dis.dis_.print_2": ["<builtin>.print"], "sre_compile._hex_code": [], "<map>.items": [], "functools.lru_cache": ["<builtin>.isinstance", "functools._lru_cache_wrapper", "<builtin>.TypeError", "<builtin>.callable", "functools.update_wrapper"], "<builtin>.callable": [], "functools._lru_cache_wrapper": ["<builtin>.object"], "functools.update_wrapper": ["<builtin>.getattr"], "functools.lru_cache.decorating_function": ["functools.update_wrapper", "functools._lru_cache_wrapper"], "copyreg": ["copyreg.pickle", "<builtin>.type"], "copyreg.pickle": ["<builtin>.TypeError", "copyreg.constructor", "<builtin>.callable"], "copyreg.constructor": ["<builtin>.TypeError", "<builtin>.callable"], "re.escape": ["<builtin>.isinstance", "<builtin>.str", "<str>.translate", "<str>.encode"], "<builtin>.int": [], "warnings.filterwarnings": ["re.compile", "<builtin>.isinstance", "<builtin>.issubclass", "warnings._add_filter"], "re.compile": ["re._compile"], "re._compile": ["<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.iter", "sre_compile.compile", "<builtin>.TypeError", "<builtin>.next", "<builtin>.type", "sre_compile.isstring", "<builtin>.len"], "<builtin>.iter": [], "<builtin>.next": [], "warnings._add_filter": ["warnings._filters_mutated", "append", "insert", "remove"], "remove": [], "insert": [], "warnings._filters_mutated": [], "warnings.simplefilter": ["<builtin>.isinstance", "warnings._add_filter"], "warnings.warn": ["<builtin>.isinstance", "<builtin>.range", "<builtin>.issubclass", "warnings._is_internal_frame", "warnings.warn_explicit", "<builtin>.TypeError", "<builtin>.type", "warnings._next_external_frame"], "warnings._is_internal_frame": [], "warnings._next_external_frame": ["warnings._is_internal_frame"], "warnings.warn_explicit": ["<builtin>.isinstance", "<builtin>.issubclass", "<map>.get", "<str>.lower", "<map>.clear", "warnings.WarningMessage.__init__", "warnings._showwarnmsg", "linecache.getlines", "<builtin>.str", "<builtin>.RuntimeError", "<builtin>.int"], "<str>.lower": [], "<map>.get": [], "<map>.clear": [], "linecache": [], "tokenize": ["<builtin>.set", "re.compile", "<builtin>.map", "<builtin>.sorted", "tokenize.group", "tokenize._all_string_prefixes", "tokenize.maybe", "<builtin>.any", "functools.lru_cache", "collections.namedtuple"], "codecs": ["<builtin>.SystemError"], "<builtin>.SystemError": [], "encodings": [], "io": [], "token": ["<builtin>.globals", "<builtin>.isinstance", "extend"], "tokenize.TokenInfo": ["<builtin>.property"], "tokenize.maybe": ["tokenize.group"], "tokenize.group": [], "tokenize._all_string_prefixes": [], "<builtin>.sorted": [], "linecache.getlines": ["linecache.updatecache", "linecache.clearcache", "<builtin>.len"], "linecache.updatecache": ["ntpath.isabs", "<str>.startswith", "<str>.endswith", "<map>.pop", "linecache.lazycache", "posixpath.join", "tokenize.open", "ntpath.join", "<builtin>.len", "posixpath.isabs"], "<map>.pop": [], "<str>.startswith": [], "<str>.endswith": [], "linecache.lazycache": ["<str>.startswith", "<str>.endswith", "<builtin>.getattr", "<builtin>.len"], "ntpath.isabs": ["ntpath._get_bothseps", "<builtin>.isinstance", "os._fspath", "ntpath.splitdrive", "<builtin>.len"], "posixpath.isabs": ["posixpath._get_sep", "os._fspath"], "ntpath.join": ["<builtin>.isinstance", "genericpath._check_arg_types", "<builtin>.map", "os._fspath", "ntpath.splitdrive"], "genericpath._check_arg_types": ["<builtin>.TypeError", "<builtin>.isinstance"], "posixpath.join": ["posixpath._get_sep", "os._fspath", "genericpath._check_arg_types", "<builtin>.map"], "tokenize.open": ["tokenize.detect_encoding"], "tokenize.detect_encoding": ["tokenize.detect_encoding.read_or_stop", "tokenize.detect_encoding.find_cookie"], "tokenize.detect_encoding.read_or_stop": [], "tokenize.detect_encoding.find_cookie": ["<builtin>.SyntaxError", "tokenize._get_normal_name"], "<builtin>.SyntaxError": [], "tokenize._get_normal_name": [], "linecache.clearcache": ["<map>.clear"], "<builtin>.RuntimeError": [], "warnings.WarningMessage.__init__": [], "warnings._showwarnmsg": ["warnings._showwarnmsg_impl"], "warnings._showwarnmsg_impl": ["warnings._formatwarnmsg"], "warnings._formatwarnmsg": ["warnings._formatwarnmsg_impl"], "warnings._formatwarnmsg_impl": ["linecache.getline"], "linecache.getline": ["linecache.getlines", "<builtin>.len"], "tracemalloc": [], "collections.abc": [], "fnmatch": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "pickle": ["append", "extend"], "struct": [], "_compat_pickle": ["<builtin>.dict", "<map>.update", "<builtin>.len", "<map>.items"], "<map>.update": [], "pickle._Pickler": ["<builtin>.type"], "tracemalloc.Frame": ["<builtin>.property"], "tracemalloc.Traceback": ["<builtin>.property"], "tracemalloc.Trace": ["<builtin>.property"], "tracemalloc.Filter": ["<builtin>.property"], "tracemalloc.DomainFilter": ["<builtin>.property"], "tracemalloc.Snapshot": ["<builtin>.staticmethod"], "pygame.cursors": ["pygame.cursors.Cursor.__init__"], "pygame.cursors.Cursor.__init__": ["<builtin>.TypeError", "<builtin>.isinstance", "<builtin>.tuple", "<builtin>.len"], "pygame.sprite": ["typing.TypeVar.__init__"], "typing": ["typing.TypeVar.__init__", "typing._SpecialGenericAlias.__init__", "typing._tp_cache.decorator", "typing._SpecialForm.__init__", "<builtin>.frozenset", "typing._tp_cache"], "contextlib": [], "contextlib.AbstractContextManager": ["<builtin>.classmethod", "abc.abstractmethod"], "contextlib.AbstractAsyncContextManager": ["<builtin>.classmethod", "abc.abstractmethod"], "contextlib._BaseExitStack": ["<builtin>.staticmethod"], "contextlib.AsyncExitStack": ["<builtin>.staticmethod"], "typing._SpecialForm": ["typing._tp_cache"], "typing._tp_cache": ["typing._tp_cache.decorator"], "typing._tp_cache.decorator": ["append", "functools.lru_cache.decorating_function", "functools.lru_cache", "functools.wraps"], "functools.wraps": [], "typing._SpecialForm.__init__": [], "typing.ParamSpec": ["<builtin>.property"], "typing._GenericAlias": ["typing._tp_cache"], "typing._SpecialGenericAlias": ["typing._tp_cache"], "typing._CallableType": ["typing._tp_cache"], "typing._TupleType": ["typing._tp_cache"], "typing.Generic": ["typing._tp_cache"], "typing.Annotated": ["typing._tp_cache"], "typing.TypeVar.__init__": ["<builtin>.super", "<builtin>.TypeError", "typing._type_check", "<builtin>.tuple", "<builtin>.len"], "typing._type_check": ["<builtin>.TypeError", "typing._type_convert", "<builtin>.callable", "<builtin>.isinstance"], "typing._type_convert": ["<builtin>.type", "typing.ForwardRef.__init__", "<builtin>.isinstance"], "typing.ForwardRef.__init__": ["<builtin>.TypeError", "<builtin>.isinstance", "<builtin>.SyntaxError", "<builtin>.compile"], "<builtin>.compile": [], "typing._SpecialGenericAlias.__init__": ["<builtin>.super"], "typing.SupportsInt": ["abc.abstractmethod"], "typing.SupportsFloat": ["abc.abstractmethod"], "typing.SupportsComplex": ["abc.abstractmethod"], "typing.SupportsBytes": ["abc.abstractmethod"], "typing.SupportsIndex": ["abc.abstractmethod"], "typing.SupportsAbs": ["abc.abstractmethod"], "typing.SupportsRound": ["abc.abstractmethod"], "typing.IO": ["<builtin>.property", "abc.abstractmethod"], "typing.BinaryIO": ["abc.abstractmethod"], "typing.TextIO": ["<builtin>.property", "abc.abstractmethod"], "weakref": [], "weakref.finalize": ["<builtin>.property", "<builtin>.classmethod"], "pygame.sprite.Sprite": ["<builtin>.property"], "pygame.sprite.DirtySprite": ["<builtin>.property"], "pygame.sprite.LayeredDirty": ["<builtin>.staticmethod"], "pygame.sprite.GroupSingle": ["<builtin>.property"], "pygame.threads": ["<builtin>.object"], "queue": [], "threading": ["<builtin>.set", "threading.RLock", "threading._MainThread.__init__", "<builtin>.hasattr", "_weakrefset.WeakSet.__init__", "append", "collections.namedtuple"], "threading.Barrier": ["<builtin>.property"], "threading.RLock": ["threading._RLock.__init__"], "threading._RLock.__init__": [], "_weakrefset.WeakSet.__init__": ["<builtin>.set", "_weakrefset.WeakSet.update"], "_weakrefset.WeakSet.update": ["_weakrefset.WeakSet.add", "_weakrefset.WeakSet._commit_removals"], "_weakrefset.WeakSet._commit_removals": [], "_weakrefset.WeakSet.add": ["_weakrefset.WeakSet._commit_removals"], "threading.Thread": ["<builtin>.property"], "traceback": [], "traceback.FrameSummary": ["<builtin>.property"], "traceback.StackSummary": ["<builtin>.classmethod"], "traceback.TracebackException": ["<builtin>.classmethod"], "threading._MainThread.__init__": ["threading.Event.set", "threading.Thread._set_tstate_lock", "threading.Thread.__init__", "threading.Thread._set_native_id", "threading.Thread._set_ident"], "threading.Thread.__init__": ["threading.Event.__init__", "_weakrefset.WeakSet.add", "threading._make_invoke_excepthook", "threading.current_thread", "<builtin>.str", "threading._newname"], "threading._newname": [], "threading.current_thread": ["threading._DummyThread.__init__"], "threading._DummyThread.__init__": ["threading.Thread._set_ident", "threading.Thread._set_native_id", "threading.Thread.__init__", "threading._newname"], "threading.Thread._set_ident": [], "threading.Thread._set_native_id": [], "threading.Event.__init__": ["threading.Condition.__init__"], "threading.Condition.__init__": ["threading.RLock"], "threading._make_invoke_excepthook": ["<builtin>.RuntimeError"], "threading.Thread._set_tstate_lock": [], "threading.Event.set": [], "_threading_local": ["contextlib.contextmanager"], "contextlib.contextmanager": ["functools.wraps"], "heapq": [], "queue.Queue": ["<builtin>.classmethod"], "queue._PySimpleQueue": ["<builtin>.classmethod"], "pygame.ftfont": [], "pygame.sysfont": ["<builtin>.frozenset"], "subprocess": ["subprocess._use_posix_spawn", "<builtin>.getattr", "<builtin>.hasattr"], "signal": ["<builtin>.globals", "signal._wraps.decorator", "signal._wraps"], "signal._wraps": [], "signal._wraps.decorator": [], "selectors": ["<builtin>.hasattr", "selectors._can_use", "collections.namedtuple"], "selectors.BaseSelector": ["abc.abstractmethod"], "selectors._can_use": ["<builtin>.getattr"], "subprocess.CalledProcessError": ["<builtin>.property"], "subprocess.TimeoutExpired": ["<builtin>.property"], "subprocess.CompletedProcess": ["<builtin>.classmethod"], "subprocess._use_posix_spawn": ["<builtin>.tuple", "<builtin>.map", "<builtin>.len", "<builtin>.hasattr"], "subprocess.Popen": ["<builtin>.classmethod", "<builtin>.property"], "pygame.ftfont.Font": ["<builtin>.property", "<builtin>.staticmethod"], "pygame.surfarray": ["<builtin>.hasattr", "<builtin>.getattr", "<str>.split"], "numpy": ["<builtin>.tuple", "numpy._pytesttester.PytestTester.__init__", "warnings.filterwarnings", "extend", "remove", "numpy._sanity_check", "numpy.core.getlimits._register_known_types", "<builtin>.ImportError", "numpy._mac_os_check", "<builtin>.str", "<builtin>.RuntimeError", "<builtin>.int", "warnings.catch_warnings.__init__", "<map>.update", "<builtin>.len"], "numpy._globals": ["<builtin>.globals", "<builtin>.RuntimeError"], "numpy._utils": [], "numpy._utils._convertions": [], "numpy.exceptions": ["<builtin>.globals", "<builtin>.RuntimeError"], "numpy.version": ["<str>.split"], "numpy._distributor_init": [], "numpy.__config__": ["<str>.replace", "<str>.lower", "numpy.__config__._cleanup", "<builtin>.bool"], "<str>.replace": [], "numpy.__config__._cleanup": ["<builtin>.isinstance", "numpy.__config__._cleanup", "<map>.items"], "numpy.core": ["copyreg.pickle", "numpy._pytesttester.PytestTester.__init__", "<builtin>.ImportError", "<builtin>.hasattr", "<builtin>.type", "append"], "numpy.core.multiarray": [], "numpy.core.overrides": ["<builtin>.set", "collections.namedtuple"], "numpy._utils._inspect": [], "numpy.core.umath": [], "numpy.core.numerictypes": ["<builtin>.tuple", "numpy._utils.set_module", "append", "<builtin>.globals", "<builtin>.sorted", "numpy.core.numerictypes._register_types", "numpy.core.numerictypes._construct_lookups", "numpy._utils.set_module.decorator", "<builtin>.len"], "numbers": [], "numbers.Complex": ["<builtin>.property", "abc.abstractmethod"], "numbers.Real": ["<builtin>.property", "abc.abstractmethod"], "numbers.Rational": ["<builtin>.property", "abc.abstractmethod"], "numbers.Integral": ["<builtin>.property", "abc.abstractmethod"], "numpy.core._string_helpers": ["<builtin>.tuple", "<builtin>.range", "<builtin>.map"], "numpy.core._type_aliases": ["<builtin>.isinstance", "numpy.core._type_aliases._add_types", "numpy.core._type_aliases._set_up_aliases", "<map>.items", "numpy.core._type_aliases._add_integer_aliases", "<builtin>.list", "numpy.core._type_aliases._add_aliases", "numpy.core._type_aliases._set_array_types", "numpy.core._string_helpers.english_lower"], "numpy.compat": ["extend"], "numpy.compat.py3k": [], "pathlib": ["functools.lru_cache.decorating_function", "functools.lru_cache", "<builtin>.hasattr"], "urllib.parse": ["urllib.parse._fix_result_transcoding", "re.compile", "<builtin>.frozenset", "<builtin>.bytes", "collections.namedtuple"], "urllib.parse._NetlocResultMixinBase": ["<builtin>.property", "<builtin>.classmethod"], "urllib.parse._NetlocResultMixinStr": ["<builtin>.property"], "urllib.parse._NetlocResultMixinBytes": ["<builtin>.property"], "urllib.parse._fix_result_transcoding": [], "pathlib._WindowsFlavour": ["<builtin>.set"], "pathlib._NormalAccessor": ["<builtin>.staticmethod", "<builtin>.hasattr"], "pathlib.PurePath": ["<builtin>.classmethod", "operator.attrgetter.__init__", "<builtin>.property"], "operator.attrgetter.__init__": ["<builtin>.isinstance", "<builtin>.map", "<builtin>.TypeError", "<str>.split", "<builtin>.tuple"], "pathlib.Path": ["<builtin>.classmethod"], "numpy.core._dtype": [], "numpy.core._string_helpers.english_lower": [], "numpy.core._type_aliases._add_types": ["<map>.items"], "numpy.core._type_aliases._add_aliases": ["numpy.core._type_aliases.bitname", "<map>.items"], "numpy.core._type_aliases.bitname": ["numpy.core._dtype._kind_name", "numpy.core._type_aliases._bits_of"], "numpy.core._type_aliases._bits_of": ["<builtin>.next", "<map>.values", "<builtin>.ValueError"], "<map>.values": [], "numpy.core._dtype._kind_name": ["<builtin>.RuntimeError"], "numpy.core._type_aliases._add_integer_aliases": ["<builtin>.set", "<builtin>.zip"], "numpy.core._type_aliases._set_up_aliases": [], "numpy.core._type_aliases._set_array_types": ["numpy.core._type_aliases._add_array_type", "<builtin>.len"], "numpy.core._type_aliases._add_array_type": [], "numpy._utils.set_module": [], "numpy._utils.set_module.decorator": [], "numpy.core.numerictypes._construct_lookups": ["<builtin>.len"], "numpy.core.numerictypes._register_types": [], "numpy.core.numeric": ["numpy._utils.set_module", "numpy.core.numeric.extend_all", "numpy.core.overrides.set_array_function_like_doc", "<builtin>.type", "numpy._utils.set_module.decorator"], "numpy.core.shape_base": ["<builtin>.getattr"], "numpy.core.fromnumeric": ["numpy._utils.set_module.decorator", "numpy._utils.set_module"], "numpy.core._methods": ["<map>.update"], "numpy.core._exceptions": [], "numpy.core._exceptions._ArrayMemoryError": ["<builtin>.property", "<builtin>.staticmethod"], "numpy.core._ufunc_config": ["numpy.core._ufunc_config._setdef", "numpy._utils.set_module", "<map>.items", "contextlib.contextmanager", "numpy._utils.set_module.decorator"], "contextvars": [], "numpy.core._ufunc_config._setdef": [], "numpy.core.overrides.set_array_function_like_doc": [], "numpy.core.arrayprint": ["numpy.core.arrayprint._recursive_guard.decorating_function", "numpy.core.arrayprint._recursive_guard", "numpy._utils.set_module", "numpy.core.overrides.array_function_dispatch", "contextlib.contextmanager", "numpy.core.overrides.array_function_dispatch.decorator", "<builtin>.getattr", "numpy._utils.set_module.decorator"], "numpy.core.arrayprint._recursive_guard": [], "numpy.core.arrayprint._recursive_guard.decorating_function": ["<builtin>.set", "functools.wraps"], "numpy.core.overrides.array_function_dispatch": [], "numpy.core.overrides.array_function_dispatch.decorator": ["numpy.core.overrides.verify_matching_signatures", "functools.wraps", "<builtin>.RuntimeError"], "numpy.core.overrides.verify_matching_signatures": ["numpy._utils._inspect.getargspec", "<builtin>.bool", "<builtin>.len", "<builtin>.RuntimeError"], "numpy._utils._inspect.getargspec": ["numpy._utils._inspect.isfunction", "numpy._utils._inspect.ismethod", "<builtin>.TypeError", "numpy._utils._inspect.getargs"], "numpy._utils._inspect.ismethod": ["<builtin>.isinstance"], "numpy._utils._inspect.isfunction": ["<builtin>.isinstance"], "numpy._utils._inspect.getargs": ["<builtin>.TypeError", "numpy._utils._inspect.iscode", "<builtin>.range", "<builtin>.list"], "numpy._utils._inspect.iscode": ["<builtin>.isinstance"], "numpy.core.arrayprint.StructuredVoidFormat": ["<builtin>.classmethod"], "numpy.core._asarray": ["numpy._utils.set_module", "numpy.core.overrides.array_function_dispatch", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.set_array_function_like_doc", "numpy._utils.set_module.decorator"], "numpy.core.numeric.extend_all": ["<builtin>.set", "<builtin>.getattr"], "numpy.core.defchararray": ["numpy._utils.set_module.decorator", "numpy._utils.set_module"], "numpy.core.records": ["numpy._utils.set_module.decorator", "numpy._utils.set_module"], "numpy.core.memmap": [], "numpy.core.function_base": [], "numpy.core._machar": [], "numpy.core.getlimits": ["<builtin>.dict"], "numpy.core.getlimits.MachArLike": ["<builtin>.property"], "numpy.core.getlimits.finfo": ["<builtin>.property"], "numpy.core.getlimits.iinfo": ["<builtin>.property"], "numpy.core.einsumfunc": ["<builtin>.set", "numpy.core.overrides.array_function_dispatch", "numpy.core.overrides.array_function_dispatch.decorator"], "numpy.core._add_newdocs": ["<str>.replace", "numpy.core.function_base.add_newdoc", "numpy.core._add_newdocs.refer_to_array_attribute"], "numpy.core.function_base.add_newdoc": ["<builtin>.isinstance", "<str>.strip", "<builtin>.globals", "<builtin>.__import__", "<builtin>.getattr", "numpy.core.function_base._add_docstring"], "numpy.core.function_base._add_docstring": ["numpy.core.function_base._needs_add_docstring", "warnings.warn"], "numpy.core.function_base._needs_add_docstring": ["<builtin>.isinstance"], "numpy.core._add_newdocs.refer_to_array_attribute": [], "numpy.core._add_newdocs_scalars": ["numpy.core._add_newdocs_scalars.numeric_type_aliases", "numpy.core._add_newdocs_scalars.add_newdoc_for_scalar_type", "numpy.core.function_base.add_newdoc", "numpy.core._add_newdocs_scalars._get_platform_and_machine"], "numpy.core._add_newdocs_scalars.numeric_type_aliases": ["numpy.core._add_newdocs_scalars.numeric_type_aliases.type_aliases_gen", "<builtin>.list"], "numpy.core._add_newdocs_scalars.numeric_type_aliases.type_aliases_gen": ["<builtin>.getattr"], "numpy.core._add_newdocs_scalars._get_platform_and_machine": [], "numpy.core._add_newdocs_scalars.add_newdoc_for_scalar_type": ["numpy.core.function_base.add_newdoc", "<str>.strip", "<builtin>.getattr"], "numpy.core._dtype_ctypes": [], "numpy.core._internal": ["re.compile", "<map>.keys"], "ast": ["<builtin>.property", "<builtin>.type", "<builtin>.repr", "<builtin>.hasattr"], "<builtin>.repr": [], "ast._Unparser": ["<builtin>.property", "<builtin>.frozenset", "contextlib.contextmanager"], "ctypes": ["ctypes._check_size", "ctypes.CFUNCTYPE", "ctypes.LibraryLoader.__init__", "ctypes.PYFUNCTYPE", "<builtin>.Exception", "<builtin>.int", "ctypes._reset_cache"], "<builtin>.Exception": [], "ctypes._check_size": ["<builtin>.SystemError"], "ctypes.LibraryLoader": ["<builtin>.classmethod"], "ctypes.LibraryLoader.__init__": [], "ctypes.CFUNCTYPE": ["<builtin>.ValueError"], "ctypes.PYFUNCTYPE": [], "ctypes._endian": ["<builtin>.type"], "ctypes._reset_cache": ["<map>.clear"], "numpy.core._internal._ctypes": ["<builtin>.property"], "<map>.keys": [], "numpy.core._internal._Stream": ["<builtin>.property"], "numpy._pytesttester": [], "numpy._pytesttester.PytestTester.__init__": [], "numpy.dtypes": [], "numpy.lib": ["numpy._pytesttester.PytestTester.__init__"], "numpy.lib.mixins": [], "numpy.lib.mixins.NDArrayOperatorsMixin": ["numpy.lib.mixins._binary_method", "numpy.lib.mixins._reflected_binary_method", "numpy.lib.mixins._unary_method", "numpy.lib.mixins._numeric_methods"], "numpy.lib.mixins._binary_method": [], "numpy.lib.mixins._numeric_methods": ["numpy.lib.mixins._binary_method", "numpy.lib.mixins._reflected_binary_method", "numpy.lib.mixins._inplace_binary_method"], "numpy.lib.mixins._reflected_binary_method": [], "numpy.lib.mixins._inplace_binary_method": [], "numpy.lib.mixins._unary_method": [], "numpy.lib.scimath": ["numpy.core.overrides.array_function_dispatch", "numpy.core.overrides.array_function_dispatch.decorator"], "numpy.lib.type_check": ["numpy._utils.set_module.decorator", "numpy._utils.set_module"], "numpy.lib.ufunclike": ["numpy.core.overrides.array_function_dispatch", "numpy.core.overrides.array_function_dispatch.decorator"], "numpy.lib.index_tricks": ["numpy._utils.set_module", "numpy.lib.index_tricks.RClass.__init__", "numpy.lib.index_tricks.IndexExpression.__init__", "numpy.lib.index_tricks.OGridClass.__init__", "numpy.lib.index_tricks.CClass.__init__", "numpy.lib.index_tricks.MGridClass.__init__", "numpy._utils.set_module.decorator"], "numpy.matrixlib": ["numpy._pytesttester.PytestTester.__init__"], "numpy.matrixlib.defmatrix": ["numpy._utils.set_module.decorator", "numpy._utils.set_module"], "numpy.linalg": ["numpy._pytesttester.PytestTester.__init__"], "numpy.linalg.linalg": ["numpy.linalg.linalg._determine_error_states"], "numpy.lib.twodim_base": ["numpy.core.overrides.set_array_function_like_doc", "numpy._utils.set_module.decorator", "numpy.core.getlimits.iinfo.__init__", "numpy._utils.set_module"], "numpy.lib.stride_tricks": ["numpy._utils.set_module.decorator", "numpy.core.overrides.array_function_dispatch", "numpy._utils.set_module", "numpy.core.overrides.array_function_dispatch.decorator"], "numpy.core.getlimits.iinfo.__init__": ["<builtin>.type", "<builtin>.ValueError"], "numpy._typing": [], "__future__": ["__future__._Feature.__init__"], "__future__._Feature.__init__": [], "numpy._typing._nested_sequence": ["typing.TypeVar.__init__"], "numpy._typing._nbit": [], "numpy._typing._char_codes": [], "numpy._typing._scalars": [], "numpy._typing._shape": [], "numpy._typing._dtype_like": ["typing.TypeVar.__init__"], "numpy._typing._dtype_like._SupportsDType": ["<builtin>.property"], "numpy._typing._array_like": ["typing.TypeVar.__init__"], "numpy.linalg.linalg._determine_error_states": ["numpy.core._ufunc_config.errstate.__init__"], "numpy.core._ufunc_config.errstate.__init__": [], "numpy.matrixlib.defmatrix.matrix": ["<builtin>.property"], "numpy.lib.function_base": ["<builtin>.dict", "numpy._utils.set_module.decorator", "numpy._utils.set_module", "<builtin>.hasattr"], "numpy.lib.histograms": [], "numpy.lib.index_tricks.MGridClass.__init__": ["<builtin>.super"], "numpy.lib.index_tricks.OGridClass.__init__": ["<builtin>.super"], "numpy.lib.index_tricks.AxisConcatenator": ["<builtin>.staticmethod"], "numpy.lib.index_tricks.RClass.__init__": ["numpy.lib.index_tricks.AxisConcatenator.__init__"], "numpy.lib.index_tricks.AxisConcatenator.__init__": [], "numpy.lib.index_tricks.CClass.__init__": ["numpy.lib.index_tricks.AxisConcatenator.__init__"], "numpy.lib.index_tricks.IndexExpression.__init__": [], "numpy.lib.nanfunctions": [], "numpy.lib.shape_base": [], "numpy.lib.polynomial": ["re.compile", "warnings.simplefilter"], "numpy.lib.polynomial.poly1d": ["<builtin>.property"], "numpy.lib.utils": ["re.compile", "numpy._utils.set_module.decorator", "numpy._utils.set_module"], "textwrap": ["re.compile"], "textwrap.TextWrapper": ["re.compile", "re.escape", "<builtin>.ord"], "<builtin>.ord": [], "platform": ["re.compile", "collections.namedtuple"], "platform._Processor": ["<builtin>.classmethod"], "platform.uname_result": ["functools.cached_property.__init__", "<builtin>.classmethod"], "functools.cached_property.__init__": [], "numpy.lib.arraysetops": [], "numpy.lib.npyio": ["numpy.core.overrides.set_array_function_like_doc", "<builtin>.sorted", "numpy._utils.set_module.decorator", "numpy._utils.set_module"], "numpy.lib.format": ["<builtin>.len"], "numpy.lib._datasource": ["numpy.lib._datasource._FileOpeners.__init__"], "numpy.lib._datasource._FileOpeners.__init__": [], "numpy.lib._iotools": [], "numpy.lib._iotools.NameValidator": ["<builtin>.set"], "numpy.lib._iotools.StringConverter": ["<builtin>.classmethod", "append", "extend"], "numpy.lib.arrayterator": [], "numpy.lib.arrayterator.Arrayterator": ["<builtin>.property"], "numpy.lib.arraypad": ["numpy.core.overrides.array_function_dispatch", "numpy.core.overrides.array_function_dispatch.decorator"], "numpy.lib._version": [], "numpy.fft": ["copy", "numpy._pytesttester.PytestTester.__init__"], "numpy.fft._pocketfft": [], "numpy.fft.helper": ["numpy._utils.set_module.decorator", "numpy.core.overrides.array_function_dispatch", "numpy._utils.set_module", "numpy.core.overrides.array_function_dispatch.decorator"], "copy": ["<builtin>.type", "<builtin>.getattr"], "numpy.polynomial": ["numpy._pytesttester.PytestTester.__init__"], "numpy.polynomial.polynomial": [], "numpy.polynomial.polyutils": [], "numpy.polynomial._polybase": [], "numpy.polynomial._polybase.ABCPolyBase": ["<builtin>.property", "abc.abstractmethod", "<builtin>.classmethod", "<builtin>.staticmethod"], "numpy.polynomial.polynomial.Polynomial": ["<builtin>.classmethod", "<builtin>.staticmethod"], "numpy.polynomial.chebyshev": [], "numpy.polynomial.chebyshev.Chebyshev": ["<builtin>.classmethod", "<builtin>.staticmethod"], "numpy.polynomial.legendre": [], "numpy.polynomial.legendre.Legendre": ["<builtin>.staticmethod"], "numpy.polynomial.hermite": [], "numpy.polynomial.hermite.Hermite": ["<builtin>.staticmethod"], "numpy.polynomial.hermite_e": [], "numpy.polynomial.hermite_e.HermiteE": ["<builtin>.staticmethod"], "numpy.polynomial.laguerre": [], "numpy.polynomial.laguerre.Laguerre": ["<builtin>.staticmethod"], "numpy.random": ["numpy._pytesttester.PytestTester.__init__"], "numpy.random._pickle": [], "numpy.ctypeslib": ["numpy.core._internal._getintp_ctype", "numpy.ctypeslib._get_scalar_type_map"], "numpy.core._internal._getintp_ctype": ["numpy.core._internal.dummy_ctype.__init__"], "numpy.core._internal.dummy_ctype.__init__": [], "numpy.ctypeslib._ndptr": ["<builtin>.classmethod"], "numpy.ctypeslib._concrete_ndptr": ["<builtin>.property"], "numpy.ctypeslib._get_scalar_type_map": [], "numpy.ma": ["numpy._pytesttester.PytestTester.__init__"], "numpy.ma.core": ["numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._DomainTan.__init__", "<builtin>.complex", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core.doc_note", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._frommethod.__init__", "<builtin>.dict", "textwrap.dedent", "numpy.ma.core._DomainGreater.__init__"], "inspect": ["<builtin>.hasattr", "<builtin>.globals", "<map>.items", "<builtin>.type", "<builtin>.object", "collections.namedtuple"], "dis": ["collections.namedtuple"], "opcode": ["<builtin>.range", "opcode.def_op", "opcode.name_op", "opcode.jrel_op", "append", "opcode.jabs_op"], "opcode.def_op": [], "opcode.name_op": ["opcode.def_op", "append"], "opcode.jrel_op": ["opcode.def_op", "append"], "opcode.jabs_op": ["opcode.def_op", "append"], "dis.Bytecode": ["<builtin>.classmethod"], "importlib.machinery": [], "inspect._ParameterKind": ["<builtin>.property"], "inspect.Parameter": ["<builtin>.property"], "inspect.BoundArguments": ["<builtin>.property"], "inspect.Signature": ["<builtin>.classmethod", "<builtin>.property"], "<builtin>.complex": [], "numpy.ma.core._MaskedUnaryOperation.__init__": ["<builtin>.super"], "numpy.ma.core._DomainGreaterEqual.__init__": [], "numpy.ma.core._DomainGreater.__init__": [], "numpy.ma.core._DomainTan.__init__": [], "numpy.ma.core._DomainCheckInterval.__init__": [], "numpy.ma.core._MaskedBinaryOperation.__init__": ["<builtin>.super"], "numpy.ma.core._DomainSafeDivide.__init__": [], "numpy.ma.core._DomainedBinaryOperation.__init__": ["<builtin>.super"], "numpy.ma.core._MaskedPrintOption.__init__": [], "textwrap.dedent": ["<builtin>.enumerate", "<builtin>.zip", "re.sub"], "re.sub": ["re._compile"], "numpy.ma.core.MaskedArray": ["<builtin>.property", "numpy.ma.core._arraymethod"], "numpy.ma.core._arraymethod": ["<builtin>.getattr"], "numpy.ma.core.mvoid": ["<builtin>.property"], "numpy.ma.core.MaskedConstant": ["<builtin>.classmethod"], "numpy.ma.core._frommethod.__init__": ["numpy.ma.core._frommethod.getdoc"], "numpy.ma.core._frommethod.getdoc": ["numpy.ma.core.get_object_signature", "<builtin>.getattr"], "numpy.ma.core.get_object_signature": ["numpy._utils._inspect.getargspec", "numpy._utils._inspect.formatargspec"], "numpy._utils._inspect.formatargspec": ["<builtin>.range", "numpy._utils._inspect.<lambda3>", "append", "numpy._utils._inspect.strseq", "<builtin>.len"], "numpy._utils._inspect.strseq": ["numpy._utils._inspect.joinseq", "<builtin>.type", "numpy._utils._inspect.strseq"], "numpy._utils._inspect.joinseq": ["<builtin>.len"], "numpy._utils._inspect.<lambda3>": ["<builtin>.repr"], "numpy.ma.core._extrema_operation.__init__": ["<builtin>.super"], "numpy.ma.core.doc_note": ["inspect.cleandoc", "re.split"], "inspect.cleandoc": ["<str>.expandtabs", "<str>.split"], "re.split": ["re._compile"], "<str>.expandtabs": [], "numpy.ma.core._convert2ma.__init__": ["numpy.ma.core._convert2ma.getdoc", "<builtin>.getattr"], "numpy.ma.core._convert2ma.getdoc": ["numpy.ma.core.get_object_signature", "<builtin>.getattr", "numpy.ma.core._convert2ma._replace_return_type"], "numpy.ma.core._convert2ma._replace_return_type": ["<builtin>.RuntimeError"], "numpy.ma.extras": ["numpy.ma.extras.mr_class.__init__", "numpy.ma.core.doc_note"], "numpy.ma.extras.MAxisConcatenator": ["<builtin>.classmethod", "<builtin>.staticmethod"], "numpy.ma.extras.mr_class.__init__": ["numpy.lib.index_tricks.AxisConcatenator.__init__"], "numpy.core.getlimits._register_known_types": ["numpy.core._ufunc_config.errstate.__init__", "numpy.core.getlimits._register_type", "numpy.core.getlimits.MachArLike.__init__"], "numpy.core.getlimits.MachArLike.__init__": ["<builtin>.int", "numpy.core.getlimits.MachArLike._float_to_float", "numpy.core.getlimits.MachArLike._float_to_str", "numpy.core.getlimits.MachArLike._float_conv"], "numpy.core.getlimits.MachArLike._float_to_float": ["numpy.core.getlimits._fr1", "numpy.core.getlimits.MachArLike._float_conv"], "numpy.core.getlimits.MachArLike._float_conv": [], "numpy.core.getlimits._fr1": [], "numpy.core.getlimits.MachArLike._float_to_str": ["numpy.core.getlimits._fr0"], "numpy.core.getlimits._fr0": [], "numpy.core.getlimits._register_type": [], "numpy._sanity_check": ["<builtin>.AssertionError", "<builtin>.abs", "<builtin>.RuntimeError"], "<builtin>.abs": [], "<builtin>.AssertionError": [], "warnings.catch_warnings.__init__": [], "numpy._mac_os_check": [], "pygame.sndarray": [], "pygame.fastevent": [], "pygame.pkgdata": [], "pkg_resources": ["functools.lru_cache.decorating_function", "typing.overload", "posixpath.dirname", "pkg_resources.register_namespace_handler", "ntpath.join", "pkg_resources.register_finder", "pkg_resources._call_aside", "pkg_resources.WorkingSet.__init__", "typing.TypeVar.__init__", "pkg_resources.DefaultProvider._register", "warnings.filterwarnings", "re.compile", "pkg_resources.EmptyProvider.__init__", "ntpath.dirname", "<builtin>.RuntimeError", "posixpath.join", "warnings.warn", "functools.lru_cache", "pkg_resources.register_loader_type", "pkg_resources.ResourceManager.__init__", "<builtin>.hasattr", "<builtin>.globals", "pkg_resources._declare_state"], "email.parser": [], "email.feedparser": ["re.compile", "<builtin>.object"], "email.errors": [], "email._policybase": [], "email.header": ["re.compile", "email.charset.Charset.__init__"], "email.quoprimime": ["<str>.encode", "<builtin>.chr", "<builtin>.range", "<builtin>.ord"], "string": ["string.Template.__init_subclass__"], "string.Template.__init_subclass__": ["re.compile", "<builtin>.super", "re.escape"], "<str>.translate": [], "<str>.encode": [], "email.base64mime": [], "base64": [], "email.charset": [], "email.encoders": [], "quopri": [], "email.charset.Charset.__init__": ["<builtin>.isinstance", "<builtin>.str", "<map>.get", "<str>.encode"], "email.utils": ["re.compile"], "random": ["random.Random.__init__", "<builtin>.hasattr"], "bisect": [], "hashlib": ["<builtin>.set", "<builtin>.range", "hashlib.__get_builtin_constructor", "logging.exception", "<builtin>.globals", "<builtin>.bytes"], "hashlib.__get_builtin_constructor": ["<builtin>.ValueError", "<map>.get"], "logging": ["logging._StderrHandler.__init__", "threading.RLock", "logging.Manager.__init__", "ntpath.normcase", "<builtin>.hasattr", "posixpath.normcase", "logging.RootLogger.__init__", "_weakrefset.WeakSet.__init__", "weakref.WeakValueDictionary.__init__", "logging.Formatter.__init__"], "ntpath.normcase": ["os._fspath", "<builtin>.isinstance"], "posixpath.normcase": ["os._fspath"], "logging.PercentStyle": ["re.compile"], "logging.StrFormatStyle": ["re.compile"], "logging.Formatter.__init__": ["<builtin>.ValueError", "logging.StrFormatStyle.validate", "logging.StringTemplateStyle.__init__", "logging.PercentStyle.__init__", "logging.PercentStyle.validate", "<map>.keys", "logging.StringTemplateStyle.validate"], "logging.PercentStyle.__init__": [], "logging.StringTemplateStyle.__init__": ["<builtin>.super", "string.Template.__init__"], "string.Template.__init__": [], "weakref.WeakValueDictionary.__init__": ["<builtin>.set", "weakref.WeakValueDictionary.update"], "weakref.WeakValueDictionary.update": ["weakref.WeakValueDictionary._commit_removals", "<builtin>.dict", "weakref.KeyedRef.__init__", "<builtin>.hasattr"], "weakref.WeakValueDictionary._commit_removals": [], "weakref.KeyedRef.__init__": ["<builtin>.super"], "logging.Handler": ["<builtin>.property"], "logging._StderrHandler": ["<builtin>.property"], "logging._StderrHandler.__init__": ["logging.Handler.__init__"], "logging.Handler.__init__": ["logging.Handler.createLock", "logging._checkLevel", "logging._addHandlerRef", "logging.Filterer.__init__"], "logging.Filterer.__init__": [], "logging._checkLevel": ["<builtin>.TypeError", "<builtin>.isinstance", "<builtin>.str", "<builtin>.ValueError"], "logging._addHandlerRef": ["logging._acquireLock", "append"], "logging._acquireLock": [], "logging.Handler.createLock": ["logging._register_at_fork_reinit_lock", "threading.RLock"], "logging._register_at_fork_reinit_lock": ["logging._acquireLock", "_weakrefset.WeakSet.add"], "logging.Manager": ["<builtin>.property"], "logging.LoggerAdapter": ["<builtin>.property"], "logging.RootLogger.__init__": ["logging.Logger.__init__"], "logging.Logger.__init__": ["logging._checkLevel", "logging.Filterer.__init__"], "logging.Manager.__init__": [], "logging.exception": ["logging.error"], "logging.error": ["logging.Logger.error", "<builtin>.len", "logging.basicConfig"], "logging.basicConfig": ["<builtin>.ValueError", "logging.Logger.removeHandler", "logging.Logger.addHandler", "logging._acquireLock", "logging.StreamHandler.__init__", "logging.FileHandler.__init__", "logging.Logger.setLevel", "<map>.keys", "<builtin>.len", "logging.Formatter.__init__"], "logging.Logger.removeHandler": ["logging._acquireLock", "remove"], "logging.StreamHandler.__init__": ["logging.Handler.__init__"], "logging.FileHandler.__init__": ["ntpath.abspath", "os._fspath", "posixpath.abspath", "logging.StreamHandler.__init__", "logging.FileHandler._open", "logging.Handler.__init__"], "ntpath.abspath": [], "posixpath.abspath": ["<builtin>.isinstance", "posixpath.normpath", "os._fspath", "posixpath.join", "posixpath.isabs"], "posixpath.normpath": ["os._fspath", "append", "pop", "<builtin>.isinstance"], "pop": [], "logging.FileHandler._open": [], "logging.PercentStyle.validate": ["<builtin>.ValueError"], "logging.StringTemplateStyle.validate": ["<builtin>.set", "<builtin>.ValueError"], "logging.StrFormatStyle.validate": ["string.Formatter.parse", "<builtin>.set", "<builtin>.ValueError"], "string.Formatter.parse": [], "logging.Logger.addHandler": ["logging._acquireLock", "append"], "logging.Logger.setLevel": ["logging._checkLevel"], "logging.Logger.error": ["logging.Logger.isEnabledFor", "logging.Logger._log"], "logging.Logger.isEnabledFor": ["logging._acquireLock", "logging.Logger.getEffectiveLevel"], "logging.Logger.getEffectiveLevel": [], "logging.Logger._log": ["<builtin>.isinstance", "logging.Logger.makeRecord", "logging.Logger.handle", "<builtin>.type", "logging.Logger.findCaller"], "logging.Logger.findCaller": ["logging.currentframe", "ntpath.normcase", "<builtin>.hasattr", "posixpath.normcase", "traceback.print_stack"], "logging.currentframe": [], "traceback.print_stack": ["traceback.print_list", "traceback.extract_stack"], "traceback.extract_stack": ["traceback.StackSummary.extract", "traceback.walk_stack"], "traceback.walk_stack": [], "traceback.StackSummary.extract": ["<builtin>.set", "traceback.FrameSummary.__init__", "linecache.lazycache", "linecache.checkcache", "<builtin>.getattr"], "traceback.FrameSummary.__init__": ["<builtin>.repr"], "linecache.checkcache": ["<builtin>.list", "<map>.pop", "<map>.keys", "<builtin>.len"], "traceback.print_list": ["traceback.StackSummary.format", "<builtin>.print", "traceback.StackSummary.from_list"], "traceback.StackSummary.from_list": ["<builtin>.isinstance", "traceback.FrameSummary.__init__"], "traceback.StackSummary.format": ["<builtin>.sorted", "append"], "logging.Logger.makeRecord": ["logging.LogRecord.__init__", "<builtin>.KeyError"], "logging.LogRecord.__init__": ["<builtin>.isinstance", "logging.getLevelName", "posixpath.basename", "ntpath.splitext", "threading.current_thread", "<builtin>.hasattr", "ntpath.basename", "<builtin>.int", "posixpath.splitext", "<builtin>.len"], "logging.getLevelName": ["<map>.get"], "ntpath.splitext": ["genericpath._splitext", "os._fspath", "<builtin>.isinstance"], "genericpath._splitext": ["<builtin>.max"], "posixpath.splitext": ["genericpath._splitext", "os._fspath", "<builtin>.isinstance"], "<builtin>.KeyError": [], "logging.Logger.handle": ["logging.Filterer.filter", "logging.Logger.callHandlers"], "logging.Filterer.filter": ["<builtin>.hasattr"], "logging.Logger.callHandlers": ["logging.Handler.handle"], "logging.Handler.handle": ["logging.Filterer.filter", "logging.Handler.acquire", "logging.Handler.emit"], "logging.Handler.acquire": [], "logging.Handler.emit": ["<builtin>.NotImplementedError"], "<builtin>.NotImplementedError": [], "random.Random.__init__": ["random.Random.seed"], "random.Random.seed": ["<builtin>.isinstance", "<builtin>.super", "<builtin>.map", "<builtin>.ord", "<builtin>.type", "warnings.warn", "<builtin>.len"], "socket": ["extend", "append", "<builtin>.hasattr", "<builtin>.object", "<builtin>.getattr"], "socket.socket": ["<builtin>.property", "<builtin>.hasattr"], "socket.SocketIO": ["<builtin>.property"], "datetime": ["datetime._days_before_year", "append", "datetime.timezone._create"], "datetime._days_before_year": [], "datetime.timedelta": ["<builtin>.property"], "datetime.date": ["<builtin>.classmethod", "<builtin>.property"], "datetime.IsoCalendarDate": ["<builtin>.property"], "datetime.time": ["<builtin>.property", "<builtin>.classmethod"], "datetime.datetime": ["<builtin>.property", "<builtin>.classmethod"], "datetime.timezone": ["<builtin>.classmethod", "<builtin>.object", "<builtin>.staticmethod"], "datetime.timezone._create": [], "email._parseaddr": [], "calendar": ["calendar._localized_day.__init__", "datetime.date.toordinal", "calendar._localized_month.__init__", "<builtin>.range"], "locale": ["re.compile", "<map>.setdefault", "functools.wraps", "<map>.items", "<builtin>.globals", "<builtin>.sorted"], "encodings.aliases": [], "<map>.setdefault": [], "calendar._localized_month": ["<builtin>.range"], "calendar._localized_day": ["<builtin>.range"], "calendar._localized_day.__init__": [], "calendar._localized_month.__init__": [], "calendar.Calendar": ["<builtin>.property"], "datetime.date.toordinal": ["datetime._ymd2ord"], "datetime._ymd2ord": ["datetime._days_before_month", "datetime._days_before_year", "datetime._days_in_month"], "datetime._days_in_month": ["datetime._is_leap"], "datetime._is_leap": [], "datetime._days_before_month": ["datetime._is_leap"], "email._policybase.Policy": ["abc.abstractmethod"], "importlib": [], "importlib.abc": ["importlib.abc._register"], "importlib.abc._register": ["<builtin>.getattr"], "importlib.abc.InspectLoader": ["<builtin>.staticmethod"], "pkgutil": ["functools.singledispatch", "collections.namedtuple"], "importlib.util": ["contextlib.contextmanager"], "importlib.util.LazyLoader": ["<builtin>.classmethod", "<builtin>.staticmethod"], "functools.singledispatch": ["weakref.WeakKeyDictionary.__init__", "<builtin>.getattr", "functools.update_wrapper"], "weakref.WeakKeyDictionary.__init__": ["<builtin>.set", "weakref.WeakKeyDictionary.update"], "weakref.WeakKeyDictionary.update": ["<builtin>.type", "weakref.WeakKeyDictionary.update", "<builtin>.len", "<builtin>.hasattr"], "plistlib": ["<builtin>.globals", "<builtin>.object", "<builtin>.dict", "re.compile"], "xml.parsers.expat": [], "tempfile": ["<builtin>.hasattr"], "shutil": ["append", "collections.namedtuple", "<builtin>.hasattr"], "bz2": [], "_compression": [], "bz2.BZ2File": ["<builtin>.property"], "lzma": [], "lzma.LZMAFile": ["<builtin>.property"], "tempfile._RandomNameSequence": ["<builtin>.property"], "tempfile.SpooledTemporaryFile": ["<builtin>.classmethod", "<builtin>.property"], "tempfile.TemporaryDirectory": ["<builtin>.classmethod"], "zipfile": [], "zipfile.ZipInfo": ["<builtin>.classmethod"], "zipfile._ZipWriteFile": ["<builtin>.property"], "zipfile.ZipFile": ["<builtin>.property", "<builtin>.classmethod"], "zipfile.CompleteDirs": ["<builtin>.classmethod", "<builtin>.staticmethod"], "zipfile.Path": ["<builtin>.property"], "ntpath.dirname": ["ntpath.split"], "posixpath.dirname": ["posixpath._get_sep", "os._fspath", "<builtin>.len"], "packaging.markers": [], "packaging.requirements": [], "packaging.specifiers": ["typing.TypeVar.__init__", "re.compile"], "packaging.specifiers.BaseSpecifier": ["<builtin>.property", "abc.abstractmethod"], "packaging.specifiers.Specifier": ["re.compile", "<builtin>.property"], "packaging.specifiers.SpecifierSet": ["<builtin>.property"], "packaging.utils": ["re.compile", "typing.NewType.__init__"], "typing.NewType.__init__": ["<str>.rpartition", "typing._caller"], "<str>.rpartition": [], "typing._caller": [], "packaging.version": ["re.compile"], "packaging.version.Version": ["re.compile", "<builtin>.property"], "jaraco.text": ["functools.singledispatch", "jaraco.context.ExceptionTrap.passes", "jaraco.context.ExceptionTrap.__init__", "importlib_resources._common.files"], "importlib.resources": ["functools.singledispatch"], "importlib_resources": [], "importlib_resources._common": ["functools.singledispatch", "importlib_resources._common.package_to_anchor", "contextlib.contextmanager"], "importlib_resources.abc": [], "importlib_resources.compat.py38": [], "importlib_resources.abc.Traversable": ["<builtin>.property"], "importlib_resources._common.package_to_anchor": ["<builtin>.object", "functools.wraps"], "importlib_resources._functional": ["<builtin>.object"], "jaraco.functools": ["jaraco.functools.first_invoke"], "more_itertools": [], "jaraco.functools.Throttler": ["<builtin>.float"], "<builtin>.float": [], "jaraco.functools.first_invoke": [], "jaraco.context": ["contextlib.contextmanager", "jaraco.context._compose"], "urllib.request": ["re.compile", "append", "<builtin>.hasattr"], "email": [], "http.client": ["<builtin>.globals", "re.compile"], "email.message": ["re.compile"], "uu": [], "email._encoded_words": ["re.compile", "<builtin>.ord"], "email._encoded_words._QByteMap": ["<str>.encode"], "email.iterators": [], "http": [], "http.client.HTTPConnection": ["<builtin>.staticmethod"], "ssl": ["collections.namedtuple", "<builtin>.getattr", "<builtin>.hasattr"], "ssl._ASN1Object": ["<builtin>.classmethod"], "ssl.SSLContext": ["<builtin>.property", "<builtin>.hasattr"], "ssl.SSLObject": ["<builtin>.classmethod", "<builtin>.property"], "ssl.SSLSocket": ["<builtin>.classmethod", "ssl._sslcopydoc", "<builtin>.property"], "ssl._sslcopydoc": ["<builtin>.getattr"], "urllib.error": [], "urllib.response": [], "urllib.response.addinfourl": ["<builtin>.property"], "urllib.error.HTTPError": ["<builtin>.property"], "urllib.request.Request": ["<builtin>.property"], "urllib.request.AbstractBasicAuthHandler": ["re.compile"], "nturl2path": [], "tarfile": [], "tarfile.TarInfo": ["<builtin>.property", "<builtin>.staticmethod", "<builtin>.dict", "<builtin>.classmethod"], "tarfile.TarFile": ["<builtin>.classmethod"], "backports.tarfile": ["<builtin>.object"], "backports.tarfile._FileInFile": ["<builtin>.property"], "backports.tarfile.TarInfo": ["<builtin>.property", "<builtin>.staticmethod", "<builtin>.dict", "<builtin>.classmethod"], "backports.tarfile.TarFile": ["<builtin>.classmethod"], "jaraco.context._compose": ["<builtin>.reversed", "functools.reduce"], "functools.reduce": ["<builtin>.next", "<builtin>.TypeError", "<builtin>.iter", "jaraco.context._compose.compose_two"], "jaraco.context._compose.compose_two": ["contextlib.contextmanager"], "jaraco.context.ExceptionTrap": ["<builtin>.property"], "jaraco.text.FoldedCase": ["jaraco.functools.method_cache"], "jaraco.functools.method_cache": ["jaraco.functools._special_method_cache"], "jaraco.functools._special_method_cache": [], "jaraco.context.ExceptionTrap.__init__": [], "jaraco.context.ExceptionTrap.passes": ["jaraco.context.ExceptionTrap.raises"], "jaraco.context.ExceptionTrap.raises": ["functools.wraps"], "importlib_resources._common.files": ["importlib_resources._common.resolve", "importlib_resources._common.from_package"], "importlib_resources._common.resolve": ["typing.cast"], "typing.cast": [], "importlib_resources._common.from_package": ["importlib_resources.future.adapters.wrap_spec"], "importlib_resources.future.adapters": [], "importlib_resources.future.adapters.wrap_spec": [], "jaraco.text.WordSet": ["re.compile", "<builtin>.classmethod"], "jaraco.text.Stripper": ["<builtin>.classmethod", "<builtin>.staticmethod"], "platformdirs": ["platformdirs._set_platform_dir_class"], "platformdirs._set_platform_dir_class": ["os.getenv", "platformdirs.android._android_folder"], "platformdirs.unix": [], "configparser": ["<builtin>.object"], "configparser.ParsingError": ["<builtin>.property"], "configparser.BasicInterpolation": ["re.compile"], "configparser.ExtendedInterpolation": ["re.compile"], "configparser.LegacyInterpolation": ["re.compile", "<builtin>.staticmethod"], "configparser.RawConfigParser": ["re.compile", "<builtin>.property"], "configparser.SectionProxy": ["<builtin>.property"], "configparser.ConverterMapping": ["re.compile"], "platformdirs.unix.Unix": ["<builtin>.property"], "platformdirs.macos": [], "platformdirs.macos.MacOS": ["<builtin>.property"], "platformdirs.windows": ["platformdirs.windows._pick_get_win_folder", "functools.lru_cache.decorating_function", "functools.lru_cache"], "platformdirs.windows.Windows": ["<builtin>.property"], "platformdirs.windows._pick_get_win_folder": [], "os.getenv": [], "platformdirs.android": ["functools.lru_cache.decorating_function", "functools.lru_cache"], "platformdirs.android.Android": ["<builtin>.property"], "platformdirs.android._android_folder": ["re.compile", "typing.cast"], "typing_extensions": ["typing.TypeVar.__init__", "<builtin>.classmethod", "inspect.signature", "typing_extensions._SpecialGenericAlias.__init__", "<builtin>.hasattr", "append", "<builtin>.frozenset", "typing_extensions._UnpackSpecialForm.__init__", "typing_extensions._ensure_subclassable", "typing._tp_cache", "<builtin>.type", "typing_extensions._ensure_subclassable.inner", "<builtin>.getattr", "typing_extensions._SpecialForm.__init__", "typing_extensions._LiteralForm.__init__"], "typing_extensions._LiteralForm.__init__": [], "typing_extensions._SpecialGenericAlias": ["typing._tp_cache"], "typing_extensions._SpecialGenericAlias.__init__": ["<builtin>.super"], "typing_extensions.SupportsInt": ["abc.abstractmethod"], "typing_extensions.SupportsFloat": ["abc.abstractmethod"], "typing_extensions.SupportsComplex": ["abc.abstractmethod"], "typing_extensions.SupportsBytes": ["abc.abstractmethod"], "typing_extensions.SupportsIndex": ["abc.abstractmethod"], "typing_extensions.SupportsAbs": ["abc.abstractmethod"], "typing_extensions.SupportsRound": ["abc.abstractmethod"], "inspect.signature": ["inspect.Signature.from_callable"], "inspect.Signature.from_callable": ["inspect._signature_from_callable"], "inspect._signature_from_callable": ["inspect._signature_from_builtin", "<builtin>.isinstance", "inspect.unwrap", "<builtin>.ValueError", "inspect._signature_is_functionlike", "inspect.Signature.from_callable", "inspect._signature_get_partial", "inspect._signature_from_function", "inspect._signature_bound_method", "<builtin>.TypeError", "inspect._signature_is_builtin", "inspect._signature_get_user_defined_method", "<builtin>.callable", "<builtin>.type", "inspect.isfunction"], "inspect._signature_bound_method": ["<builtin>.ValueError", "<builtin>.tuple"], "inspect.unwrap": ["<builtin>.ValueError", "inspect.unwrap._is_wrapper", "<builtin>.id", "<builtin>.len"], "<builtin>.id": [], "inspect.unwrap._is_wrapper": ["inspect._signature_from_callable.<lambda1>", "<builtin>.hasattr"], "inspect._signature_from_callable.<lambda1>": [], "inspect.isfunction": ["<builtin>.isinstance"], "inspect._signature_is_functionlike": ["<builtin>.isinstance", "<builtin>.getattr", "inspect.isclass", "<builtin>.callable"], "inspect.isclass": ["<builtin>.isinstance"], "inspect._signature_from_function": ["inspect.get_annotations", "<builtin>.enumerate", "inspect.Signature.__init__", "inspect._signature_is_functionlike", "inspect._signature_fromstr", "<builtin>.TypeError", "append", "<builtin>.getattr", "<builtin>.len", "inspect.isfunction"], "inspect._signature_fromstr": ["<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.enumerate", "inspect.Signature.__init__", "ast.parse", "<builtin>.reversed", "pop", "inspect._signature_fromstr.p", "inspect.ismodule", "<builtin>.zip", "<builtin>.list", "inspect._signature_strip_non_python_syntax", "<builtin>.object", "<builtin>.getattr"], "inspect._signature_strip_non_python_syntax": ["tokenize.tokenize", "", "<builtin>.next", "<builtin>.iter"], "tokenize.tokenize": ["tokenize._tokenize", "tokenize.detect_encoding", "<builtin>.iter"], "tokenize._tokenize": ["tokenize._compile", "<map>.get", "<builtin>.IndentationError", "append", "<builtin>.len"], "<builtin>.IndentationError": [], "tokenize._compile": ["re.compile"], "ast.parse": ["<builtin>.isinstance", "<builtin>.compile"], "inspect._signature_fromstr.p": ["ast.literal_eval", "append", "ast.NodeVisitor.visit", "inspect._signature_fromstr.parse_name"], "inspect._signature_fromstr.parse_name": ["<builtin>.isinstance", "<builtin>.ValueError"], "ast.NodeVisitor.visit": ["<builtin>.getattr"], "ast.literal_eval": ["<builtin>.isinstance", "ast.literal_eval._convert", "ast.parse"], "ast.literal_eval._convert": ["<builtin>.isinstance", "<builtin>.set", "ast.literal_eval._convert_signed_num", "ast.literal_eval._convert_num", "<builtin>.map", "ast.literal_eval._raise_malformed_node", "<builtin>.zip", "<builtin>.list", "<builtin>.tuple", "<builtin>.dict", "<builtin>.len"], "ast.literal_eval._convert_signed_num": ["<builtin>.isinstance", "ast.literal_eval._convert_num"], "ast.literal_eval._convert_num": ["ast.literal_eval._raise_malformed_node", "<builtin>.isinstance", "<builtin>.type"], "ast.literal_eval._raise_malformed_node": ["<builtin>.ValueError", "<builtin>.getattr"], "inspect.ismodule": ["<builtin>.isinstance"], "inspect.Signature.__init__": ["<builtin>.ValueError", "collections.OrderedDict.__init__"], "collections.OrderedDict.__init__": [], "inspect.get_annotations": ["<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.hasattr", "<builtin>.TypeError", "<builtin>.vars", "<builtin>.callable", "<builtin>.dict", "<builtin>.getattr", "<builtin>.eval"], "<builtin>.vars": [], "inspect._signature_is_builtin": ["inspect.ismethoddescriptor", "<builtin>.isinstance", "inspect.isbuiltin"], "inspect.isbuiltin": ["<builtin>.isinstance"], "inspect.ismethoddescriptor": ["<builtin>.hasattr", "inspect.ismethod", "inspect.isclass", "<builtin>.type", "inspect.isfunction"], "inspect.ismethod": ["<builtin>.isinstance"], "inspect._signature_from_builtin": ["<builtin>.ValueError", "inspect._signature_fromstr", "inspect._signature_is_builtin", "<builtin>.TypeError", "<builtin>.getattr"], "inspect._signature_get_partial": ["<builtin>.ValueError", "collections.OrderedDict.__init__", "collections.OrderedDict.move_to_end", "collections.OrderedDict.pop", "collections.OrderedDict.values"], "collections.OrderedDict.pop": ["<builtin>.KeyError"], "collections.OrderedDict.move_to_end": [], "collections.OrderedDict.values": [], "inspect._signature_get_user_defined_method": ["<builtin>.getattr"], "typing_extensions._ensure_subclassable": [], "typing_extensions._ensure_subclassable.inner": ["<builtin>.type", "<builtin>.staticmethod", "functools.update_wrapper"], "typing_extensions.Annotated": ["typing._tp_cache"], "typing_extensions.ParamSpec": ["<builtin>.property"], "typing_extensions._ConcatenateGenericAlias": ["<builtin>.property"], "typing_extensions._SpecialForm": ["typing._tp_cache"], "typing_extensions._SpecialForm.__init__": [], "typing_extensions._UnpackSpecialForm.__init__": ["<builtin>.super"], "pkg_resources.VersionConflict": ["<builtin>.property"], "pkg_resources.ContextualVersionConflict": ["<builtin>.property"], "pkg_resources.DistributionNotFound": ["<builtin>.property"], "typing.overload": [], "pkg_resources.WorkingSet": ["<builtin>.classmethod", "typing.overload"], "pkg_resources.Environment": ["pkg_resources.get_supported_platform", "typing.overload"], "pkg_resources.get_supported_platform": ["pkg_resources.get_build_platform", "pkg_resources._macos_vers"], "pkg_resources.get_build_platform": ["pkg_resources._macos_vers", "sysconfig.get_platform", "<str>.startswith", "pkg_resources._macos_arch", "<builtin>.int"], "sysconfig": ["posixpath.normpath", "ntpath.normpath", "ntpath.dirname", "sysconfig._safe_realpath", "<builtin>.getattr", "sysconfig._getuserbase", "posixpath.dirname", "sysconfig.is_python_build", "sysconfig.get_default_scheme", "posixpath.join", "sysconfig._fix_pcbuild", "ntpath.join"], "sysconfig._getuserbase": ["sysconfig._getuserbase.joinuser"], "sysconfig._getuserbase.joinuser": ["posixpath.join", "posixpath.expanduser", "ntpath.expanduser", "ntpath.join"], "ntpath.expanduser": ["ntpath._get_bothseps", "<builtin>.isinstance", "ntpath.dirname", "ntpath.basename", "os._fspath", "ntpath.join", "<builtin>.len"], "posixpath.expanduser": ["posixpath._get_sep", "<builtin>.isinstance", "os._fspath", "<builtin>.str", "<builtin>.len"], "ntpath.normpath": ["os._fspath", "ntpath.splitdrive", "<builtin>.len", "<builtin>.isinstance"], "sysconfig._safe_realpath": ["posixpath.realpath"], "posixpath.realpath": ["posixpath.abspath", "os._fspath", "posixpath._joinrealpath"], "posixpath._joinrealpath": ["<builtin>.isinstance", "posixpath.split", "posixpath.join", "posixpath._joinrealpath", "posixpath.isabs"], "sysconfig._fix_pcbuild": ["posixpath.normcase", "ntpath.normcase", "ntpath.join", "posixpath.join"], "sysconfig.is_python_build": ["sysconfig._is_python_source_dir"], "sysconfig._is_python_source_dir": ["posixpath.join", "genericpath.isfile", "ntpath.join"], "genericpath.isfile": ["stat.S_ISREG"], "stat.S_ISREG": ["stat.S_IFMT"], "stat.S_IFMT": [], "sysconfig.get_default_scheme": ["sysconfig.get_preferred_scheme"], "sysconfig.get_preferred_scheme": ["<builtin>.ValueError", "sysconfig._get_preferred_schemes"], "sysconfig._get_preferred_schemes": [], "sysconfig.get_platform": ["sysconfig.get_config_vars", "re.compile", "<builtin>.hasattr", "_osx_support.get_platform_osx", "<builtin>.int", "_aix_support.aix_platform"], "_osx_support": [], "sysconfig.get_config_vars": ["sysconfig._init_posix", "sysconfig._init_non_posix", "<map>.get", "ntpath.dirname", "sysconfig._safe_realpath", "sysconfig._getuserbase", "sysconfig.get_makefile_filename", "_osx_support.customize_config_vars", "posixpath.dirname", "posixpath.join", "append", "ntpath.join"], "sysconfig._init_non_posix": ["ntpath.dirname", "sysconfig._safe_realpath", "posixpath.dirname", "sysconfig.get_path"], "sysconfig.get_path": ["sysconfig.get_paths"], "sysconfig.get_paths": ["sysconfig._expand_vars"], "sysconfig._expand_vars": ["ntpath.expanduser", "posixpath.normpath", "sysconfig._extend_dict", "sysconfig.get_config_vars", "ntpath.normpath", "sysconfig._subst_vars", "posixpath.expanduser"], "sysconfig._extend_dict": ["<map>.keys"], "sysconfig._subst_vars": ["<builtin>.AttributeError"], "<builtin>.AttributeError": [], "sysconfig._init_posix": ["<builtin>.globals", "<builtin>.__import__", "<builtin>.locals", "sysconfig._get_sysconfigdata_name"], "sysconfig._get_sysconfigdata_name": ["<builtin>.getattr"], "<builtin>.locals": [], "sysconfig.get_makefile_filename": ["posixpath.join", "sysconfig.get_path", "ntpath.join", "<builtin>.hasattr"], "_osx_support.customize_config_vars": ["_osx_support._supports_universal_builds", "_osx_support._override_all_archs", "_osx_support._remove_universal_flags", "_osx_support._check_for_unavailable_sdk"], "_osx_support._supports_universal_builds": ["<builtin>.bool", "_osx_support._get_system_version_tuple"], "_osx_support._get_system_version_tuple": ["<builtin>.tuple", "<builtin>.int", "_osx_support._get_system_version", "<str>.split"], "_osx_support._get_system_version": ["<builtin>.open"], "<builtin>.open": [], "_osx_support._remove_universal_flags": ["re.sub", "_osx_support._save_modified_value"], "_osx_support._save_modified_value": [], "_osx_support._override_all_archs": ["re.sub", "_osx_support._save_modified_value"], "_osx_support._check_for_unavailable_sdk": ["re.search", "_osx_support._save_modified_value", "re.sub", "genericpath.exists"], "re.search": ["re._compile"], "genericpath.exists": [], "_osx_support.get_platform_osx": ["<builtin>.set", "<builtin>.ValueError", "_osx_support._get_system_version", "<map>.get", "re.findall", "<builtin>.sorted", "<builtin>.tuple", "<builtin>.int", "<builtin>.len"], "re.findall": ["re._compile"], "_aix_support": [], "_bootsubprocess": [], "_aix_support.aix_platform": ["_aix_support._aix_vrtl", "_aix_support._aix_bosmp64", "_aix_support._aix_tag"], "_aix_support._aix_bosmp64": ["<builtin>.str", "<builtin>.int", "_bootsubprocess.check_output"], "_bootsubprocess.check_output": ["_bootsubprocess._check_cmd", "<builtin>.NotImplementedError", "<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.repr", "<builtin>.open"], "_bootsubprocess._check_cmd": ["<builtin>.isinstance", "append", "<builtin>.range", "<builtin>.ord"], "_aix_support._aix_vrtl": ["<builtin>.int"], "_aix_support._aix_tag": [], "pkg_resources._macos_vers": ["platform.mac_ver", "<builtin>.open", "plistlib.load", "genericpath.exists"], "platform.mac_ver": ["platform._mac_ver_xml"], "platform._mac_ver_xml": ["<builtin>.open", "plistlib.load", "genericpath.exists"], "plistlib.load": ["<map>.values"], "pkg_resources._macos_arch": [], "pkg_resources.ResourceManager": ["<builtin>.staticmethod"], "pkg_resources.NullProvider": ["<builtin>.staticmethod"], "pkg_resources.register_loader_type": [], "pkg_resources.DefaultProvider": ["<builtin>.classmethod"], "pkg_resources.DefaultProvider._register": ["<builtin>.type", "pkg_resources.register_loader_type", "<builtin>.getattr"], "pkg_resources.EmptyProvider.__init__": [], "pkg_resources.ZipManifests": ["<builtin>.classmethod"], "pkg_resources.ZipProvider": ["<builtin>.property", "<builtin>.staticmethod"], "pkg_resources._declare_state": [], "pkg_resources.register_finder": [], "pkg_resources.register_namespace_handler": [], "pkg_resources.EntryPoint": ["re.compile", "<builtin>.classmethod", "typing.overload"], "pkg_resources.Distribution": ["<builtin>.classmethod", "<builtin>.staticmethod", "<builtin>.property", "typing.overload"], "pkg_resources.DistInfoDistribution": ["re.compile", "<builtin>.property"], "pkg_resources.Requirement": ["<builtin>.staticmethod"], "pkg_resources._call_aside": ["pkg_resources._initialize", "pkg_resources._initialize_master_working_set"], "pkg_resources._initialize": ["pkg_resources.ResourceManager.__init__", "<builtin>.getattr", "<builtin>.dir"], "pkg_resources.ResourceManager.__init__": [], "<builtin>.dir": [], "pkg_resources._initialize_master_working_set": ["pkg_resources.WorkingSet._build_master", "<builtin>.map", "<builtin>.globals", "<builtin>.locals", "<builtin>.list", "<builtin>.tuple", "pkg_resources._declare_state", "pkg_resources.WorkingSet.subscribe"], "pkg_resources.WorkingSet._build_master": ["pkg_resources.WorkingSet._build_from_requirements", "pkg_resources.WorkingSet.__init__", "pkg_resources.WorkingSet.require"], "pkg_resources.WorkingSet.__init__": ["pkg_resources.WorkingSet.add_entry"], "pkg_resources.WorkingSet.add_entry": ["pkg_resources.find_distributions", "pkg_resources.WorkingSet.add"], "pkg_resources.find_distributions": ["pkgutil.get_importer", "pkg_resources._find_adapter"], "pkgutil.get_importer": [], "pkg_resources._find_adapter": ["inspect.getmro", "pkg_resources._always_object", "<builtin>.TypeError", "<builtin>.type", "<builtin>.getattr"], "inspect.getmro": [], "pkg_resources._always_object": [], "pkg_resources.WorkingSet.add": ["pkg_resources.WorkingSet._added_new"], "pkg_resources.WorkingSet._added_new": [], "__main__": [], "argparse": [], "gettext": ["posixpath.join", "<builtin>.enumerate", "ntpath.join", "re.compile"], "formats": [], "jarvis": [], "json": [], "processing.extProcessor": [], "machinery.definitions": [], "utils": [], "machinery.gol": [], "machinery.definitions.PointItem": ["<builtin>.set"], "machinery.classes": [], "machinery.scopes": [], "symtable": ["symtable.SymbolTableFactory.__init__"], "symtable.SymbolTableFactory.__init__": ["weakref.WeakValueDictionary.__init__"], "processing.base": [], "processing.base.ProcessingBase": ["<builtin>.property"], "machinery.imports": [], "machinery.nodes": [], "machinery.modules": [], "machinery.callgraph": [], "processing.extProcessor.ExtProcessor": ["<builtin>.set"], "machinery.returns": [], "jarvis.CallGraphGenerator": ["<builtin>.set"], "utils.constants": [], "pkg_resources.WorkingSet.require": ["pkg_resources.WorkingSet.resolve", "pkg_resources.parse_requirements", "pkg_resources.WorkingSet.add"], "pkg_resources.parse_requirements": ["jaraco.text.join_continuation", "jaraco.text.yield_lines", "<builtin>.map"], "jaraco.text.yield_lines": ["<builtin>.map"], "jaraco.text.join_continuation": ["<builtin>.next", "<builtin>.iter"], "pkg_resources.WorkingSet.resolve": [], "pkg_resources.WorkingSet._build_from_requirements": ["pkg_resources.WorkingSet.add_entry", "pkg_resources.WorkingSet.add", "pkg_resources.parse_requirements", "pkg_resources.Environment.__init__", "pkg_resources.WorkingSet.resolve", "pkg_resources.WorkingSet.__init__"], "pkg_resources.Environment.__init__": ["pkg_resources.Environment.scan"], "pkg_resources.Environment.scan": ["pkg_resources.find_distributions", "pkg_resources.Environment.add"], "pkg_resources.Environment.add": ["operator.attrgetter.__init__", "pkg_resources.Environment.can_add"], "pkg_resources.Environment.can_add": ["pkg_resources.compatible_platforms"], "pkg_resources.compatible_platforms": ["<builtin>.int"], "pkg_resources.WorkingSet.subscribe": ["pkg_resources.WorkingSet.__iter__", "pkg_resources._initialize_master_working_set.<lambda1>"], "pkg_resources.WorkingSet.__iter__": ["<builtin>.set"], "pkg_resources._initialize_master_working_set.<lambda1>": []}